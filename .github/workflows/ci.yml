name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm test

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        app: [core, autos, rh, inventory]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - name: Cache Jest results
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules/.cache/jest
          key: ${{ runner.os }}-jest-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-jest-
      - run: pnpm lint
      - run: pnpm test
      - run: pnpm --filter ${{ matrix.app }} build
      - name: Deploy
        run: echo "Deploy ${{ matrix.app }} to your hosting platform"
