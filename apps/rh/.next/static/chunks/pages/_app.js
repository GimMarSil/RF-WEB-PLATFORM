/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[2]!./node_modules/react-toastify/dist/ReactToastify.css":
/*!******************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[2]!./node_modules/react-toastify/dist/ReactToastify.css ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root {\\n  --toastify-color-light: #fff;\\n  --toastify-color-dark: #121212;\\n  --toastify-color-info: #3498db;\\n  --toastify-color-success: #07bc0c;\\n  --toastify-color-warning: #f1c40f;\\n  --toastify-color-error: hsl(6, 78%, 57%);\\n  --toastify-color-transparent: rgba(255, 255, 255, 0.7);\\n\\n  --toastify-icon-color-info: var(--toastify-color-info);\\n  --toastify-icon-color-success: var(--toastify-color-success);\\n  --toastify-icon-color-warning: var(--toastify-color-warning);\\n  --toastify-icon-color-error: var(--toastify-color-error);\\n\\n  --toastify-container-width: fit-content;\\n  --toastify-toast-width: 320px;\\n  --toastify-toast-offset: 16px;\\n  --toastify-toast-top: max(var(--toastify-toast-offset), env(safe-area-inset-top));\\n  --toastify-toast-right: max(var(--toastify-toast-offset), env(safe-area-inset-right));\\n  --toastify-toast-left: max(var(--toastify-toast-offset), env(safe-area-inset-left));\\n  --toastify-toast-bottom: max(var(--toastify-toast-offset), env(safe-area-inset-bottom));\\n  --toastify-toast-background: #fff;\\n  --toastify-toast-padding: 14px;\\n  --toastify-toast-min-height: 64px;\\n  --toastify-toast-max-height: 800px;\\n  --toastify-toast-bd-radius: 6px;\\n  --toastify-toast-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\\n  --toastify-font-family: sans-serif;\\n  --toastify-z-index: 9999;\\n  --toastify-text-color-light: #757575;\\n  --toastify-text-color-dark: #fff;\\n\\n  /* Used only for colored theme */\\n  --toastify-text-color-info: #fff;\\n  --toastify-text-color-success: #fff;\\n  --toastify-text-color-warning: #fff;\\n  --toastify-text-color-error: #fff;\\n\\n  --toastify-spinner-color: #616161;\\n  --toastify-spinner-color-empty-area: #e0e0e0;\\n  --toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);\\n  --toastify-color-progress-dark: #bb86fc;\\n  --toastify-color-progress-info: var(--toastify-color-info);\\n  --toastify-color-progress-success: var(--toastify-color-success);\\n  --toastify-color-progress-warning: var(--toastify-color-warning);\\n  --toastify-color-progress-error: var(--toastify-color-error);\\n  /* used to control the opacity of the progress trail */\\n  --toastify-color-progress-bgo: 0.2;\\n}\\n\\n.Toastify__toast-container {\\n  z-index: var(--toastify-z-index);\\n  -webkit-transform: translate3d(0, 0, var(--toastify-z-index));\\n  position: fixed;\\n  width: var(--toastify-container-width);\\n  box-sizing: border-box;\\n  color: #fff;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.Toastify__toast-container--top-left {\\n  top: var(--toastify-toast-top);\\n  left: var(--toastify-toast-left);\\n}\\n.Toastify__toast-container--top-center {\\n  top: var(--toastify-toast-top);\\n  left: 50%;\\n  transform: translateX(-50%);\\n  align-items: center;\\n}\\n.Toastify__toast-container--top-right {\\n  top: var(--toastify-toast-top);\\n  right: var(--toastify-toast-right);\\n  align-items: end;\\n}\\n.Toastify__toast-container--bottom-left {\\n  bottom: var(--toastify-toast-bottom);\\n  left: var(--toastify-toast-left);\\n}\\n.Toastify__toast-container--bottom-center {\\n  bottom: var(--toastify-toast-bottom);\\n  left: 50%;\\n  transform: translateX(-50%);\\n  align-items: center;\\n}\\n.Toastify__toast-container--bottom-right {\\n  bottom: var(--toastify-toast-bottom);\\n  right: var(--toastify-toast-right);\\n  align-items: end;\\n}\\n\\n.Toastify__toast {\\n  --y: 0;\\n  position: relative;\\n  touch-action: none;\\n  width: var(--toastify-toast-width);\\n  min-height: var(--toastify-toast-min-height);\\n  box-sizing: border-box;\\n  margin-bottom: 1rem;\\n  padding: var(--toastify-toast-padding);\\n  border-radius: var(--toastify-toast-bd-radius);\\n  box-shadow: var(--toastify-toast-shadow);\\n  max-height: var(--toastify-toast-max-height);\\n  font-family: var(--toastify-font-family);\\n  /* webkit only issue #791 */\\n  z-index: 0;\\n  /* inner swag */\\n  display: flex;\\n  flex: 1 auto;\\n  align-items: center;\\n  word-break: break-word;\\n}\\n\\n@media only screen and (max-width: 480px) {\\n  .Toastify__toast-container {\\n    width: 100vw;\\n    left: env(safe-area-inset-left);\\n    margin: 0;\\n  }\\n  .Toastify__toast-container--top-left,\\n  .Toastify__toast-container--top-center,\\n  .Toastify__toast-container--top-right {\\n    top: env(safe-area-inset-top);\\n    transform: translateX(0);\\n  }\\n  .Toastify__toast-container--bottom-left,\\n  .Toastify__toast-container--bottom-center,\\n  .Toastify__toast-container--bottom-right {\\n    bottom: env(safe-area-inset-bottom);\\n    transform: translateX(0);\\n  }\\n  .Toastify__toast-container--rtl {\\n    right: env(safe-area-inset-right);\\n    left: initial;\\n  }\\n  .Toastify__toast {\\n    --toastify-toast-width: 100%;\\n    margin-bottom: 0;\\n    border-radius: 0;\\n  }\\n}\\n\\n.Toastify__toast-container[data-stacked='true'] {\\n  width: var(--toastify-toast-width);\\n}\\n\\n.Toastify__toast--stacked {\\n  position: absolute;\\n  width: 100%;\\n  transform: translate3d(0, var(--y), 0) scale(var(--s));\\n  transition: transform 0.3s;\\n}\\n\\n.Toastify__toast--stacked[data-collapsed] .Toastify__toast-body,\\n.Toastify__toast--stacked[data-collapsed] .Toastify__close-button {\\n  transition: opacity 0.1s;\\n}\\n\\n.Toastify__toast--stacked[data-collapsed='false'] {\\n  overflow: visible;\\n}\\n\\n.Toastify__toast--stacked[data-collapsed='true']:not(:last-child) > * {\\n  opacity: 0;\\n}\\n\\n.Toastify__toast--stacked:after {\\n  content: '';\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  height: calc(var(--g) * 1px);\\n  bottom: 100%;\\n}\\n\\n.Toastify__toast--stacked[data-pos='top'] {\\n  top: 0;\\n}\\n\\n.Toastify__toast--stacked[data-pos='bot'] {\\n  bottom: 0;\\n}\\n\\n.Toastify__toast--stacked[data-pos='bot'].Toastify__toast--stacked:before {\\n  transform-origin: top;\\n}\\n\\n.Toastify__toast--stacked[data-pos='top'].Toastify__toast--stacked:before {\\n  transform-origin: bottom;\\n}\\n\\n.Toastify__toast--stacked:before {\\n  content: '';\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  height: 100%;\\n  transform: scaleY(3);\\n  z-index: -1;\\n}\\n\\n.Toastify__toast--rtl {\\n  direction: rtl;\\n}\\n\\n.Toastify__toast--close-on-click {\\n  cursor: pointer;\\n}\\n\\n.Toastify__toast-icon {\\n  margin-inline-end: 10px;\\n  width: 22px;\\n  flex-shrink: 0;\\n  display: flex;\\n}\\n\\n.Toastify--animate {\\n  animation-fill-mode: both;\\n  animation-duration: 0.5s;\\n}\\n\\n.Toastify--animate-icon {\\n  animation-fill-mode: both;\\n  animation-duration: 0.3s;\\n}\\n\\n.Toastify__toast-theme--dark {\\n  background: var(--toastify-color-dark);\\n  color: var(--toastify-text-color-dark);\\n}\\n\\n.Toastify__toast-theme--light {\\n  background: var(--toastify-color-light);\\n  color: var(--toastify-text-color-light);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--default {\\n  background: var(--toastify-color-light);\\n  color: var(--toastify-text-color-light);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--info {\\n  color: var(--toastify-text-color-info);\\n  background: var(--toastify-color-info);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--success {\\n  color: var(--toastify-text-color-success);\\n  background: var(--toastify-color-success);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--warning {\\n  color: var(--toastify-text-color-warning);\\n  background: var(--toastify-color-warning);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--error {\\n  color: var(--toastify-text-color-error);\\n  background: var(--toastify-color-error);\\n}\\n\\n.Toastify__progress-bar-theme--light {\\n  background: var(--toastify-color-progress-light);\\n}\\n\\n.Toastify__progress-bar-theme--dark {\\n  background: var(--toastify-color-progress-dark);\\n}\\n\\n.Toastify__progress-bar--info {\\n  background: var(--toastify-color-progress-info);\\n}\\n\\n.Toastify__progress-bar--success {\\n  background: var(--toastify-color-progress-success);\\n}\\n\\n.Toastify__progress-bar--warning {\\n  background: var(--toastify-color-progress-warning);\\n}\\n\\n.Toastify__progress-bar--error {\\n  background: var(--toastify-color-progress-error);\\n}\\n\\n.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info,\\n.Toastify__progress-bar-theme--colored.Toastify__progress-bar--success,\\n.Toastify__progress-bar-theme--colored.Toastify__progress-bar--warning,\\n.Toastify__progress-bar-theme--colored.Toastify__progress-bar--error {\\n  background: var(--toastify-color-transparent);\\n}\\n\\n.Toastify__close-button {\\n  color: #fff;\\n  position: absolute;\\n  top: 6px;\\n  right: 6px;\\n  background: transparent;\\n  outline: none;\\n  border: none;\\n  padding: 0;\\n  cursor: pointer;\\n  opacity: 0.7;\\n  transition: 0.3s ease;\\n  z-index: 1;\\n}\\n\\n.Toastify__toast--rtl .Toastify__close-button {\\n  left: 6px;\\n  right: unset;\\n}\\n\\n.Toastify__close-button--light {\\n  color: #000;\\n  opacity: 0.3;\\n}\\n\\n.Toastify__close-button > svg {\\n  fill: currentColor;\\n  height: 16px;\\n  width: 14px;\\n}\\n\\n.Toastify__close-button:hover,\\n.Toastify__close-button:focus {\\n  opacity: 1;\\n}\\n\\n@keyframes Toastify__trackProgress {\\n  0% {\\n    transform: scaleX(1);\\n  }\\n  100% {\\n    transform: scaleX(0);\\n  }\\n}\\n\\n.Toastify__progress-bar {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 1;\\n  opacity: 0.7;\\n  transform-origin: left;\\n}\\n\\n.Toastify__progress-bar--animated {\\n  animation: Toastify__trackProgress linear 1 forwards;\\n}\\n\\n.Toastify__progress-bar--controlled {\\n  transition: transform 0.2s;\\n}\\n\\n.Toastify__progress-bar--rtl {\\n  right: 0;\\n  left: initial;\\n  transform-origin: right;\\n  border-bottom-left-radius: initial;\\n}\\n\\n.Toastify__progress-bar--wrp {\\n  position: absolute;\\n  overflow: hidden;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 5px;\\n  border-bottom-left-radius: var(--toastify-toast-bd-radius);\\n  border-bottom-right-radius: var(--toastify-toast-bd-radius);\\n}\\n\\n.Toastify__progress-bar--wrp[data-hidden='true'] {\\n  opacity: 0;\\n}\\n\\n.Toastify__progress-bar--bg {\\n  opacity: var(--toastify-color-progress-bgo);\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.Toastify__spinner {\\n  width: 20px;\\n  height: 20px;\\n  box-sizing: border-box;\\n  border: 2px solid;\\n  border-radius: 100%;\\n  border-color: var(--toastify-spinner-color-empty-area);\\n  border-right-color: var(--toastify-spinner-color);\\n  animation: Toastify__spin 0.65s linear infinite;\\n}\\n\\n@keyframes Toastify__bounceInRight {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n  from {\\n    opacity: 0;\\n    transform: translate3d(3000px, 0, 0);\\n  }\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(-25px, 0, 0);\\n  }\\n  75% {\\n    transform: translate3d(10px, 0, 0);\\n  }\\n  90% {\\n    transform: translate3d(-5px, 0, 0);\\n  }\\n  to {\\n    transform: none;\\n  }\\n}\\n\\n@keyframes Toastify__bounceOutRight {\\n  20% {\\n    opacity: 1;\\n    transform: translate3d(-20px, var(--y), 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(2000px, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__bounceInLeft {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n  0% {\\n    opacity: 0;\\n    transform: translate3d(-3000px, 0, 0);\\n  }\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(25px, 0, 0);\\n  }\\n  75% {\\n    transform: translate3d(-10px, 0, 0);\\n  }\\n  90% {\\n    transform: translate3d(5px, 0, 0);\\n  }\\n  to {\\n    transform: none;\\n  }\\n}\\n\\n@keyframes Toastify__bounceOutLeft {\\n  20% {\\n    opacity: 1;\\n    transform: translate3d(20px, var(--y), 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(-2000px, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__bounceInUp {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n  from {\\n    opacity: 0;\\n    transform: translate3d(0, 3000px, 0);\\n  }\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(0, -20px, 0);\\n  }\\n  75% {\\n    transform: translate3d(0, 10px, 0);\\n  }\\n  90% {\\n    transform: translate3d(0, -5px, 0);\\n  }\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n\\n@keyframes Toastify__bounceOutUp {\\n  20% {\\n    transform: translate3d(0, calc(var(--y) - 10px), 0);\\n  }\\n  40%,\\n  45% {\\n    opacity: 1;\\n    transform: translate3d(0, calc(var(--y) + 20px), 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, -2000px, 0);\\n  }\\n}\\n\\n@keyframes Toastify__bounceInDown {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n  0% {\\n    opacity: 0;\\n    transform: translate3d(0, -3000px, 0);\\n  }\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(0, 25px, 0);\\n  }\\n  75% {\\n    transform: translate3d(0, -10px, 0);\\n  }\\n  90% {\\n    transform: translate3d(0, 5px, 0);\\n  }\\n  to {\\n    transform: none;\\n  }\\n}\\n\\n@keyframes Toastify__bounceOutDown {\\n  20% {\\n    transform: translate3d(0, calc(var(--y) - 10px), 0);\\n  }\\n  40%,\\n  45% {\\n    opacity: 1;\\n    transform: translate3d(0, calc(var(--y) + 20px), 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, 2000px, 0);\\n  }\\n}\\n\\n.Toastify__bounce-enter--top-left,\\n.Toastify__bounce-enter--bottom-left {\\n  animation-name: Toastify__bounceInLeft;\\n}\\n\\n.Toastify__bounce-enter--top-right,\\n.Toastify__bounce-enter--bottom-right {\\n  animation-name: Toastify__bounceInRight;\\n}\\n\\n.Toastify__bounce-enter--top-center {\\n  animation-name: Toastify__bounceInDown;\\n}\\n\\n.Toastify__bounce-enter--bottom-center {\\n  animation-name: Toastify__bounceInUp;\\n}\\n\\n.Toastify__bounce-exit--top-left,\\n.Toastify__bounce-exit--bottom-left {\\n  animation-name: Toastify__bounceOutLeft;\\n}\\n\\n.Toastify__bounce-exit--top-right,\\n.Toastify__bounce-exit--bottom-right {\\n  animation-name: Toastify__bounceOutRight;\\n}\\n\\n.Toastify__bounce-exit--top-center {\\n  animation-name: Toastify__bounceOutUp;\\n}\\n\\n.Toastify__bounce-exit--bottom-center {\\n  animation-name: Toastify__bounceOutDown;\\n}\\n\\n@keyframes Toastify__zoomIn {\\n  from {\\n    opacity: 0;\\n    transform: scale3d(0.3, 0.3, 0.3);\\n  }\\n  50% {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes Toastify__zoomOut {\\n  from {\\n    opacity: 1;\\n  }\\n  50% {\\n    opacity: 0;\\n    transform: translate3d(0, var(--y), 0) scale3d(0.3, 0.3, 0.3);\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n.Toastify__zoom-enter {\\n  animation-name: Toastify__zoomIn;\\n}\\n\\n.Toastify__zoom-exit {\\n  animation-name: Toastify__zoomOut;\\n}\\n\\n@keyframes Toastify__flipIn {\\n  from {\\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\\n    animation-timing-function: ease-in;\\n    opacity: 0;\\n  }\\n  40% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\\n    animation-timing-function: ease-in;\\n  }\\n  60% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\\n    opacity: 1;\\n  }\\n  80% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\\n  }\\n  to {\\n    transform: perspective(400px);\\n  }\\n}\\n\\n@keyframes Toastify__flipOut {\\n  from {\\n    transform: translate3d(0, var(--y), 0) perspective(400px);\\n  }\\n  30% {\\n    transform: translate3d(0, var(--y), 0) perspective(400px) rotate3d(1, 0, 0, -20deg);\\n    opacity: 1;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0) perspective(400px) rotate3d(1, 0, 0, 90deg);\\n    opacity: 0;\\n  }\\n}\\n\\n.Toastify__flip-enter {\\n  animation-name: Toastify__flipIn;\\n}\\n\\n.Toastify__flip-exit {\\n  animation-name: Toastify__flipOut;\\n}\\n\\n@keyframes Toastify__slideInRight {\\n  from {\\n    transform: translate3d(110%, 0, 0);\\n    visibility: visible;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideInLeft {\\n  from {\\n    transform: translate3d(-110%, 0, 0);\\n    visibility: visible;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideInUp {\\n  from {\\n    transform: translate3d(0, 110%, 0);\\n    visibility: visible;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideInDown {\\n  from {\\n    transform: translate3d(0, -110%, 0);\\n    visibility: visible;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideOutRight {\\n  from {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(110%, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideOutLeft {\\n  from {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(-110%, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideOutDown {\\n  from {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(0, 500px, 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideOutUp {\\n  from {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(0, -500px, 0);\\n  }\\n}\\n\\n.Toastify__slide-enter--top-left,\\n.Toastify__slide-enter--bottom-left {\\n  animation-name: Toastify__slideInLeft;\\n}\\n\\n.Toastify__slide-enter--top-right,\\n.Toastify__slide-enter--bottom-right {\\n  animation-name: Toastify__slideInRight;\\n}\\n\\n.Toastify__slide-enter--top-center {\\n  animation-name: Toastify__slideInDown;\\n}\\n\\n.Toastify__slide-enter--bottom-center {\\n  animation-name: Toastify__slideInUp;\\n}\\n\\n.Toastify__slide-exit--top-left,\\n.Toastify__slide-exit--bottom-left {\\n  animation-name: Toastify__slideOutLeft;\\n  animation-timing-function: ease-in;\\n  animation-duration: 0.3s;\\n}\\n\\n.Toastify__slide-exit--top-right,\\n.Toastify__slide-exit--bottom-right {\\n  animation-name: Toastify__slideOutRight;\\n  animation-timing-function: ease-in;\\n  animation-duration: 0.3s;\\n}\\n\\n.Toastify__slide-exit--top-center {\\n  animation-name: Toastify__slideOutUp;\\n  animation-timing-function: ease-in;\\n  animation-duration: 0.3s;\\n}\\n\\n.Toastify__slide-exit--bottom-center {\\n  animation-name: Toastify__slideOutDown;\\n  animation-timing-function: ease-in;\\n  animation-duration: 0.3s;\\n}\\n\\n@keyframes Toastify__spin {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://node_modules/react-toastify/dist/ReactToastify.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,4BAA4B;EAC5B,8BAA8B;EAC9B,8BAA8B;EAC9B,iCAAiC;EACjC,iCAAiC;EACjC,wCAAwC;EACxC,sDAAsD;;EAEtD,sDAAsD;EACtD,4DAA4D;EAC5D,4DAA4D;EAC5D,wDAAwD;;EAExD,uCAAuC;EACvC,6BAA6B;EAC7B,6BAA6B;EAC7B,iFAAiF;EACjF,qFAAqF;EACrF,mFAAmF;EACnF,uFAAuF;EACvF,iCAAiC;EACjC,8BAA8B;EAC9B,iCAAiC;EACjC,kCAAkC;EAClC,+BAA+B;EAC/B,wDAAwD;EACxD,kCAAkC;EAClC,wBAAwB;EACxB,oCAAoC;EACpC,gCAAgC;;EAEhC,gCAAgC;EAChC,gCAAgC;EAChC,mCAAmC;EACnC,mCAAmC;EACnC,iCAAiC;;EAEjC,iCAAiC;EACjC,4CAA4C;EAC5C,gHAAgH;EAChH,uCAAuC;EACvC,0DAA0D;EAC1D,gEAAgE;EAChE,gEAAgE;EAChE,4DAA4D;EAC5D,sDAAsD;EACtD,kCAAkC;AACpC;;AAEA;EACE,gCAAgC;EAChC,6DAA6D;EAC7D,eAAe;EACf,sCAAsC;EACtC,sBAAsB;EACtB,WAAW;EACX,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,8BAA8B;EAC9B,gCAAgC;AAClC;AACA;EACE,8BAA8B;EAC9B,SAAS;EACT,2BAA2B;EAC3B,mBAAmB;AACrB;AACA;EACE,8BAA8B;EAC9B,kCAAkC;EAClC,gBAAgB;AAClB;AACA;EACE,oCAAoC;EACpC,gCAAgC;AAClC;AACA;EACE,oCAAoC;EACpC,SAAS;EACT,2BAA2B;EAC3B,mBAAmB;AACrB;AACA;EACE,oCAAoC;EACpC,kCAAkC;EAClC,gBAAgB;AAClB;;AAEA;EACE,MAAM;EACN,kBAAkB;EAClB,kBAAkB;EAClB,kCAAkC;EAClC,4CAA4C;EAC5C,sBAAsB;EACtB,mBAAmB;EACnB,sCAAsC;EACtC,8CAA8C;EAC9C,wCAAwC;EACxC,4CAA4C;EAC5C,wCAAwC;EACxC,2BAA2B;EAC3B,UAAU;EACV,eAAe;EACf,aAAa;EACb,YAAY;EACZ,mBAAmB;EACnB,sBAAsB;AACxB;;AAEA;EACE;IACE,YAAY;IACZ,+BAA+B;IAC/B,SAAS;EACX;EACA;;;IAGE,6BAA6B;IAC7B,wBAAwB;EAC1B;EACA;;;IAGE,mCAAmC;IACnC,wBAAwB;EAC1B;EACA;IACE,iCAAiC;IACjC,aAAa;EACf;EACA;IACE,4BAA4B;IAC5B,gBAAgB;IAChB,gBAAgB;EAClB;AACF;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,sDAAsD;EACtD,0BAA0B;AAC5B;;AAEA;;EAEE,wBAAwB;AAC1B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,4BAA4B;EAC5B,YAAY;AACd;;AAEA;EACE,MAAM;AACR;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,SAAS;EACT,YAAY;EACZ,oBAAoB;EACpB,WAAW;AACb;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,uBAAuB;EACvB,WAAW;EACX,cAAc;EACd,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,wBAAwB;AAC1B;;AAEA;EACE,yBAAyB;EACzB,wBAAwB;AAC1B;;AAEA;EACE,sCAAsC;EACtC,sCAAsC;AACxC;;AAEA;EACE,uCAAuC;EACvC,uCAAuC;AACzC;;AAEA;EACE,uCAAuC;EACvC,uCAAuC;AACzC;;AAEA;EACE,sCAAsC;EACtC,sCAAsC;AACxC;;AAEA;EACE,yCAAyC;EACzC,yCAAyC;AAC3C;;AAEA;EACE,yCAAyC;EACzC,yCAAyC;AAC3C;;AAEA;EACE,uCAAuC;EACvC,uCAAuC;AACzC;;AAEA;EACE,gDAAgD;AAClD;;AAEA;EACE,+CAA+C;AACjD;;AAEA;EACE,+CAA+C;AACjD;;AAEA;EACE,kDAAkD;AACpD;;AAEA;EACE,kDAAkD;AACpD;;AAEA;EACE,gDAAgD;AAClD;;AAEA;;;;EAIE,6CAA6C;AAC/C;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,UAAU;EACV,uBAAuB;EACvB,aAAa;EACb,YAAY;EACZ,UAAU;EACV,eAAe;EACf,YAAY;EACZ,qBAAqB;EACrB,UAAU;AACZ;;AAEA;EACE,SAAS;EACT,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;AACb;;AAEA;;EAEE,UAAU;AACZ;;AAEA;EACE;IACE,oBAAoB;EACtB;EACA;IACE,oBAAoB;EACtB;AACF;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,OAAO;EACP,WAAW;EACX,YAAY;EACZ,UAAU;EACV,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,oDAAoD;AACtD;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,QAAQ;EACR,aAAa;EACb,uBAAuB;EACvB,kCAAkC;AACpC;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,SAAS;EACT,OAAO;EACP,WAAW;EACX,WAAW;EACX,0DAA0D;EAC1D,2DAA2D;AAC7D;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,2CAA2C;EAC3C,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,iBAAiB;EACjB,mBAAmB;EACnB,sDAAsD;EACtD,iDAAiD;EACjD,+CAA+C;AACjD;;AAEA;EACE;;;;;IAKE,8DAA8D;EAChE;EACA;IACE,UAAU;IACV,oCAAoC;EACtC;EACA;IACE,UAAU;IACV,mCAAmC;EACrC;EACA;IACE,kCAAkC;EACpC;EACA;IACE,kCAAkC;EACpC;EACA;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,UAAU;IACV,0CAA0C;EAC5C;EACA;IACE,UAAU;IACV,2CAA2C;EAC7C;AACF;;AAEA;EACE;;;;;IAKE,8DAA8D;EAChE;EACA;IACE,UAAU;IACV,qCAAqC;EACvC;EACA;IACE,UAAU;IACV,kCAAkC;EACpC;EACA;IACE,mCAAmC;EACrC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,UAAU;IACV,yCAAyC;EAC3C;EACA;IACE,UAAU;IACV,4CAA4C;EAC9C;AACF;;AAEA;EACE;;;;;IAKE,8DAA8D;EAChE;EACA;IACE,UAAU;IACV,oCAAoC;EACtC;EACA;IACE,UAAU;IACV,mCAAmC;EACrC;EACA;IACE,kCAAkC;EACpC;EACA;IACE,kCAAkC;EACpC;EACA;IACE,+BAA+B;EACjC;AACF;;AAEA;EACE;IACE,mDAAmD;EACrD;EACA;;IAEE,UAAU;IACV,mDAAmD;EACrD;EACA;IACE,UAAU;IACV,qCAAqC;EACvC;AACF;;AAEA;EACE;;;;;IAKE,8DAA8D;EAChE;EACA;IACE,UAAU;IACV,qCAAqC;EACvC;EACA;IACE,UAAU;IACV,kCAAkC;EACpC;EACA;IACE,mCAAmC;EACrC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,mDAAmD;EACrD;EACA;;IAEE,UAAU;IACV,mDAAmD;EACrD;EACA;IACE,UAAU;IACV,oCAAoC;EACtC;AACF;;AAEA;;EAEE,sCAAsC;AACxC;;AAEA;;EAEE,uCAAuC;AACzC;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;;EAEE,uCAAuC;AACzC;;AAEA;;EAEE,wCAAwC;AAC1C;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE;IACE,UAAU;IACV,iCAAiC;EACnC;EACA;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;IACV,6DAA6D;EAC/D;EACA;IACE,UAAU;EACZ;AACF;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE;IACE,sDAAsD;IACtD,kCAAkC;IAClC,UAAU;EACZ;EACA;IACE,uDAAuD;IACvD,kCAAkC;EACpC;EACA;IACE,sDAAsD;IACtD,UAAU;EACZ;EACA;IACE,sDAAsD;EACxD;EACA;IACE,6BAA6B;EAC/B;AACF;;AAEA;EACE;IACE,yDAAyD;EAC3D;EACA;IACE,mFAAmF;IACnF,UAAU;EACZ;EACA;IACE,kFAAkF;IAClF,UAAU;EACZ;AACF;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE;IACE,kCAAkC;IAClC,mBAAmB;EACrB;EACA;IACE,sCAAsC;EACxC;AACF;;AAEA;EACE;IACE,mCAAmC;IACnC,mBAAmB;EACrB;EACA;IACE,sCAAsC;EACxC;AACF;;AAEA;EACE;IACE,kCAAkC;IAClC,mBAAmB;EACrB;EACA;IACE,sCAAsC;EACxC;AACF;;AAEA;EACE;IACE,mCAAmC;IACnC,mBAAmB;EACrB;EACA;IACE,sCAAsC;EACxC;AACF;;AAEA;EACE;IACE,sCAAsC;EACxC;EACA;IACE,kBAAkB;IAClB,yCAAyC;EAC3C;AACF;;AAEA;EACE;IACE,sCAAsC;EACxC;EACA;IACE,kBAAkB;IAClB,0CAA0C;EAC5C;AACF;;AAEA;EACE;IACE,sCAAsC;EACxC;EACA;IACE,kBAAkB;IAClB,mCAAmC;EACrC;AACF;;AAEA;EACE;IACE,sCAAsC;EACxC;EACA;IACE,kBAAkB;IAClB,oCAAoC;EACtC;AACF;;AAEA;;EAEE,qCAAqC;AACvC;;AAEA;;EAEE,sCAAsC;AACxC;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;;EAEE,sCAAsC;EACtC,kCAAkC;EAClC,wBAAwB;AAC1B;;AAEA;;EAEE,uCAAuC;EACvC,kCAAkC;EAClC,wBAAwB;AAC1B;;AAEA;EACE,oCAAoC;EACpC,kCAAkC;EAClC,wBAAwB;AAC1B;;AAEA;EACE,sCAAsC;EACtC,kCAAkC;EAClC,wBAAwB;AAC1B;;AAEA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF\",\"sourcesContent\":[\":root {\\n  --toastify-color-light: #fff;\\n  --toastify-color-dark: #121212;\\n  --toastify-color-info: #3498db;\\n  --toastify-color-success: #07bc0c;\\n  --toastify-color-warning: #f1c40f;\\n  --toastify-color-error: hsl(6, 78%, 57%);\\n  --toastify-color-transparent: rgba(255, 255, 255, 0.7);\\n\\n  --toastify-icon-color-info: var(--toastify-color-info);\\n  --toastify-icon-color-success: var(--toastify-color-success);\\n  --toastify-icon-color-warning: var(--toastify-color-warning);\\n  --toastify-icon-color-error: var(--toastify-color-error);\\n\\n  --toastify-container-width: fit-content;\\n  --toastify-toast-width: 320px;\\n  --toastify-toast-offset: 16px;\\n  --toastify-toast-top: max(var(--toastify-toast-offset), env(safe-area-inset-top));\\n  --toastify-toast-right: max(var(--toastify-toast-offset), env(safe-area-inset-right));\\n  --toastify-toast-left: max(var(--toastify-toast-offset), env(safe-area-inset-left));\\n  --toastify-toast-bottom: max(var(--toastify-toast-offset), env(safe-area-inset-bottom));\\n  --toastify-toast-background: #fff;\\n  --toastify-toast-padding: 14px;\\n  --toastify-toast-min-height: 64px;\\n  --toastify-toast-max-height: 800px;\\n  --toastify-toast-bd-radius: 6px;\\n  --toastify-toast-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\\n  --toastify-font-family: sans-serif;\\n  --toastify-z-index: 9999;\\n  --toastify-text-color-light: #757575;\\n  --toastify-text-color-dark: #fff;\\n\\n  /* Used only for colored theme */\\n  --toastify-text-color-info: #fff;\\n  --toastify-text-color-success: #fff;\\n  --toastify-text-color-warning: #fff;\\n  --toastify-text-color-error: #fff;\\n\\n  --toastify-spinner-color: #616161;\\n  --toastify-spinner-color-empty-area: #e0e0e0;\\n  --toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);\\n  --toastify-color-progress-dark: #bb86fc;\\n  --toastify-color-progress-info: var(--toastify-color-info);\\n  --toastify-color-progress-success: var(--toastify-color-success);\\n  --toastify-color-progress-warning: var(--toastify-color-warning);\\n  --toastify-color-progress-error: var(--toastify-color-error);\\n  /* used to control the opacity of the progress trail */\\n  --toastify-color-progress-bgo: 0.2;\\n}\\n\\n.Toastify__toast-container {\\n  z-index: var(--toastify-z-index);\\n  -webkit-transform: translate3d(0, 0, var(--toastify-z-index));\\n  position: fixed;\\n  width: var(--toastify-container-width);\\n  box-sizing: border-box;\\n  color: #fff;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.Toastify__toast-container--top-left {\\n  top: var(--toastify-toast-top);\\n  left: var(--toastify-toast-left);\\n}\\n.Toastify__toast-container--top-center {\\n  top: var(--toastify-toast-top);\\n  left: 50%;\\n  transform: translateX(-50%);\\n  align-items: center;\\n}\\n.Toastify__toast-container--top-right {\\n  top: var(--toastify-toast-top);\\n  right: var(--toastify-toast-right);\\n  align-items: end;\\n}\\n.Toastify__toast-container--bottom-left {\\n  bottom: var(--toastify-toast-bottom);\\n  left: var(--toastify-toast-left);\\n}\\n.Toastify__toast-container--bottom-center {\\n  bottom: var(--toastify-toast-bottom);\\n  left: 50%;\\n  transform: translateX(-50%);\\n  align-items: center;\\n}\\n.Toastify__toast-container--bottom-right {\\n  bottom: var(--toastify-toast-bottom);\\n  right: var(--toastify-toast-right);\\n  align-items: end;\\n}\\n\\n.Toastify__toast {\\n  --y: 0;\\n  position: relative;\\n  touch-action: none;\\n  width: var(--toastify-toast-width);\\n  min-height: var(--toastify-toast-min-height);\\n  box-sizing: border-box;\\n  margin-bottom: 1rem;\\n  padding: var(--toastify-toast-padding);\\n  border-radius: var(--toastify-toast-bd-radius);\\n  box-shadow: var(--toastify-toast-shadow);\\n  max-height: var(--toastify-toast-max-height);\\n  font-family: var(--toastify-font-family);\\n  /* webkit only issue #791 */\\n  z-index: 0;\\n  /* inner swag */\\n  display: flex;\\n  flex: 1 auto;\\n  align-items: center;\\n  word-break: break-word;\\n}\\n\\n@media only screen and (max-width: 480px) {\\n  .Toastify__toast-container {\\n    width: 100vw;\\n    left: env(safe-area-inset-left);\\n    margin: 0;\\n  }\\n  .Toastify__toast-container--top-left,\\n  .Toastify__toast-container--top-center,\\n  .Toastify__toast-container--top-right {\\n    top: env(safe-area-inset-top);\\n    transform: translateX(0);\\n  }\\n  .Toastify__toast-container--bottom-left,\\n  .Toastify__toast-container--bottom-center,\\n  .Toastify__toast-container--bottom-right {\\n    bottom: env(safe-area-inset-bottom);\\n    transform: translateX(0);\\n  }\\n  .Toastify__toast-container--rtl {\\n    right: env(safe-area-inset-right);\\n    left: initial;\\n  }\\n  .Toastify__toast {\\n    --toastify-toast-width: 100%;\\n    margin-bottom: 0;\\n    border-radius: 0;\\n  }\\n}\\n\\n.Toastify__toast-container[data-stacked='true'] {\\n  width: var(--toastify-toast-width);\\n}\\n\\n.Toastify__toast--stacked {\\n  position: absolute;\\n  width: 100%;\\n  transform: translate3d(0, var(--y), 0) scale(var(--s));\\n  transition: transform 0.3s;\\n}\\n\\n.Toastify__toast--stacked[data-collapsed] .Toastify__toast-body,\\n.Toastify__toast--stacked[data-collapsed] .Toastify__close-button {\\n  transition: opacity 0.1s;\\n}\\n\\n.Toastify__toast--stacked[data-collapsed='false'] {\\n  overflow: visible;\\n}\\n\\n.Toastify__toast--stacked[data-collapsed='true']:not(:last-child) > * {\\n  opacity: 0;\\n}\\n\\n.Toastify__toast--stacked:after {\\n  content: '';\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  height: calc(var(--g) * 1px);\\n  bottom: 100%;\\n}\\n\\n.Toastify__toast--stacked[data-pos='top'] {\\n  top: 0;\\n}\\n\\n.Toastify__toast--stacked[data-pos='bot'] {\\n  bottom: 0;\\n}\\n\\n.Toastify__toast--stacked[data-pos='bot'].Toastify__toast--stacked:before {\\n  transform-origin: top;\\n}\\n\\n.Toastify__toast--stacked[data-pos='top'].Toastify__toast--stacked:before {\\n  transform-origin: bottom;\\n}\\n\\n.Toastify__toast--stacked:before {\\n  content: '';\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  height: 100%;\\n  transform: scaleY(3);\\n  z-index: -1;\\n}\\n\\n.Toastify__toast--rtl {\\n  direction: rtl;\\n}\\n\\n.Toastify__toast--close-on-click {\\n  cursor: pointer;\\n}\\n\\n.Toastify__toast-icon {\\n  margin-inline-end: 10px;\\n  width: 22px;\\n  flex-shrink: 0;\\n  display: flex;\\n}\\n\\n.Toastify--animate {\\n  animation-fill-mode: both;\\n  animation-duration: 0.5s;\\n}\\n\\n.Toastify--animate-icon {\\n  animation-fill-mode: both;\\n  animation-duration: 0.3s;\\n}\\n\\n.Toastify__toast-theme--dark {\\n  background: var(--toastify-color-dark);\\n  color: var(--toastify-text-color-dark);\\n}\\n\\n.Toastify__toast-theme--light {\\n  background: var(--toastify-color-light);\\n  color: var(--toastify-text-color-light);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--default {\\n  background: var(--toastify-color-light);\\n  color: var(--toastify-text-color-light);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--info {\\n  color: var(--toastify-text-color-info);\\n  background: var(--toastify-color-info);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--success {\\n  color: var(--toastify-text-color-success);\\n  background: var(--toastify-color-success);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--warning {\\n  color: var(--toastify-text-color-warning);\\n  background: var(--toastify-color-warning);\\n}\\n\\n.Toastify__toast-theme--colored.Toastify__toast--error {\\n  color: var(--toastify-text-color-error);\\n  background: var(--toastify-color-error);\\n}\\n\\n.Toastify__progress-bar-theme--light {\\n  background: var(--toastify-color-progress-light);\\n}\\n\\n.Toastify__progress-bar-theme--dark {\\n  background: var(--toastify-color-progress-dark);\\n}\\n\\n.Toastify__progress-bar--info {\\n  background: var(--toastify-color-progress-info);\\n}\\n\\n.Toastify__progress-bar--success {\\n  background: var(--toastify-color-progress-success);\\n}\\n\\n.Toastify__progress-bar--warning {\\n  background: var(--toastify-color-progress-warning);\\n}\\n\\n.Toastify__progress-bar--error {\\n  background: var(--toastify-color-progress-error);\\n}\\n\\n.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info,\\n.Toastify__progress-bar-theme--colored.Toastify__progress-bar--success,\\n.Toastify__progress-bar-theme--colored.Toastify__progress-bar--warning,\\n.Toastify__progress-bar-theme--colored.Toastify__progress-bar--error {\\n  background: var(--toastify-color-transparent);\\n}\\n\\n.Toastify__close-button {\\n  color: #fff;\\n  position: absolute;\\n  top: 6px;\\n  right: 6px;\\n  background: transparent;\\n  outline: none;\\n  border: none;\\n  padding: 0;\\n  cursor: pointer;\\n  opacity: 0.7;\\n  transition: 0.3s ease;\\n  z-index: 1;\\n}\\n\\n.Toastify__toast--rtl .Toastify__close-button {\\n  left: 6px;\\n  right: unset;\\n}\\n\\n.Toastify__close-button--light {\\n  color: #000;\\n  opacity: 0.3;\\n}\\n\\n.Toastify__close-button > svg {\\n  fill: currentColor;\\n  height: 16px;\\n  width: 14px;\\n}\\n\\n.Toastify__close-button:hover,\\n.Toastify__close-button:focus {\\n  opacity: 1;\\n}\\n\\n@keyframes Toastify__trackProgress {\\n  0% {\\n    transform: scaleX(1);\\n  }\\n  100% {\\n    transform: scaleX(0);\\n  }\\n}\\n\\n.Toastify__progress-bar {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 1;\\n  opacity: 0.7;\\n  transform-origin: left;\\n}\\n\\n.Toastify__progress-bar--animated {\\n  animation: Toastify__trackProgress linear 1 forwards;\\n}\\n\\n.Toastify__progress-bar--controlled {\\n  transition: transform 0.2s;\\n}\\n\\n.Toastify__progress-bar--rtl {\\n  right: 0;\\n  left: initial;\\n  transform-origin: right;\\n  border-bottom-left-radius: initial;\\n}\\n\\n.Toastify__progress-bar--wrp {\\n  position: absolute;\\n  overflow: hidden;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 5px;\\n  border-bottom-left-radius: var(--toastify-toast-bd-radius);\\n  border-bottom-right-radius: var(--toastify-toast-bd-radius);\\n}\\n\\n.Toastify__progress-bar--wrp[data-hidden='true'] {\\n  opacity: 0;\\n}\\n\\n.Toastify__progress-bar--bg {\\n  opacity: var(--toastify-color-progress-bgo);\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.Toastify__spinner {\\n  width: 20px;\\n  height: 20px;\\n  box-sizing: border-box;\\n  border: 2px solid;\\n  border-radius: 100%;\\n  border-color: var(--toastify-spinner-color-empty-area);\\n  border-right-color: var(--toastify-spinner-color);\\n  animation: Toastify__spin 0.65s linear infinite;\\n}\\n\\n@keyframes Toastify__bounceInRight {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n  from {\\n    opacity: 0;\\n    transform: translate3d(3000px, 0, 0);\\n  }\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(-25px, 0, 0);\\n  }\\n  75% {\\n    transform: translate3d(10px, 0, 0);\\n  }\\n  90% {\\n    transform: translate3d(-5px, 0, 0);\\n  }\\n  to {\\n    transform: none;\\n  }\\n}\\n\\n@keyframes Toastify__bounceOutRight {\\n  20% {\\n    opacity: 1;\\n    transform: translate3d(-20px, var(--y), 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(2000px, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__bounceInLeft {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n  0% {\\n    opacity: 0;\\n    transform: translate3d(-3000px, 0, 0);\\n  }\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(25px, 0, 0);\\n  }\\n  75% {\\n    transform: translate3d(-10px, 0, 0);\\n  }\\n  90% {\\n    transform: translate3d(5px, 0, 0);\\n  }\\n  to {\\n    transform: none;\\n  }\\n}\\n\\n@keyframes Toastify__bounceOutLeft {\\n  20% {\\n    opacity: 1;\\n    transform: translate3d(20px, var(--y), 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(-2000px, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__bounceInUp {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n  from {\\n    opacity: 0;\\n    transform: translate3d(0, 3000px, 0);\\n  }\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(0, -20px, 0);\\n  }\\n  75% {\\n    transform: translate3d(0, 10px, 0);\\n  }\\n  90% {\\n    transform: translate3d(0, -5px, 0);\\n  }\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n\\n@keyframes Toastify__bounceOutUp {\\n  20% {\\n    transform: translate3d(0, calc(var(--y) - 10px), 0);\\n  }\\n  40%,\\n  45% {\\n    opacity: 1;\\n    transform: translate3d(0, calc(var(--y) + 20px), 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, -2000px, 0);\\n  }\\n}\\n\\n@keyframes Toastify__bounceInDown {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n  0% {\\n    opacity: 0;\\n    transform: translate3d(0, -3000px, 0);\\n  }\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(0, 25px, 0);\\n  }\\n  75% {\\n    transform: translate3d(0, -10px, 0);\\n  }\\n  90% {\\n    transform: translate3d(0, 5px, 0);\\n  }\\n  to {\\n    transform: none;\\n  }\\n}\\n\\n@keyframes Toastify__bounceOutDown {\\n  20% {\\n    transform: translate3d(0, calc(var(--y) - 10px), 0);\\n  }\\n  40%,\\n  45% {\\n    opacity: 1;\\n    transform: translate3d(0, calc(var(--y) + 20px), 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, 2000px, 0);\\n  }\\n}\\n\\n.Toastify__bounce-enter--top-left,\\n.Toastify__bounce-enter--bottom-left {\\n  animation-name: Toastify__bounceInLeft;\\n}\\n\\n.Toastify__bounce-enter--top-right,\\n.Toastify__bounce-enter--bottom-right {\\n  animation-name: Toastify__bounceInRight;\\n}\\n\\n.Toastify__bounce-enter--top-center {\\n  animation-name: Toastify__bounceInDown;\\n}\\n\\n.Toastify__bounce-enter--bottom-center {\\n  animation-name: Toastify__bounceInUp;\\n}\\n\\n.Toastify__bounce-exit--top-left,\\n.Toastify__bounce-exit--bottom-left {\\n  animation-name: Toastify__bounceOutLeft;\\n}\\n\\n.Toastify__bounce-exit--top-right,\\n.Toastify__bounce-exit--bottom-right {\\n  animation-name: Toastify__bounceOutRight;\\n}\\n\\n.Toastify__bounce-exit--top-center {\\n  animation-name: Toastify__bounceOutUp;\\n}\\n\\n.Toastify__bounce-exit--bottom-center {\\n  animation-name: Toastify__bounceOutDown;\\n}\\n\\n@keyframes Toastify__zoomIn {\\n  from {\\n    opacity: 0;\\n    transform: scale3d(0.3, 0.3, 0.3);\\n  }\\n  50% {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes Toastify__zoomOut {\\n  from {\\n    opacity: 1;\\n  }\\n  50% {\\n    opacity: 0;\\n    transform: translate3d(0, var(--y), 0) scale3d(0.3, 0.3, 0.3);\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n.Toastify__zoom-enter {\\n  animation-name: Toastify__zoomIn;\\n}\\n\\n.Toastify__zoom-exit {\\n  animation-name: Toastify__zoomOut;\\n}\\n\\n@keyframes Toastify__flipIn {\\n  from {\\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\\n    animation-timing-function: ease-in;\\n    opacity: 0;\\n  }\\n  40% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\\n    animation-timing-function: ease-in;\\n  }\\n  60% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\\n    opacity: 1;\\n  }\\n  80% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\\n  }\\n  to {\\n    transform: perspective(400px);\\n  }\\n}\\n\\n@keyframes Toastify__flipOut {\\n  from {\\n    transform: translate3d(0, var(--y), 0) perspective(400px);\\n  }\\n  30% {\\n    transform: translate3d(0, var(--y), 0) perspective(400px) rotate3d(1, 0, 0, -20deg);\\n    opacity: 1;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0) perspective(400px) rotate3d(1, 0, 0, 90deg);\\n    opacity: 0;\\n  }\\n}\\n\\n.Toastify__flip-enter {\\n  animation-name: Toastify__flipIn;\\n}\\n\\n.Toastify__flip-exit {\\n  animation-name: Toastify__flipOut;\\n}\\n\\n@keyframes Toastify__slideInRight {\\n  from {\\n    transform: translate3d(110%, 0, 0);\\n    visibility: visible;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideInLeft {\\n  from {\\n    transform: translate3d(-110%, 0, 0);\\n    visibility: visible;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideInUp {\\n  from {\\n    transform: translate3d(0, 110%, 0);\\n    visibility: visible;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideInDown {\\n  from {\\n    transform: translate3d(0, -110%, 0);\\n    visibility: visible;\\n  }\\n  to {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideOutRight {\\n  from {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(110%, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideOutLeft {\\n  from {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(-110%, var(--y), 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideOutDown {\\n  from {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(0, 500px, 0);\\n  }\\n}\\n\\n@keyframes Toastify__slideOutUp {\\n  from {\\n    transform: translate3d(0, var(--y), 0);\\n  }\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(0, -500px, 0);\\n  }\\n}\\n\\n.Toastify__slide-enter--top-left,\\n.Toastify__slide-enter--bottom-left {\\n  animation-name: Toastify__slideInLeft;\\n}\\n\\n.Toastify__slide-enter--top-right,\\n.Toastify__slide-enter--bottom-right {\\n  animation-name: Toastify__slideInRight;\\n}\\n\\n.Toastify__slide-enter--top-center {\\n  animation-name: Toastify__slideInDown;\\n}\\n\\n.Toastify__slide-enter--bottom-center {\\n  animation-name: Toastify__slideInUp;\\n}\\n\\n.Toastify__slide-exit--top-left,\\n.Toastify__slide-exit--bottom-left {\\n  animation-name: Toastify__slideOutLeft;\\n  animation-timing-function: ease-in;\\n  animation-duration: 0.3s;\\n}\\n\\n.Toastify__slide-exit--top-right,\\n.Toastify__slide-exit--bottom-right {\\n  animation-name: Toastify__slideOutRight;\\n  animation-timing-function: ease-in;\\n  animation-duration: 0.3s;\\n}\\n\\n.Toastify__slide-exit--top-center {\\n  animation-name: Toastify__slideOutUp;\\n  animation-timing-function: ease-in;\\n  animation-duration: 0.3s;\\n}\\n\\n.Toastify__slide-exit--bottom-center {\\n  animation-name: Toastify__slideOutDown;\\n  animation-timing-function: ease-in;\\n  animation-duration: 0.3s;\\n}\\n\\n@keyframes Toastify__spin {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[2]!./node_modules/react-toastify/dist/ReactToastify.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[2]!./src/styles/globals.css":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[2]!./src/styles/globals.css ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"*, ::before, ::after {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n  --tw-contain-size:  ;\\n  --tw-contain-layout:  ;\\n  --tw-contain-paint:  ;\\n  --tw-contain-style:  ;\\n}\\n\\n::backdrop {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n  --tw-contain-size:  ;\\n  --tw-contain-layout:  ;\\n  --tw-contain-paint:  ;\\n  --tw-contain-style:  ;\\n}/*\\n! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com\\n*//*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: #e5e7eb; /* 2 */\\n}\\n\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n5. Use the user's configured `sans` font-feature-settings by default.\\n6. Use the user's configured `sans` font-variation-settings by default.\\n7. Disable tap highlights on iOS\\n*/\\n\\nhtml,\\n:host {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  -o-tab-size: 4;\\n     tab-size: 4; /* 3 */\\n  font-family: ui-sans-serif, system-ui, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 4 */\\n  font-feature-settings: normal; /* 5 */\\n  font-variation-settings: normal; /* 6 */\\n  -webkit-tap-highlight-color: transparent; /* 7 */\\n}\\n\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\n\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\n\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr:where([title]) {\\n  -webkit-text-decoration: underline dotted;\\n          text-decoration: underline dotted;\\n}\\n\\n/*\\nRemove the default font size and weight for headings.\\n*/\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/*\\n1. Use the user's configured `mono` font-family by default.\\n2. Use the user's configured `mono` font-feature-settings by default.\\n3. Use the user's configured `mono` font-variation-settings by default.\\n4. Correct the odd `em` font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\n  font-feature-settings: normal; /* 2 */\\n  font-variation-settings: normal; /* 3 */\\n  font-size: 1em; /* 4 */\\n}\\n\\n/*\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\n\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-feature-settings: inherit; /* 1 */\\n  font-variation-settings: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  font-weight: inherit; /* 1 */\\n  line-height: inherit; /* 1 */\\n  letter-spacing: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\n\\nbutton,\\ninput:where([type='button']),\\ninput:where([type='reset']),\\ninput:where([type='submit']) {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n\\n:-moz-focusring {\\n  outline: auto;\\n}\\n\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nlegend {\\n  padding: 0;\\n}\\n\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*\\nReset default styling for dialogs.\\n*/\\ndialog {\\n  padding: 0;\\n}\\n\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\n\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\n/*\\nSet the default cursor for buttons.\\n*/\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n:disabled {\\n  cursor: default;\\n}\\n\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/* Make elements with the HTML hidden attribute stay hidden by default */\\n[hidden]:where(:not([hidden=\\\"until-found\\\"])) {\\n  display: none;\\n}\\r\\n  :root {\\r\\n    --background: 0 0% 100%;\\r\\n    --foreground: 222.2 84% 4.9%;\\r\\n\\r\\n    --card: 0 0% 100%;\\r\\n    --card-foreground: 222.2 84% 4.9%;\\r\\n \\r\\n    --popover: 0 0% 100%;\\r\\n    --popover-foreground: 222.2 84% 4.9%;\\r\\n \\r\\n    --primary: 222.2 47.4% 11.2%;\\r\\n    --primary-foreground: 210 40% 98%;\\r\\n \\r\\n    --secondary: 210 40% 96.1%;\\r\\n    --secondary-foreground: 222.2 47.4% 11.2%;\\r\\n \\r\\n    --muted: 210 40% 96.1%;\\r\\n    --muted-foreground: 215.4 16.3% 46.9%;\\r\\n \\r\\n    --accent: 210 40% 96.1%;\\r\\n    --accent-foreground: 222.2 47.4% 11.2%;\\r\\n \\r\\n    --destructive: 0 84.2% 60.2%;\\r\\n    --destructive-foreground: 210 40% 98%;\\r\\n\\r\\n    --border: 214.3 31.8% 91.4%;\\r\\n    --input: 214.3 31.8% 91.4%;\\r\\n    --ring: 222.2 84% 4.9%;\\r\\n \\r\\n    --radius: 0.5rem;\\r\\n  }\\r\\n \\r\\n  .dark {\\r\\n    --background: 222.2 84% 4.9%;\\r\\n    --foreground: 210 40% 98%;\\r\\n \\r\\n    --card: 222.2 84% 4.9%;\\r\\n    --card-foreground: 210 40% 98%;\\r\\n \\r\\n    --popover: 222.2 84% 4.9%;\\r\\n    --popover-foreground: 210 40% 98%;\\r\\n \\r\\n    --primary: 210 40% 98%;\\r\\n    --primary-foreground: 222.2 47.4% 11.2%;\\r\\n \\r\\n    --secondary: 217.2 32.6% 17.5%;\\r\\n    --secondary-foreground: 210 40% 98%;\\r\\n \\r\\n    --muted: 217.2 32.6% 17.5%;\\r\\n    --muted-foreground: 215 20.2% 65.1%;\\r\\n \\r\\n    --accent: 217.2 32.6% 17.5%;\\r\\n    --accent-foreground: 210 40% 98%;\\r\\n \\r\\n    --destructive: 0 62.8% 30.6%;\\r\\n    --destructive-foreground: 210 40% 98%;\\r\\n \\r\\n    --border: 217.2 32.6% 17.5%;\\r\\n    --input: 217.2 32.6% 17.5%;\\r\\n    --ring: 212.7 26.8% 83.9%;\\r\\n  }\\r\\n  * {\\n  border-color: hsl(var(--border));\\n}\\r\\n  body {\\n  background-color: hsl(var(--background));\\n  color: hsl(var(--foreground));\\n}\\r\\n.container {\\n  width: 100%;\\n  margin-right: auto;\\n  margin-left: auto;\\n  padding-right: 2rem;\\n  padding-left: 2rem;\\n}\\r\\n@media (min-width: 1400px) {\\n\\n  .container {\\n    max-width: 1400px;\\n  }\\n}\\r\\n.sr-only {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border-width: 0;\\n}\\r\\n.pointer-events-none {\\n  pointer-events: none;\\n}\\r\\n.visible {\\n  visibility: visible;\\n}\\r\\n.fixed {\\n  position: fixed;\\n}\\r\\n.absolute {\\n  position: absolute;\\n}\\r\\n.relative {\\n  position: relative;\\n}\\r\\n.sticky {\\n  position: sticky;\\n}\\r\\n.inset-0 {\\n  inset: 0px;\\n}\\r\\n.left-1\\\\/2 {\\n  left: 50%;\\n}\\r\\n.left-2 {\\n  left: 0.5rem;\\n}\\r\\n.left-\\\\[50\\\\%\\\\] {\\n  left: 50%;\\n}\\r\\n.right-0 {\\n  right: 0px;\\n}\\r\\n.right-4 {\\n  right: 1rem;\\n}\\r\\n.top-0 {\\n  top: 0px;\\n}\\r\\n.top-4 {\\n  top: 1rem;\\n}\\r\\n.top-\\\\[50\\\\%\\\\] {\\n  top: 50%;\\n}\\r\\n.z-10 {\\n  z-index: 10;\\n}\\r\\n.z-50 {\\n  z-index: 50;\\n}\\r\\n.z-\\\\[100\\\\] {\\n  z-index: 100;\\n}\\r\\n.col-span-2 {\\n  grid-column: span 2 / span 2;\\n}\\r\\n.-mx-1 {\\n  margin-left: -0.25rem;\\n  margin-right: -0.25rem;\\n}\\r\\n.mx-auto {\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\r\\n.my-1 {\\n  margin-top: 0.25rem;\\n  margin-bottom: 0.25rem;\\n}\\r\\n.my-2 {\\n  margin-top: 0.5rem;\\n  margin-bottom: 0.5rem;\\n}\\r\\n.my-4 {\\n  margin-top: 1rem;\\n  margin-bottom: 1rem;\\n}\\r\\n.my-6 {\\n  margin-top: 1.5rem;\\n  margin-bottom: 1.5rem;\\n}\\r\\n.-mb-px {\\n  margin-bottom: -1px;\\n}\\r\\n.mb-1 {\\n  margin-bottom: 0.25rem;\\n}\\r\\n.mb-10 {\\n  margin-bottom: 2.5rem;\\n}\\r\\n.mb-2 {\\n  margin-bottom: 0.5rem;\\n}\\r\\n.mb-3 {\\n  margin-bottom: 0.75rem;\\n}\\r\\n.mb-4 {\\n  margin-bottom: 1rem;\\n}\\r\\n.mb-6 {\\n  margin-bottom: 1.5rem;\\n}\\r\\n.mb-8 {\\n  margin-bottom: 2rem;\\n}\\r\\n.ml-1 {\\n  margin-left: 0.25rem;\\n}\\r\\n.ml-2 {\\n  margin-left: 0.5rem;\\n}\\r\\n.ml-4 {\\n  margin-left: 1rem;\\n}\\r\\n.mr-1 {\\n  margin-right: 0.25rem;\\n}\\r\\n.mr-2 {\\n  margin-right: 0.5rem;\\n}\\r\\n.mr-3 {\\n  margin-right: 0.75rem;\\n}\\r\\n.mr-4 {\\n  margin-right: 1rem;\\n}\\r\\n.mt-1 {\\n  margin-top: 0.25rem;\\n}\\r\\n.mt-2 {\\n  margin-top: 0.5rem;\\n}\\r\\n.mt-3 {\\n  margin-top: 0.75rem;\\n}\\r\\n.mt-4 {\\n  margin-top: 1rem;\\n}\\r\\n.mt-6 {\\n  margin-top: 1.5rem;\\n}\\r\\n.mt-8 {\\n  margin-top: 2rem;\\n}\\r\\n.block {\\n  display: block;\\n}\\r\\n.inline-block {\\n  display: inline-block;\\n}\\r\\n.flex {\\n  display: flex;\\n}\\r\\n.inline-flex {\\n  display: inline-flex;\\n}\\r\\n.table {\\n  display: table;\\n}\\r\\n.grid {\\n  display: grid;\\n}\\r\\n.hidden {\\n  display: none;\\n}\\r\\n.aspect-square {\\n  aspect-ratio: 1 / 1;\\n}\\r\\n.h-10 {\\n  height: 2.5rem;\\n}\\r\\n.h-11 {\\n  height: 2.75rem;\\n}\\r\\n.h-12 {\\n  height: 3rem;\\n}\\r\\n.h-16 {\\n  height: 4rem;\\n}\\r\\n.h-2 {\\n  height: 0.5rem;\\n}\\r\\n.h-2\\\\.5 {\\n  height: 0.625rem;\\n}\\r\\n.h-20 {\\n  height: 5rem;\\n}\\r\\n.h-3 {\\n  height: 0.75rem;\\n}\\r\\n.h-3\\\\.5 {\\n  height: 0.875rem;\\n}\\r\\n.h-4 {\\n  height: 1rem;\\n}\\r\\n.h-5 {\\n  height: 1.25rem;\\n}\\r\\n.h-6 {\\n  height: 1.5rem;\\n}\\r\\n.h-64 {\\n  height: 16rem;\\n}\\r\\n.h-7 {\\n  height: 1.75rem;\\n}\\r\\n.h-8 {\\n  height: 2rem;\\n}\\r\\n.h-9 {\\n  height: 2.25rem;\\n}\\r\\n.h-\\\\[1px\\\\] {\\n  height: 1px;\\n}\\r\\n.h-\\\\[var\\\\(--radix-select-trigger-height\\\\)\\\\] {\\n  height: var(--radix-select-trigger-height);\\n}\\r\\n.h-full {\\n  height: 100%;\\n}\\r\\n.h-px {\\n  height: 1px;\\n}\\r\\n.max-h-48 {\\n  max-height: 12rem;\\n}\\r\\n.max-h-96 {\\n  max-height: 24rem;\\n}\\r\\n.max-h-\\\\[60vh\\\\] {\\n  max-height: 60vh;\\n}\\r\\n.max-h-\\\\[80vh\\\\] {\\n  max-height: 80vh;\\n}\\r\\n.max-h-\\\\[90vh\\\\] {\\n  max-height: 90vh;\\n}\\r\\n.max-h-\\\\[95vh\\\\] {\\n  max-height: 95vh;\\n}\\r\\n.max-h-full {\\n  max-height: 100%;\\n}\\r\\n.min-h-\\\\[150px\\\\] {\\n  min-height: 150px;\\n}\\r\\n.min-h-\\\\[200px\\\\] {\\n  min-height: 200px;\\n}\\r\\n.min-h-\\\\[300px\\\\] {\\n  min-height: 300px;\\n}\\r\\n.min-h-\\\\[32px\\\\] {\\n  min-height: 32px;\\n}\\r\\n.min-h-\\\\[60px\\\\] {\\n  min-height: 60px;\\n}\\r\\n.min-h-\\\\[80px\\\\] {\\n  min-height: 80px;\\n}\\r\\n.min-h-full {\\n  min-height: 100%;\\n}\\r\\n.min-h-screen {\\n  min-height: 100vh;\\n}\\r\\n.w-10 {\\n  width: 2.5rem;\\n}\\r\\n.w-11 {\\n  width: 2.75rem;\\n}\\r\\n.w-12 {\\n  width: 3rem;\\n}\\r\\n.w-2 {\\n  width: 0.5rem;\\n}\\r\\n.w-2\\\\.5 {\\n  width: 0.625rem;\\n}\\r\\n.w-20 {\\n  width: 5rem;\\n}\\r\\n.w-3 {\\n  width: 0.75rem;\\n}\\r\\n.w-3\\\\.5 {\\n  width: 0.875rem;\\n}\\r\\n.w-36 {\\n  width: 9rem;\\n}\\r\\n.w-4 {\\n  width: 1rem;\\n}\\r\\n.w-40 {\\n  width: 10rem;\\n}\\r\\n.w-5 {\\n  width: 1.25rem;\\n}\\r\\n.w-6 {\\n  width: 1.5rem;\\n}\\r\\n.w-64 {\\n  width: 16rem;\\n}\\r\\n.w-7 {\\n  width: 1.75rem;\\n}\\r\\n.w-8 {\\n  width: 2rem;\\n}\\r\\n.w-80 {\\n  width: 20rem;\\n}\\r\\n.w-96 {\\n  width: 24rem;\\n}\\r\\n.w-\\\\[1px\\\\] {\\n  width: 1px;\\n}\\r\\n.w-full {\\n  width: 100%;\\n}\\r\\n.min-w-\\\\[100px\\\\] {\\n  min-width: 100px;\\n}\\r\\n.min-w-\\\\[80px\\\\] {\\n  min-width: 80px;\\n}\\r\\n.min-w-\\\\[8rem\\\\] {\\n  min-width: 8rem;\\n}\\r\\n.min-w-\\\\[var\\\\(--radix-select-trigger-width\\\\)\\\\] {\\n  min-width: var(--radix-select-trigger-width);\\n}\\r\\n.min-w-full {\\n  min-width: 100%;\\n}\\r\\n.max-w-2xl {\\n  max-width: 42rem;\\n}\\r\\n.max-w-3xl {\\n  max-width: 48rem;\\n}\\r\\n.max-w-4xl {\\n  max-width: 56rem;\\n}\\r\\n.max-w-7xl {\\n  max-width: 80rem;\\n}\\r\\n.max-w-full {\\n  max-width: 100%;\\n}\\r\\n.max-w-lg {\\n  max-width: 32rem;\\n}\\r\\n.max-w-md {\\n  max-width: 28rem;\\n}\\r\\n.max-w-screen-2xl {\\n  max-width: 1536px;\\n}\\r\\n.max-w-xs {\\n  max-width: 20rem;\\n}\\r\\n.flex-1 {\\n  flex: 1 1 0%;\\n}\\r\\n.flex-shrink-0 {\\n  flex-shrink: 0;\\n}\\r\\n.shrink-0 {\\n  flex-shrink: 0;\\n}\\r\\n.flex-grow {\\n  flex-grow: 1;\\n}\\r\\n.caption-bottom {\\n  caption-side: bottom;\\n}\\r\\n.-translate-x-1\\\\/2 {\\n  --tw-translate-x: -50%;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.-translate-y-1\\\\/2 {\\n  --tw-translate-y: -50%;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.translate-x-1\\\\/2 {\\n  --tw-translate-x: 50%;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.translate-x-\\\\[-50\\\\%\\\\] {\\n  --tw-translate-x: -50%;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.translate-y-0 {\\n  --tw-translate-y: 0px;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.translate-y-4 {\\n  --tw-translate-y: 1rem;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.translate-y-\\\\[-50\\\\%\\\\] {\\n  --tw-translate-y: -50%;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.transform {\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.cursor-default {\\n  cursor: default;\\n}\\r\\n.cursor-not-allowed {\\n  cursor: not-allowed;\\n}\\r\\n.cursor-pointer {\\n  cursor: pointer;\\n}\\r\\n.touch-none {\\n  touch-action: none;\\n}\\r\\n.select-none {\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n          user-select: none;\\n}\\r\\n.list-inside {\\n  list-style-position: inside;\\n}\\r\\n.list-disc {\\n  list-style-type: disc;\\n}\\r\\n.grid-cols-1 {\\n  grid-template-columns: repeat(1, minmax(0, 1fr));\\n}\\r\\n.grid-cols-2 {\\n  grid-template-columns: repeat(2, minmax(0, 1fr));\\n}\\r\\n.flex-row {\\n  flex-direction: row;\\n}\\r\\n.flex-col {\\n  flex-direction: column;\\n}\\r\\n.flex-col-reverse {\\n  flex-direction: column-reverse;\\n}\\r\\n.flex-wrap {\\n  flex-wrap: wrap;\\n}\\r\\n.items-start {\\n  align-items: flex-start;\\n}\\r\\n.items-end {\\n  align-items: flex-end;\\n}\\r\\n.items-center {\\n  align-items: center;\\n}\\r\\n.justify-start {\\n  justify-content: flex-start;\\n}\\r\\n.justify-end {\\n  justify-content: flex-end;\\n}\\r\\n.justify-center {\\n  justify-content: center;\\n}\\r\\n.justify-between {\\n  justify-content: space-between;\\n}\\r\\n.gap-2 {\\n  gap: 0.5rem;\\n}\\r\\n.gap-3 {\\n  gap: 0.75rem;\\n}\\r\\n.gap-4 {\\n  gap: 1rem;\\n}\\r\\n.gap-5 {\\n  gap: 1.25rem;\\n}\\r\\n.gap-6 {\\n  gap: 1.5rem;\\n}\\r\\n.gap-x-6 {\\n  -moz-column-gap: 1.5rem;\\n       column-gap: 1.5rem;\\n}\\r\\n.gap-y-4 {\\n  row-gap: 1rem;\\n}\\r\\n.space-x-1 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-x-reverse: 0;\\n  margin-right: calc(0.25rem * var(--tw-space-x-reverse));\\n  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));\\n}\\r\\n.space-x-2 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-x-reverse: 0;\\n  margin-right: calc(0.5rem * var(--tw-space-x-reverse));\\n  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));\\n}\\r\\n.space-x-3 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-x-reverse: 0;\\n  margin-right: calc(0.75rem * var(--tw-space-x-reverse));\\n  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));\\n}\\r\\n.space-x-4 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-x-reverse: 0;\\n  margin-right: calc(1rem * var(--tw-space-x-reverse));\\n  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));\\n}\\r\\n.space-x-6 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-x-reverse: 0;\\n  margin-right: calc(1.5rem * var(--tw-space-x-reverse));\\n  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));\\n}\\r\\n.space-y-0 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(0px * var(--tw-space-y-reverse));\\n}\\r\\n.space-y-1 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));\\n}\\r\\n.space-y-1\\\\.5 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));\\n}\\r\\n.space-y-2 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));\\n}\\r\\n.space-y-3 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));\\n}\\r\\n.space-y-4 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(1rem * var(--tw-space-y-reverse));\\n}\\r\\n.space-y-6 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));\\n}\\r\\n.divide-y > :not([hidden]) ~ :not([hidden]) {\\n  --tw-divide-y-reverse: 0;\\n  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));\\n  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));\\n}\\r\\n.divide-border > :not([hidden]) ~ :not([hidden]) {\\n  border-color: hsl(var(--border));\\n}\\r\\n.divide-gray-200 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-divide-opacity: 1;\\n  border-color: rgb(229 231 235 / var(--tw-divide-opacity, 1));\\n}\\r\\n.overflow-auto {\\n  overflow: auto;\\n}\\r\\n.overflow-hidden {\\n  overflow: hidden;\\n}\\r\\n.overflow-visible {\\n  overflow: visible;\\n}\\r\\n.overflow-x-auto {\\n  overflow-x: auto;\\n}\\r\\n.overflow-y-auto {\\n  overflow-y: auto;\\n}\\r\\n.truncate {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\r\\n.whitespace-nowrap {\\n  white-space: nowrap;\\n}\\r\\n.whitespace-pre-line {\\n  white-space: pre-line;\\n}\\r\\n.rounded {\\n  border-radius: 0.25rem;\\n}\\r\\n.rounded-\\\\[inherit\\\\] {\\n  border-radius: inherit;\\n}\\r\\n.rounded-full {\\n  border-radius: 9999px;\\n}\\r\\n.rounded-lg {\\n  border-radius: var(--radius);\\n}\\r\\n.rounded-md {\\n  border-radius: calc(var(--radius) - 2px);\\n}\\r\\n.rounded-none {\\n  border-radius: 0px;\\n}\\r\\n.rounded-sm {\\n  border-radius: calc(var(--radius) - 4px);\\n}\\r\\n.rounded-xl {\\n  border-radius: 0.75rem;\\n}\\r\\n.border {\\n  border-width: 1px;\\n}\\r\\n.border-2 {\\n  border-width: 2px;\\n}\\r\\n.border-b {\\n  border-bottom-width: 1px;\\n}\\r\\n.border-b-2 {\\n  border-bottom-width: 2px;\\n}\\r\\n.border-l {\\n  border-left-width: 1px;\\n}\\r\\n.border-t {\\n  border-top-width: 1px;\\n}\\r\\n.border-black {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(0 0 0 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-blue-200 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(191 219 254 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-border {\\n  border-color: hsl(var(--border));\\n}\\r\\n.border-gray-200 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(229 231 235 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-gray-300 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-green-200 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(187 247 208 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-indigo-500 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(99 102 241 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-input {\\n  border-color: hsl(var(--input));\\n}\\r\\n.border-red-200 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(254 202 202 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-red-500 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(239 68 68 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-transparent {\\n  border-color: transparent;\\n}\\r\\n.border-yellow-200 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(254 240 138 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-zinc-600 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(82 82 91 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-zinc-700 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(63 63 70 / var(--tw-border-opacity, 1));\\n}\\r\\n.border-l-transparent {\\n  border-left-color: transparent;\\n}\\r\\n.border-t-transparent {\\n  border-top-color: transparent;\\n}\\r\\n.bg-\\\\[\\\\#fffbe6\\\\] {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(255 251 230 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-amber-100 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(254 243 199 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-amber-50 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(255 251 235 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-background {\\n  background-color: hsl(var(--background));\\n}\\r\\n.bg-black {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-black\\\\/80 {\\n  background-color: rgb(0 0 0 / 0.8);\\n}\\r\\n.bg-blue-50 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(239 246 255 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-blue-600 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(37 99 235 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-border {\\n  background-color: hsl(var(--border));\\n}\\r\\n.bg-card {\\n  background-color: hsl(var(--card));\\n}\\r\\n.bg-card\\\\/50 {\\n  background-color: hsl(var(--card) / 0.5);\\n}\\r\\n.bg-card\\\\/80 {\\n  background-color: hsl(var(--card) / 0.8);\\n}\\r\\n.bg-destructive {\\n  background-color: hsl(var(--destructive));\\n}\\r\\n.bg-gray-100 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-gray-200 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(229 231 235 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-gray-300 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(209 213 219 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-gray-50 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-gray-500 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(107 114 128 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-gray-600 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(75 85 99 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-green-100 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(220 252 231 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-green-50 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(240 253 244 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-green-500 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(34 197 94 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-green-600 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(22 163 74 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-indigo-600 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(79 70 229 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-muted {\\n  background-color: hsl(var(--muted));\\n}\\r\\n.bg-muted\\\\/50 {\\n  background-color: hsl(var(--muted) / 0.5);\\n}\\r\\n.bg-popover {\\n  background-color: hsl(var(--popover));\\n}\\r\\n.bg-primary {\\n  background-color: hsl(var(--primary));\\n}\\r\\n.bg-primary\\\\/10 {\\n  background-color: hsl(var(--primary) / 0.1);\\n}\\r\\n.bg-primary\\\\/20 {\\n  background-color: hsl(var(--primary) / 0.2);\\n}\\r\\n.bg-primary\\\\/90 {\\n  background-color: hsl(var(--primary) / 0.9);\\n}\\r\\n.bg-red-100 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-red-50 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(254 242 242 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-red-600 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(220 38 38 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-secondary {\\n  background-color: hsl(var(--secondary));\\n}\\r\\n.bg-slate-50 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(248 250 252 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-white {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-yellow-100 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(254 249 195 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-yellow-50 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(254 252 232 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-zinc-600 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(82 82 91 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-zinc-700 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(63 63 70 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-zinc-800 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(39 39 42 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-zinc-900 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(24 24 27 / var(--tw-bg-opacity, 1));\\n}\\r\\n.bg-opacity-40 {\\n  --tw-bg-opacity: 0.4;\\n}\\r\\n.bg-opacity-50 {\\n  --tw-bg-opacity: 0.5;\\n}\\r\\n.bg-opacity-75 {\\n  --tw-bg-opacity: 0.75;\\n}\\r\\n.p-0 {\\n  padding: 0px;\\n}\\r\\n.p-1 {\\n  padding: 0.25rem;\\n}\\r\\n.p-2 {\\n  padding: 0.5rem;\\n}\\r\\n.p-3 {\\n  padding: 0.75rem;\\n}\\r\\n.p-4 {\\n  padding: 1rem;\\n}\\r\\n.p-5 {\\n  padding: 1.25rem;\\n}\\r\\n.p-6 {\\n  padding: 1.5rem;\\n}\\r\\n.p-8 {\\n  padding: 2rem;\\n}\\r\\n.p-\\\\[1px\\\\] {\\n  padding: 1px;\\n}\\r\\n.px-1 {\\n  padding-left: 0.25rem;\\n  padding-right: 0.25rem;\\n}\\r\\n.px-2 {\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n}\\r\\n.px-2\\\\.5 {\\n  padding-left: 0.625rem;\\n  padding-right: 0.625rem;\\n}\\r\\n.px-3 {\\n  padding-left: 0.75rem;\\n  padding-right: 0.75rem;\\n}\\r\\n.px-4 {\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n}\\r\\n.px-6 {\\n  padding-left: 1.5rem;\\n  padding-right: 1.5rem;\\n}\\r\\n.px-8 {\\n  padding-left: 2rem;\\n  padding-right: 2rem;\\n}\\r\\n.py-0\\\\.5 {\\n  padding-top: 0.125rem;\\n  padding-bottom: 0.125rem;\\n}\\r\\n.py-1 {\\n  padding-top: 0.25rem;\\n  padding-bottom: 0.25rem;\\n}\\r\\n.py-1\\\\.5 {\\n  padding-top: 0.375rem;\\n  padding-bottom: 0.375rem;\\n}\\r\\n.py-10 {\\n  padding-top: 2.5rem;\\n  padding-bottom: 2.5rem;\\n}\\r\\n.py-2 {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\r\\n.py-3 {\\n  padding-top: 0.75rem;\\n  padding-bottom: 0.75rem;\\n}\\r\\n.py-4 {\\n  padding-top: 1rem;\\n  padding-bottom: 1rem;\\n}\\r\\n.py-6 {\\n  padding-top: 1.5rem;\\n  padding-bottom: 1.5rem;\\n}\\r\\n.py-8 {\\n  padding-top: 2rem;\\n  padding-bottom: 2rem;\\n}\\r\\n.pb-2 {\\n  padding-bottom: 0.5rem;\\n}\\r\\n.pb-4 {\\n  padding-bottom: 1rem;\\n}\\r\\n.pb-6 {\\n  padding-bottom: 1.5rem;\\n}\\r\\n.pl-3 {\\n  padding-left: 0.75rem;\\n}\\r\\n.pl-8 {\\n  padding-left: 2rem;\\n}\\r\\n.pr-10 {\\n  padding-right: 2.5rem;\\n}\\r\\n.pr-2 {\\n  padding-right: 0.5rem;\\n}\\r\\n.pt-0 {\\n  padding-top: 0px;\\n}\\r\\n.pt-1 {\\n  padding-top: 0.25rem;\\n}\\r\\n.pt-10 {\\n  padding-top: 2.5rem;\\n}\\r\\n.pt-20 {\\n  padding-top: 5rem;\\n}\\r\\n.pt-4 {\\n  padding-top: 1rem;\\n}\\r\\n.pt-5 {\\n  padding-top: 1.25rem;\\n}\\r\\n.pt-6 {\\n  padding-top: 1.5rem;\\n}\\r\\n.text-left {\\n  text-align: left;\\n}\\r\\n.text-center {\\n  text-align: center;\\n}\\r\\n.text-right {\\n  text-align: right;\\n}\\r\\n.align-middle {\\n  vertical-align: middle;\\n}\\r\\n.font-mono {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n}\\r\\n.text-2xl {\\n  font-size: 1.5rem;\\n  line-height: 2rem;\\n}\\r\\n.text-3xl {\\n  font-size: 1.875rem;\\n  line-height: 2.25rem;\\n}\\r\\n.text-4xl {\\n  font-size: 2.25rem;\\n  line-height: 2.5rem;\\n}\\r\\n.text-base {\\n  font-size: 1rem;\\n  line-height: 1.5rem;\\n}\\r\\n.text-lg {\\n  font-size: 1.125rem;\\n  line-height: 1.75rem;\\n}\\r\\n.text-sm {\\n  font-size: 0.875rem;\\n  line-height: 1.25rem;\\n}\\r\\n.text-xl {\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n}\\r\\n.text-xs {\\n  font-size: 0.75rem;\\n  line-height: 1rem;\\n}\\r\\n.font-bold {\\n  font-weight: 700;\\n}\\r\\n.font-medium {\\n  font-weight: 500;\\n}\\r\\n.font-normal {\\n  font-weight: 400;\\n}\\r\\n.font-semibold {\\n  font-weight: 600;\\n}\\r\\n.uppercase {\\n  text-transform: uppercase;\\n}\\r\\n.italic {\\n  font-style: italic;\\n}\\r\\n.leading-5 {\\n  line-height: 1.25rem;\\n}\\r\\n.leading-6 {\\n  line-height: 1.5rem;\\n}\\r\\n.leading-none {\\n  line-height: 1;\\n}\\r\\n.leading-relaxed {\\n  line-height: 1.625;\\n}\\r\\n.tracking-tight {\\n  letter-spacing: -0.025em;\\n}\\r\\n.tracking-wider {\\n  letter-spacing: 0.05em;\\n}\\r\\n.text-accent-foreground {\\n  color: hsl(var(--accent-foreground));\\n}\\r\\n.text-black {\\n  --tw-text-opacity: 1;\\n  color: rgb(0 0 0 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-blue-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(96 165 250 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-blue-500 {\\n  --tw-text-opacity: 1;\\n  color: rgb(59 130 246 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-blue-600 {\\n  --tw-text-opacity: 1;\\n  color: rgb(37 99 235 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-blue-700 {\\n  --tw-text-opacity: 1;\\n  color: rgb(29 78 216 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-card-foreground {\\n  color: hsl(var(--card-foreground));\\n}\\r\\n.text-destructive {\\n  color: hsl(var(--destructive));\\n}\\r\\n.text-destructive-foreground {\\n  color: hsl(var(--destructive-foreground));\\n}\\r\\n.text-foreground {\\n  color: hsl(var(--foreground));\\n}\\r\\n.text-gray-100 {\\n  --tw-text-opacity: 1;\\n  color: rgb(243 244 246 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-gray-200 {\\n  --tw-text-opacity: 1;\\n  color: rgb(229 231 235 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-gray-300 {\\n  --tw-text-opacity: 1;\\n  color: rgb(209 213 219 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-gray-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(156 163 175 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-gray-500 {\\n  --tw-text-opacity: 1;\\n  color: rgb(107 114 128 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-gray-600 {\\n  --tw-text-opacity: 1;\\n  color: rgb(75 85 99 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-gray-700 {\\n  --tw-text-opacity: 1;\\n  color: rgb(55 65 81 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-gray-800 {\\n  --tw-text-opacity: 1;\\n  color: rgb(31 41 55 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-gray-900 {\\n  --tw-text-opacity: 1;\\n  color: rgb(17 24 39 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-green-500 {\\n  --tw-text-opacity: 1;\\n  color: rgb(34 197 94 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-green-600 {\\n  --tw-text-opacity: 1;\\n  color: rgb(22 163 74 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-green-700 {\\n  --tw-text-opacity: 1;\\n  color: rgb(21 128 61 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-green-800 {\\n  --tw-text-opacity: 1;\\n  color: rgb(22 101 52 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-indigo-600 {\\n  --tw-text-opacity: 1;\\n  color: rgb(79 70 229 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-muted-foreground {\\n  color: hsl(var(--muted-foreground));\\n}\\r\\n.text-popover-foreground {\\n  color: hsl(var(--popover-foreground));\\n}\\r\\n.text-primary {\\n  color: hsl(var(--primary));\\n}\\r\\n.text-primary-foreground {\\n  color: hsl(var(--primary-foreground));\\n}\\r\\n.text-red-500 {\\n  --tw-text-opacity: 1;\\n  color: rgb(239 68 68 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-red-600 {\\n  --tw-text-opacity: 1;\\n  color: rgb(220 38 38 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-red-700 {\\n  --tw-text-opacity: 1;\\n  color: rgb(185 28 28 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-red-800 {\\n  --tw-text-opacity: 1;\\n  color: rgb(153 27 27 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-secondary-foreground {\\n  color: hsl(var(--secondary-foreground));\\n}\\r\\n.text-slate-600 {\\n  --tw-text-opacity: 1;\\n  color: rgb(71 85 105 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-white {\\n  --tw-text-opacity: 1;\\n  color: rgb(255 255 255 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-yellow-500 {\\n  --tw-text-opacity: 1;\\n  color: rgb(234 179 8 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-yellow-700 {\\n  --tw-text-opacity: 1;\\n  color: rgb(161 98 7 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-zinc-100 {\\n  --tw-text-opacity: 1;\\n  color: rgb(244 244 245 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-zinc-300 {\\n  --tw-text-opacity: 1;\\n  color: rgb(212 212 216 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-zinc-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(161 161 170 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-zinc-50 {\\n  --tw-text-opacity: 1;\\n  color: rgb(250 250 250 / var(--tw-text-opacity, 1));\\n}\\r\\n.text-zinc-500 {\\n  --tw-text-opacity: 1;\\n  color: rgb(113 113 122 / var(--tw-text-opacity, 1));\\n}\\r\\n.underline {\\n  text-decoration-line: underline;\\n}\\r\\n.line-through {\\n  text-decoration-line: line-through;\\n}\\r\\n.no-underline {\\n  text-decoration-line: none;\\n}\\r\\n.placeholder-gray-500::-moz-placeholder {\\n  --tw-placeholder-opacity: 1;\\n  color: rgb(107 114 128 / var(--tw-placeholder-opacity, 1));\\n}\\r\\n.placeholder-gray-500::placeholder {\\n  --tw-placeholder-opacity: 1;\\n  color: rgb(107 114 128 / var(--tw-placeholder-opacity, 1));\\n}\\r\\n.placeholder-zinc-400::-moz-placeholder {\\n  --tw-placeholder-opacity: 1;\\n  color: rgb(161 161 170 / var(--tw-placeholder-opacity, 1));\\n}\\r\\n.placeholder-zinc-400::placeholder {\\n  --tw-placeholder-opacity: 1;\\n  color: rgb(161 161 170 / var(--tw-placeholder-opacity, 1));\\n}\\r\\n.placeholder-zinc-500::-moz-placeholder {\\n  --tw-placeholder-opacity: 1;\\n  color: rgb(113 113 122 / var(--tw-placeholder-opacity, 1));\\n}\\r\\n.placeholder-zinc-500::placeholder {\\n  --tw-placeholder-opacity: 1;\\n  color: rgb(113 113 122 / var(--tw-placeholder-opacity, 1));\\n}\\r\\n.accent-blue-600 {\\n  accent-color: #2563eb;\\n}\\r\\n.opacity-0 {\\n  opacity: 0;\\n}\\r\\n.opacity-100 {\\n  opacity: 1;\\n}\\r\\n.opacity-50 {\\n  opacity: 0.5;\\n}\\r\\n.opacity-70 {\\n  opacity: 0.7;\\n}\\r\\n.shadow {\\n  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\\n  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.shadow-2xl {\\n  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);\\n  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.shadow-lg {\\n  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\\n  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.shadow-md {\\n  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\\n  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.shadow-none {\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.shadow-sm {\\n  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\\n  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.shadow-xl {\\n  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);\\n  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.outline-none {\\n  outline: 2px solid transparent;\\n  outline-offset: 2px;\\n}\\r\\n.outline {\\n  outline-style: solid;\\n}\\r\\n.ring-0 {\\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\\n}\\r\\n.ring-2 {\\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\\n}\\r\\n.ring-primary {\\n  --tw-ring-color: hsl(var(--primary));\\n}\\r\\n.ring-offset-background {\\n  --tw-ring-offset-color: hsl(var(--background));\\n}\\r\\n.drop-shadow-2xl {\\n  --tw-drop-shadow: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));\\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n}\\r\\n.filter {\\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n}\\r\\n.backdrop-blur-sm {\\n  --tw-backdrop-blur: blur(4px);\\n  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\n  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\n}\\r\\n.transition {\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\r\\n.transition-all {\\n  transition-property: all;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\r\\n.transition-colors {\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\r\\n.transition-opacity {\\n  transition-property: opacity;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\r\\n.transition-shadow {\\n  transition-property: box-shadow;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\r\\n.transition-transform {\\n  transition-property: transform;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\r\\n.duration-150 {\\n  transition-duration: 150ms;\\n}\\r\\n.duration-200 {\\n  transition-duration: 200ms;\\n}\\r\\n.duration-300 {\\n  transition-duration: 300ms;\\n}\\r\\n.ease-in {\\n  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);\\n}\\r\\n.ease-out {\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n}\\r\\n@keyframes enter {\\n\\n  from {\\n    opacity: var(--tw-enter-opacity, 1);\\n    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));\\n  }\\n}\\r\\n@keyframes exit {\\n\\n  to {\\n    opacity: var(--tw-exit-opacity, 1);\\n    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));\\n  }\\n}\\r\\n.duration-150 {\\n  animation-duration: 150ms;\\n}\\r\\n.duration-200 {\\n  animation-duration: 200ms;\\n}\\r\\n.duration-300 {\\n  animation-duration: 300ms;\\n}\\r\\n.ease-in {\\n  animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\\n}\\r\\n.ease-out {\\n  animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n}\\r\\n.running {\\n  animation-play-state: running;\\n}\\r\\n.paused {\\n  animation-play-state: paused;\\n}\\r\\n\\r\\n/* Custom styles can be added below */\\r\\nhtml,\\r\\nbody {\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\r\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\r\\n}\\r\\n\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n/* Inputs e selects com sombra suave */\\r\\ninput, textarea, select {\\r\\n  border: none;\\r\\n  outline: none;\\r\\n  border-radius: 6px;\\r\\n  background: #fff;\\r\\n  box-shadow: 0 2px 8px 0 rgba(180, 180, 180, 0.15);\\r\\n  padding: 8px 12px;\\r\\n  font-size: 1rem;\\r\\n  transition: box-shadow 0.2s;\\r\\n}\\r\\ninput:focus, textarea:focus, select:focus {\\r\\n  box-shadow: 0 0 0 2px #b3b3b3;\\r\\n}\\r\\n\\r\\n/* Estilos de impressão */\\r\\n@media print {\\r\\n  header, .shadow, .rounded-lg, .rounded-xl, .bg-gray-100, .bg-white:not(#modal-ver-pedido), main {\\r\\n    display: none !important;\\r\\n  }\\r\\n  #modal-ver-pedido {\\r\\n    display: block !important;\\r\\n    position: fixed !important;\\r\\n    top: 0 !important;\\r\\n    left: 0 !important;\\r\\n    right: 0 !important;\\r\\n    bottom: 0 !important;\\r\\n    z-index: 99999 !important;\\r\\n    box-shadow: none !important;\\r\\n    border-radius: 0 !important;\\r\\n    background: #fff !important;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n    width: 100vw !important;\\r\\n    min-height: 100vh !important;\\r\\n    max-width: 100vw !important;\\r\\n    max-height: 100vh !important;\\r\\n    overflow: visible !important;\\r\\n  }\\r\\n  header, footer, .print\\\\:fixed {\\r\\n    position: fixed !important;\\r\\n    left: 0 !important; right: 0 !important;\\r\\n    background: #fff !important;\\r\\n    z-index: 9999 !important;\\r\\n  }\\r\\n  header, .print\\\\:top-0 { top: 0 !important; }\\r\\n  footer, .print\\\\:bottom-0 { bottom: 0 !important; }\\r\\n  .print\\\\:w-full { width: 100vw !important; }\\r\\n  .print\\\\:bg-white { background: #fff !important; }\\r\\n  .print\\\\:border-t { border-top: 1px solid #ccc !important; }\\r\\n  .print\\\\:px-8 { padding-left: 2rem !important; padding-right: 2rem !important; }\\r\\n  .print\\\\:py-2 { padding-top: 0.5rem !important; padding-bottom: 0.5rem !important; }\\r\\n  .print-page-break {\\r\\n    display: block !important;\\r\\n    page-break-before: always !important;\\r\\n    height: 0 !important;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n    border: none !important;\\r\\n  }\\r\\n  .modal-print-header {\\r\\n    display: block !important;\\r\\n    position: fixed !important;\\r\\n    top: 0; left: 0; right: 0;\\r\\n    background: #fff !important;\\r\\n    z-index: 1000;\\r\\n    width: 100vw;\\r\\n  }\\r\\n  #modal-ver-pedido > .overflow-y-auto, #modal-ver-pedido > div.overflow-y-auto {\\r\\n    padding-top: 120px !important;\\r\\n  }\\r\\n  .pdf-page-break {\\r\\n    display: block;\\r\\n    page-break-before: always;\\r\\n    -moz-column-break-before: page;\\r\\n         break-before: page;\\r\\n    height: 0;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    border: none;\\r\\n  }\\r\\n  .pdf-section {\\r\\n    page-break-inside: avoid;\\r\\n    -moz-column-break-inside: avoid;\\r\\n         break-inside: avoid;\\r\\n  }\\r\\n  .pdf-header, .pdf-footer {\\r\\n    display: block !important;\\r\\n  }\\r\\n  .pdf-text {\\r\\n    font-size: 0.85em !important;\\r\\n  }\\r\\n}\\r\\n\\r\\n.pdf-header, .pdf-footer {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\r\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\r\\n}\\r\\n\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n/* Inputs e selects com sombra suave */\\r\\ninput, textarea, select {\\r\\n  border: none;\\r\\n  outline: none;\\r\\n  border-radius: 6px;\\r\\n  background: #fff;\\r\\n  box-shadow: 0 2px 8px 0 rgba(180, 180, 180, 0.15);\\r\\n  padding: 8px 12px;\\r\\n  font-size: 1rem;\\r\\n  transition: box-shadow 0.2s;\\r\\n}\\r\\ninput:focus, textarea:focus, select:focus {\\r\\n  box-shadow: 0 0 0 2px #b3b3b3;\\r\\n}\\r\\n\\r\\n/* Estilos de impressão */\\r\\n@media print {\\r\\n  header, .shadow, .rounded-lg, .rounded-xl, .bg-gray-100, .bg-white:not(#modal-ver-pedido), main {\\r\\n    display: none !important;\\r\\n  }\\r\\n  #modal-ver-pedido {\\r\\n    display: block !important;\\r\\n    position: fixed !important;\\r\\n    top: 0 !important;\\r\\n    left: 0 !important;\\r\\n    right: 0 !important;\\r\\n    bottom: 0 !important;\\r\\n    z-index: 99999 !important;\\r\\n    box-shadow: none !important;\\r\\n    border-radius: 0 !important;\\r\\n    background: #fff !important;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n    width: 100vw !important;\\r\\n    min-height: 100vh !important;\\r\\n    max-width: 100vw !important;\\r\\n    max-height: 100vh !important;\\r\\n    overflow: visible !important;\\r\\n  }\\r\\n  header, footer, .print\\\\:fixed {\\r\\n    position: fixed !important;\\r\\n    left: 0 !important; right: 0 !important;\\r\\n    background: #fff !important;\\r\\n    z-index: 9999 !important;\\r\\n  }\\r\\n  header, .print\\\\:top-0 { top: 0 !important; }\\r\\n  footer, .print\\\\:bottom-0 { bottom: 0 !important; }\\r\\n  .print\\\\:w-full { width: 100vw !important; }\\r\\n  .print\\\\:bg-white { background: #fff !important; }\\r\\n  .print\\\\:border-t { border-top: 1px solid #ccc !important; }\\r\\n  .print\\\\:px-8 { padding-left: 2rem !important; padding-right: 2rem !important; }\\r\\n  .print\\\\:py-2 { padding-top: 0.5rem !important; padding-bottom: 0.5rem !important; }\\r\\n  .print-page-break {\\r\\n    display: block !important;\\r\\n    page-break-before: always !important;\\r\\n    height: 0 !important;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n    border: none !important;\\r\\n  }\\r\\n  .modal-print-header {\\r\\n    display: block !important;\\r\\n    position: fixed !important;\\r\\n    top: 0; left: 0; right: 0;\\r\\n    background: #fff !important;\\r\\n    z-index: 1000;\\r\\n    width: 100vw;\\r\\n  }\\r\\n  #modal-ver-pedido > .overflow-y-auto, #modal-ver-pedido > div.overflow-y-auto {\\r\\n    padding-top: 120px !important;\\r\\n  }\\r\\n}\\r\\n.file\\\\:border-0::file-selector-button {\\n  border-width: 0px;\\n}\\r\\n.file\\\\:bg-transparent::file-selector-button {\\n  background-color: transparent;\\n}\\r\\n.file\\\\:text-sm::file-selector-button {\\n  font-size: 0.875rem;\\n  line-height: 1.25rem;\\n}\\r\\n.file\\\\:font-medium::file-selector-button {\\n  font-weight: 500;\\n}\\r\\n.placeholder\\\\:text-muted-foreground::-moz-placeholder {\\n  color: hsl(var(--muted-foreground));\\n}\\r\\n.placeholder\\\\:text-muted-foreground::placeholder {\\n  color: hsl(var(--muted-foreground));\\n}\\r\\n.hover\\\\:border-gray-300:hover {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));\\n}\\r\\n.hover\\\\:bg-accent:hover {\\n  background-color: hsl(var(--accent));\\n}\\r\\n.hover\\\\:bg-accent\\\\/50:hover {\\n  background-color: hsl(var(--accent) / 0.5);\\n}\\r\\n.hover\\\\:bg-blue-100:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(219 234 254 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-blue-700:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(29 78 216 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-destructive\\\\/10:hover {\\n  background-color: hsl(var(--destructive) / 0.1);\\n}\\r\\n.hover\\\\:bg-destructive\\\\/80:hover {\\n  background-color: hsl(var(--destructive) / 0.8);\\n}\\r\\n.hover\\\\:bg-gray-100:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-gray-200:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(229 231 235 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-gray-300:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(209 213 219 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-gray-400:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(156 163 175 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-gray-50:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-gray-800:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(31 41 55 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-green-200:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(187 247 208 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-green-700:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(21 128 61 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-indigo-700:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(67 56 202 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-muted\\\\/50:hover {\\n  background-color: hsl(var(--muted) / 0.5);\\n}\\r\\n.hover\\\\:bg-muted\\\\/80:hover {\\n  background-color: hsl(var(--muted) / 0.8);\\n}\\r\\n.hover\\\\:bg-primary\\\\/10:hover {\\n  background-color: hsl(var(--primary) / 0.1);\\n}\\r\\n.hover\\\\:bg-primary\\\\/80:hover {\\n  background-color: hsl(var(--primary) / 0.8);\\n}\\r\\n.hover\\\\:bg-primary\\\\/90:hover {\\n  background-color: hsl(var(--primary) / 0.9);\\n}\\r\\n.hover\\\\:bg-red-200:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(254 202 202 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-red-700:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(185 28 28 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-secondary\\\\/80:hover {\\n  background-color: hsl(var(--secondary) / 0.8);\\n}\\r\\n.hover\\\\:bg-slate-100:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(241 245 249 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-zinc-500:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(113 113 122 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-zinc-600:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(82 82 91 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:bg-zinc-700:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(63 63 70 / var(--tw-bg-opacity, 1));\\n}\\r\\n.hover\\\\:text-accent-foreground:hover {\\n  color: hsl(var(--accent-foreground));\\n}\\r\\n.hover\\\\:text-blue-800:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(30 64 175 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-blue-900:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(30 58 138 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-gray-600:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(75 85 99 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-gray-700:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(55 65 81 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-gray-800:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(31 41 55 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-gray-900:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(17 24 39 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-indigo-800:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(55 48 163 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-indigo-900:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(49 46 129 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-primary\\\\/80:hover {\\n  color: hsl(var(--primary) / 0.8);\\n}\\r\\n.hover\\\\:text-red-500:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(239 68 68 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-red-700:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(185 28 28 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-red-900:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(127 29 29 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:text-zinc-200:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(228 228 231 / var(--tw-text-opacity, 1));\\n}\\r\\n.hover\\\\:underline:hover {\\n  text-decoration-line: underline;\\n}\\r\\n.hover\\\\:opacity-100:hover {\\n  opacity: 1;\\n}\\r\\n.hover\\\\:shadow-2xl:hover {\\n  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);\\n  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.hover\\\\:shadow-lg:hover {\\n  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\\n  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.focus\\\\:border-indigo-500:focus {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(99 102 241 / var(--tw-border-opacity, 1));\\n}\\r\\n.focus\\\\:bg-accent:focus {\\n  background-color: hsl(var(--accent));\\n}\\r\\n.focus\\\\:text-accent-foreground:focus {\\n  color: hsl(var(--accent-foreground));\\n}\\r\\n.focus\\\\:outline-none:focus {\\n  outline: 2px solid transparent;\\n  outline-offset: 2px;\\n}\\r\\n.focus\\\\:ring-2:focus {\\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\\n}\\r\\n.focus\\\\:ring-black:focus {\\n  --tw-ring-opacity: 1;\\n  --tw-ring-color: rgb(0 0 0 / var(--tw-ring-opacity, 1));\\n}\\r\\n.focus\\\\:ring-blue-400:focus {\\n  --tw-ring-opacity: 1;\\n  --tw-ring-color: rgb(96 165 250 / var(--tw-ring-opacity, 1));\\n}\\r\\n.focus\\\\:ring-blue-500:focus {\\n  --tw-ring-opacity: 1;\\n  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity, 1));\\n}\\r\\n.focus\\\\:ring-green-500:focus {\\n  --tw-ring-opacity: 1;\\n  --tw-ring-color: rgb(34 197 94 / var(--tw-ring-opacity, 1));\\n}\\r\\n.focus\\\\:ring-indigo-500:focus {\\n  --tw-ring-opacity: 1;\\n  --tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity, 1));\\n}\\r\\n.focus\\\\:ring-ring:focus {\\n  --tw-ring-color: hsl(var(--ring));\\n}\\r\\n.focus\\\\:ring-opacity-50:focus {\\n  --tw-ring-opacity: 0.5;\\n}\\r\\n.focus\\\\:ring-offset-2:focus {\\n  --tw-ring-offset-width: 2px;\\n}\\r\\n.focus-visible\\\\:outline-none:focus-visible {\\n  outline: 2px solid transparent;\\n  outline-offset: 2px;\\n}\\r\\n.focus-visible\\\\:ring-2:focus-visible {\\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\\n}\\r\\n.focus-visible\\\\:ring-ring:focus-visible {\\n  --tw-ring-color: hsl(var(--ring));\\n}\\r\\n.focus-visible\\\\:ring-offset-2:focus-visible {\\n  --tw-ring-offset-width: 2px;\\n}\\r\\n.focus-visible\\\\:ring-offset-background:focus-visible {\\n  --tw-ring-offset-color: hsl(var(--background));\\n}\\r\\n.disabled\\\\:pointer-events-none:disabled {\\n  pointer-events: none;\\n}\\r\\n.disabled\\\\:cursor-not-allowed:disabled {\\n  cursor: not-allowed;\\n}\\r\\n.disabled\\\\:bg-gray-400:disabled {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(156 163 175 / var(--tw-bg-opacity, 1));\\n}\\r\\n.disabled\\\\:opacity-50:disabled {\\n  opacity: 0.5;\\n}\\r\\n.group:hover .group-hover\\\\:opacity-100 {\\n  opacity: 1;\\n}\\r\\n.peer:disabled ~ .peer-disabled\\\\:cursor-not-allowed {\\n  cursor: not-allowed;\\n}\\r\\n.peer:disabled ~ .peer-disabled\\\\:opacity-70 {\\n  opacity: 0.7;\\n}\\r\\n.data-\\\\[disabled\\\\]\\\\:pointer-events-none[data-disabled] {\\n  pointer-events: none;\\n}\\r\\n.data-\\\\[side\\\\=bottom\\\\]\\\\:translate-y-1[data-side=\\\"bottom\\\"] {\\n  --tw-translate-y: 0.25rem;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.data-\\\\[side\\\\=left\\\\]\\\\:-translate-x-1[data-side=\\\"left\\\"] {\\n  --tw-translate-x: -0.25rem;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.data-\\\\[side\\\\=right\\\\]\\\\:translate-x-1[data-side=\\\"right\\\"] {\\n  --tw-translate-x: 0.25rem;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.data-\\\\[side\\\\=top\\\\]\\\\:-translate-y-1[data-side=\\\"top\\\"] {\\n  --tw-translate-y: -0.25rem;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.data-\\\\[state\\\\=checked\\\\]\\\\:translate-x-5[data-state=\\\"checked\\\"] {\\n  --tw-translate-x: 1.25rem;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.data-\\\\[state\\\\=unchecked\\\\]\\\\:translate-x-0[data-state=\\\"unchecked\\\"] {\\n  --tw-translate-x: 0px;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n@keyframes accordion-up {\\n\\n  from {\\n    height: var(--radix-accordion-content-height);\\n  }\\n\\n  to {\\n    height: 0;\\n  }\\n}\\r\\n.data-\\\\[state\\\\=closed\\\\]\\\\:animate-accordion-up[data-state=\\\"closed\\\"] {\\n  animation: accordion-up 0.2s ease-out;\\n}\\r\\n@keyframes accordion-down {\\n\\n  from {\\n    height: 0;\\n  }\\n\\n  to {\\n    height: var(--radix-accordion-content-height);\\n  }\\n}\\r\\n.data-\\\\[state\\\\=open\\\\]\\\\:animate-accordion-down[data-state=\\\"open\\\"] {\\n  animation: accordion-down 0.2s ease-out;\\n}\\r\\n.data-\\\\[state\\\\=active\\\\]\\\\:bg-background[data-state=\\\"active\\\"] {\\n  background-color: hsl(var(--background));\\n}\\r\\n.data-\\\\[state\\\\=checked\\\\]\\\\:bg-primary[data-state=\\\"checked\\\"] {\\n  background-color: hsl(var(--primary));\\n}\\r\\n.data-\\\\[state\\\\=open\\\\]\\\\:bg-accent[data-state=\\\"open\\\"] {\\n  background-color: hsl(var(--accent));\\n}\\r\\n.data-\\\\[state\\\\=selected\\\\]\\\\:bg-muted[data-state=\\\"selected\\\"] {\\n  background-color: hsl(var(--muted));\\n}\\r\\n.data-\\\\[state\\\\=unchecked\\\\]\\\\:bg-input[data-state=\\\"unchecked\\\"] {\\n  background-color: hsl(var(--input));\\n}\\r\\n.data-\\\\[state\\\\=active\\\\]\\\\:text-foreground[data-state=\\\"active\\\"] {\\n  color: hsl(var(--foreground));\\n}\\r\\n.data-\\\\[state\\\\=open\\\\]\\\\:text-muted-foreground[data-state=\\\"open\\\"] {\\n  color: hsl(var(--muted-foreground));\\n}\\r\\n.data-\\\\[disabled\\\\]\\\\:opacity-50[data-disabled] {\\n  opacity: 0.5;\\n}\\r\\n.data-\\\\[state\\\\=active\\\\]\\\\:shadow-sm[data-state=\\\"active\\\"] {\\n  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\\n  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\r\\n.data-\\\\[state\\\\=open\\\\]\\\\:animate-in[data-state=\\\"open\\\"] {\\n  animation-name: enter;\\n  animation-duration: 150ms;\\n  --tw-enter-opacity: initial;\\n  --tw-enter-scale: initial;\\n  --tw-enter-rotate: initial;\\n  --tw-enter-translate-x: initial;\\n  --tw-enter-translate-y: initial;\\n}\\r\\n.data-\\\\[state\\\\=closed\\\\]\\\\:animate-out[data-state=\\\"closed\\\"] {\\n  animation-name: exit;\\n  animation-duration: 150ms;\\n  --tw-exit-opacity: initial;\\n  --tw-exit-scale: initial;\\n  --tw-exit-rotate: initial;\\n  --tw-exit-translate-x: initial;\\n  --tw-exit-translate-y: initial;\\n}\\r\\n.data-\\\\[state\\\\=closed\\\\]\\\\:fade-out-0[data-state=\\\"closed\\\"] {\\n  --tw-exit-opacity: 0;\\n}\\r\\n.data-\\\\[state\\\\=open\\\\]\\\\:fade-in-0[data-state=\\\"open\\\"] {\\n  --tw-enter-opacity: 0;\\n}\\r\\n.data-\\\\[state\\\\=closed\\\\]\\\\:zoom-out-95[data-state=\\\"closed\\\"] {\\n  --tw-exit-scale: .95;\\n}\\r\\n.data-\\\\[state\\\\=open\\\\]\\\\:zoom-in-95[data-state=\\\"open\\\"] {\\n  --tw-enter-scale: .95;\\n}\\r\\n.data-\\\\[side\\\\=bottom\\\\]\\\\:slide-in-from-top-2[data-side=\\\"bottom\\\"] {\\n  --tw-enter-translate-y: -0.5rem;\\n}\\r\\n.data-\\\\[side\\\\=left\\\\]\\\\:slide-in-from-right-2[data-side=\\\"left\\\"] {\\n  --tw-enter-translate-x: 0.5rem;\\n}\\r\\n.data-\\\\[side\\\\=right\\\\]\\\\:slide-in-from-left-2[data-side=\\\"right\\\"] {\\n  --tw-enter-translate-x: -0.5rem;\\n}\\r\\n.data-\\\\[side\\\\=top\\\\]\\\\:slide-in-from-bottom-2[data-side=\\\"top\\\"] {\\n  --tw-enter-translate-y: 0.5rem;\\n}\\r\\n.data-\\\\[state\\\\=closed\\\\]\\\\:slide-out-to-left-1\\\\/2[data-state=\\\"closed\\\"] {\\n  --tw-exit-translate-x: -50%;\\n}\\r\\n.data-\\\\[state\\\\=closed\\\\]\\\\:slide-out-to-top-\\\\[48\\\\%\\\\][data-state=\\\"closed\\\"] {\\n  --tw-exit-translate-y: -48%;\\n}\\r\\n.data-\\\\[state\\\\=open\\\\]\\\\:slide-in-from-left-1\\\\/2[data-state=\\\"open\\\"] {\\n  --tw-enter-translate-x: -50%;\\n}\\r\\n.data-\\\\[state\\\\=open\\\\]\\\\:slide-in-from-top-\\\\[48\\\\%\\\\][data-state=\\\"open\\\"] {\\n  --tw-enter-translate-y: -48%;\\n}\\r\\n@media (min-width: 640px) {\\n\\n  .sm\\\\:my-8 {\\n    margin-top: 2rem;\\n    margin-bottom: 2rem;\\n  }\\n\\n  .sm\\\\:mb-0 {\\n    margin-bottom: 0px;\\n  }\\n\\n  .sm\\\\:mb-12 {\\n    margin-bottom: 3rem;\\n  }\\n\\n  .sm\\\\:mb-2 {\\n    margin-bottom: 0.5rem;\\n  }\\n\\n  .sm\\\\:mb-4 {\\n    margin-bottom: 1rem;\\n  }\\n\\n  .sm\\\\:ml-6 {\\n    margin-left: 1.5rem;\\n  }\\n\\n  .sm\\\\:mr-3 {\\n    margin-right: 0.75rem;\\n  }\\n\\n  .sm\\\\:inline {\\n    display: inline;\\n  }\\n\\n  .sm\\\\:flex {\\n    display: flex;\\n  }\\n\\n  .sm\\\\:w-1\\\\/2 {\\n    width: 50%;\\n  }\\n\\n  .sm\\\\:w-auto {\\n    width: auto;\\n  }\\n\\n  .sm\\\\:w-full {\\n    width: 100%;\\n  }\\n\\n  .sm\\\\:max-w-2xl {\\n    max-width: 42rem;\\n  }\\n\\n  .sm\\\\:max-w-3xl {\\n    max-width: 48rem;\\n  }\\n\\n  .sm\\\\:translate-y-0 {\\n    --tw-translate-y: 0px;\\n    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  }\\n\\n  .sm\\\\:scale-100 {\\n    --tw-scale-x: 1;\\n    --tw-scale-y: 1;\\n    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  }\\n\\n  .sm\\\\:scale-95 {\\n    --tw-scale-x: .95;\\n    --tw-scale-y: .95;\\n    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  }\\n\\n  .sm\\\\:grid-cols-2 {\\n    grid-template-columns: repeat(2, minmax(0, 1fr));\\n  }\\n\\n  .sm\\\\:flex-row {\\n    flex-direction: row;\\n  }\\n\\n  .sm\\\\:items-center {\\n    align-items: center;\\n  }\\n\\n  .sm\\\\:justify-end {\\n    justify-content: flex-end;\\n  }\\n\\n  .sm\\\\:justify-between {\\n    justify-content: space-between;\\n  }\\n\\n  .sm\\\\:gap-6 {\\n    gap: 1.5rem;\\n  }\\n\\n  .sm\\\\:space-x-2 > :not([hidden]) ~ :not([hidden]) {\\n    --tw-space-x-reverse: 0;\\n    margin-right: calc(0.5rem * var(--tw-space-x-reverse));\\n    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));\\n  }\\n\\n  .sm\\\\:space-x-3 > :not([hidden]) ~ :not([hidden]) {\\n    --tw-space-x-reverse: 0;\\n    margin-right: calc(0.75rem * var(--tw-space-x-reverse));\\n    margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));\\n  }\\n\\n  .sm\\\\:space-x-4 > :not([hidden]) ~ :not([hidden]) {\\n    --tw-space-x-reverse: 0;\\n    margin-right: calc(1rem * var(--tw-space-x-reverse));\\n    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));\\n  }\\n\\n  .sm\\\\:space-x-8 > :not([hidden]) ~ :not([hidden]) {\\n    --tw-space-x-reverse: 0;\\n    margin-right: calc(2rem * var(--tw-space-x-reverse));\\n    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));\\n  }\\n\\n  .sm\\\\:space-y-0 > :not([hidden]) ~ :not([hidden]) {\\n    --tw-space-y-reverse: 0;\\n    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));\\n    margin-bottom: calc(0px * var(--tw-space-y-reverse));\\n  }\\n\\n  .sm\\\\:rounded-lg {\\n    border-radius: var(--radius);\\n  }\\n\\n  .sm\\\\:p-0 {\\n    padding: 0px;\\n  }\\n\\n  .sm\\\\:p-6 {\\n    padding: 1.5rem;\\n  }\\n\\n  .sm\\\\:p-8 {\\n    padding: 2rem;\\n  }\\n\\n  .sm\\\\:px-6 {\\n    padding-left: 1.5rem;\\n    padding-right: 1.5rem;\\n  }\\n\\n  .sm\\\\:text-left {\\n    text-align: left;\\n  }\\n\\n  .sm\\\\:text-4xl {\\n    font-size: 2.25rem;\\n    line-height: 2.5rem;\\n  }\\n\\n  .sm\\\\:text-5xl {\\n    font-size: 3rem;\\n    line-height: 1;\\n  }\\n\\n  .sm\\\\:text-base {\\n    font-size: 1rem;\\n    line-height: 1.5rem;\\n  }\\n\\n  .sm\\\\:text-lg {\\n    font-size: 1.125rem;\\n    line-height: 1.75rem;\\n  }\\n\\n  .sm\\\\:text-sm {\\n    font-size: 0.875rem;\\n    line-height: 1.25rem;\\n  }\\n\\n  .sm\\\\:text-xl {\\n    font-size: 1.25rem;\\n    line-height: 1.75rem;\\n  }\\n}\\r\\n@media (min-width: 768px) {\\n\\n  .md\\\\:col-span-1 {\\n    grid-column: span 1 / span 1;\\n  }\\n\\n  .md\\\\:col-span-2 {\\n    grid-column: span 2 / span 2;\\n  }\\n\\n  .md\\\\:w-1\\\\/3 {\\n    width: 33.333333%;\\n  }\\n\\n  .md\\\\:grid-cols-2 {\\n    grid-template-columns: repeat(2, minmax(0, 1fr));\\n  }\\n\\n  .md\\\\:grid-cols-3 {\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n  }\\n\\n  .md\\\\:grid-cols-4 {\\n    grid-template-columns: repeat(4, minmax(0, 1fr));\\n  }\\n\\n  .md\\\\:flex-row {\\n    flex-direction: row;\\n  }\\n\\n  .md\\\\:p-8 {\\n    padding: 2rem;\\n  }\\n}\\r\\n@media (min-width: 1024px) {\\n\\n  .lg\\\\:grid-cols-3 {\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n  }\\n\\n  .lg\\\\:grid-cols-4 {\\n    grid-template-columns: repeat(4, minmax(0, 1fr));\\n  }\\n\\n  .lg\\\\:px-8 {\\n    padding-left: 2rem;\\n    padding-right: 2rem;\\n  }\\n}\\r\\n@media (min-width: 1280px) {\\n\\n  .xl\\\\:grid-cols-5 {\\n    grid-template-columns: repeat(5, minmax(0, 1fr));\\n  }\\n}\\r\\n@media print {\\n\\n  .print\\\\:hidden {\\n    display: none;\\n  }\\n\\n  .print\\\\:overflow-visible {\\n    overflow: visible;\\n  }\\n\\n  .print\\\\:border-b-2 {\\n    border-bottom-width: 2px;\\n  }\\n\\n  .print\\\\:border-gray-300 {\\n    --tw-border-opacity: 1;\\n    border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));\\n  }\\n\\n  .print\\\\:bg-white {\\n    --tw-bg-opacity: 1;\\n    background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));\\n  }\\n\\n  .print\\\\:p-8 {\\n    padding: 2rem;\\n  }\\n\\n  .print\\\\:pb-2 {\\n    padding-bottom: 0.5rem;\\n  }\\n}\\r\\n.\\\\[\\\\&\\\\:has\\\\(\\\\[role\\\\=checkbox\\\\]\\\\)\\\\]\\\\:pr-0:has([role=checkbox]) {\\n  padding-right: 0px;\\n}\\r\\n.\\\\[\\\\&\\\\>tr\\\\]\\\\:last\\\\:border-b-0:last-child>tr {\\n  border-bottom-width: 0px;\\n}\\r\\n.\\\\[\\\\&\\\\[data-state\\\\=open\\\\]\\\\>svg\\\\]\\\\:rotate-180[data-state=open]>svg {\\n  --tw-rotate: 180deg;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\r\\n.\\\\[\\\\&_tr\\\\:last-child\\\\]\\\\:border-0 tr:last-child {\\n  border-width: 0px;\\n}\\r\\n.\\\\[\\\\&_tr\\\\]\\\\:border-b tr {\\n  border-bottom-width: 1px;\\n} \", \"\",{\"version\":3,\"sources\":[\"webpack://src/styles/globals.css\"],\"names\":[],\"mappings\":\"AAAA;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd,sBAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd;AAAc;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd,sBAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd;AAAc,CAAd;;CAAc,CAAd;;;CAAc;;AAAd;;;EAAA,sBAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,mBAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,gBAAc;AAAA;;AAAd;;;;;;;;CAAc;;AAAd;;EAAA,gBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gBAAc,EAAd,MAAc;EAAd,cAAc;KAAd,WAAc,EAAd,MAAc;EAAd,+HAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,wCAAc,EAAd,MAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,yCAAc;UAAd,iCAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;EAAA,kBAAc;EAAd,oBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;EAAd,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,mBAAc;AAAA;;AAAd;;;;;CAAc;;AAAd;;;;EAAA,+GAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,cAAc;EAAd,cAAc;EAAd,kBAAc;EAAd,wBAAc;AAAA;;AAAd;EAAA,eAAc;AAAA;;AAAd;EAAA,WAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;EAAd,yBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;EAAA,oBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gCAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,uBAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,SAAc,EAAd,MAAc;EAAd,UAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,oBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;;;EAAA,0BAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,aAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,YAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,6BAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,0BAAc,EAAd,MAAc;EAAd,aAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,kBAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;;;;;;;;EAAA,SAAc;AAAA;;AAAd;EAAA,SAAc;EAAd,UAAc;AAAA;;AAAd;EAAA,UAAc;AAAA;;AAAd;;;EAAA,gBAAc;EAAd,SAAc;EAAd,UAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,UAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,eAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;;;;EAAA,cAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;EAAd,YAAc;AAAA;;AAAd,wEAAc;AAAd;EAAA,aAAc;AAAA;EAAd;IAAA,uBAAc;IAAd,4BAAc;;IAAd,iBAAc;IAAd,iCAAc;;IAAd,oBAAc;IAAd,oCAAc;;IAAd,4BAAc;IAAd,iCAAc;;IAAd,0BAAc;IAAd,yCAAc;;IAAd,sBAAc;IAAd,qCAAc;;IAAd,uBAAc;IAAd,sCAAc;;IAAd,4BAAc;IAAd,qCAAc;;IAAd,2BAAc;IAAd,0BAAc;IAAd,sBAAc;;IAAd,gBAAc;EAAA;;EAAd;IAAA,4BAAc;IAAd,yBAAc;;IAAd,sBAAc;IAAd,8BAAc;;IAAd,yBAAc;IAAd,iCAAc;;IAAd,sBAAc;IAAd,uCAAc;;IAAd,8BAAc;IAAd,mCAAc;;IAAd,0BAAc;IAAd,mCAAc;;IAAd,2BAAc;IAAd,gCAAc;;IAAd,4BAAc;IAAd,qCAAc;;IAAd,2BAAc;IAAd,0BAAc;IAAd,yBAAc;EAAA;EAAd;EAAA;AAAc;EAAd;EAAA,wCAAc;EAAd;AAAc;AACd;EAAA,WAAoB;EAApB,kBAAoB;EAApB,iBAAoB;EAApB,mBAAoB;EAApB;AAAoB;AAApB;;EAAA;IAAA;EAAoB;AAAA;AACpB;EAAA,kBAAmB;EAAnB,UAAmB;EAAnB,WAAmB;EAAnB,UAAmB;EAAnB,YAAmB;EAAnB,gBAAmB;EAAnB,sBAAmB;EAAnB,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,gBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,yBAAmB;KAAnB,sBAAmB;UAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,uBAAmB;OAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,uDAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,sDAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,uDAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,oDAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,sDAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,2DAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,+DAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,gEAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,8DAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,+DAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,4DAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,8DAAmB;EAAnB;AAAmB;AAAnB;EAAA,wBAAmB;EAAnB,kEAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,gBAAmB;EAAnB,uBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,eAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,2BAAmB;EAAnB;AAAmB;AAAnB;EAAA,2BAAmB;EAAnB;AAAmB;AAAnB;EAAA,2BAAmB;EAAnB;AAAmB;AAAnB;EAAA,2BAAmB;EAAnB;AAAmB;AAAnB;EAAA,2BAAmB;EAAnB;AAAmB;AAAnB;EAAA,2BAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,0EAAmB;EAAnB,8FAAmB;EAAnB;AAAmB;AAAnB;EAAA,gDAAmB;EAAnB,6DAAmB;EAAnB;AAAmB;AAAnB;EAAA,+EAAmB;EAAnB,mGAAmB;EAAnB;AAAmB;AAAnB;EAAA,6EAAmB;EAAnB,iGAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,8BAAmB;EAAnB;AAAmB;AAAnB;EAAA,0CAAmB;EAAnB,uDAAmB;EAAnB;AAAmB;AAAnB;EAAA,gFAAmB;EAAnB,oGAAmB;EAAnB;AAAmB;AAAnB;EAAA,8BAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,2GAAmB;EAAnB,yGAAmB;EAAnB;AAAmB;AAAnB;EAAA,2GAAmB;EAAnB,yGAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,4DAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,6BAAmB;EAAnB,+QAAmB;EAAnB;AAAmB;AAAnB;EAAA,gKAAmB;EAAnB,wJAAmB;EAAnB,iLAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA,wBAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA,+FAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA,4BAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA,+BAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA,8BAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;;EAAA;IAAA,mCAAmB;IAAnB;EAAmB;AAAA;AAAnB;;EAAA;IAAA,kCAAmB;IAAnB;EAAmB;AAAA;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;;AA2EnB,qCAAqC;AACrC;;EAEE,UAAU;EACV,SAAS;EACT;wEACsE;AACxE;;AAEA;EACE,sBAAsB;AACxB;;AAEA,sCAAsC;AACtC;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,gBAAgB;EAChB,iDAAiD;EACjD,iBAAiB;EACjB,eAAe;EACf,2BAA2B;AAC7B;AACA;EACE,6BAA6B;AAC/B;;AAEA,yBAAyB;AACzB;EACE;IACE,wBAAwB;EAC1B;EACA;IACE,yBAAyB;IACzB,0BAA0B;IAC1B,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;IACnB,oBAAoB;IACpB,yBAAyB;IACzB,2BAA2B;IAC3B,2BAA2B;IAC3B,2BAA2B;IAC3B,oBAAoB;IACpB,qBAAqB;IACrB,uBAAuB;IACvB,4BAA4B;IAC5B,2BAA2B;IAC3B,4BAA4B;IAC5B,4BAA4B;EAC9B;EACA;IACE,0BAA0B;IAC1B,kBAAkB,EAAE,mBAAmB;IACvC,2BAA2B;IAC3B,wBAAwB;EAC1B;EACA,wBAAwB,iBAAiB,EAAE;EAC3C,2BAA2B,oBAAoB,EAAE;EACjD,iBAAiB,uBAAuB,EAAE;EAC1C,mBAAmB,2BAA2B,EAAE;EAChD,mBAAmB,qCAAqC,EAAE;EAC1D,eAAe,6BAA6B,EAAE,8BAA8B,EAAE;EAC9E,eAAe,8BAA8B,EAAE,iCAAiC,EAAE;EAClF;IACE,yBAAyB;IACzB,oCAAoC;IACpC,oBAAoB;IACpB,oBAAoB;IACpB,qBAAqB;IACrB,uBAAuB;EACzB;EACA;IACE,yBAAyB;IACzB,0BAA0B;IAC1B,MAAM,EAAE,OAAO,EAAE,QAAQ;IACzB,2BAA2B;IAC3B,aAAa;IACb,YAAY;EACd;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,cAAc;IACd,yBAAyB;IACzB,8BAAkB;SAAlB,kBAAkB;IAClB,SAAS;IACT,SAAS;IACT,UAAU;IACV,YAAY;EACd;EACA;IACE,wBAAwB;IACxB,+BAAmB;SAAnB,mBAAmB;EACrB;EACA;IACE,yBAAyB;EAC3B;EACA;IACE,4BAA4B;EAC9B;AACF;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,UAAU;EACV,SAAS;EACT;wEACsE;AACxE;;AAEA;EACE,sBAAsB;AACxB;;AAEA,sCAAsC;AACtC;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,gBAAgB;EAChB,iDAAiD;EACjD,iBAAiB;EACjB,eAAe;EACf,2BAA2B;AAC7B;AACA;EACE,6BAA6B;AAC/B;;AAEA,yBAAyB;AACzB;EACE;IACE,wBAAwB;EAC1B;EACA;IACE,yBAAyB;IACzB,0BAA0B;IAC1B,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;IACnB,oBAAoB;IACpB,yBAAyB;IACzB,2BAA2B;IAC3B,2BAA2B;IAC3B,2BAA2B;IAC3B,oBAAoB;IACpB,qBAAqB;IACrB,uBAAuB;IACvB,4BAA4B;IAC5B,2BAA2B;IAC3B,4BAA4B;IAC5B,4BAA4B;EAC9B;EACA;IACE,0BAA0B;IAC1B,kBAAkB,EAAE,mBAAmB;IACvC,2BAA2B;IAC3B,wBAAwB;EAC1B;EACA,wBAAwB,iBAAiB,EAAE;EAC3C,2BAA2B,oBAAoB,EAAE;EACjD,iBAAiB,uBAAuB,EAAE;EAC1C,mBAAmB,2BAA2B,EAAE;EAChD,mBAAmB,qCAAqC,EAAE;EAC1D,eAAe,6BAA6B,EAAE,8BAA8B,EAAE;EAC9E,eAAe,8BAA8B,EAAE,iCAAiC,EAAE;EAClF;IACE,yBAAyB;IACzB,oCAAoC;IACpC,oBAAoB;IACpB,oBAAoB;IACpB,qBAAqB;IACrB,uBAAuB;EACzB;EACA;IACE,yBAAyB;IACzB,0BAA0B;IAC1B,MAAM,EAAE,OAAO,EAAE,QAAQ;IACzB,2BAA2B;IAC3B,aAAa;IACb,YAAY;EACd;EACA;IACE,6BAA6B;EAC/B;AACF;AA7QA;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,mBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,sBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,gDA6QE;EA7QF,6DA6QE;EA7QF;AA6QE;AA7QF;EAAA,+EA6QE;EA7QF,mGA6QE;EA7QF;AA6QE;AA7QF;EAAA,sBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,8BA6QE;EA7QF;AA6QE;AA7QF;EAAA,2GA6QE;EA7QF,yGA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,8BA6QE;EA7QF;AA6QE;AA7QF;EAAA,2GA6QE;EA7QF,yGA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,kBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,yBA6QE;EA7QF;AA6QE;AA7QF;EAAA,0BA6QE;EA7QF;AA6QE;AA7QF;EAAA,yBA6QE;EA7QF;AA6QE;AA7QF;EAAA,0BA6QE;EA7QF;AA6QE;AA7QF;EAAA,yBA6QE;EA7QF;AA6QE;AA7QF;EAAA,qBA6QE;EA7QF;AA6QE;AA7QF;;EAAA;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;AAAA;AA7QF;EAAA;AA6QE;AA7QF;;EAAA;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;AAAA;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,0CA6QE;EA7QF,uDA6QE;EA7QF;AA6QE;AA7QF;EAAA,qBA6QE;EA7QF,yBA6QE;EA7QF,2BA6QE;EA7QF,yBA6QE;EA7QF,0BA6QE;EA7QF,+BA6QE;EA7QF;AA6QE;AA7QF;EAAA,oBA6QE;EA7QF,yBA6QE;EA7QF,0BA6QE;EA7QF,wBA6QE;EA7QF,yBA6QE;EA7QF,8BA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;;EAAA;IAAA,gBA6QE;IA7QF;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA,qBA6QE;IA7QF;EA6QE;;EA7QF;IAAA,eA6QE;IA7QF,eA6QE;IA7QF;EA6QE;;EA7QF;IAAA,iBA6QE;IA7QF,iBA6QE;IA7QF;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA,uBA6QE;IA7QF,sDA6QE;IA7QF;EA6QE;;EA7QF;IAAA,uBA6QE;IA7QF,uDA6QE;IA7QF;EA6QE;;EA7QF;IAAA,uBA6QE;IA7QF,oDA6QE;IA7QF;EA6QE;;EA7QF;IAAA,uBA6QE;IA7QF,oDA6QE;IA7QF;EA6QE;;EA7QF;IAAA,uBA6QE;IA7QF,2DA6QE;IA7QF;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA,oBA6QE;IA7QF;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA,kBA6QE;IA7QF;EA6QE;;EA7QF;IAAA,eA6QE;IA7QF;EA6QE;;EA7QF;IAAA,eA6QE;IA7QF;EA6QE;;EA7QF;IAAA,mBA6QE;IA7QF;EA6QE;;EA7QF;IAAA,mBA6QE;IA7QF;EA6QE;;EA7QF;IAAA,kBA6QE;IA7QF;EA6QE;AAAA;AA7QF;;EAAA;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;AAAA;AA7QF;;EAAA;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA,kBA6QE;IA7QF;EA6QE;AAAA;AA7QF;;EAAA;IAAA;EA6QE;AAAA;AA7QF;;EAAA;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA,sBA6QE;IA7QF;EA6QE;;EA7QF;IAAA,kBA6QE;IA7QF;EA6QE;;EA7QF;IAAA;EA6QE;;EA7QF;IAAA;EA6QE;AAAA;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA,mBA6QE;EA7QF;AA6QE;AA7QF;EAAA;AA6QE;AA7QF;EAAA;AA6QE\",\"sourcesContent\":[\"@tailwind base;\\r\\n@tailwind components;\\r\\n@tailwind utilities;\\r\\n\\r\\n@layer base {\\r\\n  :root {\\r\\n    --background: 0 0% 100%;\\r\\n    --foreground: 222.2 84% 4.9%;\\r\\n\\r\\n    --card: 0 0% 100%;\\r\\n    --card-foreground: 222.2 84% 4.9%;\\r\\n \\r\\n    --popover: 0 0% 100%;\\r\\n    --popover-foreground: 222.2 84% 4.9%;\\r\\n \\r\\n    --primary: 222.2 47.4% 11.2%;\\r\\n    --primary-foreground: 210 40% 98%;\\r\\n \\r\\n    --secondary: 210 40% 96.1%;\\r\\n    --secondary-foreground: 222.2 47.4% 11.2%;\\r\\n \\r\\n    --muted: 210 40% 96.1%;\\r\\n    --muted-foreground: 215.4 16.3% 46.9%;\\r\\n \\r\\n    --accent: 210 40% 96.1%;\\r\\n    --accent-foreground: 222.2 47.4% 11.2%;\\r\\n \\r\\n    --destructive: 0 84.2% 60.2%;\\r\\n    --destructive-foreground: 210 40% 98%;\\r\\n\\r\\n    --border: 214.3 31.8% 91.4%;\\r\\n    --input: 214.3 31.8% 91.4%;\\r\\n    --ring: 222.2 84% 4.9%;\\r\\n \\r\\n    --radius: 0.5rem;\\r\\n  }\\r\\n \\r\\n  .dark {\\r\\n    --background: 222.2 84% 4.9%;\\r\\n    --foreground: 210 40% 98%;\\r\\n \\r\\n    --card: 222.2 84% 4.9%;\\r\\n    --card-foreground: 210 40% 98%;\\r\\n \\r\\n    --popover: 222.2 84% 4.9%;\\r\\n    --popover-foreground: 210 40% 98%;\\r\\n \\r\\n    --primary: 210 40% 98%;\\r\\n    --primary-foreground: 222.2 47.4% 11.2%;\\r\\n \\r\\n    --secondary: 217.2 32.6% 17.5%;\\r\\n    --secondary-foreground: 210 40% 98%;\\r\\n \\r\\n    --muted: 217.2 32.6% 17.5%;\\r\\n    --muted-foreground: 215 20.2% 65.1%;\\r\\n \\r\\n    --accent: 217.2 32.6% 17.5%;\\r\\n    --accent-foreground: 210 40% 98%;\\r\\n \\r\\n    --destructive: 0 62.8% 30.6%;\\r\\n    --destructive-foreground: 210 40% 98%;\\r\\n \\r\\n    --border: 217.2 32.6% 17.5%;\\r\\n    --input: 217.2 32.6% 17.5%;\\r\\n    --ring: 212.7 26.8% 83.9%;\\r\\n  }\\r\\n}\\r\\n \\r\\n@layer base {\\r\\n  * {\\r\\n    @apply border-border;\\r\\n  }\\r\\n  body {\\r\\n    @apply bg-background text-foreground;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* Custom styles can be added below */\\r\\nhtml,\\r\\nbody {\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\r\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\r\\n}\\r\\n\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n/* Inputs e selects com sombra suave */\\r\\ninput, textarea, select {\\r\\n  border: none;\\r\\n  outline: none;\\r\\n  border-radius: 6px;\\r\\n  background: #fff;\\r\\n  box-shadow: 0 2px 8px 0 rgba(180, 180, 180, 0.15);\\r\\n  padding: 8px 12px;\\r\\n  font-size: 1rem;\\r\\n  transition: box-shadow 0.2s;\\r\\n}\\r\\ninput:focus, textarea:focus, select:focus {\\r\\n  box-shadow: 0 0 0 2px #b3b3b3;\\r\\n}\\r\\n\\r\\n/* Estilos de impressão */\\r\\n@media print {\\r\\n  header, .shadow, .rounded-lg, .rounded-xl, .bg-gray-100, .bg-white:not(#modal-ver-pedido), main {\\r\\n    display: none !important;\\r\\n  }\\r\\n  #modal-ver-pedido {\\r\\n    display: block !important;\\r\\n    position: fixed !important;\\r\\n    top: 0 !important;\\r\\n    left: 0 !important;\\r\\n    right: 0 !important;\\r\\n    bottom: 0 !important;\\r\\n    z-index: 99999 !important;\\r\\n    box-shadow: none !important;\\r\\n    border-radius: 0 !important;\\r\\n    background: #fff !important;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n    width: 100vw !important;\\r\\n    min-height: 100vh !important;\\r\\n    max-width: 100vw !important;\\r\\n    max-height: 100vh !important;\\r\\n    overflow: visible !important;\\r\\n  }\\r\\n  header, footer, .print\\\\:fixed {\\r\\n    position: fixed !important;\\r\\n    left: 0 !important; right: 0 !important;\\r\\n    background: #fff !important;\\r\\n    z-index: 9999 !important;\\r\\n  }\\r\\n  header, .print\\\\:top-0 { top: 0 !important; }\\r\\n  footer, .print\\\\:bottom-0 { bottom: 0 !important; }\\r\\n  .print\\\\:w-full { width: 100vw !important; }\\r\\n  .print\\\\:bg-white { background: #fff !important; }\\r\\n  .print\\\\:border-t { border-top: 1px solid #ccc !important; }\\r\\n  .print\\\\:px-8 { padding-left: 2rem !important; padding-right: 2rem !important; }\\r\\n  .print\\\\:py-2 { padding-top: 0.5rem !important; padding-bottom: 0.5rem !important; }\\r\\n  .print-page-break {\\r\\n    display: block !important;\\r\\n    page-break-before: always !important;\\r\\n    height: 0 !important;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n    border: none !important;\\r\\n  }\\r\\n  .modal-print-header {\\r\\n    display: block !important;\\r\\n    position: fixed !important;\\r\\n    top: 0; left: 0; right: 0;\\r\\n    background: #fff !important;\\r\\n    z-index: 1000;\\r\\n    width: 100vw;\\r\\n  }\\r\\n  #modal-ver-pedido > .overflow-y-auto, #modal-ver-pedido > div.overflow-y-auto {\\r\\n    padding-top: 120px !important;\\r\\n  }\\r\\n  .pdf-page-break {\\r\\n    display: block;\\r\\n    page-break-before: always;\\r\\n    break-before: page;\\r\\n    height: 0;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    border: none;\\r\\n  }\\r\\n  .pdf-section {\\r\\n    page-break-inside: avoid;\\r\\n    break-inside: avoid;\\r\\n  }\\r\\n  .pdf-header, .pdf-footer {\\r\\n    display: block !important;\\r\\n  }\\r\\n  .pdf-text {\\r\\n    font-size: 0.85em !important;\\r\\n  }\\r\\n}\\r\\n\\r\\n.pdf-header, .pdf-footer {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\r\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\r\\n}\\r\\n\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n/* Inputs e selects com sombra suave */\\r\\ninput, textarea, select {\\r\\n  border: none;\\r\\n  outline: none;\\r\\n  border-radius: 6px;\\r\\n  background: #fff;\\r\\n  box-shadow: 0 2px 8px 0 rgba(180, 180, 180, 0.15);\\r\\n  padding: 8px 12px;\\r\\n  font-size: 1rem;\\r\\n  transition: box-shadow 0.2s;\\r\\n}\\r\\ninput:focus, textarea:focus, select:focus {\\r\\n  box-shadow: 0 0 0 2px #b3b3b3;\\r\\n}\\r\\n\\r\\n/* Estilos de impressão */\\r\\n@media print {\\r\\n  header, .shadow, .rounded-lg, .rounded-xl, .bg-gray-100, .bg-white:not(#modal-ver-pedido), main {\\r\\n    display: none !important;\\r\\n  }\\r\\n  #modal-ver-pedido {\\r\\n    display: block !important;\\r\\n    position: fixed !important;\\r\\n    top: 0 !important;\\r\\n    left: 0 !important;\\r\\n    right: 0 !important;\\r\\n    bottom: 0 !important;\\r\\n    z-index: 99999 !important;\\r\\n    box-shadow: none !important;\\r\\n    border-radius: 0 !important;\\r\\n    background: #fff !important;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n    width: 100vw !important;\\r\\n    min-height: 100vh !important;\\r\\n    max-width: 100vw !important;\\r\\n    max-height: 100vh !important;\\r\\n    overflow: visible !important;\\r\\n  }\\r\\n  header, footer, .print\\\\:fixed {\\r\\n    position: fixed !important;\\r\\n    left: 0 !important; right: 0 !important;\\r\\n    background: #fff !important;\\r\\n    z-index: 9999 !important;\\r\\n  }\\r\\n  header, .print\\\\:top-0 { top: 0 !important; }\\r\\n  footer, .print\\\\:bottom-0 { bottom: 0 !important; }\\r\\n  .print\\\\:w-full { width: 100vw !important; }\\r\\n  .print\\\\:bg-white { background: #fff !important; }\\r\\n  .print\\\\:border-t { border-top: 1px solid #ccc !important; }\\r\\n  .print\\\\:px-8 { padding-left: 2rem !important; padding-right: 2rem !important; }\\r\\n  .print\\\\:py-2 { padding-top: 0.5rem !important; padding-bottom: 0.5rem !important; }\\r\\n  .print-page-break {\\r\\n    display: block !important;\\r\\n    page-break-before: always !important;\\r\\n    height: 0 !important;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n    border: none !important;\\r\\n  }\\r\\n  .modal-print-header {\\r\\n    display: block !important;\\r\\n    position: fixed !important;\\r\\n    top: 0; left: 0; right: 0;\\r\\n    background: #fff !important;\\r\\n    z-index: 1000;\\r\\n    width: 100vw;\\r\\n  }\\r\\n  #modal-ver-pedido > .overflow-y-auto, #modal-ver-pedido > div.overflow-y-auto {\\r\\n    padding-top: 120px !important;\\r\\n  }\\r\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[2]!./src/styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./src/pages/_app.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxxREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./node_modules/react-toastify/dist/ReactToastify.css":
/*!************************************************************!*\
  !*** ./node_modules/react-toastify/dist/ReactToastify.css ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[1]!../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[2]!./ReactToastify.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[2]!./node_modules/react-toastify/dist/ReactToastify.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[1]!../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[2]!./ReactToastify.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[2]!./node_modules/react-toastify/dist/ReactToastify.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[1]!../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[2]!./ReactToastify.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[11].use[2]!./node_modules/react-toastify/dist/ReactToastify.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtdG9hc3RpZnkvZGlzdC9SZWFjdFRvYXN0aWZ5LmNzcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsME1BQThGO0FBQ2hILDBCQUEwQixtQkFBTyxDQUFDLDZmQUFtTzs7QUFFclE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLDZmQUFtTztBQUN6TztBQUNBLGtCQUFrQixtQkFBTyxDQUFDLDZmQUFtTzs7QUFFN1A7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFVBQVU7O0FBRTFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxVQUFVO0FBQ1o7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXRvYXN0aWZ5L2Rpc3QvUmVhY3RUb2FzdGlmeS5jc3M/NDc1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzExXS51c2VbMV0hLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTFdLnVzZVsyXSEuL1JlYWN0VG9hc3RpZnkuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBCeSBkZWZhdWx0LCBzdHlsZS1sb2FkZXIgaW5qZWN0cyBDU1MgaW50byB0aGUgYm90dG9tXG4gICAgICAgICAgICAgICAgICAgIC8vIG9mIDxoZWFkPi4gVGhpcyBjYXVzZXMgb3JkZXJpbmcgcHJvYmxlbXMgYmV0d2VlbiBkZXZcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIHByb2QuIFRvIGZpeCB0aGlzLCB3ZSByZW5kZXIgYSA8bm9zY3JpcHQ+IHRhZyBhc1xuICAgICAgICAgICAgICAgICAgICAvLyBhbiBhbmNob3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgcGxhY2VkIGJlZm9yZS4gVGhlc2VcbiAgICAgICAgICAgICAgICAgICAgLy8gc3R5bGVzIHdpbGwgYmUgYXBwbGllZCBfYmVmb3JlXyA8c3R5bGUganN4IGdsb2JhbD4uXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNfX25leHRfY3NzX19ET19OT1RfVVNFX19cIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgICAgICAgICAgLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAgICAgLy8gbmVlZCB0byB0cmFjayB0aGUgbGFzdCBpbnNlcnRlZCBlbGVtZW50LlxuICAgICAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LCBhbmNob3JFbGVtZW50KTtcbiAgICAgICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFbcF0gIT09IGJbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IocCBpbiBiKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYVtwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzExXS51c2VbMV0hLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTFdLnVzZVsyXSEuL1JlYWN0VG9hc3RpZnkuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzExXS51c2VbMV0hLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTFdLnVzZVsyXSEuL1JlYWN0VG9hc3RpZnkuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-toastify/dist/ReactToastify.css\n"));

/***/ }),

/***/ "./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[2]!./src/styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[2]!./src/styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[13].use[2]!./src/styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx1TkFBMkc7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMscWZBQXVQOztBQUV6Ujs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0scWZBQXVQO0FBQzdQO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMscWZBQXVQOztBQUVqUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzP2RiNTAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzEzXS51c2VbMV0hLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzEzXS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQnkgZGVmYXVsdCwgc3R5bGUtbG9hZGVyIGluamVjdHMgQ1NTIGludG8gdGhlIGJvdHRvbVxuICAgICAgICAgICAgICAgICAgICAvLyBvZiA8aGVhZD4uIFRoaXMgY2F1c2VzIG9yZGVyaW5nIHByb2JsZW1zIGJldHdlZW4gZGV2XG4gICAgICAgICAgICAgICAgICAgIC8vIGFuZCBwcm9kLiBUbyBmaXggdGhpcywgd2UgcmVuZGVyIGEgPG5vc2NyaXB0PiB0YWcgYXNcbiAgICAgICAgICAgICAgICAgICAgLy8gYW4gYW5jaG9yIGZvciB0aGUgc3R5bGVzIHRvIGJlIHBsYWNlZCBiZWZvcmUuIFRoZXNlXG4gICAgICAgICAgICAgICAgICAgIC8vIHN0eWxlcyB3aWxsIGJlIGFwcGxpZWQgX2JlZm9yZV8gPHN0eWxlIGpzeCBnbG9iYWw+LlxuICAgICAgICAgICAgICAgICAgICAvLyBUaGVzZSBlbGVtZW50cyBzaG91bGQgYWx3YXlzIGV4aXN0LiBJZiB0aGV5IGRvIG5vdCxcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgICAgICB2YXIgYW5jaG9yRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fXCIpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IGFuY2hvckVsZW1lbnQucGFyZW50Tm9kZS8vIE5vcm1hbGx5IDxoZWFkPlxuICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgICAgICAvLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICAgIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgcDtcbiAgICBmb3IocCBpbiBhKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG4gICAgdmFyIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTNdLnVzZVsxXSEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTNdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxM10udXNlWzFdIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxM10udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsd0JBQXdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGlCQUFpQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLEtBQXdDLEdBQUcsc0JBQWlCLEdBQUcsQ0FBSTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxxRUFBcUUsZ0JBQWdCO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNEJBQTRCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNEJBQTRCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzPzI2ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBpc09sZElFID0gZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgICBsZXQgbWVtbztcbiAgICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgICAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgICAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgICAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICAgICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgfTtcbn0oKTtcbmNvbnN0IGdldFRhcmdldEVsZW1lbnQgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBtZW1vID0ge307XG4gICAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKHRhcmdldCkge1xuICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgbGV0IHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICAgICAgICAgICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICAgICAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgICAgICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICAgICAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gICAgfTtcbn0oKTtcbmNvbnN0IHN0eWxlc0luRG9tID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gICAgbGV0IHJlc3VsdCA9IC0xO1xuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKyl7XG4gICAgICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICAgICAgICByZXN1bHQgPSBpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgaWRDb3VudE1hcCA9IHt9O1xuICAgIGNvbnN0IGlkZW50aWZpZXJzID0gW107XG4gICAgZm9yKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspe1xuICAgICAgICBjb25zdCBpdGVtID0gbGlzdFtpXTtcbiAgICAgICAgY29uc3QgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICAgICAgY29uc3QgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgICAgICBjb25zdCBpZGVudGlmaWVyID0gaWQgKyBcIiBcIiArIGNvdW50LnRvU3RyaW5nKCk7XG4gICAgICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgICAgICBjb25zdCBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgICBjb25zdCBvYmogPSB7XG4gICAgICAgICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICAgICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgICAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgICAgICB9O1xuICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICAgICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgICAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgICB9XG4gICAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgICBjb25zdCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgICBjb25zdCBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuICAgIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBjb25zdCBub25jZSA9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgICAgICB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gICAgICAgIGlmIChub25jZSkge1xuICAgICAgICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gICAgfSk7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBnZXRUYXJnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0IHx8IFwiaGVhZFwiKTtcbiAgICAgICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0eWxlO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gICAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gICAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqLyBjb25zdCByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uIHJlcGxhY2VUZXh0KCkge1xuICAgIGNvbnN0IHRleHRTdG9yZSA9IFtdO1xuICAgIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgICAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCJcXG5cIik7XG4gICAgfTtcbn0oKTtcbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICAgIGNvbnN0IGNzcyA9IHJlbW92ZSA/IFwiXCIgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIiArIG9iai5tZWRpYSArIFwiIHtcIiArIG9iai5jc3MgKyBcIn1cIiA6IG9iai5jc3M7XG4gICAgLy8gRm9yIG9sZCBJRVxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi8gaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICAgICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG4gICAgICAgIGNvbnN0IGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuICAgICAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgICAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIF9vcHRpb25zLCBvYmopIHtcbiAgICBsZXQgY3NzID0gb2JqLmNzcztcbiAgICBjb25zdCBtZWRpYSA9IG9iai5tZWRpYTtcbiAgICBjb25zdCBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICAgIGlmIChtZWRpYSkge1xuICAgICAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKFwibWVkaWFcIik7XG4gICAgfVxuICAgIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuICAgIH1cbiAgICAvLyBGb3Igb2xkIElFXG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqLyBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgICAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgd2hpbGUoc3R5bGUuZmlyc3RDaGlsZCl7XG4gICAgICAgICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICAgICAgfVxuICAgICAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgICB9XG59XG5sZXQgc2luZ2xldG9uID0gbnVsbDtcbmxldCBzaW5nbGV0b25Db3VudGVyID0gMDtcbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICAgIGxldCBzdHlsZTtcbiAgICBsZXQgdXBkYXRlO1xuICAgIGxldCByZW1vdmU7XG4gICAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgICAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcbiAgICAgICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICAgICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcbiAgICAgICAgcmVtb3ZlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICB1cGRhdGUob2JqKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgICAgIGlmIChuZXdPYmopIHtcbiAgICAgICAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAgIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcbiAgICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIHtcbiAgICAgICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gICAgfVxuICAgIGxpc3QgPSBsaXN0IHx8IFtdO1xuICAgIGxldCBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSBcIltvYmplY3QgQXJyYXldXCIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgIGNvbnN0IGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgY29uc3QgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICAgICAgICBpZiAoc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgICAgICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcigpO1xuICAgICAgICAgICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICAgIH07XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./src/config/authConfig.js":
/*!**********************************!*\
  !*** ./src/config/authConfig.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loginRequest: function() { return /* binding */ loginRequest; },\n/* harmony export */   msalConfig: function() { return /* binding */ msalConfig; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n// Temporary debugging logs\nconsole.log(\"DEBUG: Client ID:\", \"2d448115-1dbc-4b58-829a-f93fd908ed2a\");\nconsole.log(\"DEBUG: Authority:\", \"https://login.microsoftonline.com/3e0e31b7-7b38-4f10-b5a8-ad53b3dac25f\");\nconsole.log(\"DEBUG: Redirect URI:\", \"http://localhost:3000/landing\");\nconst msalConfig = {\n    auth: {\n        clientId: \"2d448115-1dbc-4b58-829a-f93fd908ed2a\",\n        authority: \"https://login.microsoftonline.com/3e0e31b7-7b38-4f10-b5a8-ad53b3dac25f\",\n        redirectUri: \"http://localhost:3000/landing\" || 0,\n        postLogoutRedirectUri: process.env.NEXT_PUBLIC_POST_LOGOUT_REDIRECT_URI || \"/\",\n        navigateToLoginRequestUrl: true\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\",\n        storeAuthStateInCookie: false\n    },\n    system: {\n        loggerOptions: {\n            loggerCallback: (level, message, containsPii)=>{\n                if (containsPii) {\n                    return;\n                }\n                switch(level){\n                    case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Error:\n                        console.error(message);\n                        return;\n                    case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Info:\n                        return;\n                    case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Verbose:\n                        return;\n                    case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Warning:\n                        console.warn(message);\n                        return;\n                    default:\n                        return;\n                }\n            }\n        }\n    }\n};\nconst loginRequest = {\n    scopes: [\n        \"User.Read\"\n    ]\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uZmlnL2F1dGhDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQztBQUUvQywyQkFBMkI7QUFDM0JDLFFBQVFDLEdBQUcsQ0FBQyxxQkFBcUJDLHNDQUF1QztBQUN4RUYsUUFBUUMsR0FBRyxDQUFDLHFCQUFxQkMsd0VBQXVDO0FBQ3hFRixRQUFRQyxHQUFHLENBQUMsd0JBQXdCQywrQkFBb0M7QUFFakUsTUFBTUssYUFBYTtJQUN0QkMsTUFBTTtRQUNGQyxVQUFVUCxzQ0FBdUM7UUFDakRRLFdBQVdSLHdFQUF1QztRQUNsRFMsYUFBYVQsK0JBQW9DLElBQUksQ0FBK0I7UUFDcEZVLHVCQUF1QlYsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDVSxvQ0FBb0MsSUFBSTtRQUMzRUMsMkJBQTJCO0lBQy9CO0lBQ0FDLE9BQU87UUFDSEMsZUFBZTtRQUNmQyx3QkFBd0I7SUFDNUI7SUFDQUMsUUFBUTtRQUNKQyxlQUFlO1lBQ1hDLGdCQUFnQixDQUFDQyxPQUFPQyxTQUFTQztnQkFDN0IsSUFBSUEsYUFBYTtvQkFDYjtnQkFDSjtnQkFDQSxPQUFRRjtvQkFDSixLQUFLdEIseURBQVFBLENBQUN5QixLQUFLO3dCQUNmeEIsUUFBUXlCLEtBQUssQ0FBQ0g7d0JBQ2Q7b0JBQ0osS0FBS3ZCLHlEQUFRQSxDQUFDMkIsSUFBSTt3QkFDZDtvQkFDSixLQUFLM0IseURBQVFBLENBQUM0QixPQUFPO3dCQUNqQjtvQkFDSixLQUFLNUIseURBQVFBLENBQUM2QixPQUFPO3dCQUNqQjVCLFFBQVE2QixJQUFJLENBQUNQO3dCQUNiO29CQUNKO3dCQUNJO2dCQUNSO1lBQ0o7UUFDSjtJQUNKO0FBQ0osRUFBRTtBQUVLLE1BQU1RLGVBQWU7SUFDeEJDLFFBQVE7UUFBQztLQUFZO0FBQ3pCLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbmZpZy9hdXRoQ29uZmlnLmpzP2U5MzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9nTGV2ZWwgfSBmcm9tIFwiQGF6dXJlL21zYWwtYnJvd3NlclwiO1xyXG5cclxuLy8gVGVtcG9yYXJ5IGRlYnVnZ2luZyBsb2dzXHJcbmNvbnNvbGUubG9nKFwiREVCVUc6IENsaWVudCBJRDpcIiwgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVpVUkVfQ0xJRU5UX0lEKTtcclxuY29uc29sZS5sb2coXCJERUJVRzogQXV0aG9yaXR5OlwiLCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BWlVSRV9BVVRIT1JJVFkpO1xyXG5jb25zb2xlLmxvZyhcIkRFQlVHOiBSZWRpcmVjdCBVUkk6XCIsIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1JFRElSRUNUX1VSSSk7XHJcblxyXG5leHBvcnQgY29uc3QgbXNhbENvbmZpZyA9IHtcclxuICAgIGF1dGg6IHtcclxuICAgICAgICBjbGllbnRJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVpVUkVfQ0xJRU5UX0lELFxyXG4gICAgICAgIGF1dGhvcml0eTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVpVUkVfQVVUSE9SSVRZLFxyXG4gICAgICAgIHJlZGlyZWN0VXJpOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19SRURJUkVDVF9VUkkgfHwgXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvbGFuZGluZ1wiLFxyXG4gICAgICAgIHBvc3RMb2dvdXRSZWRpcmVjdFVyaTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUE9TVF9MT0dPVVRfUkVESVJFQ1RfVVJJIHx8IFwiL1wiLFxyXG4gICAgICAgIG5hdmlnYXRlVG9Mb2dpblJlcXVlc3RVcmw6IHRydWUsXHJcbiAgICB9LFxyXG4gICAgY2FjaGU6IHtcclxuICAgICAgICBjYWNoZUxvY2F0aW9uOiBcInNlc3Npb25TdG9yYWdlXCIsXHJcbiAgICAgICAgc3RvcmVBdXRoU3RhdGVJbkNvb2tpZTogZmFsc2UsXHJcbiAgICB9LFxyXG4gICAgc3lzdGVtOiB7XHJcbiAgICAgICAgbG9nZ2VyT3B0aW9uczoge1xyXG4gICAgICAgICAgICBsb2dnZXJDYWxsYmFjazogKGxldmVsLCBtZXNzYWdlLCBjb250YWluc1BpaSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbnRhaW5zUGlpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChsZXZlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgTG9nTGV2ZWwuRXJyb3I6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIExvZ0xldmVsLkluZm86XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIExvZ0xldmVsLlZlcmJvc2U6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIExvZ0xldmVsLldhcm5pbmc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBsb2dpblJlcXVlc3QgPSB7XHJcbiAgICBzY29wZXM6IFtcIlVzZXIuUmVhZFwiXVxyXG59OyAiXSwibmFtZXMiOlsiTG9nTGV2ZWwiLCJjb25zb2xlIiwibG9nIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FaVVJFX0NMSUVOVF9JRCIsIk5FWFRfUFVCTElDX0FaVVJFX0FVVEhPUklUWSIsIk5FWFRfUFVCTElDX1JFRElSRUNUX1VSSSIsIm1zYWxDb25maWciLCJhdXRoIiwiY2xpZW50SWQiLCJhdXRob3JpdHkiLCJyZWRpcmVjdFVyaSIsInBvc3RMb2dvdXRSZWRpcmVjdFVyaSIsIk5FWFRfUFVCTElDX1BPU1RfTE9HT1VUX1JFRElSRUNUX1VSSSIsIm5hdmlnYXRlVG9Mb2dpblJlcXVlc3RVcmwiLCJjYWNoZSIsImNhY2hlTG9jYXRpb24iLCJzdG9yZUF1dGhTdGF0ZUluQ29va2llIiwic3lzdGVtIiwibG9nZ2VyT3B0aW9ucyIsImxvZ2dlckNhbGxiYWNrIiwibGV2ZWwiLCJtZXNzYWdlIiwiY29udGFpbnNQaWkiLCJFcnJvciIsImVycm9yIiwiSW5mbyIsIlZlcmJvc2UiLCJXYXJuaW5nIiwid2FybiIsImxvZ2luUmVxdWVzdCIsInNjb3BlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/config/authConfig.js\n"));

/***/ }),

/***/ "./src/context/FuncionarioContext.js":
/*!*******************************************!*\
  !*** ./src/context/FuncionarioContext.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FuncionarioProvider: function() { return /* binding */ FuncionarioProvider; },\n/* harmony export */   useFuncionario: function() { return /* binding */ useFuncionario; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst FuncionarioContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction FuncionarioProvider(param) {\n    let { children } = param;\n    _s();\n    const [funcionarioSelecionado, setFuncionarioSelecionado] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FuncionarioContext.Provider, {\n        value: {\n            funcionarioSelecionado,\n            setFuncionarioSelecionado\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Cursor\\\\rh\\\\src\\\\context\\\\FuncionarioContext.js\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, this);\n}\n_s(FuncionarioProvider, \"yb2K1GOyqx56bKBqQxOMjWr7YVs=\");\n_c = FuncionarioProvider;\nfunction useFuncionario() {\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(FuncionarioContext);\n}\n_s1(useFuncionario, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FuncionarioProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dC9GdW5jaW9uYXJpb0NvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBNEQ7QUFFNUQsTUFBTUcsbUNBQXFCSCxvREFBYUE7QUFFakMsU0FBU0ksb0JBQW9CLEtBQVk7UUFBWixFQUFFQyxRQUFRLEVBQUUsR0FBWjs7SUFDbEMsTUFBTSxDQUFDQyx3QkFBd0JDLDBCQUEwQixHQUFHTCwrQ0FBUUEsQ0FBQztJQUNyRSxxQkFDRSw4REFBQ0MsbUJBQW1CSyxRQUFRO1FBQUNDLE9BQU87WUFBRUg7WUFBd0JDO1FBQTBCO2tCQUNyRkY7Ozs7OztBQUdQO0dBUGdCRDtLQUFBQTtBQVNULFNBQVNNOztJQUNkLE9BQU9ULGlEQUFVQSxDQUFDRTtBQUNwQjtJQUZnQk8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbnRleHQvRnVuY2lvbmFyaW9Db250ZXh0LmpzPzBjMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmNvbnN0IEZ1bmNpb25hcmlvQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBGdW5jaW9uYXJpb1Byb3ZpZGVyKHsgY2hpbGRyZW4gfSkge1xyXG4gIGNvbnN0IFtmdW5jaW9uYXJpb1NlbGVjaW9uYWRvLCBzZXRGdW5jaW9uYXJpb1NlbGVjaW9uYWRvXSA9IHVzZVN0YXRlKG51bGwpO1xyXG4gIHJldHVybiAoXHJcbiAgICA8RnVuY2lvbmFyaW9Db250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IGZ1bmNpb25hcmlvU2VsZWNpb25hZG8sIHNldEZ1bmNpb25hcmlvU2VsZWNpb25hZG8gfX0+XHJcbiAgICAgIHtjaGlsZHJlbn1cclxuICAgIDwvRnVuY2lvbmFyaW9Db250ZXh0LlByb3ZpZGVyPlxyXG4gICk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VGdW5jaW9uYXJpbygpIHtcclxuICByZXR1cm4gdXNlQ29udGV4dChGdW5jaW9uYXJpb0NvbnRleHQpO1xyXG59ICJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVN0YXRlIiwiRnVuY2lvbmFyaW9Db250ZXh0IiwiRnVuY2lvbmFyaW9Qcm92aWRlciIsImNoaWxkcmVuIiwiZnVuY2lvbmFyaW9TZWxlY2lvbmFkbyIsInNldEZ1bmNpb25hcmlvU2VsZWNpb25hZG8iLCJQcm92aWRlciIsInZhbHVlIiwidXNlRnVuY2lvbmFyaW8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/context/FuncionarioContext.js\n"));

/***/ }),

/***/ "./src/contexts/SelectedEmployeeContext.tsx":
/*!**************************************************!*\
  !*** ./src/contexts/SelectedEmployeeContext.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SelectedEmployeeProvider: function() { return /* binding */ SelectedEmployeeProvider; },\n/* harmony export */   useSelectedEmployee: function() { return /* binding */ useSelectedEmployee; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _azure_msal_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-react */ \"./node_modules/@azure/msal-react/dist/index.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst SelectedEmployeeContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst SelectedEmployeeProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const { instance, accounts, inProgress } = (0,_azure_msal_react__WEBPACK_IMPORTED_MODULE_2__.useMsal)(); // From @azure/msal-react\n    // Log MSAL state changes from useMsal() directly in the provider\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"[SelectedEmployeeContext] MSAL state from useMsal():\", {\n            instanceReady: !!instance,\n            accountsLength: accounts === null || accounts === void 0 ? void 0 : accounts.length,\n            inProgressStatus: inProgress\n        });\n    }, [\n        instance,\n        accounts,\n        inProgress\n    ]);\n    const [selectedEmployeeId, setSelectedEmployeeIdState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [systemUserId, setSystemUserIdState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [employeeProfileName, setEmployeeProfileNameState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isManagerRole, setIsManagerRoleState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Persistência em localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const storedEmployeeId = localStorage.getItem(\"selectedEmployeeId\");\n        if (storedEmployeeId && !selectedEmployeeId) {\n            setSelectedEmployeeIdState(storedEmployeeId);\n        }\n    }, []);\n    // Wrapper functions to potentially add logging or other side effects if needed later\n    const setSelectedEmployeeId = (employeeId)=>{\n        console.log(\"[SelectedEmployeeContext] setSelectedEmployeeId called with:\", employeeId);\n        setSelectedEmployeeIdState(employeeId);\n        if (employeeId) {\n            localStorage.setItem(\"selectedEmployeeId\", employeeId);\n        } else {\n            localStorage.removeItem(\"selectedEmployeeId\");\n        }\n    };\n    const setSystemUserId = (userId)=>{\n        console.log(\"[SelectedEmployeeContext] setSystemUserId called with:\", userId);\n        setSystemUserIdState(userId);\n    // console.log(\"System User ID set to:\", userId);\n    };\n    const setEmployeeProfileName = (name)=>{\n        console.log(\"[SelectedEmployeeContext] setEmployeeProfileName called with:\", name);\n        setEmployeeProfileNameState(name);\n    // console.log(\"Employee Profile Name set to:\", name);\n    };\n    const setIsManagerRole = (isManager)=>{\n        console.log(\"[SelectedEmployeeContext] setIsManagerRole called with:\", isManager);\n        setIsManagerRoleState(isManager);\n    // console.log(\"Is Manager Role set to:\", isManager);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SelectedEmployeeContext.Provider, {\n        value: {\n            selectedEmployeeId,\n            setSelectedEmployeeId,\n            systemUserId,\n            setSystemUserId,\n            employeeProfileName,\n            setEmployeeProfileName,\n            isManagerRole,\n            setIsManagerRole,\n            msalInstance: instance,\n            accounts: accounts,\n            inProgress: inProgress // Pass inProgress through\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Cursor\\\\rh\\\\src\\\\contexts\\\\SelectedEmployeeContext.tsx\",\n        lineNumber: 80,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SelectedEmployeeProvider, \"NtZ67ZntJ+zm28/jhX/mmS3iDvU=\", false, function() {\n    return [\n        _azure_msal_react__WEBPACK_IMPORTED_MODULE_2__.useMsal\n    ];\n});\n_c = SelectedEmployeeProvider;\nconst useSelectedEmployee = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SelectedEmployeeContext);\n    if (context === undefined) {\n        throw new Error(\"useSelectedEmployee must be used within a SelectedEmployeeProvider\");\n    }\n    // No need to call useMsal() here again, as values are passed from provider\n    // const { instance, accounts, inProgress } = useMsal(); \n    return {\n        selectedEmployeeId: context.selectedEmployeeId,\n        setSelectedEmployeeId: context.setSelectedEmployeeId,\n        systemUserId: context.systemUserId,\n        setSystemUserId: context.setSystemUserId,\n        employeeProfileName: context.employeeProfileName,\n        setEmployeeProfileName: context.setEmployeeProfileName,\n        isManagerRole: context.isManagerRole,\n        setIsManagerRole: context.setIsManagerRole,\n        msalInstance: context.msalInstance,\n        accounts: context.accounts,\n        inProgress: context.inProgress // Get from context\n    };\n};\n_s1(useSelectedEmployee, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SelectedEmployeeProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dHMvU2VsZWN0ZWRFbXBsb3llZUNvbnRleHQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE0RztBQUNoRTtBQXFCNUMsTUFBTU0sd0NBQTBCTCxvREFBYUEsQ0FBMENNO0FBRWhGLE1BQU1DLDJCQUE0RDtRQUFDLEVBQUVDLFFBQVEsRUFBRTs7SUFDcEYsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsVUFBVSxFQUFFLEdBQUdQLDBEQUFPQSxJQUFJLHlCQUF5QjtJQUUvRSxpRUFBaUU7SUFDakVELGdEQUFTQSxDQUFDO1FBQ1JTLFFBQVFDLEdBQUcsQ0FBQyx3REFBd0Q7WUFDbEVDLGVBQWUsQ0FBQyxDQUFDTDtZQUNqQk0sY0FBYyxFQUFFTCxxQkFBQUEsK0JBQUFBLFNBQVVNLE1BQU07WUFDaENDLGtCQUFrQk47UUFDcEI7SUFDRixHQUFHO1FBQUNGO1FBQVVDO1FBQVVDO0tBQVc7SUFFbkMsTUFBTSxDQUFDTyxvQkFBb0JDLDJCQUEyQixHQUFHakIsK0NBQVFBLENBQWdCO0lBQ2pGLE1BQU0sQ0FBQ2tCLGNBQWNDLHFCQUFxQixHQUFHbkIsK0NBQVFBLENBQWdCO0lBQ3JFLE1BQU0sQ0FBQ29CLHFCQUFxQkMsNEJBQTRCLEdBQUdyQiwrQ0FBUUEsQ0FBZ0I7SUFDbkYsTUFBTSxDQUFDc0IsZUFBZUMsc0JBQXNCLEdBQUd2QiwrQ0FBUUEsQ0FBVTtJQUVqRSwrQkFBK0I7SUFDL0JDLGdEQUFTQSxDQUFDO1FBQ1IsTUFBTXVCLG1CQUFtQkMsYUFBYUMsT0FBTyxDQUFDO1FBQzlDLElBQUlGLG9CQUFvQixDQUFDUixvQkFBb0I7WUFDM0NDLDJCQUEyQk87UUFDN0I7SUFDRixHQUFHLEVBQUU7SUFFTCxxRkFBcUY7SUFDckYsTUFBTUcsd0JBQXdCLENBQUNDO1FBQzdCbEIsUUFBUUMsR0FBRyxDQUFDLGdFQUFnRWlCO1FBQzVFWCwyQkFBMkJXO1FBQzNCLElBQUlBLFlBQVk7WUFDZEgsYUFBYUksT0FBTyxDQUFDLHNCQUFzQkQ7UUFDN0MsT0FBTztZQUNMSCxhQUFhSyxVQUFVLENBQUM7UUFDMUI7SUFDRjtJQUVBLE1BQU1DLGtCQUFrQixDQUFDQztRQUN2QnRCLFFBQVFDLEdBQUcsQ0FBQywwREFBMERxQjtRQUN0RWIscUJBQXFCYTtJQUNyQixpREFBaUQ7SUFDbkQ7SUFFQSxNQUFNQyx5QkFBeUIsQ0FBQ0M7UUFDOUJ4QixRQUFRQyxHQUFHLENBQUMsaUVBQWlFdUI7UUFDN0ViLDRCQUE0QmE7SUFDNUIsc0RBQXNEO0lBQ3hEO0lBRUEsTUFBTUMsbUJBQW1CLENBQUNDO1FBQ3hCMUIsUUFBUUMsR0FBRyxDQUFDLDJEQUEyRHlCO1FBQ3ZFYixzQkFBc0JhO0lBQ3RCLHFEQUFxRDtJQUN2RDtJQUVBLHFCQUNFLDhEQUFDakMsd0JBQXdCa0MsUUFBUTtRQUMvQkMsT0FBTztZQUNMdEI7WUFDQVc7WUFDQVQ7WUFDQWE7WUFDQVg7WUFDQWE7WUFDQVg7WUFDQWE7WUFDQUksY0FBY2hDO1lBQ2RDLFVBQVVBO1lBQ1ZDLFlBQVlBLFdBQWUsMEJBQTBCO1FBQ3ZEO2tCQUVDSDs7Ozs7O0FBR1AsRUFBRTtHQXpFV0Q7O1FBQ2dDSCxzREFBT0E7OztLQUR2Q0c7QUEyRU4sTUFBTW1DLHNCQUFzQjs7SUFDakMsTUFBTUMsVUFBVTFDLGlEQUFVQSxDQUFDSTtJQUMzQixJQUFJc0MsWUFBWXJDLFdBQVc7UUFDekIsTUFBTSxJQUFJc0MsTUFBTTtJQUNsQjtJQUNBLDJFQUEyRTtJQUMzRSx5REFBeUQ7SUFDekQsT0FBTztRQUNMMUIsb0JBQW9CeUIsUUFBUXpCLGtCQUFrQjtRQUM5Q1csdUJBQXVCYyxRQUFRZCxxQkFBcUI7UUFDcERULGNBQWN1QixRQUFRdkIsWUFBWTtRQUNsQ2EsaUJBQWlCVSxRQUFRVixlQUFlO1FBQ3hDWCxxQkFBcUJxQixRQUFRckIsbUJBQW1CO1FBQ2hEYSx3QkFBd0JRLFFBQVFSLHNCQUFzQjtRQUN0RFgsZUFBZW1CLFFBQVFuQixhQUFhO1FBQ3BDYSxrQkFBa0JNLFFBQVFOLGdCQUFnQjtRQUMxQ0ksY0FBY0UsUUFBUUYsWUFBWTtRQUNsQy9CLFVBQVVpQyxRQUFRakMsUUFBUTtRQUMxQkMsWUFBWWdDLFFBQVFoQyxVQUFVLENBQU8sbUJBQW1CO0lBQzFEO0FBQ0YsRUFBRTtJQXBCVytCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb250ZXh0cy9TZWxlY3RlZEVtcGxveWVlQ29udGV4dC50c3g/YThlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIFJlYWN0Tm9kZSwgdXNlRWZmZWN0LCBQcm9wc1dpdGhDaGlsZHJlbiB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlTXNhbCB9IGZyb20gXCJAYXp1cmUvbXNhbC1yZWFjdFwiO1xyXG5pbXBvcnQgeyBcclxuICAgIEludGVyYWN0aW9uU3RhdHVzLCBcclxuICAgIHR5cGUgQWNjb3VudEluZm8sIFxyXG4gICAgdHlwZSBJUHVibGljQ2xpZW50QXBwbGljYXRpb24gXHJcbn0gZnJvbSBcIkBhenVyZS9tc2FsLWJyb3dzZXJcIjtcclxuXHJcbmludGVyZmFjZSBTZWxlY3RlZEVtcGxveWVlQ29udGV4dFR5cGUge1xyXG4gIHNlbGVjdGVkRW1wbG95ZWVJZDogc3RyaW5nIHwgbnVsbDtcclxuICBzZXRTZWxlY3RlZEVtcGxveWVlSWQ6IChlbXBsb3llZUlkOiBzdHJpbmcgfCBudWxsKSA9PiB2b2lkO1xyXG4gIHN5c3RlbVVzZXJJZDogc3RyaW5nIHwgbnVsbDsgLy8gVGhlIGFjdHVhbCBNU0FML3N5c3RlbS13aWRlIHVzZXIgSURcclxuICBzZXRTeXN0ZW1Vc2VySWQ6ICh1c2VySWQ6IHN0cmluZyB8IG51bGwpID0+IHZvaWQ7XHJcbiAgZW1wbG95ZWVQcm9maWxlTmFtZTogc3RyaW5nIHwgbnVsbDsgLy8gRGlzcGxheSBuYW1lIGZvciB0aGUgc2VsZWN0ZWRFbXBsb3llZUlkIHByb2ZpbGVcclxuICBzZXRFbXBsb3llZVByb2ZpbGVOYW1lOiAobmFtZTogc3RyaW5nIHwgbnVsbCkgPT4gdm9pZDtcclxuICBpc01hbmFnZXJSb2xlOiBib29sZWFuOyAvLyBEb2VzIHRoZSBzZWxlY3RlZEVtcGxveWVlSWQgcmVwcmVzZW50IGEgbWFuYWdlciByb2xlP1xyXG4gIHNldElzTWFuYWdlclJvbGU6IChpc01hbmFnZXI6IGJvb2xlYW4pID0+IHZvaWQ7XHJcbiAgbXNhbEluc3RhbmNlOiBJUHVibGljQ2xpZW50QXBwbGljYXRpb24gfCBudWxsOyAvLyBBZGRlZCBmb3IgZGlyZWN0IHBhc3MtdGhyb3VnaFxyXG4gIGFjY291bnRzOiBBY2NvdW50SW5mb1tdOyAvLyBBZGRlZCBmb3IgZGlyZWN0IHBhc3MtdGhyb3VnaFxyXG4gIGluUHJvZ3Jlc3M6IEludGVyYWN0aW9uU3RhdHVzOyAvLyBBZGRlZCBmb3IgZGlyZWN0IHBhc3MtdGhyb3VnaFxyXG59XHJcblxyXG5jb25zdCBTZWxlY3RlZEVtcGxveWVlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8U2VsZWN0ZWRFbXBsb3llZUNvbnRleHRUeXBlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNlbGVjdGVkRW1wbG95ZWVQcm92aWRlcjogUmVhY3QuRkM8UHJvcHNXaXRoQ2hpbGRyZW48e30+PiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcclxuICBjb25zdCB7IGluc3RhbmNlLCBhY2NvdW50cywgaW5Qcm9ncmVzcyB9ID0gdXNlTXNhbCgpOyAvLyBGcm9tIEBhenVyZS9tc2FsLXJlYWN0XHJcblxyXG4gIC8vIExvZyBNU0FMIHN0YXRlIGNoYW5nZXMgZnJvbSB1c2VNc2FsKCkgZGlyZWN0bHkgaW4gdGhlIHByb3ZpZGVyXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdbU2VsZWN0ZWRFbXBsb3llZUNvbnRleHRdIE1TQUwgc3RhdGUgZnJvbSB1c2VNc2FsKCk6Jywge1xyXG4gICAgICBpbnN0YW5jZVJlYWR5OiAhIWluc3RhbmNlLFxyXG4gICAgICBhY2NvdW50c0xlbmd0aDogYWNjb3VudHM/Lmxlbmd0aCxcclxuICAgICAgaW5Qcm9ncmVzc1N0YXR1czogaW5Qcm9ncmVzcyxcclxuICAgIH0pO1xyXG4gIH0sIFtpbnN0YW5jZSwgYWNjb3VudHMsIGluUHJvZ3Jlc3NdKTtcclxuXHJcbiAgY29uc3QgW3NlbGVjdGVkRW1wbG95ZWVJZCwgc2V0U2VsZWN0ZWRFbXBsb3llZUlkU3RhdGVdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XHJcbiAgY29uc3QgW3N5c3RlbVVzZXJJZCwgc2V0U3lzdGVtVXNlcklkU3RhdGVdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XHJcbiAgY29uc3QgW2VtcGxveWVlUHJvZmlsZU5hbWUsIHNldEVtcGxveWVlUHJvZmlsZU5hbWVTdGF0ZV0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcclxuICBjb25zdCBbaXNNYW5hZ2VyUm9sZSwgc2V0SXNNYW5hZ2VyUm9sZVN0YXRlXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuXHJcbiAgLy8gUGVyc2lzdMOqbmNpYSBlbSBsb2NhbFN0b3JhZ2VcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3Qgc3RvcmVkRW1wbG95ZWVJZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzZWxlY3RlZEVtcGxveWVlSWQnKTtcclxuICAgIGlmIChzdG9yZWRFbXBsb3llZUlkICYmICFzZWxlY3RlZEVtcGxveWVlSWQpIHtcclxuICAgICAgc2V0U2VsZWN0ZWRFbXBsb3llZUlkU3RhdGUoc3RvcmVkRW1wbG95ZWVJZCk7XHJcbiAgICB9XHJcbiAgfSwgW10pO1xyXG5cclxuICAvLyBXcmFwcGVyIGZ1bmN0aW9ucyB0byBwb3RlbnRpYWxseSBhZGQgbG9nZ2luZyBvciBvdGhlciBzaWRlIGVmZmVjdHMgaWYgbmVlZGVkIGxhdGVyXHJcbiAgY29uc3Qgc2V0U2VsZWN0ZWRFbXBsb3llZUlkID0gKGVtcGxveWVlSWQ6IHN0cmluZyB8IG51bGwpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdbU2VsZWN0ZWRFbXBsb3llZUNvbnRleHRdIHNldFNlbGVjdGVkRW1wbG95ZWVJZCBjYWxsZWQgd2l0aDonLCBlbXBsb3llZUlkKTtcclxuICAgIHNldFNlbGVjdGVkRW1wbG95ZWVJZFN0YXRlKGVtcGxveWVlSWQpO1xyXG4gICAgaWYgKGVtcGxveWVlSWQpIHtcclxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NlbGVjdGVkRW1wbG95ZWVJZCcsIGVtcGxveWVlSWQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3NlbGVjdGVkRW1wbG95ZWVJZCcpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGNvbnN0IHNldFN5c3RlbVVzZXJJZCA9ICh1c2VySWQ6IHN0cmluZyB8IG51bGwpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdbU2VsZWN0ZWRFbXBsb3llZUNvbnRleHRdIHNldFN5c3RlbVVzZXJJZCBjYWxsZWQgd2l0aDonLCB1c2VySWQpO1xyXG4gICAgc2V0U3lzdGVtVXNlcklkU3RhdGUodXNlcklkKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKFwiU3lzdGVtIFVzZXIgSUQgc2V0IHRvOlwiLCB1c2VySWQpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHNldEVtcGxveWVlUHJvZmlsZU5hbWUgPSAobmFtZTogc3RyaW5nIHwgbnVsbCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ1tTZWxlY3RlZEVtcGxveWVlQ29udGV4dF0gc2V0RW1wbG95ZWVQcm9maWxlTmFtZSBjYWxsZWQgd2l0aDonLCBuYW1lKTtcclxuICAgIHNldEVtcGxveWVlUHJvZmlsZU5hbWVTdGF0ZShuYW1lKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKFwiRW1wbG95ZWUgUHJvZmlsZSBOYW1lIHNldCB0bzpcIiwgbmFtZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgc2V0SXNNYW5hZ2VyUm9sZSA9IChpc01hbmFnZXI6IGJvb2xlYW4pID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdbU2VsZWN0ZWRFbXBsb3llZUNvbnRleHRdIHNldElzTWFuYWdlclJvbGUgY2FsbGVkIHdpdGg6JywgaXNNYW5hZ2VyKTtcclxuICAgIHNldElzTWFuYWdlclJvbGVTdGF0ZShpc01hbmFnZXIpO1xyXG4gICAgLy8gY29uc29sZS5sb2coXCJJcyBNYW5hZ2VyIFJvbGUgc2V0IHRvOlwiLCBpc01hbmFnZXIpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8U2VsZWN0ZWRFbXBsb3llZUNvbnRleHQuUHJvdmlkZXIgXHJcbiAgICAgIHZhbHVlPXt7XHJcbiAgICAgICAgc2VsZWN0ZWRFbXBsb3llZUlkLCBcclxuICAgICAgICBzZXRTZWxlY3RlZEVtcGxveWVlSWQsIFxyXG4gICAgICAgIHN5c3RlbVVzZXJJZCwgXHJcbiAgICAgICAgc2V0U3lzdGVtVXNlcklkLCBcclxuICAgICAgICBlbXBsb3llZVByb2ZpbGVOYW1lLCBcclxuICAgICAgICBzZXRFbXBsb3llZVByb2ZpbGVOYW1lLFxyXG4gICAgICAgIGlzTWFuYWdlclJvbGUsXHJcbiAgICAgICAgc2V0SXNNYW5hZ2VyUm9sZSxcclxuICAgICAgICBtc2FsSW5zdGFuY2U6IGluc3RhbmNlLCAvLyBQYXNzIGluc3RhbmNlIHRocm91Z2hcclxuICAgICAgICBhY2NvdW50czogYWNjb3VudHMsICAgICAgIC8vIFBhc3MgYWNjb3VudHMgdGhyb3VnaFxyXG4gICAgICAgIGluUHJvZ3Jlc3M6IGluUHJvZ3Jlc3MgICAgIC8vIFBhc3MgaW5Qcm9ncmVzcyB0aHJvdWdoXHJcbiAgICAgIH19XHJcbiAgICA+XHJcbiAgICAgIHtjaGlsZHJlbn1cclxuICAgIDwvU2VsZWN0ZWRFbXBsb3llZUNvbnRleHQuUHJvdmlkZXI+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VTZWxlY3RlZEVtcGxveWVlID0gKCkgPT4ge1xyXG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KFNlbGVjdGVkRW1wbG95ZWVDb250ZXh0KTtcclxuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZVNlbGVjdGVkRW1wbG95ZWUgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIFNlbGVjdGVkRW1wbG95ZWVQcm92aWRlcicpO1xyXG4gIH1cclxuICAvLyBObyBuZWVkIHRvIGNhbGwgdXNlTXNhbCgpIGhlcmUgYWdhaW4sIGFzIHZhbHVlcyBhcmUgcGFzc2VkIGZyb20gcHJvdmlkZXJcclxuICAvLyBjb25zdCB7IGluc3RhbmNlLCBhY2NvdW50cywgaW5Qcm9ncmVzcyB9ID0gdXNlTXNhbCgpOyBcclxuICByZXR1cm4ge1xyXG4gICAgc2VsZWN0ZWRFbXBsb3llZUlkOiBjb250ZXh0LnNlbGVjdGVkRW1wbG95ZWVJZCxcclxuICAgIHNldFNlbGVjdGVkRW1wbG95ZWVJZDogY29udGV4dC5zZXRTZWxlY3RlZEVtcGxveWVlSWQsXHJcbiAgICBzeXN0ZW1Vc2VySWQ6IGNvbnRleHQuc3lzdGVtVXNlcklkLFxyXG4gICAgc2V0U3lzdGVtVXNlcklkOiBjb250ZXh0LnNldFN5c3RlbVVzZXJJZCxcclxuICAgIGVtcGxveWVlUHJvZmlsZU5hbWU6IGNvbnRleHQuZW1wbG95ZWVQcm9maWxlTmFtZSxcclxuICAgIHNldEVtcGxveWVlUHJvZmlsZU5hbWU6IGNvbnRleHQuc2V0RW1wbG95ZWVQcm9maWxlTmFtZSxcclxuICAgIGlzTWFuYWdlclJvbGU6IGNvbnRleHQuaXNNYW5hZ2VyUm9sZSxcclxuICAgIHNldElzTWFuYWdlclJvbGU6IGNvbnRleHQuc2V0SXNNYW5hZ2VyUm9sZSxcclxuICAgIG1zYWxJbnN0YW5jZTogY29udGV4dC5tc2FsSW5zdGFuY2UsIC8vIEdldCBmcm9tIGNvbnRleHRcclxuICAgIGFjY291bnRzOiBjb250ZXh0LmFjY291bnRzLCAgICAgICAgIC8vIEdldCBmcm9tIGNvbnRleHRcclxuICAgIGluUHJvZ3Jlc3M6IGNvbnRleHQuaW5Qcm9ncmVzcyAgICAgICAvLyBHZXQgZnJvbSBjb250ZXh0XHJcbiAgfTtcclxufTsgIl0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZU1zYWwiLCJTZWxlY3RlZEVtcGxveWVlQ29udGV4dCIsInVuZGVmaW5lZCIsIlNlbGVjdGVkRW1wbG95ZWVQcm92aWRlciIsImNoaWxkcmVuIiwiaW5zdGFuY2UiLCJhY2NvdW50cyIsImluUHJvZ3Jlc3MiLCJjb25zb2xlIiwibG9nIiwiaW5zdGFuY2VSZWFkeSIsImFjY291bnRzTGVuZ3RoIiwibGVuZ3RoIiwiaW5Qcm9ncmVzc1N0YXR1cyIsInNlbGVjdGVkRW1wbG95ZWVJZCIsInNldFNlbGVjdGVkRW1wbG95ZWVJZFN0YXRlIiwic3lzdGVtVXNlcklkIiwic2V0U3lzdGVtVXNlcklkU3RhdGUiLCJlbXBsb3llZVByb2ZpbGVOYW1lIiwic2V0RW1wbG95ZWVQcm9maWxlTmFtZVN0YXRlIiwiaXNNYW5hZ2VyUm9sZSIsInNldElzTWFuYWdlclJvbGVTdGF0ZSIsInN0b3JlZEVtcGxveWVlSWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic2V0U2VsZWN0ZWRFbXBsb3llZUlkIiwiZW1wbG95ZWVJZCIsInNldEl0ZW0iLCJyZW1vdmVJdGVtIiwic2V0U3lzdGVtVXNlcklkIiwidXNlcklkIiwic2V0RW1wbG95ZWVQcm9maWxlTmFtZSIsIm5hbWUiLCJzZXRJc01hbmFnZXJSb2xlIiwiaXNNYW5hZ2VyIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsIm1zYWxJbnN0YW5jZSIsInVzZVNlbGVjdGVkRW1wbG95ZWUiLCJjb250ZXh0IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/contexts/SelectedEmployeeContext.tsx\n"));

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _azure_msal_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-react */ \"./node_modules/@azure/msal-react/dist/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var _config_authConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config/authConfig */ \"./src/config/authConfig.js\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/globals.css */ \"./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _context_FuncionarioContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context/FuncionarioContext */ \"./src/context/FuncionarioContext.js\");\n/* harmony import */ var _contexts_SelectedEmployeeContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/contexts/SelectedEmployeeContext */ \"./src/contexts/SelectedEmployeeContext.tsx\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"./node_modules/react-toastify/dist/ReactToastify.css\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-toastify */ \"./node_modules/react-toastify/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\nconst msalInstance = new _azure_msal_browser__WEBPACK_IMPORTED_MODULE_8__.PublicClientApplication(_config_authConfig__WEBPACK_IMPORTED_MODULE_2__.msalConfig);\nfunction MyApp(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_azure_msal_react__WEBPACK_IMPORTED_MODULE_1__.MsalProvider, {\n        instance: msalInstance,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_SelectedEmployeeContext__WEBPACK_IMPORTED_MODULE_5__.SelectedEmployeeProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_FuncionarioContext__WEBPACK_IMPORTED_MODULE_4__.FuncionarioProvider, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                        ...pageProps\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Cursor\\\\rh\\\\src\\\\pages\\\\_app.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_toastify__WEBPACK_IMPORTED_MODULE_7__.ToastContainer, {\n                        position: \"top-right\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        newestOnTop: false,\n                        closeOnClick: true,\n                        rtl: false,\n                        pauseOnFocusLoss: true,\n                        draggable: true,\n                        pauseOnHover: true,\n                        theme: \"light\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Cursor\\\\rh\\\\src\\\\pages\\\\_app.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Cursor\\\\rh\\\\src\\\\pages\\\\_app.tsx\",\n                lineNumber: 17,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Cursor\\\\rh\\\\src\\\\pages\\\\_app.tsx\",\n            lineNumber: 16,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Cursor\\\\rh\\\\src\\\\pages\\\\_app.tsx\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, this);\n}\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBaUQ7QUFDYTtBQUNaO0FBQ25CO0FBQ3FDO0FBQ1U7QUFFL0I7QUFDQztBQUVoRCxNQUFNTSxlQUFlLElBQUlMLHdFQUF1QkEsQ0FBQ0MsMERBQVVBO0FBRTNELFNBQVNLLE1BQU0sS0FBa0M7UUFBbEMsRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQVksR0FBbEM7SUFDYixxQkFDRSw4REFBQ1QsMkRBQVlBO1FBQUNVLFVBQVVKO2tCQUN0Qiw0RUFBQ0YsdUZBQXdCQTtzQkFDdkIsNEVBQUNELDRFQUFtQkE7O2tDQUNsQiw4REFBQ0s7d0JBQVcsR0FBR0MsU0FBUzs7Ozs7O2tDQUN4Qiw4REFBQ0osMERBQWNBO3dCQUNiTSxVQUFTO3dCQUNUQyxXQUFXO3dCQUNYQyxpQkFBaUI7d0JBQ2pCQyxhQUFhO3dCQUNiQyxZQUFZO3dCQUNaQyxLQUFLO3dCQUNMQyxnQkFBZ0I7d0JBQ2hCQyxTQUFTO3dCQUNUQyxZQUFZO3dCQUNaQyxPQUFNOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTWxCO0tBdEJTYjtBQXdCVCwrREFBZUEsS0FBS0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvX2FwcC50c3g/ZjlkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNc2FsUHJvdmlkZXIgfSBmcm9tIFwiQGF6dXJlL21zYWwtcmVhY3RcIjtcclxuaW1wb3J0IHsgUHVibGljQ2xpZW50QXBwbGljYXRpb24gfSBmcm9tIFwiQGF6dXJlL21zYWwtYnJvd3NlclwiO1xyXG5pbXBvcnQgeyBtc2FsQ29uZmlnIH0gZnJvbSBcIi4uL2NvbmZpZy9hdXRoQ29uZmlnXCI7XHJcbmltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbHMuY3NzJztcclxuaW1wb3J0IHsgRnVuY2lvbmFyaW9Qcm92aWRlciB9IGZyb20gXCIuLi9jb250ZXh0L0Z1bmNpb25hcmlvQ29udGV4dFwiO1xyXG5pbXBvcnQgeyBTZWxlY3RlZEVtcGxveWVlUHJvdmlkZXIgfSBmcm9tIFwiQC9jb250ZXh0cy9TZWxlY3RlZEVtcGxveWVlQ29udGV4dFwiO1xyXG5pbXBvcnQgdHlwZSB7IEFwcFByb3BzIH0gZnJvbSAnbmV4dC9hcHAnO1xyXG5pbXBvcnQgJ3JlYWN0LXRvYXN0aWZ5L2Rpc3QvUmVhY3RUb2FzdGlmeS5jc3MnO1xyXG5pbXBvcnQgeyBUb2FzdENvbnRhaW5lciB9IGZyb20gJ3JlYWN0LXRvYXN0aWZ5JztcclxuXHJcbmNvbnN0IG1zYWxJbnN0YW5jZSA9IG5ldyBQdWJsaWNDbGllbnRBcHBsaWNhdGlvbihtc2FsQ29uZmlnKTtcclxuXHJcbmZ1bmN0aW9uIE15QXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfTogQXBwUHJvcHMpIHtcclxuICByZXR1cm4gKFxyXG4gICAgPE1zYWxQcm92aWRlciBpbnN0YW5jZT17bXNhbEluc3RhbmNlfT5cclxuICAgICAgPFNlbGVjdGVkRW1wbG95ZWVQcm92aWRlcj5cclxuICAgICAgICA8RnVuY2lvbmFyaW9Qcm92aWRlcj5cclxuICAgICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cclxuICAgICAgICAgIDxUb2FzdENvbnRhaW5lciBcclxuICAgICAgICAgICAgcG9zaXRpb249XCJ0b3AtcmlnaHRcIlxyXG4gICAgICAgICAgICBhdXRvQ2xvc2U9ezUwMDB9XHJcbiAgICAgICAgICAgIGhpZGVQcm9ncmVzc0Jhcj17ZmFsc2V9XHJcbiAgICAgICAgICAgIG5ld2VzdE9uVG9wPXtmYWxzZX1cclxuICAgICAgICAgICAgY2xvc2VPbkNsaWNrXHJcbiAgICAgICAgICAgIHJ0bD17ZmFsc2V9XHJcbiAgICAgICAgICAgIHBhdXNlT25Gb2N1c0xvc3NcclxuICAgICAgICAgICAgZHJhZ2dhYmxlXHJcbiAgICAgICAgICAgIHBhdXNlT25Ib3ZlclxyXG4gICAgICAgICAgICB0aGVtZT1cImxpZ2h0XCJcclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgPC9GdW5jaW9uYXJpb1Byb3ZpZGVyPlxyXG4gICAgICA8L1NlbGVjdGVkRW1wbG95ZWVQcm92aWRlcj5cclxuICAgIDwvTXNhbFByb3ZpZGVyPlxyXG4gICk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE15QXBwOyAiXSwibmFtZXMiOlsiTXNhbFByb3ZpZGVyIiwiUHVibGljQ2xpZW50QXBwbGljYXRpb24iLCJtc2FsQ29uZmlnIiwiRnVuY2lvbmFyaW9Qcm92aWRlciIsIlNlbGVjdGVkRW1wbG95ZWVQcm92aWRlciIsIlRvYXN0Q29udGFpbmVyIiwibXNhbEluc3RhbmNlIiwiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJpbnN0YW5jZSIsInBvc2l0aW9uIiwiYXV0b0Nsb3NlIiwiaGlkZVByb2dyZXNzQmFyIiwibmV3ZXN0T25Ub3AiLCJjbG9zZU9uQ2xpY2siLCJydGwiLCJwYXVzZU9uRm9jdXNMb3NzIiwiZHJhZ2dhYmxlIiwicGF1c2VPbkhvdmVyIiwidGhlbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n"));

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxJQUFxQztBQUN6QztBQUNBOztBQUVBLFlBQVksbUJBQU8sQ0FBQyw0Q0FBTzs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpR0FBaUcsZUFBZTtBQUNoSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNOzs7QUFHTjtBQUNBO0FBQ0EsS0FBSyxHQUFHOztBQUVSLGtEQUFrRDtBQUNsRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSw0QkFBNEI7QUFDNUI7QUFDQSxxQ0FBcUM7O0FBRXJDLGdDQUFnQztBQUNoQztBQUNBOztBQUVBLGdDQUFnQzs7QUFFaEM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7OztBQUdKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTs7O0FBR0Y7QUFDQTtBQUNBLEVBQUU7OztBQUdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxTQUFTO0FBQ1QsdUJBQXVCO0FBQ3ZCO0FBQ0EsU0FBUztBQUNULHVCQUF1QjtBQUN2QjtBQUNBLFNBQVM7QUFDVCx3QkFBd0I7QUFDeEI7QUFDQSxTQUFTO0FBQ1Qsd0JBQXdCO0FBQ3hCO0FBQ0EsU0FBUztBQUNULGlDQUFpQztBQUNqQztBQUNBLFNBQVM7QUFDVCwyQkFBMkI7QUFDM0I7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07OztBQUdOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwyREFBMkQ7O0FBRTNEO0FBQ0E7O0FBRUE7QUFDQSx5REFBeUQ7QUFDekQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7OztBQUdUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsa0JBQWtCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7O0FBRUE7QUFDQTtBQUNBLGdGQUFnRjtBQUNoRjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7OztBQUdsQjtBQUNBO0FBQ0EsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSTs7O0FBR0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJIQUEySDtBQUMzSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxVQUFVO0FBQ1Y7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG9FQUFvRTs7QUFFcEU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQ0FBaUM7O0FBRWpDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7O0FBR0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsV0FBVyxlQUFlO0FBQzFCLFdBQVcsR0FBRztBQUNkLFdBQVcsR0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2Q7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssR0FBRzs7QUFFUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxHQUFHO0FBQ1I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiwyREFBMkQsVUFBVTtBQUNyRSx5QkFBeUIsVUFBVTtBQUNuQztBQUNBLGFBQWEsVUFBVTtBQUN2Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTs7O0FBR047QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNOzs7QUFHTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFlBQVksU0FBUztBQUNyQjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsR0FBRztBQUNkOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDZEQUE2RDtBQUM3RDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsV0FBVztBQUN0QixXQUFXLEdBQUc7QUFDZDs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekI7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTiw0Q0FBNEM7O0FBRTVDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekI7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsaUJBQWlCO0FBQ3JDOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsMERBQTBEO0FBQzFEOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHFCQUFxQjtBQUNqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsZ0RBQWdELGdEQUFnRCxNQUFNLGFBQWE7O0FBRW5IO0FBQ0EsaURBQWlELGtDQUFrQyxPQUFPOztBQUUxRix5R0FBeUcsY0FBYyxVQUFVLGdHQUFnRyxrQkFBa0IsVUFBVSxVQUFVOztBQUV2UTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUU7O0FBRUY7O0FBRUEsZ0JBQWdCO0FBQ2hCLGNBQWM7QUFDZCxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanM/MTdlMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgKGZ1bmN0aW9uKCkge1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG4vLyBBVFRFTlRJT05cbi8vIFdoZW4gYWRkaW5nIG5ldyBzeW1ib2xzIHRvIHRoaXMgZmlsZSxcbi8vIFBsZWFzZSBjb25zaWRlciBhbHNvIGFkZGluZyB0byAncmVhY3QtZGV2dG9vbHMtc2hhcmVkL3NyYy9iYWNrZW5kL1JlYWN0U3ltYm9scydcbi8vIFRoZSBTeW1ib2wgdXNlZCB0byB0YWcgdGhlIFJlYWN0RWxlbWVudC1saWtlIHR5cGVzLlxudmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKTtcbnZhciBSRUFDVF9QT1JUQUxfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LnBvcnRhbCcpO1xudmFyIFJFQUNUX0ZSQUdNRU5UX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5mcmFnbWVudCcpO1xudmFyIFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5zdHJpY3RfbW9kZScpO1xudmFyIFJFQUNUX1BST0ZJTEVSX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5wcm9maWxlcicpO1xudmFyIFJFQUNUX1BST1ZJREVSX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5wcm92aWRlcicpO1xudmFyIFJFQUNUX0NPTlRFWFRfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LmNvbnRleHQnKTtcbnZhciBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFID0gU3ltYm9sLmZvcigncmVhY3QuZm9yd2FyZF9yZWYnKTtcbnZhciBSRUFDVF9TVVNQRU5TRV9UWVBFID0gU3ltYm9sLmZvcigncmVhY3Quc3VzcGVuc2UnKTtcbnZhciBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5zdXNwZW5zZV9saXN0Jyk7XG52YXIgUkVBQ1RfTUVNT19UWVBFID0gU3ltYm9sLmZvcigncmVhY3QubWVtbycpO1xudmFyIFJFQUNUX0xBWllfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LmxhenknKTtcbnZhciBSRUFDVF9PRkZTQ1JFRU5fVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0Lm9mZnNjcmVlbicpO1xudmFyIE1BWUJFX0lURVJBVE9SX1NZTUJPTCA9IFN5bWJvbC5pdGVyYXRvcjtcbnZhciBGQVVYX0lURVJBVE9SX1NZTUJPTCA9ICdAQGl0ZXJhdG9yJztcbmZ1bmN0aW9uIGdldEl0ZXJhdG9yRm4obWF5YmVJdGVyYWJsZSkge1xuICBpZiAobWF5YmVJdGVyYWJsZSA9PT0gbnVsbCB8fCB0eXBlb2YgbWF5YmVJdGVyYWJsZSAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHZhciBtYXliZUl0ZXJhdG9yID0gTUFZQkVfSVRFUkFUT1JfU1lNQk9MICYmIG1heWJlSXRlcmFibGVbTUFZQkVfSVRFUkFUT1JfU1lNQk9MXSB8fCBtYXliZUl0ZXJhYmxlW0ZBVVhfSVRFUkFUT1JfU1lNQk9MXTtcblxuICBpZiAodHlwZW9mIG1heWJlSXRlcmF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gbWF5YmVJdGVyYXRvcjtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG52YXIgUmVhY3RTaGFyZWRJbnRlcm5hbHMgPSBSZWFjdC5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtcblxuZnVuY3Rpb24gZXJyb3IoZm9ybWF0KSB7XG4gIHtcbiAgICB7XG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIgPiAxID8gX2xlbjIgLSAxIDogMCksIF9rZXkyID0gMTsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICBhcmdzW19rZXkyIC0gMV0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICBwcmludFdhcm5pbmcoJ2Vycm9yJywgZm9ybWF0LCBhcmdzKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGxldmVsLCBmb3JtYXQsIGFyZ3MpIHtcbiAgLy8gV2hlbiBjaGFuZ2luZyB0aGlzIGxvZ2ljLCB5b3UgbWlnaHQgd2FudCB0byBhbHNvXG4gIC8vIHVwZGF0ZSBjb25zb2xlV2l0aFN0YWNrRGV2Lnd3dy5qcyBhcyB3ZWxsLlxuICB7XG4gICAgdmFyIFJlYWN0RGVidWdDdXJyZW50RnJhbWUgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdERlYnVnQ3VycmVudEZyYW1lO1xuICAgIHZhciBzdGFjayA9IFJlYWN0RGVidWdDdXJyZW50RnJhbWUuZ2V0U3RhY2tBZGRlbmR1bSgpO1xuXG4gICAgaWYgKHN0YWNrICE9PSAnJykge1xuICAgICAgZm9ybWF0ICs9ICclcyc7XG4gICAgICBhcmdzID0gYXJncy5jb25jYXQoW3N0YWNrXSk7XG4gICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaW50ZXJuYWwvc2FmZS1zdHJpbmctY29lcmNpb25cblxuXG4gICAgdmFyIGFyZ3NXaXRoRm9ybWF0ID0gYXJncy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHJldHVybiBTdHJpbmcoaXRlbSk7XG4gICAgfSk7IC8vIENhcmVmdWw6IFJOIGN1cnJlbnRseSBkZXBlbmRzIG9uIHRoaXMgcHJlZml4XG5cbiAgICBhcmdzV2l0aEZvcm1hdC51bnNoaWZ0KCdXYXJuaW5nOiAnICsgZm9ybWF0KTsgLy8gV2UgaW50ZW50aW9uYWxseSBkb24ndCB1c2Ugc3ByZWFkIChvciAuYXBwbHkpIGRpcmVjdGx5IGJlY2F1c2UgaXRcbiAgICAvLyBicmVha3MgSUU5OiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzEzNjEwXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZ1xuXG4gICAgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5LmNhbGwoY29uc29sZVtsZXZlbF0sIGNvbnNvbGUsIGFyZ3NXaXRoRm9ybWF0KTtcbiAgfVxufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG52YXIgZW5hYmxlU2NvcGVBUEkgPSBmYWxzZTsgLy8gRXhwZXJpbWVudGFsIENyZWF0ZSBFdmVudCBIYW5kbGUgQVBJLlxudmFyIGVuYWJsZUNhY2hlRWxlbWVudCA9IGZhbHNlO1xudmFyIGVuYWJsZVRyYW5zaXRpb25UcmFjaW5nID0gZmFsc2U7IC8vIE5vIGtub3duIGJ1Z3MsIGJ1dCBuZWVkcyBwZXJmb3JtYW5jZSB0ZXN0aW5nXG5cbnZhciBlbmFibGVMZWdhY3lIaWRkZW4gPSBmYWxzZTsgLy8gRW5hYmxlcyB1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayBmZWF0dXJlIGluIEZpYmVyXG4vLyBzdHVmZi4gSW50ZW5kZWQgdG8gZW5hYmxlIFJlYWN0IGNvcmUgbWVtYmVycyB0byBtb3JlIGVhc2lseSBkZWJ1ZyBzY2hlZHVsaW5nXG4vLyBpc3N1ZXMgaW4gREVWIGJ1aWxkcy5cblxudmFyIGVuYWJsZURlYnVnVHJhY2luZyA9IGZhbHNlOyAvLyBUcmFjayB3aGljaCBGaWJlcihzKSBzY2hlZHVsZSByZW5kZXIgd29yay5cblxudmFyIFJFQUNUX01PRFVMRV9SRUZFUkVOQ0U7XG5cbntcbiAgUkVBQ1RfTU9EVUxFX1JFRkVSRU5DRSA9IFN5bWJvbC5mb3IoJ3JlYWN0Lm1vZHVsZS5yZWZlcmVuY2UnKTtcbn1cblxuZnVuY3Rpb24gaXNWYWxpZEVsZW1lbnRUeXBlKHR5cGUpIHtcbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9IC8vIE5vdGU6IHR5cGVvZiBtaWdodCBiZSBvdGhlciB0aGFuICdzeW1ib2wnIG9yICdudW1iZXInIChlLmcuIGlmIGl0J3MgYSBwb2x5ZmlsbCkuXG5cblxuICBpZiAodHlwZSA9PT0gUkVBQ1RfRlJBR01FTlRfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9QUk9GSUxFUl9UWVBFIHx8IGVuYWJsZURlYnVnVHJhY2luZyAgfHwgdHlwZSA9PT0gUkVBQ1RfU1RSSUNUX01PREVfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9TVVNQRU5TRV9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSB8fCBlbmFibGVMZWdhY3lIaWRkZW4gIHx8IHR5cGUgPT09IFJFQUNUX09GRlNDUkVFTl9UWVBFIHx8IGVuYWJsZVNjb3BlQVBJICB8fCBlbmFibGVDYWNoZUVsZW1lbnQgIHx8IGVuYWJsZVRyYW5zaXRpb25UcmFjaW5nICkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiB0eXBlICE9PSBudWxsKSB7XG4gICAgaWYgKHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0xBWllfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NRU1PX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfUFJPVklERVJfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9DT05URVhUX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSB8fCAvLyBUaGlzIG5lZWRzIHRvIGluY2x1ZGUgYWxsIHBvc3NpYmxlIG1vZHVsZSByZWZlcmVuY2Ugb2JqZWN0XG4gICAgLy8gdHlwZXMgc3VwcG9ydGVkIGJ5IGFueSBGbGlnaHQgY29uZmlndXJhdGlvbiBhbnl3aGVyZSBzaW5jZVxuICAgIC8vIHdlIGRvbid0IGtub3cgd2hpY2ggRmxpZ2h0IGJ1aWxkIHRoaXMgd2lsbCBlbmQgdXAgYmVpbmcgdXNlZFxuICAgIC8vIHdpdGguXG4gICAgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfTU9EVUxFX1JFRkVSRU5DRSB8fCB0eXBlLmdldE1vZHVsZUlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gZ2V0V3JhcHBlZE5hbWUob3V0ZXJUeXBlLCBpbm5lclR5cGUsIHdyYXBwZXJOYW1lKSB7XG4gIHZhciBkaXNwbGF5TmFtZSA9IG91dGVyVHlwZS5kaXNwbGF5TmFtZTtcblxuICBpZiAoZGlzcGxheU5hbWUpIHtcbiAgICByZXR1cm4gZGlzcGxheU5hbWU7XG4gIH1cblxuICB2YXIgZnVuY3Rpb25OYW1lID0gaW5uZXJUeXBlLmRpc3BsYXlOYW1lIHx8IGlubmVyVHlwZS5uYW1lIHx8ICcnO1xuICByZXR1cm4gZnVuY3Rpb25OYW1lICE9PSAnJyA/IHdyYXBwZXJOYW1lICsgXCIoXCIgKyBmdW5jdGlvbk5hbWUgKyBcIilcIiA6IHdyYXBwZXJOYW1lO1xufSAvLyBLZWVwIGluIHN5bmMgd2l0aCByZWFjdC1yZWNvbmNpbGVyL2dldENvbXBvbmVudE5hbWVGcm9tRmliZXJcblxuXG5mdW5jdGlvbiBnZXRDb250ZXh0TmFtZSh0eXBlKSB7XG4gIHJldHVybiB0eXBlLmRpc3BsYXlOYW1lIHx8ICdDb250ZXh0Jztcbn0gLy8gTm90ZSB0aGF0IHRoZSByZWNvbmNpbGVyIHBhY2thZ2Ugc2hvdWxkIGdlbmVyYWxseSBwcmVmZXIgdG8gdXNlIGdldENvbXBvbmVudE5hbWVGcm9tRmliZXIoKSBpbnN0ZWFkLlxuXG5cbmZ1bmN0aW9uIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlKSB7XG4gIGlmICh0eXBlID09IG51bGwpIHtcbiAgICAvLyBIb3N0IHJvb3QsIHRleHQgbm9kZSBvciBqdXN0IGludmFsaWQgdHlwZS5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHtcbiAgICBpZiAodHlwZW9mIHR5cGUudGFnID09PSAnbnVtYmVyJykge1xuICAgICAgZXJyb3IoJ1JlY2VpdmVkIGFuIHVuZXhwZWN0ZWQgb2JqZWN0IGluIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSgpLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS4nKTtcbiAgICB9XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gdHlwZS5kaXNwbGF5TmFtZSB8fCB0eXBlLm5hbWUgfHwgbnVsbDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdHlwZTtcbiAgfVxuXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgUkVBQ1RfRlJBR01FTlRfVFlQRTpcbiAgICAgIHJldHVybiAnRnJhZ21lbnQnO1xuXG4gICAgY2FzZSBSRUFDVF9QT1JUQUxfVFlQRTpcbiAgICAgIHJldHVybiAnUG9ydGFsJztcblxuICAgIGNhc2UgUkVBQ1RfUFJPRklMRVJfVFlQRTpcbiAgICAgIHJldHVybiAnUHJvZmlsZXInO1xuXG4gICAgY2FzZSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFOlxuICAgICAgcmV0dXJuICdTdHJpY3RNb2RlJztcblxuICAgIGNhc2UgUkVBQ1RfU1VTUEVOU0VfVFlQRTpcbiAgICAgIHJldHVybiAnU3VzcGVuc2UnO1xuXG4gICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEU6XG4gICAgICByZXR1cm4gJ1N1c3BlbnNlTGlzdCc7XG5cbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICBzd2l0Y2ggKHR5cGUuJCR0eXBlb2YpIHtcbiAgICAgIGNhc2UgUkVBQ1RfQ09OVEVYVF9UWVBFOlxuICAgICAgICB2YXIgY29udGV4dCA9IHR5cGU7XG4gICAgICAgIHJldHVybiBnZXRDb250ZXh0TmFtZShjb250ZXh0KSArICcuQ29uc3VtZXInO1xuXG4gICAgICBjYXNlIFJFQUNUX1BST1ZJREVSX1RZUEU6XG4gICAgICAgIHZhciBwcm92aWRlciA9IHR5cGU7XG4gICAgICAgIHJldHVybiBnZXRDb250ZXh0TmFtZShwcm92aWRlci5fY29udGV4dCkgKyAnLlByb3ZpZGVyJztcblxuICAgICAgY2FzZSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFOlxuICAgICAgICByZXR1cm4gZ2V0V3JhcHBlZE5hbWUodHlwZSwgdHlwZS5yZW5kZXIsICdGb3J3YXJkUmVmJyk7XG5cbiAgICAgIGNhc2UgUkVBQ1RfTUVNT19UWVBFOlxuICAgICAgICB2YXIgb3V0ZXJOYW1lID0gdHlwZS5kaXNwbGF5TmFtZSB8fCBudWxsO1xuXG4gICAgICAgIGlmIChvdXRlck5hbWUgIT09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gb3V0ZXJOYW1lO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlLnR5cGUpIHx8ICdNZW1vJztcblxuICAgICAgY2FzZSBSRUFDVF9MQVpZX1RZUEU6XG4gICAgICAgIHtcbiAgICAgICAgICB2YXIgbGF6eUNvbXBvbmVudCA9IHR5cGU7XG4gICAgICAgICAgdmFyIHBheWxvYWQgPSBsYXp5Q29tcG9uZW50Ll9wYXlsb2FkO1xuICAgICAgICAgIHZhciBpbml0ID0gbGF6eUNvbXBvbmVudC5faW5pdDtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKGluaXQocGF5bG9hZCkpO1xuICAgICAgICAgIH0gY2F0Y2ggKHgpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZmFsbHRocm91Z2hcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxudmFyIGFzc2lnbiA9IE9iamVjdC5hc3NpZ247XG5cbi8vIEhlbHBlcnMgdG8gcGF0Y2ggY29uc29sZS5sb2dzIHRvIGF2b2lkIGxvZ2dpbmcgZHVyaW5nIHNpZGUtZWZmZWN0IGZyZWVcbi8vIHJlcGxheWluZyBvbiByZW5kZXIgZnVuY3Rpb24uIFRoaXMgY3VycmVudGx5IG9ubHkgcGF0Y2hlcyB0aGUgb2JqZWN0XG4vLyBsYXppbHkgd2hpY2ggd29uJ3QgY292ZXIgaWYgdGhlIGxvZyBmdW5jdGlvbiB3YXMgZXh0cmFjdGVkIGVhZ2VybHkuXG4vLyBXZSBjb3VsZCBhbHNvIGVhZ2VybHkgcGF0Y2ggdGhlIG1ldGhvZC5cbnZhciBkaXNhYmxlZERlcHRoID0gMDtcbnZhciBwcmV2TG9nO1xudmFyIHByZXZJbmZvO1xudmFyIHByZXZXYXJuO1xudmFyIHByZXZFcnJvcjtcbnZhciBwcmV2R3JvdXA7XG52YXIgcHJldkdyb3VwQ29sbGFwc2VkO1xudmFyIHByZXZHcm91cEVuZDtcblxuZnVuY3Rpb24gZGlzYWJsZWRMb2coKSB7fVxuXG5kaXNhYmxlZExvZy5fX3JlYWN0RGlzYWJsZWRMb2cgPSB0cnVlO1xuZnVuY3Rpb24gZGlzYWJsZUxvZ3MoKSB7XG4gIHtcbiAgICBpZiAoZGlzYWJsZWREZXB0aCA9PT0gMCkge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nICovXG4gICAgICBwcmV2TG9nID0gY29uc29sZS5sb2c7XG4gICAgICBwcmV2SW5mbyA9IGNvbnNvbGUuaW5mbztcbiAgICAgIHByZXZXYXJuID0gY29uc29sZS53YXJuO1xuICAgICAgcHJldkVycm9yID0gY29uc29sZS5lcnJvcjtcbiAgICAgIHByZXZHcm91cCA9IGNvbnNvbGUuZ3JvdXA7XG4gICAgICBwcmV2R3JvdXBDb2xsYXBzZWQgPSBjb25zb2xlLmdyb3VwQ29sbGFwc2VkO1xuICAgICAgcHJldkdyb3VwRW5kID0gY29uc29sZS5ncm91cEVuZDsgLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8xOTA5OVxuXG4gICAgICB2YXIgcHJvcHMgPSB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IGRpc2FibGVkTG9nLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfTsgLy8gJEZsb3dGaXhNZSBGbG93IHRoaW5rcyBjb25zb2xlIGlzIGltbXV0YWJsZS5cblxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoY29uc29sZSwge1xuICAgICAgICBpbmZvOiBwcm9wcyxcbiAgICAgICAgbG9nOiBwcm9wcyxcbiAgICAgICAgd2FybjogcHJvcHMsXG4gICAgICAgIGVycm9yOiBwcm9wcyxcbiAgICAgICAgZ3JvdXA6IHByb3BzLFxuICAgICAgICBncm91cENvbGxhcHNlZDogcHJvcHMsXG4gICAgICAgIGdyb3VwRW5kOiBwcm9wc1xuICAgICAgfSk7XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZyAqL1xuICAgIH1cblxuICAgIGRpc2FibGVkRGVwdGgrKztcbiAgfVxufVxuZnVuY3Rpb24gcmVlbmFibGVMb2dzKCkge1xuICB7XG4gICAgZGlzYWJsZWREZXB0aC0tO1xuXG4gICAgaWYgKGRpc2FibGVkRGVwdGggPT09IDApIHtcbiAgICAgIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZyAqL1xuICAgICAgdmFyIHByb3BzID0ge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9OyAvLyAkRmxvd0ZpeE1lIEZsb3cgdGhpbmtzIGNvbnNvbGUgaXMgaW1tdXRhYmxlLlxuXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhjb25zb2xlLCB7XG4gICAgICAgIGxvZzogYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2TG9nXG4gICAgICAgIH0pLFxuICAgICAgICBpbmZvOiBhc3NpZ24oe30sIHByb3BzLCB7XG4gICAgICAgICAgdmFsdWU6IHByZXZJbmZvXG4gICAgICAgIH0pLFxuICAgICAgICB3YXJuOiBhc3NpZ24oe30sIHByb3BzLCB7XG4gICAgICAgICAgdmFsdWU6IHByZXZXYXJuXG4gICAgICAgIH0pLFxuICAgICAgICBlcnJvcjogYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2RXJyb3JcbiAgICAgICAgfSksXG4gICAgICAgIGdyb3VwOiBhc3NpZ24oe30sIHByb3BzLCB7XG4gICAgICAgICAgdmFsdWU6IHByZXZHcm91cFxuICAgICAgICB9KSxcbiAgICAgICAgZ3JvdXBDb2xsYXBzZWQ6IGFzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgICAgICB2YWx1ZTogcHJldkdyb3VwQ29sbGFwc2VkXG4gICAgICAgIH0pLFxuICAgICAgICBncm91cEVuZDogYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2R3JvdXBFbmRcbiAgICAgICAgfSlcbiAgICAgIH0pO1xuICAgICAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1pbnRlcm5hbC9uby1wcm9kdWN0aW9uLWxvZ2dpbmcgKi9cbiAgICB9XG5cbiAgICBpZiAoZGlzYWJsZWREZXB0aCA8IDApIHtcbiAgICAgIGVycm9yKCdkaXNhYmxlZERlcHRoIGZlbGwgYmVsb3cgemVyby4gJyArICdUaGlzIGlzIGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS4nKTtcbiAgICB9XG4gIH1cbn1cblxudmFyIFJlYWN0Q3VycmVudERpc3BhdGNoZXIgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdEN1cnJlbnREaXNwYXRjaGVyO1xudmFyIHByZWZpeDtcbmZ1bmN0aW9uIGRlc2NyaWJlQnVpbHRJbkNvbXBvbmVudEZyYW1lKG5hbWUsIHNvdXJjZSwgb3duZXJGbikge1xuICB7XG4gICAgaWYgKHByZWZpeCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBFeHRyYWN0IHRoZSBWTSBzcGVjaWZpYyBwcmVmaXggdXNlZCBieSBlYWNoIGxpbmUuXG4gICAgICB0cnkge1xuICAgICAgICB0aHJvdyBFcnJvcigpO1xuICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICB2YXIgbWF0Y2ggPSB4LnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO1xuICAgICAgICBwcmVmaXggPSBtYXRjaCAmJiBtYXRjaFsxXSB8fCAnJztcbiAgICAgIH1cbiAgICB9IC8vIFdlIHVzZSB0aGUgcHJlZml4IHRvIGVuc3VyZSBvdXIgc3RhY2tzIGxpbmUgdXAgd2l0aCBuYXRpdmUgc3RhY2sgZnJhbWVzLlxuXG5cbiAgICByZXR1cm4gJ1xcbicgKyBwcmVmaXggKyBuYW1lO1xuICB9XG59XG52YXIgcmVlbnRyeSA9IGZhbHNlO1xudmFyIGNvbXBvbmVudEZyYW1lQ2FjaGU7XG5cbntcbiAgdmFyIFBvc3NpYmx5V2Vha01hcCA9IHR5cGVvZiBXZWFrTWFwID09PSAnZnVuY3Rpb24nID8gV2Vha01hcCA6IE1hcDtcbiAgY29tcG9uZW50RnJhbWVDYWNoZSA9IG5ldyBQb3NzaWJseVdlYWtNYXAoKTtcbn1cblxuZnVuY3Rpb24gZGVzY3JpYmVOYXRpdmVDb21wb25lbnRGcmFtZShmbiwgY29uc3RydWN0KSB7XG4gIC8vIElmIHNvbWV0aGluZyBhc2tlZCBmb3IgYSBzdGFjayBpbnNpZGUgYSBmYWtlIHJlbmRlciwgaXQgc2hvdWxkIGdldCBpZ25vcmVkLlxuICBpZiAoICFmbiB8fCByZWVudHJ5KSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAge1xuICAgIHZhciBmcmFtZSA9IGNvbXBvbmVudEZyYW1lQ2FjaGUuZ2V0KGZuKTtcblxuICAgIGlmIChmcmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZnJhbWU7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNvbnRyb2w7XG4gIHJlZW50cnkgPSB0cnVlO1xuICB2YXIgcHJldmlvdXNQcmVwYXJlU3RhY2tUcmFjZSA9IEVycm9yLnByZXBhcmVTdGFja1RyYWNlOyAvLyAkRmxvd0ZpeE1lIEl0IGRvZXMgYWNjZXB0IHVuZGVmaW5lZC5cblxuICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IHVuZGVmaW5lZDtcbiAgdmFyIHByZXZpb3VzRGlzcGF0Y2hlcjtcblxuICB7XG4gICAgcHJldmlvdXNEaXNwYXRjaGVyID0gUmVhY3RDdXJyZW50RGlzcGF0Y2hlci5jdXJyZW50OyAvLyBTZXQgdGhlIGRpc3BhdGNoZXIgaW4gREVWIGJlY2F1c2UgdGhpcyBtaWdodCBiZSBjYWxsIGluIHRoZSByZW5kZXIgZnVuY3Rpb25cbiAgICAvLyBmb3Igd2FybmluZ3MuXG5cbiAgICBSZWFjdEN1cnJlbnREaXNwYXRjaGVyLmN1cnJlbnQgPSBudWxsO1xuICAgIGRpc2FibGVMb2dzKCk7XG4gIH1cblxuICB0cnkge1xuICAgIC8vIFRoaXMgc2hvdWxkIHRocm93LlxuICAgIGlmIChjb25zdHJ1Y3QpIHtcbiAgICAgIC8vIFNvbWV0aGluZyBzaG91bGQgYmUgc2V0dGluZyB0aGUgcHJvcHMgaW4gdGhlIGNvbnN0cnVjdG9yLlxuICAgICAgdmFyIEZha2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRocm93IEVycm9yKCk7XG4gICAgICB9OyAvLyAkRmxvd0ZpeE1lXG5cblxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZha2UucHJvdG90eXBlLCAncHJvcHMnLCB7XG4gICAgICAgIHNldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIC8vIFdlIHVzZSBhIHRocm93aW5nIHNldHRlciBpbnN0ZWFkIG9mIGZyb3plbiBvciBub24td3JpdGFibGUgcHJvcHNcbiAgICAgICAgICAvLyBiZWNhdXNlIHRoYXQgd29uJ3QgdGhyb3cgaW4gYSBub24tc3RyaWN0IG1vZGUgZnVuY3Rpb24uXG4gICAgICAgICAgdGhyb3cgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gJ29iamVjdCcgJiYgUmVmbGVjdC5jb25zdHJ1Y3QpIHtcbiAgICAgICAgLy8gV2UgY29uc3RydWN0IGEgZGlmZmVyZW50IGNvbnRyb2wgZm9yIHRoaXMgY2FzZSB0byBpbmNsdWRlIGFueSBleHRyYVxuICAgICAgICAvLyBmcmFtZXMgYWRkZWQgYnkgdGhlIGNvbnN0cnVjdCBjYWxsLlxuICAgICAgICB0cnkge1xuICAgICAgICAgIFJlZmxlY3QuY29uc3RydWN0KEZha2UsIFtdKTtcbiAgICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICAgIGNvbnRyb2wgPSB4O1xuICAgICAgICB9XG5cbiAgICAgICAgUmVmbGVjdC5jb25zdHJ1Y3QoZm4sIFtdLCBGYWtlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgRmFrZS5jYWxsKCk7XG4gICAgICAgIH0gY2F0Y2ggKHgpIHtcbiAgICAgICAgICBjb250cm9sID0geDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZuLmNhbGwoRmFrZS5wcm90b3R5cGUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0cnkge1xuICAgICAgICB0aHJvdyBFcnJvcigpO1xuICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICBjb250cm9sID0geDtcbiAgICAgIH1cblxuICAgICAgZm4oKTtcbiAgICB9XG4gIH0gY2F0Y2ggKHNhbXBsZSkge1xuICAgIC8vIFRoaXMgaXMgaW5saW5lZCBtYW51YWxseSBiZWNhdXNlIGNsb3N1cmUgZG9lc24ndCBkbyBpdCBmb3IgdXMuXG4gICAgaWYgKHNhbXBsZSAmJiBjb250cm9sICYmIHR5cGVvZiBzYW1wbGUuc3RhY2sgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBUaGlzIGV4dHJhY3RzIHRoZSBmaXJzdCBmcmFtZSBmcm9tIHRoZSBzYW1wbGUgdGhhdCBpc24ndCBhbHNvIGluIHRoZSBjb250cm9sLlxuICAgICAgLy8gU2tpcHBpbmcgb25lIGZyYW1lIHRoYXQgd2UgYXNzdW1lIGlzIHRoZSBmcmFtZSB0aGF0IGNhbGxzIHRoZSB0d28uXG4gICAgICB2YXIgc2FtcGxlTGluZXMgPSBzYW1wbGUuc3RhY2suc3BsaXQoJ1xcbicpO1xuICAgICAgdmFyIGNvbnRyb2xMaW5lcyA9IGNvbnRyb2wuc3RhY2suc3BsaXQoJ1xcbicpO1xuICAgICAgdmFyIHMgPSBzYW1wbGVMaW5lcy5sZW5ndGggLSAxO1xuICAgICAgdmFyIGMgPSBjb250cm9sTGluZXMubGVuZ3RoIC0gMTtcblxuICAgICAgd2hpbGUgKHMgPj0gMSAmJiBjID49IDAgJiYgc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuICAgICAgICAvLyBXZSBleHBlY3QgYXQgbGVhc3Qgb25lIHN0YWNrIGZyYW1lIHRvIGJlIHNoYXJlZC5cbiAgICAgICAgLy8gVHlwaWNhbGx5IHRoaXMgd2lsbCBiZSB0aGUgcm9vdCBtb3N0IG9uZS4gSG93ZXZlciwgc3RhY2sgZnJhbWVzIG1heSBiZVxuICAgICAgICAvLyBjdXQgb2ZmIGR1ZSB0byBtYXhpbXVtIHN0YWNrIGxpbWl0cy4gSW4gdGhpcyBjYXNlLCBvbmUgbWF5YmUgY3V0IG9mZlxuICAgICAgICAvLyBlYXJsaWVyIHRoYW4gdGhlIG90aGVyLiBXZSBhc3N1bWUgdGhhdCB0aGUgc2FtcGxlIGlzIGxvbmdlciBvciB0aGUgc2FtZVxuICAgICAgICAvLyBhbmQgdGhlcmUgZm9yIGN1dCBvZmYgZWFybGllci4gU28gd2Ugc2hvdWxkIGZpbmQgdGhlIHJvb3QgbW9zdCBmcmFtZSBpblxuICAgICAgICAvLyB0aGUgc2FtcGxlIHNvbWV3aGVyZSBpbiB0aGUgY29udHJvbC5cbiAgICAgICAgYy0tO1xuICAgICAgfVxuXG4gICAgICBmb3IgKDsgcyA+PSAxICYmIGMgPj0gMDsgcy0tLCBjLS0pIHtcbiAgICAgICAgLy8gTmV4dCB3ZSBmaW5kIHRoZSBmaXJzdCBvbmUgdGhhdCBpc24ndCB0aGUgc2FtZSB3aGljaCBzaG91bGQgYmUgdGhlXG4gICAgICAgIC8vIGZyYW1lIHRoYXQgY2FsbGVkIG91ciBzYW1wbGUgZnVuY3Rpb24gYW5kIHRoZSBjb250cm9sLlxuICAgICAgICBpZiAoc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuICAgICAgICAgIC8vIEluIFY4LCB0aGUgZmlyc3QgbGluZSBpcyBkZXNjcmliaW5nIHRoZSBtZXNzYWdlIGJ1dCBvdGhlciBWTXMgZG9uJ3QuXG4gICAgICAgICAgLy8gSWYgd2UncmUgYWJvdXQgdG8gcmV0dXJuIHRoZSBmaXJzdCBsaW5lLCBhbmQgdGhlIGNvbnRyb2wgaXMgYWxzbyBvbiB0aGUgc2FtZVxuICAgICAgICAgIC8vIGxpbmUsIHRoYXQncyBhIHByZXR0eSBnb29kIGluZGljYXRvciB0aGF0IG91ciBzYW1wbGUgdGhyZXcgYXQgc2FtZSBsaW5lIGFzXG4gICAgICAgICAgLy8gdGhlIGNvbnRyb2wuIEkuZS4gYmVmb3JlIHdlIGVudGVyZWQgdGhlIHNhbXBsZSBmcmFtZS4gU28gd2UgaWdub3JlIHRoaXMgcmVzdWx0LlxuICAgICAgICAgIC8vIFRoaXMgY2FuIGhhcHBlbiBpZiB5b3UgcGFzc2VkIGEgY2xhc3MgdG8gZnVuY3Rpb24gY29tcG9uZW50LCBvciBub24tZnVuY3Rpb24uXG4gICAgICAgICAgaWYgKHMgIT09IDEgfHwgYyAhPT0gMSkge1xuICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICBzLS07XG4gICAgICAgICAgICAgIGMtLTsgLy8gV2UgbWF5IHN0aWxsIGhhdmUgc2ltaWxhciBpbnRlcm1lZGlhdGUgZnJhbWVzIGZyb20gdGhlIGNvbnN0cnVjdCBjYWxsLlxuICAgICAgICAgICAgICAvLyBUaGUgbmV4dCBvbmUgdGhhdCBpc24ndCB0aGUgc2FtZSBzaG91bGQgYmUgb3VyIG1hdGNoIHRob3VnaC5cblxuICAgICAgICAgICAgICBpZiAoYyA8IDAgfHwgc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuICAgICAgICAgICAgICAgIC8vIFY4IGFkZHMgYSBcIm5ld1wiIHByZWZpeCBmb3IgbmF0aXZlIGNsYXNzZXMuIExldCdzIHJlbW92ZSBpdCB0byBtYWtlIGl0IHByZXR0aWVyLlxuICAgICAgICAgICAgICAgIHZhciBfZnJhbWUgPSAnXFxuJyArIHNhbXBsZUxpbmVzW3NdLnJlcGxhY2UoJyBhdCBuZXcgJywgJyBhdCAnKTsgLy8gSWYgb3VyIGNvbXBvbmVudCBmcmFtZSBpcyBsYWJlbGVkIFwiPGFub255bW91cz5cIlxuICAgICAgICAgICAgICAgIC8vIGJ1dCB3ZSBoYXZlIGEgdXNlci1wcm92aWRlZCBcImRpc3BsYXlOYW1lXCJcbiAgICAgICAgICAgICAgICAvLyBzcGxpY2UgaXQgaW4gdG8gbWFrZSB0aGUgc3RhY2sgbW9yZSByZWFkYWJsZS5cblxuXG4gICAgICAgICAgICAgICAgaWYgKGZuLmRpc3BsYXlOYW1lICYmIF9mcmFtZS5pbmNsdWRlcygnPGFub255bW91cz4nKSkge1xuICAgICAgICAgICAgICAgICAgX2ZyYW1lID0gX2ZyYW1lLnJlcGxhY2UoJzxhbm9ueW1vdXM+JywgZm4uZGlzcGxheU5hbWUpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50RnJhbWVDYWNoZS5zZXQoZm4sIF9mcmFtZSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSAvLyBSZXR1cm4gdGhlIGxpbmUgd2UgZm91bmQuXG5cblxuICAgICAgICAgICAgICAgIHJldHVybiBfZnJhbWU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gd2hpbGUgKHMgPj0gMSAmJiBjID49IDApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IGZpbmFsbHkge1xuICAgIHJlZW50cnkgPSBmYWxzZTtcblxuICAgIHtcbiAgICAgIFJlYWN0Q3VycmVudERpc3BhdGNoZXIuY3VycmVudCA9IHByZXZpb3VzRGlzcGF0Y2hlcjtcbiAgICAgIHJlZW5hYmxlTG9ncygpO1xuICAgIH1cblxuICAgIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gcHJldmlvdXNQcmVwYXJlU3RhY2tUcmFjZTtcbiAgfSAvLyBGYWxsYmFjayB0byBqdXN0IHVzaW5nIHRoZSBuYW1lIGlmIHdlIGNvdWxkbid0IG1ha2UgaXQgdGhyb3cuXG5cblxuICB2YXIgbmFtZSA9IGZuID8gZm4uZGlzcGxheU5hbWUgfHwgZm4ubmFtZSA6ICcnO1xuICB2YXIgc3ludGhldGljRnJhbWUgPSBuYW1lID8gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUobmFtZSkgOiAnJztcblxuICB7XG4gICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY29tcG9uZW50RnJhbWVDYWNoZS5zZXQoZm4sIHN5bnRoZXRpY0ZyYW1lKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3ludGhldGljRnJhbWU7XG59XG5mdW5jdGlvbiBkZXNjcmliZUZ1bmN0aW9uQ29tcG9uZW50RnJhbWUoZm4sIHNvdXJjZSwgb3duZXJGbikge1xuICB7XG4gICAgcmV0dXJuIGRlc2NyaWJlTmF0aXZlQ29tcG9uZW50RnJhbWUoZm4sIGZhbHNlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaG91bGRDb25zdHJ1Y3QoQ29tcG9uZW50KSB7XG4gIHZhciBwcm90b3R5cGUgPSBDb21wb25lbnQucHJvdG90eXBlO1xuICByZXR1cm4gISEocHJvdG90eXBlICYmIHByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KTtcbn1cblxuZnVuY3Rpb24gZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWKHR5cGUsIHNvdXJjZSwgb3duZXJGbikge1xuXG4gIGlmICh0eXBlID09IG51bGwpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICB7XG4gICAgICByZXR1cm4gZGVzY3JpYmVOYXRpdmVDb21wb25lbnRGcmFtZSh0eXBlLCBzaG91bGRDb25zdHJ1Y3QodHlwZSkpO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUodHlwZSk7XG4gIH1cblxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX1RZUEU6XG4gICAgICByZXR1cm4gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUoJ1N1c3BlbnNlJyk7XG5cbiAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRTpcbiAgICAgIHJldHVybiBkZXNjcmliZUJ1aWx0SW5Db21wb25lbnRGcmFtZSgnU3VzcGVuc2VMaXN0Jyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgc3dpdGNoICh0eXBlLiQkdHlwZW9mKSB7XG4gICAgICBjYXNlIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU6XG4gICAgICAgIHJldHVybiBkZXNjcmliZUZ1bmN0aW9uQ29tcG9uZW50RnJhbWUodHlwZS5yZW5kZXIpO1xuXG4gICAgICBjYXNlIFJFQUNUX01FTU9fVFlQRTpcbiAgICAgICAgLy8gTWVtbyBtYXkgY29udGFpbiBhbnkgY29tcG9uZW50IHR5cGUgc28gd2UgcmVjdXJzaXZlbHkgcmVzb2x2ZSBpdC5cbiAgICAgICAgcmV0dXJuIGRlc2NyaWJlVW5rbm93bkVsZW1lbnRUeXBlRnJhbWVJbkRFVih0eXBlLnR5cGUsIHNvdXJjZSwgb3duZXJGbik7XG5cbiAgICAgIGNhc2UgUkVBQ1RfTEFaWV9UWVBFOlxuICAgICAgICB7XG4gICAgICAgICAgdmFyIGxhenlDb21wb25lbnQgPSB0eXBlO1xuICAgICAgICAgIHZhciBwYXlsb2FkID0gbGF6eUNvbXBvbmVudC5fcGF5bG9hZDtcbiAgICAgICAgICB2YXIgaW5pdCA9IGxhenlDb21wb25lbnQuX2luaXQ7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gTGF6eSBtYXkgY29udGFpbiBhbnkgY29tcG9uZW50IHR5cGUgc28gd2UgcmVjdXJzaXZlbHkgcmVzb2x2ZSBpdC5cbiAgICAgICAgICAgIHJldHVybiBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYoaW5pdChwYXlsb2FkKSwgc291cmNlLCBvd25lckZuKTtcbiAgICAgICAgICB9IGNhdGNoICh4KSB7fVxuICAgICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuICcnO1xufVxuXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG52YXIgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0RGVidWdDdXJyZW50RnJhbWU7XG5cbmZ1bmN0aW9uIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KGVsZW1lbnQpIHtcbiAge1xuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICB2YXIgb3duZXIgPSBlbGVtZW50Ll9vd25lcjtcbiAgICAgIHZhciBzdGFjayA9IGRlc2NyaWJlVW5rbm93bkVsZW1lbnRUeXBlRnJhbWVJbkRFVihlbGVtZW50LnR5cGUsIGVsZW1lbnQuX3NvdXJjZSwgb3duZXIgPyBvd25lci50eXBlIDogbnVsbCk7XG4gICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lLnNldEV4dHJhU3RhY2tGcmFtZShzdGFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIFJlYWN0RGVidWdDdXJyZW50RnJhbWUuc2V0RXh0cmFTdGFja0ZyYW1lKG51bGwpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGVsZW1lbnQpIHtcbiAge1xuICAgIC8vICRGbG93Rml4TWUgVGhpcyBpcyBva2F5IGJ1dCBGbG93IGRvZXNuJ3Qga25vdyBpdC5cbiAgICB2YXIgaGFzID0gRnVuY3Rpb24uY2FsbC5iaW5kKGhhc093blByb3BlcnR5KTtcblxuICAgIGZvciAodmFyIHR5cGVTcGVjTmFtZSBpbiB0eXBlU3BlY3MpIHtcbiAgICAgIGlmIChoYXModHlwZVNwZWNzLCB0eXBlU3BlY05hbWUpKSB7XG4gICAgICAgIHZhciBlcnJvciQxID0gdm9pZCAwOyAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgaXMgaW50ZW50aW9uYWxseSBhbiBpbnZhcmlhbnQgdGhhdCBnZXRzIGNhdWdodC4gSXQncyB0aGUgc2FtZVxuICAgICAgICAgIC8vIGJlaGF2aW9yIGFzIHdpdGhvdXQgdGhpcyBzdGF0ZW1lbnQgZXhjZXB0IHdpdGggYSBiZXR0ZXIgbWVzc2FnZS5cbiAgICAgICAgICBpZiAodHlwZW9mIHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaW50ZXJuYWwvcHJvZC1lcnJvci1jb2Rlc1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogJyArIGxvY2F0aW9uICsgJyB0eXBlIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgJyArICdpdCBtdXN0IGJlIGEgZnVuY3Rpb24sIHVzdWFsbHkgZnJvbSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UsIGJ1dCByZWNlaXZlZCBgJyArIHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSArICdgLicgKyAnVGhpcyBvZnRlbiBoYXBwZW5zIGJlY2F1c2Ugb2YgdHlwb3Mgc3VjaCBhcyBgUHJvcFR5cGVzLmZ1bmN0aW9uYCBpbnN0ZWFkIG9mIGBQcm9wVHlwZXMuZnVuY2AuJyk7XG4gICAgICAgICAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBlcnJvciQxID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnKTtcbiAgICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgICBlcnJvciQxID0gZXg7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXJyb3IkMSAmJiAhKGVycm9yJDEgaW5zdGFuY2VvZiBFcnJvcikpIHtcbiAgICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudChlbGVtZW50KTtcblxuICAgICAgICAgIGVycm9yKCclczogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICVzJyArICcgYCVzYCBpcyBpbnZhbGlkOyB0aGUgdHlwZSBjaGVja2VyICcgKyAnZnVuY3Rpb24gbXVzdCByZXR1cm4gYG51bGxgIG9yIGFuIGBFcnJvcmAgYnV0IHJldHVybmVkIGEgJXMuICcgKyAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArICdjcmVhdG9yIChhcnJheU9mLCBpbnN0YW5jZU9mLCBvYmplY3RPZiwgb25lT2YsIG9uZU9mVHlwZSwgYW5kICcgKyAnc2hhcGUgYWxsIHJlcXVpcmUgYW4gYXJndW1lbnQpLicsIGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJywgbG9jYXRpb24sIHR5cGVTcGVjTmFtZSwgdHlwZW9mIGVycm9yJDEpO1xuXG4gICAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQobnVsbCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXJyb3IkMSBpbnN0YW5jZW9mIEVycm9yICYmICEoZXJyb3IkMS5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAvLyBPbmx5IG1vbml0b3IgdGhpcyBmYWlsdXJlIG9uY2UgYmVjYXVzZSB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiB0aGVcbiAgICAgICAgICAvLyBzYW1lIGVycm9yLlxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvciQxLm1lc3NhZ2VdID0gdHJ1ZTtcbiAgICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudChlbGVtZW50KTtcblxuICAgICAgICAgIGVycm9yKCdGYWlsZWQgJXMgdHlwZTogJXMnLCBsb2NhdGlvbiwgZXJyb3IkMS5tZXNzYWdlKTtcblxuICAgICAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KG51bGwpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbnZhciBpc0FycmF5SW1wbCA9IEFycmF5LmlzQXJyYXk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZWRlY2xhcmVcblxuZnVuY3Rpb24gaXNBcnJheShhKSB7XG4gIHJldHVybiBpc0FycmF5SW1wbChhKTtcbn1cblxuLypcbiAqIFRoZSBgJycgKyB2YWx1ZWAgcGF0dGVybiAodXNlZCBpbiBpbiBwZXJmLXNlbnNpdGl2ZSBjb2RlKSB0aHJvd3MgZm9yIFN5bWJvbFxuICogYW5kIFRlbXBvcmFsLiogdHlwZXMuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvcHVsbC8yMjA2NC5cbiAqXG4gKiBUaGUgZnVuY3Rpb25zIGluIHRoaXMgbW9kdWxlIHdpbGwgdGhyb3cgYW4gZWFzaWVyLXRvLXVuZGVyc3RhbmQsXG4gKiBlYXNpZXItdG8tZGVidWcgZXhjZXB0aW9uIHdpdGggYSBjbGVhciBlcnJvcnMgbWVzc2FnZSBtZXNzYWdlIGV4cGxhaW5pbmcgdGhlXG4gKiBwcm9ibGVtLiAoSW5zdGVhZCBvZiBhIGNvbmZ1c2luZyBleGNlcHRpb24gdGhyb3duIGluc2lkZSB0aGUgaW1wbGVtZW50YXRpb25cbiAqIG9mIHRoZSBgdmFsdWVgIG9iamVjdCkuXG4gKi9cbi8vICRGbG93Rml4TWUgb25seSBjYWxsZWQgaW4gREVWLCBzbyB2b2lkIHJldHVybiBpcyBub3QgcG9zc2libGUuXG5mdW5jdGlvbiB0eXBlTmFtZSh2YWx1ZSkge1xuICB7XG4gICAgLy8gdG9TdHJpbmdUYWcgaXMgbmVlZGVkIGZvciBuYW1lc3BhY2VkIHR5cGVzIGxpa2UgVGVtcG9yYWwuSW5zdGFudFxuICAgIHZhciBoYXNUb1N0cmluZ1RhZyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLnRvU3RyaW5nVGFnO1xuICAgIHZhciB0eXBlID0gaGFzVG9TdHJpbmdUYWcgJiYgdmFsdWVbU3ltYm9sLnRvU3RyaW5nVGFnXSB8fCB2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lIHx8ICdPYmplY3QnO1xuICAgIHJldHVybiB0eXBlO1xuICB9XG59IC8vICRGbG93Rml4TWUgb25seSBjYWxsZWQgaW4gREVWLCBzbyB2b2lkIHJldHVybiBpcyBub3QgcG9zc2libGUuXG5cblxuZnVuY3Rpb24gd2lsbENvZXJjaW9uVGhyb3codmFsdWUpIHtcbiAge1xuICAgIHRyeSB7XG4gICAgICB0ZXN0U3RyaW5nQ29lcmNpb24odmFsdWUpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiB0ZXN0U3RyaW5nQ29lcmNpb24odmFsdWUpIHtcbiAgLy8gSWYgeW91IGVuZGVkIHVwIGhlcmUgYnkgZm9sbG93aW5nIGFuIGV4Y2VwdGlvbiBjYWxsIHN0YWNrLCBoZXJlJ3Mgd2hhdCdzXG4gIC8vIGhhcHBlbmVkOiB5b3Ugc3VwcGxpZWQgYW4gb2JqZWN0IG9yIHN5bWJvbCB2YWx1ZSB0byBSZWFjdCAoYXMgYSBwcm9wLCBrZXksXG4gIC8vIERPTSBhdHRyaWJ1dGUsIENTUyBwcm9wZXJ0eSwgc3RyaW5nIHJlZiwgZXRjLikgYW5kIHdoZW4gUmVhY3QgdHJpZWQgdG9cbiAgLy8gY29lcmNlIGl0IHRvIGEgc3RyaW5nIHVzaW5nIGAnJyArIHZhbHVlYCwgYW4gZXhjZXB0aW9uIHdhcyB0aHJvd24uXG4gIC8vXG4gIC8vIFRoZSBtb3N0IGNvbW1vbiB0eXBlcyB0aGF0IHdpbGwgY2F1c2UgdGhpcyBleGNlcHRpb24gYXJlIGBTeW1ib2xgIGluc3RhbmNlc1xuICAvLyBhbmQgVGVtcG9yYWwgb2JqZWN0cyBsaWtlIGBUZW1wb3JhbC5JbnN0YW50YC4gQnV0IGFueSBvYmplY3QgdGhhdCBoYXMgYVxuICAvLyBgdmFsdWVPZmAgb3IgYFtTeW1ib2wudG9QcmltaXRpdmVdYCBtZXRob2QgdGhhdCB0aHJvd3Mgd2lsbCBhbHNvIGNhdXNlIHRoaXNcbiAgLy8gZXhjZXB0aW9uLiAoTGlicmFyeSBhdXRob3JzIGRvIHRoaXMgdG8gcHJldmVudCB1c2VycyBmcm9tIHVzaW5nIGJ1aWx0LWluXG4gIC8vIG51bWVyaWMgb3BlcmF0b3JzIGxpa2UgYCtgIG9yIGNvbXBhcmlzb24gb3BlcmF0b3JzIGxpa2UgYD49YCBiZWNhdXNlIGN1c3RvbVxuICAvLyBtZXRob2RzIGFyZSBuZWVkZWQgdG8gcGVyZm9ybSBhY2N1cmF0ZSBhcml0aG1ldGljIG9yIGNvbXBhcmlzb24uKVxuICAvL1xuICAvLyBUbyBmaXggdGhlIHByb2JsZW0sIGNvZXJjZSB0aGlzIG9iamVjdCBvciBzeW1ib2wgdmFsdWUgdG8gYSBzdHJpbmcgYmVmb3JlXG4gIC8vIHBhc3NpbmcgaXQgdG8gUmVhY3QuIFRoZSBtb3N0IHJlbGlhYmxlIHdheSBpcyB1c3VhbGx5IGBTdHJpbmcodmFsdWUpYC5cbiAgLy9cbiAgLy8gVG8gZmluZCB3aGljaCB2YWx1ZSBpcyB0aHJvd2luZywgY2hlY2sgdGhlIGJyb3dzZXIgb3IgZGVidWdnZXIgY29uc29sZS5cbiAgLy8gQmVmb3JlIHRoaXMgZXhjZXB0aW9uIHdhcyB0aHJvd24sIHRoZXJlIHNob3VsZCBiZSBgY29uc29sZS5lcnJvcmAgb3V0cHV0XG4gIC8vIHRoYXQgc2hvd3MgdGhlIHR5cGUgKFN5bWJvbCwgVGVtcG9yYWwuUGxhaW5EYXRlLCBldGMuKSB0aGF0IGNhdXNlZCB0aGVcbiAgLy8gcHJvYmxlbSBhbmQgaG93IHRoYXQgdHlwZSB3YXMgdXNlZDoga2V5LCBhdHJyaWJ1dGUsIGlucHV0IHZhbHVlIHByb3AsIGV0Yy5cbiAgLy8gSW4gbW9zdCBjYXNlcywgdGhpcyBjb25zb2xlIG91dHB1dCBhbHNvIHNob3dzIHRoZSBjb21wb25lbnQgYW5kIGl0c1xuICAvLyBhbmNlc3RvciBjb21wb25lbnRzIHdoZXJlIHRoZSBleGNlcHRpb24gaGFwcGVuZWQuXG4gIC8vXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1pbnRlcm5hbC9zYWZlLXN0cmluZy1jb2VyY2lvblxuICByZXR1cm4gJycgKyB2YWx1ZTtcbn1cbmZ1bmN0aW9uIGNoZWNrS2V5U3RyaW5nQ29lcmNpb24odmFsdWUpIHtcbiAge1xuICAgIGlmICh3aWxsQ29lcmNpb25UaHJvdyh2YWx1ZSkpIHtcbiAgICAgIGVycm9yKCdUaGUgcHJvdmlkZWQga2V5IGlzIGFuIHVuc3VwcG9ydGVkIHR5cGUgJXMuJyArICcgVGhpcyB2YWx1ZSBtdXN0IGJlIGNvZXJjZWQgdG8gYSBzdHJpbmcgYmVmb3JlIGJlZm9yZSB1c2luZyBpdCBoZXJlLicsIHR5cGVOYW1lKHZhbHVlKSk7XG5cbiAgICAgIHJldHVybiB0ZXN0U3RyaW5nQ29lcmNpb24odmFsdWUpOyAvLyB0aHJvdyAodG8gaGVscCBjYWxsZXJzIGZpbmQgdHJvdWJsZXNob290aW5nIGNvbW1lbnRzKVxuICAgIH1cbiAgfVxufVxuXG52YXIgUmVhY3RDdXJyZW50T3duZXIgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdEN1cnJlbnRPd25lcjtcbnZhciBSRVNFUlZFRF9QUk9QUyA9IHtcbiAga2V5OiB0cnVlLFxuICByZWY6IHRydWUsXG4gIF9fc2VsZjogdHJ1ZSxcbiAgX19zb3VyY2U6IHRydWVcbn07XG52YXIgc3BlY2lhbFByb3BLZXlXYXJuaW5nU2hvd247XG52YXIgc3BlY2lhbFByb3BSZWZXYXJuaW5nU2hvd247XG52YXIgZGlkV2FybkFib3V0U3RyaW5nUmVmcztcblxue1xuICBkaWRXYXJuQWJvdXRTdHJpbmdSZWZzID0ge307XG59XG5cbmZ1bmN0aW9uIGhhc1ZhbGlkUmVmKGNvbmZpZykge1xuICB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoY29uZmlnLCAncmVmJykpIHtcbiAgICAgIHZhciBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGNvbmZpZywgJ3JlZicpLmdldDtcblxuICAgICAgaWYgKGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb25maWcucmVmICE9PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGhhc1ZhbGlkS2V5KGNvbmZpZykge1xuICB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoY29uZmlnLCAna2V5JykpIHtcbiAgICAgIHZhciBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGNvbmZpZywgJ2tleScpLmdldDtcblxuICAgICAgaWYgKGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb25maWcua2V5ICE9PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIHdhcm5JZlN0cmluZ1JlZkNhbm5vdEJlQXV0b0NvbnZlcnRlZChjb25maWcsIHNlbGYpIHtcbiAge1xuICAgIGlmICh0eXBlb2YgY29uZmlnLnJlZiA9PT0gJ3N0cmluZycgJiYgUmVhY3RDdXJyZW50T3duZXIuY3VycmVudCAmJiBzZWxmICYmIFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQuc3RhdGVOb2RlICE9PSBzZWxmKSB7XG4gICAgICB2YXIgY29tcG9uZW50TmFtZSA9IGdldENvbXBvbmVudE5hbWVGcm9tVHlwZShSZWFjdEN1cnJlbnRPd25lci5jdXJyZW50LnR5cGUpO1xuXG4gICAgICBpZiAoIWRpZFdhcm5BYm91dFN0cmluZ1JlZnNbY29tcG9uZW50TmFtZV0pIHtcbiAgICAgICAgZXJyb3IoJ0NvbXBvbmVudCBcIiVzXCIgY29udGFpbnMgdGhlIHN0cmluZyByZWYgXCIlc1wiLiAnICsgJ1N1cHBvcnQgZm9yIHN0cmluZyByZWZzIHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSBtYWpvciByZWxlYXNlLiAnICsgJ1RoaXMgY2FzZSBjYW5ub3QgYmUgYXV0b21hdGljYWxseSBjb252ZXJ0ZWQgdG8gYW4gYXJyb3cgZnVuY3Rpb24uICcgKyAnV2UgYXNrIHlvdSB0byBtYW51YWxseSBmaXggdGhpcyBjYXNlIGJ5IHVzaW5nIHVzZVJlZigpIG9yIGNyZWF0ZVJlZigpIGluc3RlYWQuICcgKyAnTGVhcm4gbW9yZSBhYm91dCB1c2luZyByZWZzIHNhZmVseSBoZXJlOiAnICsgJ2h0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9zdHJpY3QtbW9kZS1zdHJpbmctcmVmJywgZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQudHlwZSksIGNvbmZpZy5yZWYpO1xuXG4gICAgICAgIGRpZFdhcm5BYm91dFN0cmluZ1JlZnNbY29tcG9uZW50TmFtZV0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBkZWZpbmVLZXlQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpIHtcbiAge1xuICAgIHZhciB3YXJuQWJvdXRBY2Nlc3NpbmdLZXkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIXNwZWNpYWxQcm9wS2V5V2FybmluZ1Nob3duKSB7XG4gICAgICAgIHNwZWNpYWxQcm9wS2V5V2FybmluZ1Nob3duID0gdHJ1ZTtcblxuICAgICAgICBlcnJvcignJXM6IGBrZXlgIGlzIG5vdCBhIHByb3AuIFRyeWluZyB0byBhY2Nlc3MgaXQgd2lsbCByZXN1bHQgJyArICdpbiBgdW5kZWZpbmVkYCBiZWluZyByZXR1cm5lZC4gSWYgeW91IG5lZWQgdG8gYWNjZXNzIHRoZSBzYW1lICcgKyAndmFsdWUgd2l0aGluIHRoZSBjaGlsZCBjb21wb25lbnQsIHlvdSBzaG91bGQgcGFzcyBpdCBhcyBhIGRpZmZlcmVudCAnICsgJ3Byb3AuIChodHRwczovL3JlYWN0anMub3JnL2xpbmsvc3BlY2lhbC1wcm9wcyknLCBkaXNwbGF5TmFtZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHdhcm5BYm91dEFjY2Vzc2luZ0tleS5pc1JlYWN0V2FybmluZyA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3BzLCAna2V5Jywge1xuICAgICAgZ2V0OiB3YXJuQWJvdXRBY2Nlc3NpbmdLZXksXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBkZWZpbmVSZWZQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpIHtcbiAge1xuICAgIHZhciB3YXJuQWJvdXRBY2Nlc3NpbmdSZWYgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIXNwZWNpYWxQcm9wUmVmV2FybmluZ1Nob3duKSB7XG4gICAgICAgIHNwZWNpYWxQcm9wUmVmV2FybmluZ1Nob3duID0gdHJ1ZTtcblxuICAgICAgICBlcnJvcignJXM6IGByZWZgIGlzIG5vdCBhIHByb3AuIFRyeWluZyB0byBhY2Nlc3MgaXQgd2lsbCByZXN1bHQgJyArICdpbiBgdW5kZWZpbmVkYCBiZWluZyByZXR1cm5lZC4gSWYgeW91IG5lZWQgdG8gYWNjZXNzIHRoZSBzYW1lICcgKyAndmFsdWUgd2l0aGluIHRoZSBjaGlsZCBjb21wb25lbnQsIHlvdSBzaG91bGQgcGFzcyBpdCBhcyBhIGRpZmZlcmVudCAnICsgJ3Byb3AuIChodHRwczovL3JlYWN0anMub3JnL2xpbmsvc3BlY2lhbC1wcm9wcyknLCBkaXNwbGF5TmFtZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHdhcm5BYm91dEFjY2Vzc2luZ1JlZi5pc1JlYWN0V2FybmluZyA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3BzLCAncmVmJywge1xuICAgICAgZ2V0OiB3YXJuQWJvdXRBY2Nlc3NpbmdSZWYsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgfVxufVxuLyoqXG4gKiBGYWN0b3J5IG1ldGhvZCB0byBjcmVhdGUgYSBuZXcgUmVhY3QgZWxlbWVudC4gVGhpcyBubyBsb25nZXIgYWRoZXJlcyB0b1xuICogdGhlIGNsYXNzIHBhdHRlcm4sIHNvIGRvIG5vdCB1c2UgbmV3IHRvIGNhbGwgaXQuIEFsc28sIGluc3RhbmNlb2YgY2hlY2tcbiAqIHdpbGwgbm90IHdvcmsuIEluc3RlYWQgdGVzdCAkJHR5cGVvZiBmaWVsZCBhZ2FpbnN0IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSB0byBjaGVja1xuICogaWYgc29tZXRoaW5nIGlzIGEgUmVhY3QgRWxlbWVudC5cbiAqXG4gKiBAcGFyYW0geyp9IHR5cGVcbiAqIEBwYXJhbSB7Kn0gcHJvcHNcbiAqIEBwYXJhbSB7Kn0ga2V5XG4gKiBAcGFyYW0ge3N0cmluZ3xvYmplY3R9IHJlZlxuICogQHBhcmFtIHsqfSBvd25lclxuICogQHBhcmFtIHsqfSBzZWxmIEEgKnRlbXBvcmFyeSogaGVscGVyIHRvIGRldGVjdCBwbGFjZXMgd2hlcmUgYHRoaXNgIGlzXG4gKiBkaWZmZXJlbnQgZnJvbSB0aGUgYG93bmVyYCB3aGVuIFJlYWN0LmNyZWF0ZUVsZW1lbnQgaXMgY2FsbGVkLCBzbyB0aGF0IHdlXG4gKiBjYW4gd2Fybi4gV2Ugd2FudCB0byBnZXQgcmlkIG9mIG93bmVyIGFuZCByZXBsYWNlIHN0cmluZyBgcmVmYHMgd2l0aCBhcnJvd1xuICogZnVuY3Rpb25zLCBhbmQgYXMgbG9uZyBhcyBgdGhpc2AgYW5kIG93bmVyIGFyZSB0aGUgc2FtZSwgdGhlcmUgd2lsbCBiZSBub1xuICogY2hhbmdlIGluIGJlaGF2aW9yLlxuICogQHBhcmFtIHsqfSBzb3VyY2UgQW4gYW5ub3RhdGlvbiBvYmplY3QgKGFkZGVkIGJ5IGEgdHJhbnNwaWxlciBvciBvdGhlcndpc2UpXG4gKiBpbmRpY2F0aW5nIGZpbGVuYW1lLCBsaW5lIG51bWJlciwgYW5kL29yIG90aGVyIGluZm9ybWF0aW9uLlxuICogQGludGVybmFsXG4gKi9cblxuXG52YXIgUmVhY3RFbGVtZW50ID0gZnVuY3Rpb24gKHR5cGUsIGtleSwgcmVmLCBzZWxmLCBzb3VyY2UsIG93bmVyLCBwcm9wcykge1xuICB2YXIgZWxlbWVudCA9IHtcbiAgICAvLyBUaGlzIHRhZyBhbGxvd3MgdXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBhcyBhIFJlYWN0IEVsZW1lbnRcbiAgICAkJHR5cGVvZjogUkVBQ1RfRUxFTUVOVF9UWVBFLFxuICAgIC8vIEJ1aWx0LWluIHByb3BlcnRpZXMgdGhhdCBiZWxvbmcgb24gdGhlIGVsZW1lbnRcbiAgICB0eXBlOiB0eXBlLFxuICAgIGtleToga2V5LFxuICAgIHJlZjogcmVmLFxuICAgIHByb3BzOiBwcm9wcyxcbiAgICAvLyBSZWNvcmQgdGhlIGNvbXBvbmVudCByZXNwb25zaWJsZSBmb3IgY3JlYXRpbmcgdGhpcyBlbGVtZW50LlxuICAgIF9vd25lcjogb3duZXJcbiAgfTtcblxuICB7XG4gICAgLy8gVGhlIHZhbGlkYXRpb24gZmxhZyBpcyBjdXJyZW50bHkgbXV0YXRpdmUuIFdlIHB1dCBpdCBvblxuICAgIC8vIGFuIGV4dGVybmFsIGJhY2tpbmcgc3RvcmUgc28gdGhhdCB3ZSBjYW4gZnJlZXplIHRoZSB3aG9sZSBvYmplY3QuXG4gICAgLy8gVGhpcyBjYW4gYmUgcmVwbGFjZWQgd2l0aCBhIFdlYWtNYXAgb25jZSB0aGV5IGFyZSBpbXBsZW1lbnRlZCBpblxuICAgIC8vIGNvbW1vbmx5IHVzZWQgZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzLlxuICAgIGVsZW1lbnQuX3N0b3JlID0ge307IC8vIFRvIG1ha2UgY29tcGFyaW5nIFJlYWN0RWxlbWVudHMgZWFzaWVyIGZvciB0ZXN0aW5nIHB1cnBvc2VzLCB3ZSBtYWtlXG4gICAgLy8gdGhlIHZhbGlkYXRpb24gZmxhZyBub24tZW51bWVyYWJsZSAod2hlcmUgcG9zc2libGUsIHdoaWNoIHNob3VsZFxuICAgIC8vIGluY2x1ZGUgZXZlcnkgZW52aXJvbm1lbnQgd2UgcnVuIHRlc3RzIGluKSwgc28gdGhlIHRlc3QgZnJhbWV3b3JrXG4gICAgLy8gaWdub3JlcyBpdC5cblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbGVtZW50Ll9zdG9yZSwgJ3ZhbGlkYXRlZCcsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IGZhbHNlXG4gICAgfSk7IC8vIHNlbGYgYW5kIHNvdXJjZSBhcmUgREVWIG9ubHkgcHJvcGVydGllcy5cblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbGVtZW50LCAnX3NlbGYnLCB7XG4gICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogZmFsc2UsXG4gICAgICB2YWx1ZTogc2VsZlxuICAgIH0pOyAvLyBUd28gZWxlbWVudHMgY3JlYXRlZCBpbiB0d28gZGlmZmVyZW50IHBsYWNlcyBzaG91bGQgYmUgY29uc2lkZXJlZFxuICAgIC8vIGVxdWFsIGZvciB0ZXN0aW5nIHB1cnBvc2VzIGFuZCB0aGVyZWZvcmUgd2UgaGlkZSBpdCBmcm9tIGVudW1lcmF0aW9uLlxuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVsZW1lbnQsICdfc291cmNlJywge1xuICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgdmFsdWU6IHNvdXJjZVxuICAgIH0pO1xuXG4gICAgaWYgKE9iamVjdC5mcmVlemUpIHtcbiAgICAgIE9iamVjdC5mcmVlemUoZWxlbWVudC5wcm9wcyk7XG4gICAgICBPYmplY3QuZnJlZXplKGVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBlbGVtZW50O1xufTtcbi8qKlxuICogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmZjcy9wdWxsLzEwN1xuICogQHBhcmFtIHsqfSB0eXBlXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHNcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAqL1xuXG5mdW5jdGlvbiBqc3hERVYodHlwZSwgY29uZmlnLCBtYXliZUtleSwgc291cmNlLCBzZWxmKSB7XG4gIHtcbiAgICB2YXIgcHJvcE5hbWU7IC8vIFJlc2VydmVkIG5hbWVzIGFyZSBleHRyYWN0ZWRcblxuICAgIHZhciBwcm9wcyA9IHt9O1xuICAgIHZhciBrZXkgPSBudWxsO1xuICAgIHZhciByZWYgPSBudWxsOyAvLyBDdXJyZW50bHksIGtleSBjYW4gYmUgc3ByZWFkIGluIGFzIGEgcHJvcC4gVGhpcyBjYXVzZXMgYSBwb3RlbnRpYWxcbiAgICAvLyBpc3N1ZSBpZiBrZXkgaXMgYWxzbyBleHBsaWNpdGx5IGRlY2xhcmVkIChpZS4gPGRpdiB7Li4ucHJvcHN9IGtleT1cIkhpXCIgLz5cbiAgICAvLyBvciA8ZGl2IGtleT1cIkhpXCIgey4uLnByb3BzfSAvPiApLiBXZSB3YW50IHRvIGRlcHJlY2F0ZSBrZXkgc3ByZWFkLFxuICAgIC8vIGJ1dCBhcyBhbiBpbnRlcm1lZGlhcnkgc3RlcCwgd2Ugd2lsbCB1c2UganN4REVWIGZvciBldmVyeXRoaW5nIGV4Y2VwdFxuICAgIC8vIDxkaXYgey4uLnByb3BzfSBrZXk9XCJIaVwiIC8+LCBiZWNhdXNlIHdlIGFyZW4ndCBjdXJyZW50bHkgYWJsZSB0byB0ZWxsIGlmXG4gICAgLy8ga2V5IGlzIGV4cGxpY2l0bHkgZGVjbGFyZWQgdG8gYmUgdW5kZWZpbmVkIG9yIG5vdC5cblxuICAgIGlmIChtYXliZUtleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB7XG4gICAgICAgIGNoZWNrS2V5U3RyaW5nQ29lcmNpb24obWF5YmVLZXkpO1xuICAgICAgfVxuXG4gICAgICBrZXkgPSAnJyArIG1heWJlS2V5O1xuICAgIH1cblxuICAgIGlmIChoYXNWYWxpZEtleShjb25maWcpKSB7XG4gICAgICB7XG4gICAgICAgIGNoZWNrS2V5U3RyaW5nQ29lcmNpb24oY29uZmlnLmtleSk7XG4gICAgICB9XG5cbiAgICAgIGtleSA9ICcnICsgY29uZmlnLmtleTtcbiAgICB9XG5cbiAgICBpZiAoaGFzVmFsaWRSZWYoY29uZmlnKSkge1xuICAgICAgcmVmID0gY29uZmlnLnJlZjtcbiAgICAgIHdhcm5JZlN0cmluZ1JlZkNhbm5vdEJlQXV0b0NvbnZlcnRlZChjb25maWcsIHNlbGYpO1xuICAgIH0gLy8gUmVtYWluaW5nIHByb3BlcnRpZXMgYXJlIGFkZGVkIHRvIGEgbmV3IHByb3BzIG9iamVjdFxuXG5cbiAgICBmb3IgKHByb3BOYW1lIGluIGNvbmZpZykge1xuICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoY29uZmlnLCBwcm9wTmFtZSkgJiYgIVJFU0VSVkVEX1BST1BTLmhhc093blByb3BlcnR5KHByb3BOYW1lKSkge1xuICAgICAgICBwcm9wc1twcm9wTmFtZV0gPSBjb25maWdbcHJvcE5hbWVdO1xuICAgICAgfVxuICAgIH0gLy8gUmVzb2x2ZSBkZWZhdWx0IHByb3BzXG5cblxuICAgIGlmICh0eXBlICYmIHR5cGUuZGVmYXVsdFByb3BzKSB7XG4gICAgICB2YXIgZGVmYXVsdFByb3BzID0gdHlwZS5kZWZhdWx0UHJvcHM7XG5cbiAgICAgIGZvciAocHJvcE5hbWUgaW4gZGVmYXVsdFByb3BzKSB7XG4gICAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHByb3BzW3Byb3BOYW1lXSA9IGRlZmF1bHRQcm9wc1twcm9wTmFtZV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoa2V5IHx8IHJlZikge1xuICAgICAgdmFyIGRpc3BsYXlOYW1lID0gdHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicgPyB0eXBlLmRpc3BsYXlOYW1lIHx8IHR5cGUubmFtZSB8fCAnVW5rbm93bicgOiB0eXBlO1xuXG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIGRlZmluZUtleVByb3BXYXJuaW5nR2V0dGVyKHByb3BzLCBkaXNwbGF5TmFtZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWYpIHtcbiAgICAgICAgZGVmaW5lUmVmUHJvcFdhcm5pbmdHZXR0ZXIocHJvcHMsIGRpc3BsYXlOYW1lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3RFbGVtZW50KHR5cGUsIGtleSwgcmVmLCBzZWxmLCBzb3VyY2UsIFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQsIHByb3BzKTtcbiAgfVxufVxuXG52YXIgUmVhY3RDdXJyZW50T3duZXIkMSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0Q3VycmVudE93bmVyO1xudmFyIFJlYWN0RGVidWdDdXJyZW50RnJhbWUkMSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0RGVidWdDdXJyZW50RnJhbWU7XG5cbmZ1bmN0aW9uIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50JDEoZWxlbWVudCkge1xuICB7XG4gICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgIHZhciBvd25lciA9IGVsZW1lbnQuX293bmVyO1xuICAgICAgdmFyIHN0YWNrID0gZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWKGVsZW1lbnQudHlwZSwgZWxlbWVudC5fc291cmNlLCBvd25lciA/IG93bmVyLnR5cGUgOiBudWxsKTtcbiAgICAgIFJlYWN0RGVidWdDdXJyZW50RnJhbWUkMS5zZXRFeHRyYVN0YWNrRnJhbWUoc3RhY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lJDEuc2V0RXh0cmFTdGFja0ZyYW1lKG51bGwpO1xuICAgIH1cbiAgfVxufVxuXG52YXIgcHJvcFR5cGVzTWlzc3BlbGxXYXJuaW5nU2hvd247XG5cbntcbiAgcHJvcFR5cGVzTWlzc3BlbGxXYXJuaW5nU2hvd24gPSBmYWxzZTtcbn1cbi8qKlxuICogVmVyaWZpZXMgdGhlIG9iamVjdCBpcyBhIFJlYWN0RWxlbWVudC5cbiAqIFNlZSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvcmVhY3QtYXBpLmh0bWwjaXN2YWxpZGVsZW1lbnRcbiAqIEBwYXJhbSB7P29iamVjdH0gb2JqZWN0XG4gKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIGBvYmplY3RgIGlzIGEgUmVhY3RFbGVtZW50LlxuICogQGZpbmFsXG4gKi9cblxuXG5mdW5jdGlvbiBpc1ZhbGlkRWxlbWVudChvYmplY3QpIHtcbiAge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IG51bGwgJiYgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVjbGFyYXRpb25FcnJvckFkZGVuZHVtKCkge1xuICB7XG4gICAgaWYgKFJlYWN0Q3VycmVudE93bmVyJDEuY3VycmVudCkge1xuICAgICAgdmFyIG5hbWUgPSBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUoUmVhY3RDdXJyZW50T3duZXIkMS5jdXJyZW50LnR5cGUpO1xuXG4gICAgICBpZiAobmFtZSkge1xuICAgICAgICByZXR1cm4gJ1xcblxcbkNoZWNrIHRoZSByZW5kZXIgbWV0aG9kIG9mIGAnICsgbmFtZSArICdgLic7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuICcnO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldFNvdXJjZUluZm9FcnJvckFkZGVuZHVtKHNvdXJjZSkge1xuICB7XG4gICAgaWYgKHNvdXJjZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB2YXIgZmlsZU5hbWUgPSBzb3VyY2UuZmlsZU5hbWUucmVwbGFjZSgvXi4qW1xcXFxcXC9dLywgJycpO1xuICAgICAgdmFyIGxpbmVOdW1iZXIgPSBzb3VyY2UubGluZU51bWJlcjtcbiAgICAgIHJldHVybiAnXFxuXFxuQ2hlY2sgeW91ciBjb2RlIGF0ICcgKyBmaWxlTmFtZSArICc6JyArIGxpbmVOdW1iZXIgKyAnLic7XG4gICAgfVxuXG4gICAgcmV0dXJuICcnO1xuICB9XG59XG4vKipcbiAqIFdhcm4gaWYgdGhlcmUncyBubyBrZXkgZXhwbGljaXRseSBzZXQgb24gZHluYW1pYyBhcnJheXMgb2YgY2hpbGRyZW4gb3JcbiAqIG9iamVjdCBrZXlzIGFyZSBub3QgdmFsaWQuIFRoaXMgYWxsb3dzIHVzIHRvIGtlZXAgdHJhY2sgb2YgY2hpbGRyZW4gYmV0d2VlblxuICogdXBkYXRlcy5cbiAqL1xuXG5cbnZhciBvd25lckhhc0tleVVzZVdhcm5pbmcgPSB7fTtcblxuZnVuY3Rpb24gZ2V0Q3VycmVudENvbXBvbmVudEVycm9ySW5mbyhwYXJlbnRUeXBlKSB7XG4gIHtcbiAgICB2YXIgaW5mbyA9IGdldERlY2xhcmF0aW9uRXJyb3JBZGRlbmR1bSgpO1xuXG4gICAgaWYgKCFpbmZvKSB7XG4gICAgICB2YXIgcGFyZW50TmFtZSA9IHR5cGVvZiBwYXJlbnRUeXBlID09PSAnc3RyaW5nJyA/IHBhcmVudFR5cGUgOiBwYXJlbnRUeXBlLmRpc3BsYXlOYW1lIHx8IHBhcmVudFR5cGUubmFtZTtcblxuICAgICAgaWYgKHBhcmVudE5hbWUpIHtcbiAgICAgICAgaW5mbyA9IFwiXFxuXFxuQ2hlY2sgdGhlIHRvcC1sZXZlbCByZW5kZXIgY2FsbCB1c2luZyA8XCIgKyBwYXJlbnROYW1lICsgXCI+LlwiO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBpbmZvO1xuICB9XG59XG4vKipcbiAqIFdhcm4gaWYgdGhlIGVsZW1lbnQgZG9lc24ndCBoYXZlIGFuIGV4cGxpY2l0IGtleSBhc3NpZ25lZCB0byBpdC5cbiAqIFRoaXMgZWxlbWVudCBpcyBpbiBhbiBhcnJheS4gVGhlIGFycmF5IGNvdWxkIGdyb3cgYW5kIHNocmluayBvciBiZVxuICogcmVvcmRlcmVkLiBBbGwgY2hpbGRyZW4gdGhhdCBoYXZlbid0IGFscmVhZHkgYmVlbiB2YWxpZGF0ZWQgYXJlIHJlcXVpcmVkIHRvXG4gKiBoYXZlIGEgXCJrZXlcIiBwcm9wZXJ0eSBhc3NpZ25lZCB0byBpdC4gRXJyb3Igc3RhdHVzZXMgYXJlIGNhY2hlZCBzbyBhIHdhcm5pbmdcbiAqIHdpbGwgb25seSBiZSBzaG93biBvbmNlLlxuICpcbiAqIEBpbnRlcm5hbFxuICogQHBhcmFtIHtSZWFjdEVsZW1lbnR9IGVsZW1lbnQgRWxlbWVudCB0aGF0IHJlcXVpcmVzIGEga2V5LlxuICogQHBhcmFtIHsqfSBwYXJlbnRUeXBlIGVsZW1lbnQncyBwYXJlbnQncyB0eXBlLlxuICovXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVFeHBsaWNpdEtleShlbGVtZW50LCBwYXJlbnRUeXBlKSB7XG4gIHtcbiAgICBpZiAoIWVsZW1lbnQuX3N0b3JlIHx8IGVsZW1lbnQuX3N0b3JlLnZhbGlkYXRlZCB8fCBlbGVtZW50LmtleSAhPSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZWxlbWVudC5fc3RvcmUudmFsaWRhdGVkID0gdHJ1ZTtcbiAgICB2YXIgY3VycmVudENvbXBvbmVudEVycm9ySW5mbyA9IGdldEN1cnJlbnRDb21wb25lbnRFcnJvckluZm8ocGFyZW50VHlwZSk7XG5cbiAgICBpZiAob3duZXJIYXNLZXlVc2VXYXJuaW5nW2N1cnJlbnRDb21wb25lbnRFcnJvckluZm9dKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgb3duZXJIYXNLZXlVc2VXYXJuaW5nW2N1cnJlbnRDb21wb25lbnRFcnJvckluZm9dID0gdHJ1ZTsgLy8gVXN1YWxseSB0aGUgY3VycmVudCBvd25lciBpcyB0aGUgb2ZmZW5kZXIsIGJ1dCBpZiBpdCBhY2NlcHRzIGNoaWxkcmVuIGFzIGFcbiAgICAvLyBwcm9wZXJ0eSwgaXQgbWF5IGJlIHRoZSBjcmVhdG9yIG9mIHRoZSBjaGlsZCB0aGF0J3MgcmVzcG9uc2libGUgZm9yXG4gICAgLy8gYXNzaWduaW5nIGl0IGEga2V5LlxuXG4gICAgdmFyIGNoaWxkT3duZXIgPSAnJztcblxuICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuX293bmVyICYmIGVsZW1lbnQuX293bmVyICE9PSBSZWFjdEN1cnJlbnRPd25lciQxLmN1cnJlbnQpIHtcbiAgICAgIC8vIEdpdmUgdGhlIGNvbXBvbmVudCB0aGF0IG9yaWdpbmFsbHkgY3JlYXRlZCB0aGlzIGNoaWxkLlxuICAgICAgY2hpbGRPd25lciA9IFwiIEl0IHdhcyBwYXNzZWQgYSBjaGlsZCBmcm9tIFwiICsgZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKGVsZW1lbnQuX293bmVyLnR5cGUpICsgXCIuXCI7XG4gICAgfVxuXG4gICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShlbGVtZW50KTtcblxuICAgIGVycm9yKCdFYWNoIGNoaWxkIGluIGEgbGlzdCBzaG91bGQgaGF2ZSBhIHVuaXF1ZSBcImtleVwiIHByb3AuJyArICclcyVzIFNlZSBodHRwczovL3JlYWN0anMub3JnL2xpbmsvd2FybmluZy1rZXlzIGZvciBtb3JlIGluZm9ybWF0aW9uLicsIGN1cnJlbnRDb21wb25lbnRFcnJvckluZm8sIGNoaWxkT3duZXIpO1xuXG4gICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShudWxsKTtcbiAgfVxufVxuLyoqXG4gKiBFbnN1cmUgdGhhdCBldmVyeSBlbGVtZW50IGVpdGhlciBpcyBwYXNzZWQgaW4gYSBzdGF0aWMgbG9jYXRpb24sIGluIGFuXG4gKiBhcnJheSB3aXRoIGFuIGV4cGxpY2l0IGtleXMgcHJvcGVydHkgZGVmaW5lZCwgb3IgaW4gYW4gb2JqZWN0IGxpdGVyYWxcbiAqIHdpdGggdmFsaWQga2V5IHByb3BlcnR5LlxuICpcbiAqIEBpbnRlcm5hbFxuICogQHBhcmFtIHtSZWFjdE5vZGV9IG5vZGUgU3RhdGljYWxseSBwYXNzZWQgY2hpbGQgb2YgYW55IHR5cGUuXG4gKiBAcGFyYW0geyp9IHBhcmVudFR5cGUgbm9kZSdzIHBhcmVudCdzIHR5cGUuXG4gKi9cblxuXG5mdW5jdGlvbiB2YWxpZGF0ZUNoaWxkS2V5cyhub2RlLCBwYXJlbnRUeXBlKSB7XG4gIHtcbiAgICBpZiAodHlwZW9mIG5vZGUgIT09ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGlzQXJyYXkobm9kZSkpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZS5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgY2hpbGQgPSBub2RlW2ldO1xuXG4gICAgICAgIGlmIChpc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICB2YWxpZGF0ZUV4cGxpY2l0S2V5KGNoaWxkLCBwYXJlbnRUeXBlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNWYWxpZEVsZW1lbnQobm9kZSkpIHtcbiAgICAgIC8vIFRoaXMgZWxlbWVudCB3YXMgcGFzc2VkIGluIGEgdmFsaWQgbG9jYXRpb24uXG4gICAgICBpZiAobm9kZS5fc3RvcmUpIHtcbiAgICAgICAgbm9kZS5fc3RvcmUudmFsaWRhdGVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG5vZGUpIHtcbiAgICAgIHZhciBpdGVyYXRvckZuID0gZ2V0SXRlcmF0b3JGbihub2RlKTtcblxuICAgICAgaWYgKHR5cGVvZiBpdGVyYXRvckZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIEVudHJ5IGl0ZXJhdG9ycyB1c2VkIHRvIHByb3ZpZGUgaW1wbGljaXQga2V5cyxcbiAgICAgICAgLy8gYnV0IG5vdyB3ZSBwcmludCBhIHNlcGFyYXRlIHdhcm5pbmcgZm9yIHRoZW0gbGF0ZXIuXG4gICAgICAgIGlmIChpdGVyYXRvckZuICE9PSBub2RlLmVudHJpZXMpIHtcbiAgICAgICAgICB2YXIgaXRlcmF0b3IgPSBpdGVyYXRvckZuLmNhbGwobm9kZSk7XG4gICAgICAgICAgdmFyIHN0ZXA7XG5cbiAgICAgICAgICB3aGlsZSAoIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lKSB7XG4gICAgICAgICAgICBpZiAoaXNWYWxpZEVsZW1lbnQoc3RlcC52YWx1ZSkpIHtcbiAgICAgICAgICAgICAgdmFsaWRhdGVFeHBsaWNpdEtleShzdGVwLnZhbHVlLCBwYXJlbnRUeXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbi8qKlxuICogR2l2ZW4gYW4gZWxlbWVudCwgdmFsaWRhdGUgdGhhdCBpdHMgcHJvcHMgZm9sbG93IHRoZSBwcm9wVHlwZXMgZGVmaW5pdGlvbixcbiAqIHByb3ZpZGVkIGJ5IHRoZSB0eXBlLlxuICpcbiAqIEBwYXJhbSB7UmVhY3RFbGVtZW50fSBlbGVtZW50XG4gKi9cblxuXG5mdW5jdGlvbiB2YWxpZGF0ZVByb3BUeXBlcyhlbGVtZW50KSB7XG4gIHtcbiAgICB2YXIgdHlwZSA9IGVsZW1lbnQudHlwZTtcblxuICAgIGlmICh0eXBlID09PSBudWxsIHx8IHR5cGUgPT09IHVuZGVmaW5lZCB8fCB0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgcHJvcFR5cGVzO1xuXG4gICAgaWYgKHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBwcm9wVHlwZXMgPSB0eXBlLnByb3BUeXBlcztcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiAodHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSB8fCAvLyBOb3RlOiBNZW1vIG9ubHkgY2hlY2tzIG91dGVyIHByb3BzIGhlcmUuXG4gICAgLy8gSW5uZXIgcHJvcHMgYXJlIGNoZWNrZWQgaW4gdGhlIHJlY29uY2lsZXIuXG4gICAgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfTUVNT19UWVBFKSkge1xuICAgICAgcHJvcFR5cGVzID0gdHlwZS5wcm9wVHlwZXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAocHJvcFR5cGVzKSB7XG4gICAgICAvLyBJbnRlbnRpb25hbGx5IGluc2lkZSB0byBhdm9pZCB0cmlnZ2VyaW5nIGxhenkgaW5pdGlhbGl6ZXJzOlxuICAgICAgdmFyIG5hbWUgPSBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUodHlwZSk7XG4gICAgICBjaGVja1Byb3BUeXBlcyhwcm9wVHlwZXMsIGVsZW1lbnQucHJvcHMsICdwcm9wJywgbmFtZSwgZWxlbWVudCk7XG4gICAgfSBlbHNlIGlmICh0eXBlLlByb3BUeXBlcyAhPT0gdW5kZWZpbmVkICYmICFwcm9wVHlwZXNNaXNzcGVsbFdhcm5pbmdTaG93bikge1xuICAgICAgcHJvcFR5cGVzTWlzc3BlbGxXYXJuaW5nU2hvd24gPSB0cnVlOyAvLyBJbnRlbnRpb25hbGx5IGluc2lkZSB0byBhdm9pZCB0cmlnZ2VyaW5nIGxhenkgaW5pdGlhbGl6ZXJzOlxuXG4gICAgICB2YXIgX25hbWUgPSBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUodHlwZSk7XG5cbiAgICAgIGVycm9yKCdDb21wb25lbnQgJXMgZGVjbGFyZWQgYFByb3BUeXBlc2AgaW5zdGVhZCBvZiBgcHJvcFR5cGVzYC4gRGlkIHlvdSBtaXNzcGVsbCB0aGUgcHJvcGVydHkgYXNzaWdubWVudD8nLCBfbmFtZSB8fCAnVW5rbm93bicpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdHlwZS5nZXREZWZhdWx0UHJvcHMgPT09ICdmdW5jdGlvbicgJiYgIXR5cGUuZ2V0RGVmYXVsdFByb3BzLmlzUmVhY3RDbGFzc0FwcHJvdmVkKSB7XG4gICAgICBlcnJvcignZ2V0RGVmYXVsdFByb3BzIGlzIG9ubHkgdXNlZCBvbiBjbGFzc2ljIFJlYWN0LmNyZWF0ZUNsYXNzICcgKyAnZGVmaW5pdGlvbnMuIFVzZSBhIHN0YXRpYyBwcm9wZXJ0eSBuYW1lZCBgZGVmYXVsdFByb3BzYCBpbnN0ZWFkLicpO1xuICAgIH1cbiAgfVxufVxuLyoqXG4gKiBHaXZlbiBhIGZyYWdtZW50LCB2YWxpZGF0ZSB0aGF0IGl0IGNhbiBvbmx5IGJlIHByb3ZpZGVkIHdpdGggZnJhZ21lbnQgcHJvcHNcbiAqIEBwYXJhbSB7UmVhY3RFbGVtZW50fSBmcmFnbWVudFxuICovXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVGcmFnbWVudFByb3BzKGZyYWdtZW50KSB7XG4gIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGZyYWdtZW50LnByb3BzKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmIChrZXkgIT09ICdjaGlsZHJlbicgJiYga2V5ICE9PSAna2V5Jykge1xuICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKGZyYWdtZW50KTtcblxuICAgICAgICBlcnJvcignSW52YWxpZCBwcm9wIGAlc2Agc3VwcGxpZWQgdG8gYFJlYWN0LkZyYWdtZW50YC4gJyArICdSZWFjdC5GcmFnbWVudCBjYW4gb25seSBoYXZlIGBrZXlgIGFuZCBgY2hpbGRyZW5gIHByb3BzLicsIGtleSk7XG5cbiAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShudWxsKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGZyYWdtZW50LnJlZiAhPT0gbnVsbCkge1xuICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShmcmFnbWVudCk7XG5cbiAgICAgIGVycm9yKCdJbnZhbGlkIGF0dHJpYnV0ZSBgcmVmYCBzdXBwbGllZCB0byBgUmVhY3QuRnJhZ21lbnRgLicpO1xuXG4gICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKG51bGwpO1xuICAgIH1cbiAgfVxufVxuXG52YXIgZGlkV2FybkFib3V0S2V5U3ByZWFkID0ge307XG5mdW5jdGlvbiBqc3hXaXRoVmFsaWRhdGlvbih0eXBlLCBwcm9wcywga2V5LCBpc1N0YXRpY0NoaWxkcmVuLCBzb3VyY2UsIHNlbGYpIHtcbiAge1xuICAgIHZhciB2YWxpZFR5cGUgPSBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSk7IC8vIFdlIHdhcm4gaW4gdGhpcyBjYXNlIGJ1dCBkb24ndCB0aHJvdy4gV2UgZXhwZWN0IHRoZSBlbGVtZW50IGNyZWF0aW9uIHRvXG4gICAgLy8gc3VjY2VlZCBhbmQgdGhlcmUgd2lsbCBsaWtlbHkgYmUgZXJyb3JzIGluIHJlbmRlci5cblxuICAgIGlmICghdmFsaWRUeXBlKSB7XG4gICAgICB2YXIgaW5mbyA9ICcnO1xuXG4gICAgICBpZiAodHlwZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiB0eXBlICE9PSBudWxsICYmIE9iamVjdC5rZXlzKHR5cGUpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBpbmZvICs9ICcgWW91IGxpa2VseSBmb3Jnb3QgdG8gZXhwb3J0IHlvdXIgY29tcG9uZW50IGZyb20gdGhlIGZpbGUgJyArIFwiaXQncyBkZWZpbmVkIGluLCBvciB5b3UgbWlnaHQgaGF2ZSBtaXhlZCB1cCBkZWZhdWx0IGFuZCBuYW1lZCBpbXBvcnRzLlwiO1xuICAgICAgfVxuXG4gICAgICB2YXIgc291cmNlSW5mbyA9IGdldFNvdXJjZUluZm9FcnJvckFkZGVuZHVtKHNvdXJjZSk7XG5cbiAgICAgIGlmIChzb3VyY2VJbmZvKSB7XG4gICAgICAgIGluZm8gKz0gc291cmNlSW5mbztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGluZm8gKz0gZ2V0RGVjbGFyYXRpb25FcnJvckFkZGVuZHVtKCk7XG4gICAgICB9XG5cbiAgICAgIHZhciB0eXBlU3RyaW5nO1xuXG4gICAgICBpZiAodHlwZSA9PT0gbnVsbCkge1xuICAgICAgICB0eXBlU3RyaW5nID0gJ251bGwnO1xuICAgICAgfSBlbHNlIGlmIChpc0FycmF5KHR5cGUpKSB7XG4gICAgICAgIHR5cGVTdHJpbmcgPSAnYXJyYXknO1xuICAgICAgfSBlbHNlIGlmICh0eXBlICE9PSB1bmRlZmluZWQgJiYgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFKSB7XG4gICAgICAgIHR5cGVTdHJpbmcgPSBcIjxcIiArIChnZXRDb21wb25lbnROYW1lRnJvbVR5cGUodHlwZS50eXBlKSB8fCAnVW5rbm93bicpICsgXCIgLz5cIjtcbiAgICAgICAgaW5mbyA9ICcgRGlkIHlvdSBhY2NpZGVudGFsbHkgZXhwb3J0IGEgSlNYIGxpdGVyYWwgaW5zdGVhZCBvZiBhIGNvbXBvbmVudD8nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHlwZVN0cmluZyA9IHR5cGVvZiB0eXBlO1xuICAgICAgfVxuXG4gICAgICBlcnJvcignUmVhY3QuanN4OiB0eXBlIGlzIGludmFsaWQgLS0gZXhwZWN0ZWQgYSBzdHJpbmcgKGZvciAnICsgJ2J1aWx0LWluIGNvbXBvbmVudHMpIG9yIGEgY2xhc3MvZnVuY3Rpb24gKGZvciBjb21wb3NpdGUgJyArICdjb21wb25lbnRzKSBidXQgZ290OiAlcy4lcycsIHR5cGVTdHJpbmcsIGluZm8pO1xuICAgIH1cblxuICAgIHZhciBlbGVtZW50ID0ganN4REVWKHR5cGUsIHByb3BzLCBrZXksIHNvdXJjZSwgc2VsZik7IC8vIFRoZSByZXN1bHQgY2FuIGJlIG51bGxpc2ggaWYgYSBtb2NrIG9yIGEgY3VzdG9tIGZ1bmN0aW9uIGlzIHVzZWQuXG4gICAgLy8gVE9ETzogRHJvcCB0aGlzIHdoZW4gdGhlc2UgYXJlIG5vIGxvbmdlciBhbGxvd2VkIGFzIHRoZSB0eXBlIGFyZ3VtZW50LlxuXG4gICAgaWYgKGVsZW1lbnQgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfSAvLyBTa2lwIGtleSB3YXJuaW5nIGlmIHRoZSB0eXBlIGlzbid0IHZhbGlkIHNpbmNlIG91ciBrZXkgdmFsaWRhdGlvbiBsb2dpY1xuICAgIC8vIGRvZXNuJ3QgZXhwZWN0IGEgbm9uLXN0cmluZy9mdW5jdGlvbiB0eXBlIGFuZCBjYW4gdGhyb3cgY29uZnVzaW5nIGVycm9ycy5cbiAgICAvLyBXZSBkb24ndCB3YW50IGV4Y2VwdGlvbiBiZWhhdmlvciB0byBkaWZmZXIgYmV0d2VlbiBkZXYgYW5kIHByb2QuXG4gICAgLy8gKFJlbmRlcmluZyB3aWxsIHRocm93IHdpdGggYSBoZWxwZnVsIG1lc3NhZ2UgYW5kIGFzIHNvb24gYXMgdGhlIHR5cGUgaXNcbiAgICAvLyBmaXhlZCwgdGhlIGtleSB3YXJuaW5ncyB3aWxsIGFwcGVhci4pXG5cblxuICAgIGlmICh2YWxpZFR5cGUpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuO1xuXG4gICAgICBpZiAoY2hpbGRyZW4gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAoaXNTdGF0aWNDaGlsZHJlbikge1xuICAgICAgICAgIGlmIChpc0FycmF5KGNoaWxkcmVuKSkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICB2YWxpZGF0ZUNoaWxkS2V5cyhjaGlsZHJlbltpXSwgdHlwZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChPYmplY3QuZnJlZXplKSB7XG4gICAgICAgICAgICAgIE9iamVjdC5mcmVlemUoY2hpbGRyZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBlcnJvcignUmVhY3QuanN4OiBTdGF0aWMgY2hpbGRyZW4gc2hvdWxkIGFsd2F5cyBiZSBhbiBhcnJheS4gJyArICdZb3UgYXJlIGxpa2VseSBleHBsaWNpdGx5IGNhbGxpbmcgUmVhY3QuanN4cyBvciBSZWFjdC5qc3hERVYuICcgKyAnVXNlIHRoZSBCYWJlbCB0cmFuc2Zvcm0gaW5zdGVhZC4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFsaWRhdGVDaGlsZEtleXMoY2hpbGRyZW4sIHR5cGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAge1xuICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwocHJvcHMsICdrZXknKSkge1xuICAgICAgICB2YXIgY29tcG9uZW50TmFtZSA9IGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlKTtcbiAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhwcm9wcykuZmlsdGVyKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgcmV0dXJuIGsgIT09ICdrZXknO1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGJlZm9yZUV4YW1wbGUgPSBrZXlzLmxlbmd0aCA+IDAgPyAne2tleTogc29tZUtleSwgJyArIGtleXMuam9pbignOiAuLi4sICcpICsgJzogLi4ufScgOiAne2tleTogc29tZUtleX0nO1xuXG4gICAgICAgIGlmICghZGlkV2FybkFib3V0S2V5U3ByZWFkW2NvbXBvbmVudE5hbWUgKyBiZWZvcmVFeGFtcGxlXSkge1xuICAgICAgICAgIHZhciBhZnRlckV4YW1wbGUgPSBrZXlzLmxlbmd0aCA+IDAgPyAneycgKyBrZXlzLmpvaW4oJzogLi4uLCAnKSArICc6IC4uLn0nIDogJ3t9JztcblxuICAgICAgICAgIGVycm9yKCdBIHByb3BzIG9iamVjdCBjb250YWluaW5nIGEgXCJrZXlcIiBwcm9wIGlzIGJlaW5nIHNwcmVhZCBpbnRvIEpTWDpcXG4nICsgJyAgbGV0IHByb3BzID0gJXM7XFxuJyArICcgIDwlcyB7Li4ucHJvcHN9IC8+XFxuJyArICdSZWFjdCBrZXlzIG11c3QgYmUgcGFzc2VkIGRpcmVjdGx5IHRvIEpTWCB3aXRob3V0IHVzaW5nIHNwcmVhZDpcXG4nICsgJyAgbGV0IHByb3BzID0gJXM7XFxuJyArICcgIDwlcyBrZXk9e3NvbWVLZXl9IHsuLi5wcm9wc30gLz4nLCBiZWZvcmVFeGFtcGxlLCBjb21wb25lbnROYW1lLCBhZnRlckV4YW1wbGUsIGNvbXBvbmVudE5hbWUpO1xuXG4gICAgICAgICAgZGlkV2FybkFib3V0S2V5U3ByZWFkW2NvbXBvbmVudE5hbWUgKyBiZWZvcmVFeGFtcGxlXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZSA9PT0gUkVBQ1RfRlJBR01FTlRfVFlQRSkge1xuICAgICAgdmFsaWRhdGVGcmFnbWVudFByb3BzKGVsZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWxpZGF0ZVByb3BUeXBlcyhlbGVtZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfVxufSAvLyBUaGVzZSB0d28gZnVuY3Rpb25zIGV4aXN0IHRvIHN0aWxsIGdldCBjaGlsZCB3YXJuaW5ncyBpbiBkZXZcblxudmFyIGpzeERFViQxID0gIGpzeFdpdGhWYWxpZGF0aW9uIDtcblxuZXhwb3J0cy5GcmFnbWVudCA9IFJFQUNUX0ZSQUdNRU5UX1RZUEU7XG5leHBvcnRzLmpzeERFViA9IGpzeERFViQxO1xuICB9KSgpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/app/IPublicClientApplication.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/app/IPublicClientApplication.mjs ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stubbedPublicClientApplication: function() { return /* binding */ stubbedPublicClientApplication; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst stubbedPublicClientApplication = {\r\n    initialize: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    acquireTokenPopup: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    acquireTokenRedirect: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    acquireTokenSilent: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    acquireTokenByCode: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    getAllAccounts: () => {\r\n        return [];\r\n    },\r\n    getAccount: () => {\r\n        return null;\r\n    },\r\n    getAccountByHomeId: () => {\r\n        return null;\r\n    },\r\n    getAccountByUsername: () => {\r\n        return null;\r\n    },\r\n    getAccountByLocalId: () => {\r\n        return null;\r\n    },\r\n    handleRedirectPromise: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    loginPopup: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    loginRedirect: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    logout: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    logoutRedirect: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    logoutPopup: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    ssoSilent: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    addEventCallback: () => {\r\n        return null;\r\n    },\r\n    removeEventCallback: () => {\r\n        return;\r\n    },\r\n    addPerformanceCallback: () => {\r\n        return \"\";\r\n    },\r\n    removePerformanceCallback: () => {\r\n        return false;\r\n    },\r\n    enableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    disableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    getTokenCache: () => {\r\n        throw (0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled);\r\n    },\r\n    getLogger: () => {\r\n        throw (0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled);\r\n    },\r\n    setLogger: () => {\r\n        return;\r\n    },\r\n    setActiveAccount: () => {\r\n        return;\r\n    },\r\n    getActiveAccount: () => {\r\n        return null;\r\n    },\r\n    initializeWrapperLibrary: () => {\r\n        return;\r\n    },\r\n    setNavigationClient: () => {\r\n        return;\r\n    },\r\n    getConfiguration: () => {\r\n        throw (0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled);\r\n    },\r\n    hydrateCache: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n    clearCache: () => {\r\n        return Promise.reject((0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplicationCalled));\r\n    },\r\n};\n\n\n//# sourceMappingURL=IPublicClientApplication.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2FwcC9JUHVibGljQ2xpZW50QXBwbGljYXRpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDb0Y7QUFDTTs7QUFFdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDZHQUFtQyxDQUFDLCtHQUFvQztBQUN0RyxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsNkdBQW1DLENBQUMsK0dBQW9DO0FBQ3RHLEtBQUs7QUFDTDtBQUNBLDhCQUE4Qiw2R0FBbUMsQ0FBQywrR0FBb0M7QUFDdEcsS0FBSztBQUNMO0FBQ0EsOEJBQThCLDZHQUFtQyxDQUFDLCtHQUFvQztBQUN0RyxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsNkdBQW1DLENBQUMsK0dBQW9DO0FBQ3RHLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsNkdBQW1DLENBQUMsK0dBQW9DO0FBQ3RHLEtBQUs7QUFDTDtBQUNBLDhCQUE4Qiw2R0FBbUMsQ0FBQywrR0FBb0M7QUFDdEcsS0FBSztBQUNMO0FBQ0EsOEJBQThCLDZHQUFtQyxDQUFDLCtHQUFvQztBQUN0RyxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsNkdBQW1DLENBQUMsK0dBQW9DO0FBQ3RHLEtBQUs7QUFDTDtBQUNBLDhCQUE4Qiw2R0FBbUMsQ0FBQywrR0FBb0M7QUFDdEcsS0FBSztBQUNMO0FBQ0EsOEJBQThCLDZHQUFtQyxDQUFDLCtHQUFvQztBQUN0RyxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsNkdBQW1DLENBQUMsK0dBQW9DO0FBQ3RHLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGNBQWMsNkdBQW1DLENBQUMsK0dBQW9DO0FBQ3RGLEtBQUs7QUFDTDtBQUNBLGNBQWMsNkdBQW1DLENBQUMsK0dBQW9DO0FBQ3RGLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxjQUFjLDZHQUFtQyxDQUFDLCtHQUFvQztBQUN0RixLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsNkdBQW1DLENBQUMsK0dBQW9DO0FBQ3RHLEtBQUs7QUFDTDtBQUNBLDhCQUE4Qiw2R0FBbUMsQ0FBQywrR0FBb0M7QUFDdEcsS0FBSztBQUNMOztBQUUwQztBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2FwcC9JUHVibGljQ2xpZW50QXBwbGljYXRpb24ubWpzPzk5Y2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb25DYWxsZWQgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb24gPSB7XHJcbiAgICBpbml0aWFsaXplOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCkpO1xyXG4gICAgfSxcclxuICAgIGFjcXVpcmVUb2tlblBvcHVwOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCkpO1xyXG4gICAgfSxcclxuICAgIGFjcXVpcmVUb2tlblJlZGlyZWN0OiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCkpO1xyXG4gICAgfSxcclxuICAgIGFjcXVpcmVUb2tlblNpbGVudDogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChjcmVhdGVCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvcihzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb25DYWxsZWQpKTtcclxuICAgIH0sXHJcbiAgICBhY3F1aXJlVG9rZW5CeUNvZGU6ICgpID0+IHtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoY3JlYXRlQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3Ioc3R1YmJlZFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uQ2FsbGVkKSk7XHJcbiAgICB9LFxyXG4gICAgZ2V0QWxsQWNjb3VudHM6ICgpID0+IHtcclxuICAgICAgICByZXR1cm4gW107XHJcbiAgICB9LFxyXG4gICAgZ2V0QWNjb3VudDogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfSxcclxuICAgIGdldEFjY291bnRCeUhvbWVJZDogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfSxcclxuICAgIGdldEFjY291bnRCeVVzZXJuYW1lOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9LFxyXG4gICAgZ2V0QWNjb3VudEJ5TG9jYWxJZDogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfSxcclxuICAgIGhhbmRsZVJlZGlyZWN0UHJvbWlzZTogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChjcmVhdGVCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvcihzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb25DYWxsZWQpKTtcclxuICAgIH0sXHJcbiAgICBsb2dpblBvcHVwOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCkpO1xyXG4gICAgfSxcclxuICAgIGxvZ2luUmVkaXJlY3Q6ICgpID0+IHtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoY3JlYXRlQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3Ioc3R1YmJlZFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uQ2FsbGVkKSk7XHJcbiAgICB9LFxyXG4gICAgbG9nb3V0OiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCkpO1xyXG4gICAgfSxcclxuICAgIGxvZ291dFJlZGlyZWN0OiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCkpO1xyXG4gICAgfSxcclxuICAgIGxvZ291dFBvcHVwOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCkpO1xyXG4gICAgfSxcclxuICAgIHNzb1NpbGVudDogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChjcmVhdGVCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvcihzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb25DYWxsZWQpKTtcclxuICAgIH0sXHJcbiAgICBhZGRFdmVudENhbGxiYWNrOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9LFxyXG4gICAgcmVtb3ZlRXZlbnRDYWxsYmFjazogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH0sXHJcbiAgICBhZGRQZXJmb3JtYW5jZUNhbGxiYWNrOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICB9LFxyXG4gICAgcmVtb3ZlUGVyZm9ybWFuY2VDYWxsYmFjazogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH0sXHJcbiAgICBlbmFibGVBY2NvdW50U3RvcmFnZUV2ZW50czogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH0sXHJcbiAgICBkaXNhYmxlQWNjb3VudFN0b3JhZ2VFdmVudHM6ICgpID0+IHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9LFxyXG4gICAgZ2V0VG9rZW5DYWNoZTogKCkgPT4ge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCk7XHJcbiAgICB9LFxyXG4gICAgZ2V0TG9nZ2VyOiAoKSA9PiB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3Ioc3R1YmJlZFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uQ2FsbGVkKTtcclxuICAgIH0sXHJcbiAgICBzZXRMb2dnZXI6ICgpID0+IHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9LFxyXG4gICAgc2V0QWN0aXZlQWNjb3VudDogKCkgPT4ge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH0sXHJcbiAgICBnZXRBY3RpdmVBY2NvdW50OiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9LFxyXG4gICAgaW5pdGlhbGl6ZVdyYXBwZXJMaWJyYXJ5OiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfSxcclxuICAgIHNldE5hdmlnYXRpb25DbGllbnQ6ICgpID0+IHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9LFxyXG4gICAgZ2V0Q29uZmlndXJhdGlvbjogKCkgPT4ge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCk7XHJcbiAgICB9LFxyXG4gICAgaHlkcmF0ZUNhY2hlOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCkpO1xyXG4gICAgfSxcclxuICAgIGNsZWFyQ2FjaGU6ICgpID0+IHtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoY3JlYXRlQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3Ioc3R1YmJlZFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uQ2FsbGVkKSk7XHJcbiAgICB9LFxyXG59O1xuXG5leHBvcnQgeyBzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlQdWJsaWNDbGllbnRBcHBsaWNhdGlvbi5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/app/IPublicClientApplication.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PublicClientApplication: function() { return /* binding */ PublicClientApplication; },\n/* harmony export */   createNestablePublicClientApplication: function() { return /* binding */ createNestablePublicClientApplication; },\n/* harmony export */   createStandardPublicClientApplication: function() { return /* binding */ createStandardPublicClientApplication; }\n/* harmony export */ });\n/* harmony import */ var _controllers_ControllerFactory_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controllers/ControllerFactory.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs\");\n/* harmony import */ var _controllers_StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/StandardController.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\");\n/* harmony import */ var _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operatingcontext/StandardOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs\");\n/* harmony import */ var _controllers_NestedAppAuthController_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../controllers/NestedAppAuthController.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs\");\n/* harmony import */ var _operatingcontext_NestedAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operatingcontext/NestedAppOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nclass PublicClientApplication {\r\n    /**\r\n     * Creates StandardController and passes it to the PublicClientApplication\r\n     *\r\n     * @param configuration {Configuration}\r\n     */\r\n    static async createPublicClientApplication(configuration) {\r\n        const controller = await (0,_controllers_ControllerFactory_mjs__WEBPACK_IMPORTED_MODULE_0__.createV3Controller)(configuration);\r\n        const pca = new PublicClientApplication(configuration, controller);\r\n        return pca;\r\n    }\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\r\n     */\r\n    constructor(configuration, controller) {\r\n        this.controller =\r\n            controller ||\r\n                new _controllers_StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__.StandardController(new _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__.StandardOperatingContext(configuration));\r\n    }\r\n    /**\r\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\r\n     * @param request {?InitializeApplicationRequest}\r\n     */\r\n    async initialize(request) {\r\n        return this.controller.initialize(request);\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenPopup(request) {\r\n        return this.controller.acquireTokenPopup(request);\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    acquireTokenRedirect(request) {\r\n        return this.controller.acquireTokenRedirect(request);\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\r\n     */\r\n    acquireTokenSilent(silentRequest) {\r\n        return this.controller.acquireTokenSilent(silentRequest);\r\n    }\r\n    /**\r\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\r\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\r\n     * This API is not indended for normal authorization code acquisition and redemption.\r\n     *\r\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\r\n     *\r\n     * @param request {@link AuthorizationCodeRequest}\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenByCode(request) {\r\n        return this.controller.acquireTokenByCode(request);\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     * @param eventTypes\r\n     */\r\n    addEventCallback(callback, eventTypes) {\r\n        return this.controller.addEventCallback(callback, eventTypes);\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        return this.controller.removeEventCallback(callbackId);\r\n    }\r\n    /**\r\n     * Registers a callback to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback) {\r\n        return this.controller.addPerformanceCallback(callback);\r\n    }\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId) {\r\n        return this.controller.removePerformanceCallback(callbackId);\r\n    }\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents() {\r\n        this.controller.enableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents() {\r\n        this.controller.disableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter) {\r\n        return this.controller.getAccount(accountFilter);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByHomeId(homeAccountId) {\r\n        return this.controller.getAccountByHomeId(homeAccountId);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByLocalId(localId) {\r\n        return this.controller.getAccountByLocalId(localId);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param userName\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByUsername(userName) {\r\n        return this.controller.getAccountByUsername(userName);\r\n    }\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return this.controller.getAllAccounts(accountFilter);\r\n    }\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    handleRedirectPromise(hash) {\r\n        return this.controller.handleRedirectPromise(hash);\r\n    }\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(request) {\r\n        return this.controller.loginPopup(request);\r\n    }\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    loginRedirect(request) {\r\n        return this.controller.loginRedirect(request);\r\n    }\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest\r\n     * @deprecated\r\n     */\r\n    logout(logoutRequest) {\r\n        return this.controller.logout(logoutRequest);\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    logoutRedirect(logoutRequest) {\r\n        return this.controller.logoutRedirect(logoutRequest);\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logoutPopup(logoutRequest) {\r\n        return this.controller.logoutPopup(logoutRequest);\r\n    }\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    ssoSilent(request) {\r\n        return this.controller.ssoSilent(request);\r\n    }\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache() {\r\n        return this.controller.getTokenCache();\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.controller.getLogger();\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.controller.setLogger(logger);\r\n    }\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        this.controller.setActiveAccount(account);\r\n    }\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount() {\r\n        return this.controller.getActiveAccount();\r\n    }\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku, version) {\r\n        return this.controller.initializeWrapperLibrary(sku, version);\r\n    }\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient) {\r\n        this.controller.setNavigationClient(navigationClient);\r\n    }\r\n    /**\r\n     * Returns the configuration object\r\n     * @internal\r\n     */\r\n    getConfiguration() {\r\n        return this.controller.getConfiguration();\r\n    }\r\n    /**\r\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\r\n     * @param result\r\n     * @param request - The request object that was used to obtain the AuthenticationResult\r\n     * @returns\r\n     */\r\n    async hydrateCache(result, request) {\r\n        return this.controller.hydrateCache(result, request);\r\n    }\r\n    /**\r\n     * Clears tokens and account from the browser cache.\r\n     * @param logoutRequest\r\n     */\r\n    clearCache(logoutRequest) {\r\n        return this.controller.clearCache(logoutRequest);\r\n    }\r\n}\r\n/**\r\n * creates NestedAppAuthController and passes it to the PublicClientApplication,\r\n * falls back to StandardController if NestedAppAuthController is not available\r\n *\r\n * @param configuration\r\n * @returns IPublicClientApplication\r\n *\r\n */\r\nasync function createNestablePublicClientApplication(configuration) {\r\n    const nestedAppAuth = new _operatingcontext_NestedAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_3__.NestedAppOperatingContext(configuration);\r\n    await nestedAppAuth.initialize();\r\n    if (nestedAppAuth.isAvailable()) {\r\n        const controller = new _controllers_NestedAppAuthController_mjs__WEBPACK_IMPORTED_MODULE_4__.NestedAppAuthController(nestedAppAuth);\r\n        return new PublicClientApplication(configuration, controller);\r\n    }\r\n    return createStandardPublicClientApplication(configuration);\r\n}\r\n/**\r\n * creates PublicClientApplication using StandardController\r\n *\r\n * @param configuration\r\n * @returns IPublicClientApplication\r\n *\r\n */\r\nasync function createStandardPublicClientApplication(configuration) {\r\n    const pca = new PublicClientApplication(configuration);\r\n    await pca.initialize();\r\n    return pca;\r\n}\n\n\n//# sourceMappingURL=PublicClientApplication.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/app/PublicClientNext.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/app/PublicClientNext.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PublicClientNext: function() { return /* binding */ PublicClientNext; }\n/* harmony export */ });\n/* harmony import */ var _controllers_ControllerFactory_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controllers/ControllerFactory.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs\");\n/* harmony import */ var _controllers_UnknownOperatingContextController_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../controllers/UnknownOperatingContextController.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/UnknownOperatingContextController.mjs\");\n/* harmony import */ var _operatingcontext_UnknownOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operatingcontext/UnknownOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/UnknownOperatingContext.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * PublicClientNext is an early look at the planned implementation of PublicClientApplication in the next major version of MSAL.js.\r\n * It contains support for multiple API implementations based on the runtime environment that it is running in.\r\n *\r\n * The goals of these changes are to provide a clean separation of behavior between different operating contexts (Nested App Auth, Platform Brokers, Plain old Browser, etc.)\r\n * while still providing a consistent API surface for developers.\r\n *\r\n * Please use PublicClientApplication for any prod/real-world scenarios.\r\n * Note: PublicClientNext is experimental and subject to breaking changes without following semver\r\n *\r\n */\r\nclass PublicClientNext {\r\n    static async createPublicClientApplication(configuration) {\r\n        const controller = await (0,_controllers_ControllerFactory_mjs__WEBPACK_IMPORTED_MODULE_0__.createController)(configuration);\r\n        let pca;\r\n        if (controller !== null) {\r\n            pca = new PublicClientNext(configuration, controller);\r\n        }\r\n        else {\r\n            pca = new PublicClientNext(configuration);\r\n        }\r\n        return pca;\r\n    }\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientNext used to instantiate the PublicClientNext object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\r\n     */\r\n    constructor(configuration, controller) {\r\n        this.configuration = configuration;\r\n        if (controller) {\r\n            this.controller = controller;\r\n        }\r\n        else {\r\n            const operatingContext = new _operatingcontext_UnknownOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_1__.UnknownOperatingContext(configuration);\r\n            this.controller = new _controllers_UnknownOperatingContextController_mjs__WEBPACK_IMPORTED_MODULE_2__.UnknownOperatingContextController(operatingContext);\r\n        }\r\n    }\r\n    /**\r\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\r\n     */\r\n    async initialize() {\r\n        if (this.controller instanceof _controllers_UnknownOperatingContextController_mjs__WEBPACK_IMPORTED_MODULE_2__.UnknownOperatingContextController) {\r\n            const result = await (0,_controllers_ControllerFactory_mjs__WEBPACK_IMPORTED_MODULE_0__.createController)(this.configuration);\r\n            if (result !== null) {\r\n                this.controller = result;\r\n            }\r\n            return this.controller.initialize();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenPopup(request) {\r\n        return this.controller.acquireTokenPopup(request);\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    acquireTokenRedirect(request) {\r\n        return this.controller.acquireTokenRedirect(request);\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\r\n     */\r\n    acquireTokenSilent(silentRequest) {\r\n        return this.controller.acquireTokenSilent(silentRequest);\r\n    }\r\n    /**\r\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\r\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\r\n     * This API is not indended for normal authorization code acquisition and redemption.\r\n     *\r\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\r\n     *\r\n     * @param request {@link AuthorizationCodeRequest}\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenByCode(request) {\r\n        return this.controller.acquireTokenByCode(request);\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(callback, eventTypes) {\r\n        return this.controller.addEventCallback(callback, eventTypes);\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        return this.controller.removeEventCallback(callbackId);\r\n    }\r\n    /**\r\n     * Registers a callback to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback) {\r\n        return this.controller.addPerformanceCallback(callback);\r\n    }\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId) {\r\n        return this.controller.removePerformanceCallback(callbackId);\r\n    }\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents() {\r\n        this.controller.enableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents() {\r\n        this.controller.disableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter) {\r\n        return this.controller.getAccount(accountFilter);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByHomeId(homeAccountId) {\r\n        return this.controller.getAccountByHomeId(homeAccountId);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByLocalId(localId) {\r\n        return this.controller.getAccountByLocalId(localId);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param userName\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByUsername(userName) {\r\n        return this.controller.getAccountByUsername(userName);\r\n    }\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return this.controller.getAllAccounts(accountFilter);\r\n    }\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    handleRedirectPromise(hash) {\r\n        return this.controller.handleRedirectPromise(hash);\r\n    }\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(request) {\r\n        return this.controller.loginPopup(request);\r\n    }\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    loginRedirect(request) {\r\n        return this.controller.loginRedirect(request);\r\n    }\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest\r\n     * @deprecated\r\n     */\r\n    logout(logoutRequest) {\r\n        return this.controller.logout(logoutRequest);\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    logoutRedirect(logoutRequest) {\r\n        return this.controller.logoutRedirect(logoutRequest);\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logoutPopup(logoutRequest) {\r\n        return this.controller.logoutPopup(logoutRequest);\r\n    }\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    ssoSilent(request) {\r\n        return this.controller.ssoSilent(request);\r\n    }\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache() {\r\n        return this.controller.getTokenCache();\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.controller.getLogger();\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.controller.setLogger(logger);\r\n    }\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        this.controller.setActiveAccount(account);\r\n    }\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount() {\r\n        return this.controller.getActiveAccount();\r\n    }\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku, version) {\r\n        return this.controller.initializeWrapperLibrary(sku, version);\r\n    }\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient) {\r\n        this.controller.setNavigationClient(navigationClient);\r\n    }\r\n    /**\r\n     * Returns the configuration object\r\n     * @internal\r\n     */\r\n    getConfiguration() {\r\n        return this.controller.getConfiguration();\r\n    }\r\n    /**\r\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\r\n     * @param result\r\n     * @param request - The request object that was used to obtain the AuthenticationResult\r\n     * @returns\r\n     */\r\n    async hydrateCache(result, request) {\r\n        return this.controller.hydrateCache(result, request);\r\n    }\r\n    /**\r\n     * Clears tokens and account from the browser cache.\r\n     * @param logoutRequest\r\n     */\r\n    clearCache(logoutRequest) {\r\n        return this.controller.clearCache(logoutRequest);\r\n    }\r\n}\n\n\n//# sourceMappingURL=PublicClientNext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/app/PublicClientNext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeMessageHandler: function() { return /* binding */ NativeMessageHandler; }\n/* harmony export */ });\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../error/NativeAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NativeMessageHandler {\r\n    constructor(logger, handshakeTimeoutMs, performanceClient, extensionId) {\r\n        this.logger = logger;\r\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\r\n        this.extensionId = extensionId;\r\n        this.resolvers = new Map(); // Used for non-handshake messages\r\n        this.handshakeResolvers = new Map(); // Used for handshake messages\r\n        this.messageChannel = new MessageChannel();\r\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\r\n        this.performanceClient = performanceClient;\r\n        this.handshakeEvent = performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.NativeMessageHandlerHandshake);\r\n    }\r\n    /**\r\n     * Sends a given message to the extension and resolves with the extension response\r\n     * @param body\r\n     */\r\n    async sendMessage(body) {\r\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\r\n        const req = {\r\n            channel: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.CHANNEL_ID,\r\n            extensionId: this.extensionId,\r\n            responseId: (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__.createNewGuid)(),\r\n            body: body,\r\n        };\r\n        this.logger.trace(\"NativeMessageHandler - Sending request to browser extension\");\r\n        this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(req)}`);\r\n        this.messageChannel.port1.postMessage(req);\r\n        return new Promise((resolve, reject) => {\r\n            this.resolvers.set(req.responseId, { resolve, reject });\r\n        });\r\n    }\r\n    /**\r\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\r\n     * @param {Logger} logger\r\n     * @param {number} handshakeTimeoutMs\r\n     * @param {IPerformanceClient} performanceClient\r\n     * @param {ICrypto} crypto\r\n     */\r\n    static async createProvider(logger, handshakeTimeoutMs, performanceClient) {\r\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\r\n        try {\r\n            const preferredProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.PREFERRED_EXTENSION_ID);\r\n            await preferredProvider.sendHandshakeRequest();\r\n            return preferredProvider;\r\n        }\r\n        catch (e) {\r\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\r\n            const backupProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient);\r\n            await backupProvider.sendHandshakeRequest();\r\n            return backupProvider;\r\n        }\r\n    }\r\n    /**\r\n     * Send handshake request helper.\r\n     */\r\n    async sendHandshakeRequest() {\r\n        this.logger.trace(\"NativeMessageHandler - sendHandshakeRequest called.\");\r\n        // Register this event listener before sending handshake\r\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\r\n        const req = {\r\n            channel: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.CHANNEL_ID,\r\n            extensionId: this.extensionId,\r\n            responseId: (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__.createNewGuid)(),\r\n            body: {\r\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.HandshakeRequest,\r\n            },\r\n        };\r\n        this.handshakeEvent.add({\r\n            extensionId: this.extensionId,\r\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\r\n        });\r\n        this.messageChannel.port1.onmessage = (event) => {\r\n            this.onChannelMessage(event);\r\n        };\r\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\r\n        return new Promise((resolve, reject) => {\r\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\r\n            this.timeoutId = window.setTimeout(() => {\r\n                /*\r\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\r\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\r\n                 */\r\n                window.removeEventListener(\"message\", this.windowListener, false);\r\n                this.messageChannel.port1.close();\r\n                this.messageChannel.port2.close();\r\n                this.handshakeEvent.end({\r\n                    extensionHandshakeTimedOut: true,\r\n                    success: false,\r\n                });\r\n                reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.nativeHandshakeTimeout));\r\n                this.handshakeResolvers.delete(req.responseId);\r\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\r\n        });\r\n    }\r\n    /**\r\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\r\n     * @param event\r\n     */\r\n    onWindowMessage(event) {\r\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\r\n        // We only accept messages from ourselves\r\n        if (event.source !== window) {\r\n            return;\r\n        }\r\n        const request = event.data;\r\n        if (!request.channel ||\r\n            request.channel !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.CHANNEL_ID) {\r\n            return;\r\n        }\r\n        if (request.extensionId && request.extensionId !== this.extensionId) {\r\n            return;\r\n        }\r\n        if (request.body.method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.HandshakeRequest) {\r\n            const handshakeResolver = this.handshakeResolvers.get(request.responseId);\r\n            /*\r\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\r\n             * the proper response.\r\n             */\r\n            if (!handshakeResolver) {\r\n                this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`);\r\n                return;\r\n            }\r\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\r\n            this.logger.verbose(request.extensionId\r\n                ? `Extension with id: ${request.extensionId} not installed`\r\n                : \"No extension installed\");\r\n            clearTimeout(this.timeoutId);\r\n            this.messageChannel.port1.close();\r\n            this.messageChannel.port2.close();\r\n            window.removeEventListener(\"message\", this.windowListener, false);\r\n            this.handshakeEvent.end({\r\n                success: false,\r\n                extensionInstalled: false,\r\n            });\r\n            handshakeResolver.reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.nativeExtensionNotInstalled));\r\n        }\r\n    }\r\n    /**\r\n     * Invoked when a message is received from the extension on the MessageChannel port\r\n     * @param event\r\n     */\r\n    onChannelMessage(event) {\r\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\r\n        const request = event.data;\r\n        const resolver = this.resolvers.get(request.responseId);\r\n        const handshakeResolver = this.handshakeResolvers.get(request.responseId);\r\n        try {\r\n            const method = request.body.method;\r\n            if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.Response) {\r\n                if (!resolver) {\r\n                    return;\r\n                }\r\n                const response = request.body.response;\r\n                this.logger.trace(\"NativeMessageHandler - Received response from browser extension\");\r\n                this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(response)}`);\r\n                if (response.status !== \"Success\") {\r\n                    resolver.reject((0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createNativeAuthError)(response.code, response.description, response.ext));\r\n                }\r\n                else if (response.result) {\r\n                    if (response.result[\"code\"] &&\r\n                        response.result[\"description\"]) {\r\n                        resolver.reject((0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createNativeAuthError)(response.result[\"code\"], response.result[\"description\"], response.result[\"ext\"]));\r\n                    }\r\n                    else {\r\n                        resolver.resolve(response.result);\r\n                    }\r\n                }\r\n                else {\r\n                    throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthErrorCodes.unexpectedError, \"Event does not contain result.\");\r\n                }\r\n                this.resolvers.delete(request.responseId);\r\n            }\r\n            else if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.HandshakeResponse) {\r\n                if (!handshakeResolver) {\r\n                    this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`);\r\n                    return;\r\n                }\r\n                clearTimeout(this.timeoutId); // Clear setTimeout\r\n                window.removeEventListener(\"message\", this.windowListener, false); // Remove 'No extension' listener\r\n                this.extensionId = request.extensionId;\r\n                this.extensionVersion = request.body.version;\r\n                this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`);\r\n                this.handshakeEvent.end({\r\n                    extensionInstalled: true,\r\n                    success: true,\r\n                });\r\n                handshakeResolver.resolve();\r\n                this.handshakeResolvers.delete(request.responseId);\r\n            }\r\n            // Do nothing if method is not Response or HandshakeResponse\r\n        }\r\n        catch (err) {\r\n            this.logger.error(\"Error parsing response from WAM Extension\");\r\n            this.logger.errorPii(`Error parsing response from WAM Extension: ${err}`);\r\n            this.logger.errorPii(`Unable to parse ${event}`);\r\n            if (resolver) {\r\n                resolver.reject(err);\r\n            }\r\n            else if (handshakeResolver) {\r\n                handshakeResolver.reject(err);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns the Id for the browser extension this handler is communicating with\r\n     * @returns\r\n     */\r\n    getExtensionId() {\r\n        return this.extensionId;\r\n    }\r\n    /**\r\n     * Returns the version for the browser extension this handler is communicating with\r\n     * @returns\r\n     */\r\n    getExtensionVersion() {\r\n        return this.extensionVersion;\r\n    }\r\n    /**\r\n     * Returns boolean indicating whether or not the request should attempt to use native broker\r\n     * @param logger\r\n     * @param config\r\n     * @param nativeExtensionProvider\r\n     * @param authenticationScheme\r\n     */\r\n    static isNativeAvailable(config, logger, nativeExtensionProvider, authenticationScheme) {\r\n        logger.trace(\"isNativeAvailable called\");\r\n        if (!config.system.allowNativeBroker) {\r\n            logger.trace(\"isNativeAvailable: allowNativeBroker is not enabled, returning false\");\r\n            // Developer disabled WAM\r\n            return false;\r\n        }\r\n        if (!nativeExtensionProvider) {\r\n            logger.trace(\"isNativeAvailable: WAM extension provider is not initialized, returning false\");\r\n            // Extension is not available\r\n            return false;\r\n        }\r\n        if (authenticationScheme) {\r\n            switch (authenticationScheme) {\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.POP:\r\n                    logger.trace(\"isNativeAvailable: authenticationScheme is supported, returning true\");\r\n                    return true;\r\n                default:\r\n                    logger.trace(\"isNativeAvailable: authenticationScheme is not supported, returning false\");\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\n\n\n//# sourceMappingURL=NativeMessageHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCOUNT_UNAVAILABLE: function() { return /* binding */ ACCOUNT_UNAVAILABLE; },\n/* harmony export */   DISABLED: function() { return /* binding */ DISABLED; },\n/* harmony export */   NO_NETWORK: function() { return /* binding */ NO_NETWORK; },\n/* harmony export */   PERSISTENT_ERROR: function() { return /* binding */ PERSISTENT_ERROR; },\n/* harmony export */   USER_CANCEL: function() { return /* binding */ USER_CANCEL; },\n/* harmony export */   USER_INTERACTION_REQUIRED: function() { return /* binding */ USER_INTERACTION_REQUIRED; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Status Codes that can be thrown by WAM\r\nconst USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\r\nconst USER_CANCEL = \"USER_CANCEL\";\r\nconst NO_NETWORK = \"NO_NETWORK\";\r\nconst PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\r\nconst DISABLED = \"DISABLED\";\r\nconst ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\n\n\n//# sourceMappingURL=NativeStatusCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Jyb2tlci9uYXRpdmVCcm9rZXIvTmF0aXZlU3RhdHVzQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUrRztBQUMvRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Jyb2tlci9uYXRpdmVCcm9rZXIvTmF0aXZlU3RhdHVzQ29kZXMubWpzP2RjYTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLy8gU3RhdHVzIENvZGVzIHRoYXQgY2FuIGJlIHRocm93biBieSBXQU1cclxuY29uc3QgVVNFUl9JTlRFUkFDVElPTl9SRVFVSVJFRCA9IFwiVVNFUl9JTlRFUkFDVElPTl9SRVFVSVJFRFwiO1xyXG5jb25zdCBVU0VSX0NBTkNFTCA9IFwiVVNFUl9DQU5DRUxcIjtcclxuY29uc3QgTk9fTkVUV09SSyA9IFwiTk9fTkVUV09SS1wiO1xyXG5jb25zdCBQRVJTSVNURU5UX0VSUk9SID0gXCJQRVJTSVNURU5UX0VSUk9SXCI7XHJcbmNvbnN0IERJU0FCTEVEID0gXCJESVNBQkxFRFwiO1xyXG5jb25zdCBBQ0NPVU5UX1VOQVZBSUxBQkxFID0gXCJBQ0NPVU5UX1VOQVZBSUxBQkxFXCI7XG5cbmV4cG9ydCB7IEFDQ09VTlRfVU5BVkFJTEFCTEUsIERJU0FCTEVELCBOT19ORVRXT1JLLCBQRVJTSVNURU5UX0VSUk9SLCBVU0VSX0NBTkNFTCwgVVNFUl9JTlRFUkFDVElPTl9SRVFVSVJFRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmF0aXZlU3RhdHVzQ29kZXMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccount: function() { return /* binding */ getAccount; },\n/* harmony export */   getAccountByHomeId: function() { return /* binding */ getAccountByHomeId; },\n/* harmony export */   getAccountByLocalId: function() { return /* binding */ getAccountByLocalId; },\n/* harmony export */   getAccountByUsername: function() { return /* binding */ getAccountByUsername; },\n/* harmony export */   getActiveAccount: function() { return /* binding */ getActiveAccount; },\n/* harmony export */   getAllAccounts: function() { return /* binding */ getAllAccounts; },\n/* harmony export */   setActiveAccount: function() { return /* binding */ setActiveAccount; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n * @returns Array of AccountInfo objects in cache\r\n */\r\nfunction getAllAccounts(logger, browserStorage, isInBrowser, accountFilter) {\r\n    logger.verbose(\"getAllAccounts called\");\r\n    return isInBrowser ? browserStorage.getAllAccounts(accountFilter) : [];\r\n}\r\n/**\r\n * Returns the first account found in the cache that matches the account filter passed in.\r\n * @param accountFilter\r\n * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n */\r\nfunction getAccount(accountFilter, logger, browserStorage) {\r\n    logger.trace(\"getAccount called\");\r\n    if (Object.keys(accountFilter).length === 0) {\r\n        logger.warning(\"getAccount: No accountFilter provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy(accountFilter);\r\n    if (account) {\r\n        logger.verbose(\"getAccount: Account matching provided filter found, returning\");\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccount: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the signed in account matching username.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found.\r\n * This API is provided for convenience but getAccountById should be used for best reliability\r\n * @param username\r\n * @returns The account object stored in MSAL\r\n */\r\nfunction getAccountByUsername(username, logger, browserStorage) {\r\n    logger.trace(\"getAccountByUsername called\");\r\n    if (!username) {\r\n        logger.warning(\"getAccountByUsername: No username provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        username,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\"getAccountByUsername: Account matching username found, returning\");\r\n        logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${username}`);\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the signed in account matching homeAccountId.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found\r\n * @param homeAccountId\r\n * @returns The account object stored in MSAL\r\n */\r\nfunction getAccountByHomeId(homeAccountId, logger, browserStorage) {\r\n    logger.trace(\"getAccountByHomeId called\");\r\n    if (!homeAccountId) {\r\n        logger.warning(\"getAccountByHomeId: No homeAccountId provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        homeAccountId,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\"getAccountByHomeId: Account matching homeAccountId found, returning\");\r\n        logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the signed in account matching localAccountId.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found\r\n * @param localAccountId\r\n * @returns The account object stored in MSAL\r\n */\r\nfunction getAccountByLocalId(localAccountId, logger, browserStorage) {\r\n    logger.trace(\"getAccountByLocalId called\");\r\n    if (!localAccountId) {\r\n        logger.warning(\"getAccountByLocalId: No localAccountId provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        localAccountId,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\"getAccountByLocalId: Account matching localAccountId found, returning\");\r\n        logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`);\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n * @param account\r\n */\r\nfunction setActiveAccount(account, browserStorage) {\r\n    browserStorage.setActiveAccount(account);\r\n}\r\n/**\r\n * Gets the currently active account\r\n */\r\nfunction getActiveAccount(browserStorage) {\r\n    return browserStorage.getActiveAccount();\r\n}\n\n\n//# sourceMappingURL=AccountManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncMemoryStorage: function() { return /* binding */ AsyncMemoryStorage; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _DatabaseStorage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DatabaseStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs\");\n/* harmony import */ var _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MemoryStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\r\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\r\n */\r\nclass AsyncMemoryStorage {\r\n    constructor(logger) {\r\n        this.inMemoryCache = new _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_0__.MemoryStorage();\r\n        this.indexedDBCache = new _DatabaseStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.DatabaseStorage();\r\n        this.logger = logger;\r\n    }\r\n    handleDatabaseAccessError(error) {\r\n        if (error instanceof _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError &&\r\n            error.errorCode === _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.databaseUnavailable) {\r\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\r\n        }\r\n        else {\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\r\n     * storage object if item isn't found in-memory.\r\n     * @param key\r\n     */\r\n    async getItem(key) {\r\n        const item = this.inMemoryCache.getItem(key);\r\n        if (!item) {\r\n            try {\r\n                this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\r\n                return await this.indexedDBCache.getItem(key);\r\n            }\r\n            catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return item;\r\n    }\r\n    /**\r\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\r\n     * storage object with the given key.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    async setItem(key, value) {\r\n        this.inMemoryCache.setItem(key, value);\r\n        try {\r\n            await this.indexedDBCache.setItem(key, value);\r\n        }\r\n        catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\r\n     * @param key\r\n     */\r\n    async removeItem(key) {\r\n        this.inMemoryCache.removeItem(key);\r\n        try {\r\n            await this.indexedDBCache.removeItem(key);\r\n        }\r\n        catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n        }\r\n    }\r\n    /**\r\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\r\n     * asynchronous storage object.\r\n     */\r\n    async getKeys() {\r\n        const cacheKeys = this.inMemoryCache.getKeys();\r\n        if (cacheKeys.length === 0) {\r\n            try {\r\n                this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\r\n                return await this.indexedDBCache.getKeys();\r\n            }\r\n            catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return cacheKeys;\r\n    }\r\n    /**\r\n     * Returns true or false if the given key is present in the cache.\r\n     * @param key\r\n     */\r\n    async containsKey(key) {\r\n        const containsKey = this.inMemoryCache.containsKey(key);\r\n        if (!containsKey) {\r\n            try {\r\n                this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\r\n                return await this.indexedDBCache.containsKey(key);\r\n            }\r\n            catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return containsKey;\r\n    }\r\n    /**\r\n     * Clears in-memory Map\r\n     */\r\n    clearInMemory() {\r\n        // InMemory cache is a Map instance, clear is straightforward\r\n        this.logger.verbose(`Deleting in-memory keystore`);\r\n        this.inMemoryCache.clear();\r\n        this.logger.verbose(`In-memory keystore deleted`);\r\n    }\r\n    /**\r\n     * Tries to delete the IndexedDB database\r\n     * @returns\r\n     */\r\n    async clearPersistent() {\r\n        try {\r\n            this.logger.verbose(\"Deleting persistent keystore\");\r\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\r\n            if (dbDeleted) {\r\n                this.logger.verbose(\"Persistent keystore deleted\");\r\n            }\r\n            return dbDeleted;\r\n        }\r\n        catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n            return false;\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=AsyncMemoryStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserCacheManager: function() { return /* binding */ BrowserCacheManager; },\n/* harmony export */   DEFAULT_BROWSER_CACHE_MANAGER: function() { return /* binding */ DEFAULT_BROWSER_CACHE_MANAGER; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _LocalStorage_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LocalStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/LocalStorage.mjs\");\n/* harmony import */ var _SessionStorage_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SessionStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/SessionStorage.mjs\");\n/* harmony import */ var _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MemoryStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\");\n/* harmony import */ var _utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/BrowserProtocolUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs\");\n/* harmony import */ var _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../encode/Base64Decode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/* harmony import */ var _CookieStorage_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CookieStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/CookieStorage.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nclass BrowserCacheManager extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheManager {\r\n    constructor(clientId, cacheConfig, cryptoImpl, logger, staticAuthorityOptions, performanceClient) {\r\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\r\n        this.cacheConfig = cacheConfig;\r\n        this.logger = logger;\r\n        this.internalStorage = new _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.MemoryStorage();\r\n        this.browserStorage = this.setupBrowserStorage(this.cacheConfig.cacheLocation);\r\n        this.temporaryCacheStorage = this.setupBrowserStorage(this.cacheConfig.temporaryCacheLocation);\r\n        this.cookieStorage = new _CookieStorage_mjs__WEBPACK_IMPORTED_MODULE_2__.CookieStorage();\r\n        // Migrate cache entries from older versions of MSAL.\r\n        if (cacheConfig.cacheMigrationEnabled) {\r\n            this.migrateCacheEntries();\r\n            this.createKeyMaps();\r\n        }\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\r\n     * @param cacheLocation\r\n     */\r\n    setupBrowserStorage(cacheLocation) {\r\n        try {\r\n            switch (cacheLocation) {\r\n                case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.LocalStorage:\r\n                    return new _LocalStorage_mjs__WEBPACK_IMPORTED_MODULE_4__.LocalStorage();\r\n                case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.SessionStorage:\r\n                    return new _SessionStorage_mjs__WEBPACK_IMPORTED_MODULE_5__.SessionStorage();\r\n                case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.MemoryStorage:\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.logger.error(e);\r\n        }\r\n        this.cacheConfig.cacheLocation = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.MemoryStorage;\r\n        return new _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.MemoryStorage();\r\n    }\r\n    /**\r\n     * Migrate all old cache entries to new schema. No rollback supported.\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    migrateCacheEntries() {\r\n        const idTokenKey = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ID_TOKEN}`;\r\n        const clientInfoKey = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.CLIENT_INFO}`;\r\n        const errorKey = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ERROR}`;\r\n        const errorDescKey = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ERROR_DESC}`;\r\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\r\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\r\n        const errorValue = this.browserStorage.getItem(errorKey);\r\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\r\n        const values = [\r\n            idTokenValue,\r\n            clientInfoValue,\r\n            errorValue,\r\n            errorDescValue,\r\n        ];\r\n        const keysToMigrate = [\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ID_TOKEN,\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.CLIENT_INFO,\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ERROR,\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ERROR_DESC,\r\n        ];\r\n        keysToMigrate.forEach((cacheKey, index) => {\r\n            const value = values[index];\r\n            if (value) {\r\n                this.setTemporaryCache(cacheKey, value, true);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Searches all cache entries for MSAL accounts and creates the account key map\r\n     * This is used to migrate users from older versions of MSAL which did not create the map.\r\n     * @returns\r\n     */\r\n    createKeyMaps() {\r\n        this.logger.trace(\"BrowserCacheManager - createKeyMaps called.\");\r\n        const accountKeys = this.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.StaticCacheKeys.ACCOUNT_KEYS);\r\n        const tokenKeys = this.getItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\r\n        if (accountKeys && tokenKeys) {\r\n            this.logger.verbose(\"BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.\");\r\n            // Key maps already exist, no need to iterate through cache\r\n            return;\r\n        }\r\n        const allKeys = this.browserStorage.getKeys();\r\n        allKeys.forEach((key) => {\r\n            if (this.isCredentialKey(key)) {\r\n                // Get item, parse, validate and write key to map\r\n                const value = this.getItem(key);\r\n                if (value) {\r\n                    const credObj = this.validateAndParseJson(value);\r\n                    if (credObj && credObj.hasOwnProperty(\"credentialType\")) {\r\n                        switch (credObj[\"credentialType\"]) {\r\n                            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN:\r\n                                if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isIdTokenEntity(credObj)) {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${key} found, saving key to token key map`);\r\n                                    const idTokenEntity = credObj;\r\n                                    const newKey = this.updateCredentialCacheKey(key, idTokenEntity);\r\n                                    this.addTokenKey(newKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping.\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${key}`);\r\n                                }\r\n                                break;\r\n                            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN:\r\n                            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\r\n                                if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isAccessTokenEntity(credObj)) {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${key} found, saving key to token key map`);\r\n                                    const accessTokenEntity = credObj;\r\n                                    const newKey = this.updateCredentialCacheKey(key, accessTokenEntity);\r\n                                    this.addTokenKey(newKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping.\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${key}`);\r\n                                }\r\n                                break;\r\n                            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN:\r\n                                if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isRefreshTokenEntity(credObj)) {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${key} found, saving key to token key map`);\r\n                                    const refreshTokenEntity = credObj;\r\n                                    const newKey = this.updateCredentialCacheKey(key, refreshTokenEntity);\r\n                                    this.addTokenKey(newKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping.\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${key}`);\r\n                                }\r\n                                break;\r\n                            // If credentialType isn't one of our predefined ones, it may not be an MSAL cache value. Ignore.\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.isAccountKey(key)) {\r\n                const value = this.getItem(key);\r\n                if (value) {\r\n                    const accountObj = this.validateAndParseJson(value);\r\n                    if (accountObj &&\r\n                        _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AccountEntity.isAccountEntity(accountObj)) {\r\n                        this.logger.trace(\"BrowserCacheManager:createKeyMaps - account found, saving key to account key map\");\r\n                        this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${key} found, saving key to account key map`);\r\n                        this.addAccountKeyToMap(key);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\r\n     * @param input\r\n     */\r\n    validateAndParseJson(jsonValue) {\r\n        try {\r\n            const parsedJson = JSON.parse(jsonValue);\r\n            /**\r\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\r\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\r\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\r\n             *\r\n             */\r\n            return parsedJson && typeof parsedJson === \"object\"\r\n                ? parsedJson\r\n                : null;\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * fetches the entry from the browser storage based off the key\r\n     * @param key\r\n     */\r\n    getItem(key) {\r\n        return this.browserStorage.getItem(key);\r\n    }\r\n    /**\r\n     * sets the entry in the browser storage\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setItem(key, value) {\r\n        this.browserStorage.setItem(key, value);\r\n    }\r\n    /**\r\n     * fetch the account entity from the platform cache\r\n     * @param accountKey\r\n     */\r\n    getAccount(accountKey, logger) {\r\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\r\n        const accountEntity = this.getCachedAccountEntity(accountKey);\r\n        return this.updateOutdatedCachedAccount(accountKey, accountEntity, logger);\r\n    }\r\n    /**\r\n     * Reads account from cache, deserializes it into an account entity and returns it.\r\n     * If account is not found from the key, returns null and removes key from map.\r\n     * @param accountKey\r\n     * @returns\r\n     */\r\n    getCachedAccountEntity(accountKey) {\r\n        const serializedAccount = this.getItem(accountKey);\r\n        if (!serializedAccount) {\r\n            this.removeAccountKeyFromMap(accountKey);\r\n            return null;\r\n        }\r\n        const parsedAccount = this.validateAndParseJson(serializedAccount);\r\n        if (!parsedAccount || !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AccountEntity.isAccountEntity(parsedAccount)) {\r\n            this.removeAccountKeyFromMap(accountKey);\r\n            return null;\r\n        }\r\n        return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AccountEntity(), parsedAccount);\r\n    }\r\n    /**\r\n     * set account entity in the platform cache\r\n     * @param account\r\n     */\r\n    setAccount(account) {\r\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\r\n        const key = account.generateAccountKey();\r\n        this.setItem(key, JSON.stringify(account));\r\n        this.addAccountKeyToMap(key);\r\n    }\r\n    /**\r\n     * Returns the array of account keys currently cached\r\n     * @returns\r\n     */\r\n    getAccountKeys() {\r\n        this.logger.trace(\"BrowserCacheManager.getAccountKeys called\");\r\n        const accountKeys = this.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.StaticCacheKeys.ACCOUNT_KEYS);\r\n        if (accountKeys) {\r\n            return JSON.parse(accountKeys);\r\n        }\r\n        this.logger.verbose(\"BrowserCacheManager.getAccountKeys - No account keys found\");\r\n        return [];\r\n    }\r\n    /**\r\n     * Add a new account to the key map\r\n     * @param key\r\n     */\r\n    addAccountKeyToMap(key) {\r\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\r\n        this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${key}`);\r\n        const accountKeys = this.getAccountKeys();\r\n        if (accountKeys.indexOf(key) === -1) {\r\n            // Only add key if it does not already exist in the map\r\n            accountKeys.push(key);\r\n            this.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\r\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key added\");\r\n        }\r\n        else {\r\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key already exists in map\");\r\n        }\r\n    }\r\n    /**\r\n     * Remove an account from the key map\r\n     * @param key\r\n     */\r\n    removeAccountKeyFromMap(key) {\r\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\r\n        this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`);\r\n        const accountKeys = this.getAccountKeys();\r\n        const removalIndex = accountKeys.indexOf(key);\r\n        if (removalIndex > -1) {\r\n            accountKeys.splice(removalIndex, 1);\r\n            this.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\r\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap account key removed\");\r\n        }\r\n        else {\r\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\");\r\n        }\r\n    }\r\n    /**\r\n     * Extends inherited removeAccount function to include removal of the account key from the map\r\n     * @param key\r\n     */\r\n    async removeAccount(key) {\r\n        void super.removeAccount(key);\r\n        this.removeAccountKeyFromMap(key);\r\n    }\r\n    /**\r\n     * Remove account entity from the platform cache if it's outdated\r\n     * @param accountKey\r\n     */\r\n    removeOutdatedAccount(accountKey) {\r\n        this.removeItem(accountKey);\r\n        this.removeAccountKeyFromMap(accountKey);\r\n    }\r\n    /**\r\n     * Removes given idToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    removeIdToken(key) {\r\n        super.removeIdToken(key);\r\n        this.removeTokenKey(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\r\n    }\r\n    /**\r\n     * Removes given accessToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    async removeAccessToken(key) {\r\n        void super.removeAccessToken(key);\r\n        this.removeTokenKey(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\r\n    }\r\n    /**\r\n     * Removes given refreshToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    removeRefreshToken(key) {\r\n        super.removeRefreshToken(key);\r\n        this.removeTokenKey(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\r\n    }\r\n    /**\r\n     * Gets the keys for the cached tokens associated with this clientId\r\n     * @returns\r\n     */\r\n    getTokenKeys() {\r\n        this.logger.trace(\"BrowserCacheManager.getTokenKeys called\");\r\n        const item = this.getItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\r\n        if (item) {\r\n            const tokenKeys = this.validateAndParseJson(item);\r\n            if (tokenKeys &&\r\n                tokenKeys.hasOwnProperty(\"idToken\") &&\r\n                tokenKeys.hasOwnProperty(\"accessToken\") &&\r\n                tokenKeys.hasOwnProperty(\"refreshToken\")) {\r\n                return tokenKeys;\r\n            }\r\n            else {\r\n                this.logger.error(\"BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.\");\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"BrowserCacheManager.getTokenKeys - No token keys found\");\r\n        }\r\n        return {\r\n            idToken: [],\r\n            accessToken: [],\r\n            refreshToken: [],\r\n        };\r\n    }\r\n    /**\r\n     * Adds the given key to the token key map\r\n     * @param key\r\n     * @param type\r\n     */\r\n    addTokenKey(key, type) {\r\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\r\n        const tokenKeys = this.getTokenKeys();\r\n        switch (type) {\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN:\r\n                if (tokenKeys.idToken.indexOf(key) === -1) {\r\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - idToken added to map\");\r\n                    tokenKeys.idToken.push(key);\r\n                }\r\n                break;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN:\r\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\r\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - accessToken added to map\");\r\n                    tokenKeys.accessToken.push(key);\r\n                }\r\n                break;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN:\r\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\r\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - refreshToken added to map\");\r\n                    tokenKeys.refreshToken.push(key);\r\n                }\r\n                break;\r\n            default:\r\n                this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.unexpectedCredentialType);\r\n        }\r\n        this.setItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\r\n    }\r\n    /**\r\n     * Removes the given key from the token key map\r\n     * @param key\r\n     * @param type\r\n     */\r\n    removeTokenKey(key, type) {\r\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\r\n        const tokenKeys = this.getTokenKeys();\r\n        switch (type) {\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN:\r\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`);\r\n                const idRemoval = tokenKeys.idToken.indexOf(key);\r\n                if (idRemoval > -1) {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken removed from map\");\r\n                    tokenKeys.idToken.splice(idRemoval, 1);\r\n                }\r\n                else {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\");\r\n                }\r\n                break;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN:\r\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`);\r\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\r\n                if (accessRemoval > -1) {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken removed from map\");\r\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\r\n                }\r\n                else {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\");\r\n                }\r\n                break;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN:\r\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`);\r\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\r\n                if (refreshRemoval > -1) {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken removed from map\");\r\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\r\n                }\r\n                else {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\");\r\n                }\r\n                break;\r\n            default:\r\n                this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.unexpectedCredentialType);\r\n        }\r\n        this.setItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\r\n    }\r\n    /**\r\n     * generates idToken entity from a string\r\n     * @param idTokenKey\r\n     */\r\n    getIdTokenCredential(idTokenKey) {\r\n        const value = this.getItem(idTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(idTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedIdToken = this.validateAndParseJson(value);\r\n        if (!parsedIdToken || !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isIdTokenEntity(parsedIdToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(idTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\r\n        return parsedIdToken;\r\n    }\r\n    /**\r\n     * set IdToken credential to the platform cache\r\n     * @param idToken\r\n     */\r\n    setIdTokenCredential(idToken) {\r\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\r\n        const idTokenKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.generateCredentialKey(idToken);\r\n        this.setItem(idTokenKey, JSON.stringify(idToken));\r\n        this.addTokenKey(idTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\r\n    }\r\n    /**\r\n     * generates accessToken entity from a string\r\n     * @param key\r\n     */\r\n    getAccessTokenCredential(accessTokenKey) {\r\n        const value = this.getItem(accessTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(accessTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedAccessToken = this.validateAndParseJson(value);\r\n        if (!parsedAccessToken ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isAccessTokenEntity(parsedAccessToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(accessTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\r\n        return parsedAccessToken;\r\n    }\r\n    /**\r\n     * set accessToken credential to the platform cache\r\n     * @param accessToken\r\n     */\r\n    setAccessTokenCredential(accessToken) {\r\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\r\n        const accessTokenKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.generateCredentialKey(accessToken);\r\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\r\n        this.addTokenKey(accessTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN);\r\n    }\r\n    /**\r\n     * generates refreshToken entity from a string\r\n     * @param refreshTokenKey\r\n     */\r\n    getRefreshTokenCredential(refreshTokenKey) {\r\n        const value = this.getItem(refreshTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(refreshTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedRefreshToken = this.validateAndParseJson(value);\r\n        if (!parsedRefreshToken ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isRefreshTokenEntity(parsedRefreshToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(refreshTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\r\n        return parsedRefreshToken;\r\n    }\r\n    /**\r\n     * set refreshToken credential to the platform cache\r\n     * @param refreshToken\r\n     */\r\n    setRefreshTokenCredential(refreshToken) {\r\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\r\n        const refreshTokenKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.generateCredentialKey(refreshToken);\r\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\r\n        this.addTokenKey(refreshTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\r\n    }\r\n    /**\r\n     * fetch appMetadata entity from the platform cache\r\n     * @param appMetadataKey\r\n     */\r\n    getAppMetadata(appMetadataKey) {\r\n        const value = this.getItem(appMetadataKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (!parsedMetadata ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\r\n        return parsedMetadata;\r\n    }\r\n    /**\r\n     * set appMetadata entity to the platform cache\r\n     * @param appMetadata\r\n     */\r\n    setAppMetadata(appMetadata) {\r\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\r\n        const appMetadataKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.generateAppMetadataKey(appMetadata);\r\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\r\n    }\r\n    /**\r\n     * fetch server telemetry entity from the platform cache\r\n     * @param serverTelemetryKey\r\n     */\r\n    getServerTelemetry(serverTelemetryKey) {\r\n        const value = this.getItem(serverTelemetryKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedEntity = this.validateAndParseJson(value);\r\n        if (!parsedEntity ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isServerTelemetryEntity(serverTelemetryKey, parsedEntity)) {\r\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\r\n        return parsedEntity;\r\n    }\r\n    /**\r\n     * set server telemetry entity to the platform cache\r\n     * @param serverTelemetryKey\r\n     * @param serverTelemetry\r\n     */\r\n    setServerTelemetry(serverTelemetryKey, serverTelemetry) {\r\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\r\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadata(key) {\r\n        const value = this.internalStorage.getItem(key);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (parsedMetadata &&\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isAuthorityMetadataEntity(key, parsedMetadata)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\r\n            return parsedMetadata;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadataKeys() {\r\n        const allKeys = this.internalStorage.getKeys();\r\n        return allKeys.filter((key) => {\r\n            return this.isAuthorityMetadata(key);\r\n        });\r\n    }\r\n    /**\r\n     * Sets wrapper metadata in memory\r\n     * @param wrapperSKU\r\n     * @param wrapperVersion\r\n     */\r\n    setWrapperMetadata(wrapperSKU, wrapperVersion) {\r\n        this.internalStorage.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\r\n        this.internalStorage.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\r\n    }\r\n    /**\r\n     * Returns wrapper metadata from in-memory storage\r\n     */\r\n    getWrapperMetadata() {\r\n        const sku = this.internalStorage.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InMemoryCacheKeys.WRAPPER_SKU) ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        const version = this.internalStorage.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InMemoryCacheKeys.WRAPPER_VER) ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        return [sku, version];\r\n    }\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    setAuthorityMetadata(key, entity) {\r\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\r\n        this.internalStorage.setItem(key, JSON.stringify(entity));\r\n    }\r\n    /**\r\n     * Gets the active account\r\n     */\r\n    getActiveAccount() {\r\n        const activeAccountKeyFilters = this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\r\n        const activeAccountValueFilters = this.getItem(activeAccountKeyFilters);\r\n        if (!activeAccountValueFilters) {\r\n            // if new active account cache type isn't found, it's an old version, so look for that instead\r\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema\");\r\n            const activeAccountKeyLocal = this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ACTIVE_ACCOUNT);\r\n            const activeAccountValueLocal = this.getItem(activeAccountKeyLocal);\r\n            if (!activeAccountValueLocal) {\r\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\r\n                return null;\r\n            }\r\n            const activeAccount = this.getAccountInfoFilteredBy({\r\n                localAccountId: activeAccountValueLocal,\r\n            });\r\n            if (activeAccount) {\r\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Legacy active account cache schema found\");\r\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Adding active account filters cache schema\");\r\n                this.setActiveAccount(activeAccount);\r\n                return activeAccount;\r\n            }\r\n            return null;\r\n        }\r\n        const activeAccountValueObj = this.validateAndParseJson(activeAccountValueFilters);\r\n        if (activeAccountValueObj) {\r\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: Active account filters schema found\");\r\n            return this.getAccountInfoFilteredBy({\r\n                homeAccountId: activeAccountValueObj.homeAccountId,\r\n                localAccountId: activeAccountValueObj.localAccountId,\r\n                tenantId: activeAccountValueObj.tenantId,\r\n            });\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\r\n        return null;\r\n    }\r\n    /**\r\n     * Sets the active account's localAccountId in cache\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        const activeAccountKey = this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\r\n        const activeAccountKeyLocal = this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ACTIVE_ACCOUNT);\r\n        if (account) {\r\n            this.logger.verbose(\"setActiveAccount: Active account set\");\r\n            const activeAccountValue = {\r\n                homeAccountId: account.homeAccountId,\r\n                localAccountId: account.localAccountId,\r\n                tenantId: account.tenantId,\r\n            };\r\n            this.browserStorage.setItem(activeAccountKey, JSON.stringify(activeAccountValue));\r\n            this.browserStorage.setItem(activeAccountKeyLocal, account.localAccountId);\r\n        }\r\n        else {\r\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\r\n            this.browserStorage.removeItem(activeAccountKey);\r\n            this.browserStorage.removeItem(activeAccountKeyLocal);\r\n        }\r\n    }\r\n    /**\r\n     * fetch throttling entity from the platform cache\r\n     * @param throttlingCacheKey\r\n     */\r\n    getThrottlingCache(throttlingCacheKey) {\r\n        const value = this.getItem(throttlingCacheKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedThrottlingCache = this.validateAndParseJson(value);\r\n        if (!parsedThrottlingCache ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\r\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\r\n        return parsedThrottlingCache;\r\n    }\r\n    /**\r\n     * set throttling entity to the platform cache\r\n     * @param throttlingCacheKey\r\n     * @param throttlingCache\r\n     */\r\n    setThrottlingCache(throttlingCacheKey, throttlingCache) {\r\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\r\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\r\n    }\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    getTemporaryCache(cacheKey, generateKey) {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            const itemCookie = this.cookieStorage.getItem(key);\r\n            if (itemCookie) {\r\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\r\n                return itemCookie;\r\n            }\r\n        }\r\n        const value = this.temporaryCacheStorage.getItem(key);\r\n        if (!value) {\r\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\r\n            if (this.cacheConfig.cacheLocation ===\r\n                _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.LocalStorage) {\r\n                const item = this.browserStorage.getItem(key);\r\n                if (item) {\r\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\r\n                    return item;\r\n                }\r\n            }\r\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\r\n        return value;\r\n    }\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setTemporaryCache(cacheKey, value, generateKey) {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n        this.temporaryCacheStorage.setItem(key, value);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\r\n            this.cookieStorage.setItem(key, value, undefined, this.cacheConfig.secureCookies);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * @param key\r\n     */\r\n    removeItem(key) {\r\n        this.browserStorage.removeItem(key);\r\n    }\r\n    /**\r\n     * Removes the temporary cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    removeTemporaryItem(key) {\r\n        this.temporaryCacheStorage.removeItem(key);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\r\n            this.cookieStorage.removeItem(key);\r\n        }\r\n    }\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    getKeys() {\r\n        return this.browserStorage.getKeys();\r\n    }\r\n    /**\r\n     * Clears all cache entries created by MSAL.\r\n     */\r\n    async clear() {\r\n        // Removes all accounts and their credentials\r\n        await this.removeAllAccounts();\r\n        this.removeAppMetadata();\r\n        // Remove temp storage first to make sure any cookies are cleared\r\n        this.temporaryCacheStorage.getKeys().forEach((cacheKey) => {\r\n            if (cacheKey.indexOf(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX) !== -1 ||\r\n                cacheKey.indexOf(this.clientId) !== -1) {\r\n                this.removeTemporaryItem(cacheKey);\r\n            }\r\n        });\r\n        // Removes all remaining MSAL cache items\r\n        this.browserStorage.getKeys().forEach((cacheKey) => {\r\n            if (cacheKey.indexOf(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX) !== -1 ||\r\n                cacheKey.indexOf(this.clientId) !== -1) {\r\n                this.browserStorage.removeItem(cacheKey);\r\n            }\r\n        });\r\n        this.internalStorage.clear();\r\n    }\r\n    /**\r\n     * Clears all access tokes that have claims prior to saving the current one\r\n     * @param performanceClient {IPerformanceClient}\r\n     * @param correlationId {string} correlation id\r\n     * @returns\r\n     */\r\n    async clearTokensAndKeysWithClaims(performanceClient, correlationId) {\r\n        performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.ClearTokensAndKeysWithClaims, correlationId);\r\n        const tokenKeys = this.getTokenKeys();\r\n        const removedAccessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            // if the access token has claims in its key, remove the token key and the token\r\n            const credential = this.getAccessTokenCredential(key);\r\n            if (credential?.requestedClaimsHash &&\r\n                key.includes(credential.requestedClaimsHash.toLowerCase())) {\r\n                removedAccessTokens.push(this.removeAccessToken(key));\r\n            }\r\n        });\r\n        await Promise.all(removedAccessTokens);\r\n        // warn if any access tokens are removed\r\n        if (removedAccessTokens.length > 0) {\r\n            this.logger.warning(`${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`);\r\n        }\r\n    }\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    generateCacheKey(key) {\r\n        const generatedKey = this.validateAndParseJson(key);\r\n        if (!generatedKey) {\r\n            if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.StringUtils.startsWith(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX) ||\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.StringUtils.startsWith(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ADAL_ID_TOKEN)) {\r\n                return key;\r\n            }\r\n            return `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\r\n        }\r\n        return JSON.stringify(key);\r\n    }\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    generateAuthorityKey(stateString) {\r\n        const { libraryState: { id: stateId }, } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.AUTHORITY}.${stateId}`);\r\n    }\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    generateNonceKey(stateString) {\r\n        const { libraryState: { id: stateId }, } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\r\n    }\r\n    /**\r\n     * Creates full cache key for the request state\r\n     * @param stateString State string for the request\r\n     */\r\n    generateStateKey(stateString) {\r\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\r\n        const { libraryState: { id: stateId }, } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\r\n    }\r\n    /**\r\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n     */\r\n    getCachedAuthority(cachedState) {\r\n        const stateCacheKey = this.generateStateKey(cachedState);\r\n        const state = this.getTemporaryCache(stateCacheKey);\r\n        if (!state) {\r\n            return null;\r\n        }\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        return this.getTemporaryCache(authorityCacheKey);\r\n    }\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    updateCacheEntries(state, nonce, authorityInstance, loginHint, account) {\r\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\r\n        // Cache the request state\r\n        const stateCacheKey = this.generateStateKey(state);\r\n        this.setTemporaryCache(stateCacheKey, state, false);\r\n        // Cache the nonce\r\n        const nonceCacheKey = this.generateNonceKey(state);\r\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\r\n        // Cache authorityKey\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\r\n        if (account) {\r\n            const ccsCredential = {\r\n                credential: account.homeAccountId,\r\n                type: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n            };\r\n            this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\r\n        }\r\n        else if (loginHint) {\r\n            const ccsCredential = {\r\n                credential: loginHint,\r\n                type: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CcsCredentialType.UPN,\r\n            };\r\n            this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\r\n        }\r\n    }\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    resetRequestCache(state) {\r\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\r\n        // check state and remove associated cache items\r\n        if (state) {\r\n            this.temporaryCacheStorage.getKeys().forEach((key) => {\r\n                if (key.indexOf(state) !== -1) {\r\n                    this.removeTemporaryItem(key);\r\n                }\r\n            });\r\n            // delete generic interactive request parameters\r\n            this.removeTemporaryItem(this.generateStateKey(state));\r\n            this.removeTemporaryItem(this.generateNonceKey(state));\r\n            this.removeTemporaryItem(this.generateAuthorityKey(state));\r\n        }\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.REQUEST_PARAMS));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.ORIGIN_URI));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.URL_HASH));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.CORRELATION_ID));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.CCS_CREDENTIAL));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.NATIVE_REQUEST));\r\n        this.setInteractionInProgress(false);\r\n    }\r\n    /**\r\n     * Removes temporary cache for the provided state\r\n     * @param stateString\r\n     */\r\n    cleanRequestByState(stateString) {\r\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\r\n        // Interaction is completed - remove interaction status.\r\n        if (stateString) {\r\n            const stateKey = this.generateStateKey(stateString);\r\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\r\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\r\n            this.resetRequestCache(cachedState || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\r\n        }\r\n    }\r\n    /**\r\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\r\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\r\n     * @param interactionType\r\n     */\r\n    cleanRequestByInteractionType(interactionType) {\r\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\r\n        // Loop through all keys to find state key\r\n        this.temporaryCacheStorage.getKeys().forEach((key) => {\r\n            // If this key is not the state key, move on\r\n            if (key.indexOf(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.REQUEST_STATE) === -1) {\r\n                return;\r\n            }\r\n            // Retrieve state value, return if not a valid value\r\n            const stateValue = this.temporaryCacheStorage.getItem(key);\r\n            if (!stateValue) {\r\n                return;\r\n            }\r\n            // Extract state and ensure it matches given InteractionType, then clean request cache\r\n            const parsedState = (0,_utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.extractBrowserRequestState)(this.cryptoImpl, stateValue);\r\n            if (parsedState &&\r\n                parsedState.interactionType === interactionType) {\r\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\r\n                this.resetRequestCache(stateValue);\r\n            }\r\n        });\r\n        this.setInteractionInProgress(false);\r\n    }\r\n    cacheCodeRequest(authCodeRequest) {\r\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\r\n        const encodedValue = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_7__.base64Encode)(JSON.stringify(authCodeRequest));\r\n        this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\r\n    }\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    getCachedRequest(state) {\r\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\r\n        // Get token request from cache and parse as TokenExchangeParameters.\r\n        const encodedTokenRequest = this.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.REQUEST_PARAMS, true);\r\n        if (!encodedTokenRequest) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.noTokenRequestCacheError);\r\n        }\r\n        let parsedRequest;\r\n        try {\r\n            parsedRequest = JSON.parse((0,_encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_10__.base64Decode)(encodedTokenRequest));\r\n        }\r\n        catch (e) {\r\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\r\n            this.logger.error(`Parsing cached token request threw with error: ${e}`);\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.unableToParseTokenRequestCacheError);\r\n        }\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.REQUEST_PARAMS));\r\n        // Get cached authority and use if no authority is cached with request.\r\n        if (!parsedRequest.authority) {\r\n            const authorityCacheKey = this.generateAuthorityKey(state);\r\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\r\n            if (!cachedAuthority) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.noCachedAuthorityError);\r\n            }\r\n            parsedRequest.authority = cachedAuthority;\r\n        }\r\n        return parsedRequest;\r\n    }\r\n    /**\r\n     * Gets cached native request for redirect flows\r\n     */\r\n    getCachedNativeRequest() {\r\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\r\n        const cachedRequest = this.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.NATIVE_REQUEST, true);\r\n        if (!cachedRequest) {\r\n            this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest: No cached native request found\");\r\n            return null;\r\n        }\r\n        const parsedRequest = this.validateAndParseJson(cachedRequest);\r\n        if (!parsedRequest) {\r\n            this.logger.error(\"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\");\r\n            return null;\r\n        }\r\n        return parsedRequest;\r\n    }\r\n    isInteractionInProgress(matchClientId) {\r\n        const clientId = this.getInteractionInProgress();\r\n        if (matchClientId) {\r\n            return clientId === this.clientId;\r\n        }\r\n        else {\r\n            return !!clientId;\r\n        }\r\n    }\r\n    getInteractionInProgress() {\r\n        const key = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        return this.getTemporaryCache(key, false);\r\n    }\r\n    setInteractionInProgress(inProgress) {\r\n        // Ensure we don't overwrite interaction in progress for a different clientId\r\n        const key = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.CACHE_PREFIX}.${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        if (inProgress) {\r\n            if (this.getInteractionInProgress()) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.interactionInProgress);\r\n            }\r\n            else {\r\n                // No interaction is in progress\r\n                this.setTemporaryCache(key, this.clientId, false);\r\n            }\r\n        }\r\n        else if (!inProgress &&\r\n            this.getInteractionInProgress() === this.clientId) {\r\n            this.removeTemporaryItem(key);\r\n        }\r\n    }\r\n    /**\r\n     * Returns username retrieved from ADAL or MSAL v1 idToken\r\n     * @deprecated\r\n     */\r\n    getLegacyLoginHint() {\r\n        // Only check for adal/msal token if no SSO params are being used\r\n        const adalIdTokenString = this.getTemporaryCache(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ADAL_ID_TOKEN);\r\n        if (adalIdTokenString) {\r\n            this.browserStorage.removeItem(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ADAL_ID_TOKEN);\r\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\r\n        }\r\n        // Check for cached MSAL v1 id token\r\n        const msalIdTokenString = this.getTemporaryCache(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ID_TOKEN, true);\r\n        if (msalIdTokenString) {\r\n            this.browserStorage.removeItem(this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PersistentCacheKeys.ID_TOKEN));\r\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\r\n        }\r\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\r\n        if (cachedIdTokenString) {\r\n            const idTokenClaims = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthToken.extractTokenClaims(cachedIdTokenString, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_10__.base64Decode);\r\n            if (idTokenClaims.preferred_username) {\r\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\");\r\n                return idTokenClaims.preferred_username;\r\n            }\r\n            else if (idTokenClaims.upn) {\r\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\");\r\n                return idTokenClaims.upn;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\");\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Updates a credential's cache key if the current cache key is outdated\r\n     */\r\n    updateCredentialCacheKey(currentCacheKey, credential) {\r\n        const updatedCacheKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.generateCredentialKey(credential);\r\n        if (currentCacheKey !== updatedCacheKey) {\r\n            const cacheItem = this.getItem(currentCacheKey);\r\n            if (cacheItem) {\r\n                this.browserStorage.removeItem(currentCacheKey);\r\n                this.setItem(updatedCacheKey, cacheItem);\r\n                this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);\r\n                return updatedCacheKey;\r\n            }\r\n            else {\r\n                this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);\r\n            }\r\n        }\r\n        return currentCacheKey;\r\n    }\r\n    /**\r\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\r\n     * @param result\r\n     * @param request\r\n     */\r\n    async hydrateCache(result, request) {\r\n        const idTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.createIdTokenEntity(result.account?.homeAccountId, result.account?.environment, result.idToken, this.clientId, result.tenantId);\r\n        let claimsHash;\r\n        if (request.claims) {\r\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\r\n        }\r\n        /**\r\n         * meta data for cache stores time in seconds from epoch\r\n         * AuthenticationResult returns expiresOn and extExpiresOn in milliseconds (as a Date object which is in ms)\r\n         * We need to map these for the cache when building tokens from AuthenticationResult\r\n         *\r\n         * The next MSAL VFuture should map these both to same value if possible\r\n         */\r\n        const accessTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheHelpers.createAccessTokenEntity(result.account?.homeAccountId, result.account.environment, result.accessToken, this.clientId, result.tenantId, result.scopes.join(\" \"), result.expiresOn ? result.expiresOn.getTime() / 1000 : 0, result.extExpiresOn ? result.extExpiresOn.getTime() / 1000 : 0, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_10__.base64Decode, undefined, // refreshOn\r\n        result.tokenType, undefined, // userAssertionHash\r\n        request.sshKid, request.claims, claimsHash);\r\n        const cacheRecord = {\r\n            idToken: idTokenEntity,\r\n            accessToken: accessTokenEntity,\r\n        };\r\n        return this.saveCacheRecord(cacheRecord);\r\n    }\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord {CacheRecord}\r\n     * @param storeInCache {?StoreInCache}\r\n     * @param correlationId {?string} correlation id\r\n     */\r\n    async saveCacheRecord(cacheRecord, storeInCache, correlationId) {\r\n        try {\r\n            await super.saveCacheRecord(cacheRecord, storeInCache, correlationId);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheError &&\r\n                this.performanceClient &&\r\n                correlationId) {\r\n                try {\r\n                    const tokenKeys = this.getTokenKeys();\r\n                    this.performanceClient.addFields({\r\n                        cacheRtCount: tokenKeys.refreshToken.length,\r\n                        cacheIdCount: tokenKeys.idToken.length,\r\n                        cacheAtCount: tokenKeys.accessToken.length,\r\n                    }, correlationId);\r\n                }\r\n                catch (e) { }\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n}\r\nconst DEFAULT_BROWSER_CACHE_MANAGER = (clientId, logger) => {\r\n    const cacheOptions = {\r\n        cacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.MemoryStorage,\r\n        temporaryCacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.MemoryStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false,\r\n        cacheMigrationEnabled: false,\r\n        claimsBasedCachingEnabled: false,\r\n    };\r\n    return new BrowserCacheManager(clientId, cacheOptions, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CRYPTO_IMPLEMENTATION, logger);\r\n};\n\n\n//# sourceMappingURL=BrowserCacheManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserStorage: function() { return /* binding */ BrowserStorage; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _LocalStorage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LocalStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/LocalStorage.mjs\");\n/* harmony import */ var _SessionStorage_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SessionStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/SessionStorage.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @deprecated This class will be removed in a future major version\r\n */\r\nclass BrowserStorage {\r\n    constructor(cacheLocation) {\r\n        if (cacheLocation === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserCacheLocation.LocalStorage) {\r\n            this.windowStorage = new _LocalStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.LocalStorage();\r\n        }\r\n        else if (cacheLocation === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserCacheLocation.SessionStorage) {\r\n            this.windowStorage = new _SessionStorage_mjs__WEBPACK_IMPORTED_MODULE_2__.SessionStorage();\r\n        }\r\n        else {\r\n            throw (0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.storageNotSupported);\r\n        }\r\n    }\r\n    getItem(key) {\r\n        return this.windowStorage.getItem(key);\r\n    }\r\n    setItem(key, value) {\r\n        this.windowStorage.setItem(key, value);\r\n    }\r\n    removeItem(key) {\r\n        this.windowStorage.removeItem(key);\r\n    }\r\n    getKeys() {\r\n        return Object.keys(this.windowStorage);\r\n    }\r\n    containsKey(key) {\r\n        return this.windowStorage.hasOwnProperty(key);\r\n    }\r\n}\n\n\n//# sourceMappingURL=BrowserStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL0Jyb3dzZXJTdG9yYWdlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ29GO0FBQzVCO0FBQ25CO0FBQ0k7QUFDZ0M7O0FBRXRGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw2RUFBb0I7QUFDbEQscUNBQXFDLDJEQUFZO0FBQ2pEO0FBQ0EsbUNBQW1DLDZFQUFvQjtBQUN2RCxxQ0FBcUMsK0RBQWM7QUFDbkQ7QUFDQTtBQUNBLGtCQUFrQiw2R0FBbUMsQ0FBQyw4RkFBbUI7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL0Jyb3dzZXJTdG9yYWdlLm1qcz8wMDkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgQnJvd3NlckNhY2hlTG9jYXRpb24gfSBmcm9tICcuLi91dGlscy9Ccm93c2VyQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBMb2NhbFN0b3JhZ2UgfSBmcm9tICcuL0xvY2FsU3RvcmFnZS5tanMnO1xuaW1wb3J0IHsgU2Vzc2lvblN0b3JhZ2UgfSBmcm9tICcuL1Nlc3Npb25TdG9yYWdlLm1qcyc7XG5pbXBvcnQgeyBzdG9yYWdlTm90U3VwcG9ydGVkIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEBkZXByZWNhdGVkIFRoaXMgY2xhc3Mgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIG1ham9yIHZlcnNpb25cclxuICovXHJcbmNsYXNzIEJyb3dzZXJTdG9yYWdlIHtcclxuICAgIGNvbnN0cnVjdG9yKGNhY2hlTG9jYXRpb24pIHtcclxuICAgICAgICBpZiAoY2FjaGVMb2NhdGlvbiA9PT0gQnJvd3NlckNhY2hlTG9jYXRpb24uTG9jYWxTdG9yYWdlKSB7XHJcbiAgICAgICAgICAgIHRoaXMud2luZG93U3RvcmFnZSA9IG5ldyBMb2NhbFN0b3JhZ2UoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoY2FjaGVMb2NhdGlvbiA9PT0gQnJvd3NlckNhY2hlTG9jYXRpb24uU2Vzc2lvblN0b3JhZ2UpIHtcclxuICAgICAgICAgICAgdGhpcy53aW5kb3dTdG9yYWdlID0gbmV3IFNlc3Npb25TdG9yYWdlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvcihzdG9yYWdlTm90U3VwcG9ydGVkKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBnZXRJdGVtKGtleSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLndpbmRvd1N0b3JhZ2UuZ2V0SXRlbShrZXkpO1xyXG4gICAgfVxyXG4gICAgc2V0SXRlbShrZXksIHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy53aW5kb3dTdG9yYWdlLnNldEl0ZW0oa2V5LCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICByZW1vdmVJdGVtKGtleSkge1xyXG4gICAgICAgIHRoaXMud2luZG93U3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XHJcbiAgICB9XHJcbiAgICBnZXRLZXlzKCkge1xyXG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLndpbmRvd1N0b3JhZ2UpO1xyXG4gICAgfVxyXG4gICAgY29udGFpbnNLZXkoa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMud2luZG93U3RvcmFnZS5oYXNPd25Qcm9wZXJ0eShrZXkpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IEJyb3dzZXJTdG9yYWdlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ccm93c2VyU3RvcmFnZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/CookieStorage.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/CookieStorage.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CookieStorage: function() { return /* binding */ CookieStorage; },\n/* harmony export */   getCookieExpirationTime: function() { return /* binding */ getCookieExpirationTime; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Cookie life calculation (hours * minutes * seconds * ms)\r\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\nclass CookieStorage {\r\n    getItem(key) {\r\n        const name = `${encodeURIComponent(key)}`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        for (let i = 0; i < cookieList.length; i++) {\r\n            const cookie = cookieList[i];\r\n            const [key, ...rest] = decodeURIComponent(cookie).trim().split(\"=\");\r\n            const value = rest.join(\"=\");\r\n            if (key === name) {\r\n                return value;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    setItem(key, value, cookieLifeDays, secure = true) {\r\n        let cookieStr = `${encodeURIComponent(key)}=${encodeURIComponent(value)};path=/;SameSite=Lax;`;\r\n        if (cookieLifeDays) {\r\n            const expireTime = getCookieExpirationTime(cookieLifeDays);\r\n            cookieStr += `expires=${expireTime};`;\r\n        }\r\n        if (secure) {\r\n            cookieStr += \"Secure;\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    }\r\n    removeItem(key) {\r\n        // Setting expiration to -1 removes it\r\n        this.setItem(key, \"\", -1);\r\n    }\r\n    getKeys() {\r\n        const cookieList = document.cookie.split(\";\");\r\n        const keys = [];\r\n        cookieList.forEach((cookie) => {\r\n            const cookieParts = decodeURIComponent(cookie).trim().split(\"=\");\r\n            keys.push(cookieParts[0]);\r\n        });\r\n        return keys;\r\n    }\r\n    containsKey(key) {\r\n        return this.getKeys().includes(key);\r\n    }\r\n}\r\n/**\r\n * Get cookie expiration time\r\n * @param cookieLifeDays\r\n */\r\nfunction getCookieExpirationTime(cookieLifeDays) {\r\n    const today = new Date();\r\n    const expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\r\n    return expr.toUTCString();\r\n}\n\n\n//# sourceMappingURL=CookieStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL0Nvb2tpZVN0b3JhZ2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isd0JBQXdCO0FBQ2hELG1EQUFtRDtBQUNuRCx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHdCQUF3QixHQUFHLDJCQUEyQixPQUFPLGFBQWE7QUFDckc7QUFDQTtBQUNBLG9DQUFvQyxZQUFZO0FBQ2hEO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWtEO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY2FjaGUvQ29va2llU3RvcmFnZS5tanM/MzA5YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vLyBDb29raWUgbGlmZSBjYWxjdWxhdGlvbiAoaG91cnMgKiBtaW51dGVzICogc2Vjb25kcyAqIG1zKVxyXG5jb25zdCBDT09LSUVfTElGRV9NVUxUSVBMSUVSID0gMjQgKiA2MCAqIDYwICogMTAwMDtcclxuY2xhc3MgQ29va2llU3RvcmFnZSB7XHJcbiAgICBnZXRJdGVtKGtleSkge1xyXG4gICAgICAgIGNvbnN0IG5hbWUgPSBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX1gO1xyXG4gICAgICAgIGNvbnN0IGNvb2tpZUxpc3QgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoXCI7XCIpO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29va2llTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBjb29raWUgPSBjb29raWVMaXN0W2ldO1xyXG4gICAgICAgICAgICBjb25zdCBba2V5LCAuLi5yZXN0XSA9IGRlY29kZVVSSUNvbXBvbmVudChjb29raWUpLnRyaW0oKS5zcGxpdChcIj1cIik7XHJcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gcmVzdC5qb2luKFwiPVwiKTtcclxuICAgICAgICAgICAgaWYgKGtleSA9PT0gbmFtZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBcIlwiO1xyXG4gICAgfVxyXG4gICAgc2V0SXRlbShrZXksIHZhbHVlLCBjb29raWVMaWZlRGF5cywgc2VjdXJlID0gdHJ1ZSkge1xyXG4gICAgICAgIGxldCBjb29raWVTdHIgPSBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQodmFsdWUpfTtwYXRoPS87U2FtZVNpdGU9TGF4O2A7XHJcbiAgICAgICAgaWYgKGNvb2tpZUxpZmVEYXlzKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGlyZVRpbWUgPSBnZXRDb29raWVFeHBpcmF0aW9uVGltZShjb29raWVMaWZlRGF5cyk7XHJcbiAgICAgICAgICAgIGNvb2tpZVN0ciArPSBgZXhwaXJlcz0ke2V4cGlyZVRpbWV9O2A7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChzZWN1cmUpIHtcclxuICAgICAgICAgICAgY29va2llU3RyICs9IFwiU2VjdXJlO1wiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWVTdHI7XHJcbiAgICB9XHJcbiAgICByZW1vdmVJdGVtKGtleSkge1xyXG4gICAgICAgIC8vIFNldHRpbmcgZXhwaXJhdGlvbiB0byAtMSByZW1vdmVzIGl0XHJcbiAgICAgICAgdGhpcy5zZXRJdGVtKGtleSwgXCJcIiwgLTEpO1xyXG4gICAgfVxyXG4gICAgZ2V0S2V5cygpIHtcclxuICAgICAgICBjb25zdCBjb29raWVMaXN0ID0gZG9jdW1lbnQuY29va2llLnNwbGl0KFwiO1wiKTtcclxuICAgICAgICBjb25zdCBrZXlzID0gW107XHJcbiAgICAgICAgY29va2llTGlzdC5mb3JFYWNoKChjb29raWUpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgY29va2llUGFydHMgPSBkZWNvZGVVUklDb21wb25lbnQoY29va2llKS50cmltKCkuc3BsaXQoXCI9XCIpO1xyXG4gICAgICAgICAgICBrZXlzLnB1c2goY29va2llUGFydHNbMF0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBrZXlzO1xyXG4gICAgfVxyXG4gICAgY29udGFpbnNLZXkoa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0S2V5cygpLmluY2x1ZGVzKGtleSk7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIEdldCBjb29raWUgZXhwaXJhdGlvbiB0aW1lXHJcbiAqIEBwYXJhbSBjb29raWVMaWZlRGF5c1xyXG4gKi9cclxuZnVuY3Rpb24gZ2V0Q29va2llRXhwaXJhdGlvblRpbWUoY29va2llTGlmZURheXMpIHtcclxuICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcclxuICAgIGNvbnN0IGV4cHIgPSBuZXcgRGF0ZSh0b2RheS5nZXRUaW1lKCkgKyBjb29raWVMaWZlRGF5cyAqIENPT0tJRV9MSUZFX01VTFRJUExJRVIpO1xyXG4gICAgcmV0dXJuIGV4cHIudG9VVENTdHJpbmcoKTtcclxufVxuXG5leHBvcnQgeyBDb29raWVTdG9yYWdlLCBnZXRDb29raWVFeHBpcmF0aW9uVGltZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29va2llU3RvcmFnZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/CookieStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseStorage: function() { return /* binding */ DatabaseStorage; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\r\n */\r\nclass DatabaseStorage {\r\n    constructor() {\r\n        this.dbName = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_NAME;\r\n        this.version = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_VERSION;\r\n        this.tableName = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_TABLE_NAME;\r\n        this.dbOpen = false;\r\n    }\r\n    /**\r\n     * Opens IndexedDB instance.\r\n     */\r\n    async open() {\r\n        return new Promise((resolve, reject) => {\r\n            const openDB = window.indexedDB.open(this.dbName, this.version);\r\n            openDB.addEventListener(\"upgradeneeded\", (e) => {\r\n                const event = e;\r\n                event.target.result.createObjectStore(this.tableName);\r\n            });\r\n            openDB.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.db = event.target.result;\r\n                this.dbOpen = true;\r\n                resolve();\r\n            });\r\n            openDB.addEventListener(\"error\", () => reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseUnavailable)));\r\n        });\r\n    }\r\n    /**\r\n     * Closes the connection to IndexedDB database when all pending transactions\r\n     * complete.\r\n     */\r\n    closeConnection() {\r\n        const db = this.db;\r\n        if (db && this.dbOpen) {\r\n            db.close();\r\n            this.dbOpen = false;\r\n        }\r\n    }\r\n    /**\r\n     * Opens database if it's not already open\r\n     */\r\n    async validateDbIsOpen() {\r\n        if (!this.dbOpen) {\r\n            return this.open();\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves item from IndexedDB instance.\r\n     * @param key\r\n     */\r\n    async getItem(key) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbGet = objectStore.get(key);\r\n            dbGet.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.closeConnection();\r\n                resolve(event.target.result);\r\n            });\r\n            dbGet.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Adds item to IndexedDB under given key\r\n     * @param key\r\n     * @param payload\r\n     */\r\n    async setItem(key, payload) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbPut = objectStore.put(payload, key);\r\n            dbPut.addEventListener(\"success\", () => {\r\n                this.closeConnection();\r\n                resolve();\r\n            });\r\n            dbPut.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Removes item from IndexedDB under given key\r\n     * @param key\r\n     */\r\n    async removeItem(key) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbDelete = objectStore.delete(key);\r\n            dbDelete.addEventListener(\"success\", () => {\r\n                this.closeConnection();\r\n                resolve();\r\n            });\r\n            dbDelete.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Get all the keys from the storage object as an iterable array of strings.\r\n     */\r\n    async getKeys() {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbGetKeys = objectStore.getAllKeys();\r\n            dbGetKeys.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.closeConnection();\r\n                resolve(event.target.result);\r\n            });\r\n            dbGetKeys.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * Checks whether there is an object under the search key in the object store\r\n     */\r\n    async containsKey(key) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbContainsKey = objectStore.count(key);\r\n            dbContainsKey.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.closeConnection();\r\n                resolve(event.target.result === 1);\r\n            });\r\n            dbContainsKey.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\r\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\r\n     * with IndexedDB database versions.\r\n     */\r\n    async deleteDatabase() {\r\n        // Check if database being deleted exists\r\n        if (this.db && this.dbOpen) {\r\n            this.closeConnection();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const deleteDbRequest = window.indexedDB.deleteDatabase(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_NAME);\r\n            const id = setTimeout(() => reject(false), 200); // Reject if events aren't raised within 200ms\r\n            deleteDbRequest.addEventListener(\"success\", () => {\r\n                clearTimeout(id);\r\n                return resolve(true);\r\n            });\r\n            deleteDbRequest.addEventListener(\"blocked\", () => {\r\n                clearTimeout(id);\r\n                return resolve(true);\r\n            });\r\n            deleteDbRequest.addEventListener(\"error\", () => {\r\n                clearTimeout(id);\r\n                return reject(false);\r\n            });\r\n        });\r\n    }\r\n}\n\n\n//# sourceMappingURL=DatabaseStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/LocalStorage.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/LocalStorage.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalStorage: function() { return /* binding */ LocalStorage; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass LocalStorage {\r\n    constructor() {\r\n        if (!window.localStorage) {\r\n            throw (0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.storageNotSupported);\r\n        }\r\n    }\r\n    getItem(key) {\r\n        return window.localStorage.getItem(key);\r\n    }\r\n    setItem(key, value) {\r\n        window.localStorage.setItem(key, value);\r\n    }\r\n    removeItem(key) {\r\n        window.localStorage.removeItem(key);\r\n    }\r\n    getKeys() {\r\n        return Object.keys(window.localStorage);\r\n    }\r\n    containsKey(key) {\r\n        return window.localStorage.hasOwnProperty(key);\r\n    }\r\n}\n\n\n//# sourceMappingURL=LocalStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL0xvY2FsU3RvcmFnZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNvRjtBQUNYOztBQUV0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw2R0FBbUMsQ0FBQyw4RkFBbUI7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL0xvY2FsU3RvcmFnZS5tanM/MzI0NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IHN0b3JhZ2VOb3RTdXBwb3J0ZWQgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBMb2NhbFN0b3JhZ2Uge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgaWYgKCF3aW5kb3cubG9jYWxTdG9yYWdlKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0b3JhZ2VOb3RTdXBwb3J0ZWQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGdldEl0ZW0oa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xyXG4gICAgfVxyXG4gICAgc2V0SXRlbShrZXksIHZhbHVlKSB7XHJcbiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgcmVtb3ZlSXRlbShrZXkpIHtcclxuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcclxuICAgIH1cclxuICAgIGdldEtleXMoKSB7XHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHdpbmRvdy5sb2NhbFN0b3JhZ2UpO1xyXG4gICAgfVxyXG4gICAgY29udGFpbnNLZXkoa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2UuaGFzT3duUHJvcGVydHkoa2V5KTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBMb2NhbFN0b3JhZ2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxvY2FsU3RvcmFnZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/LocalStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MemoryStorage: function() { return /* binding */ MemoryStorage; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    getItem(key) {\r\n        return this.cache.get(key) || null;\r\n    }\r\n    setItem(key, value) {\r\n        this.cache.set(key, value);\r\n    }\r\n    removeItem(key) {\r\n        this.cache.delete(key);\r\n    }\r\n    getKeys() {\r\n        const cacheKeys = [];\r\n        this.cache.forEach((value, key) => {\r\n            cacheKeys.push(key);\r\n        });\r\n        return cacheKeys;\r\n    }\r\n    containsKey(key) {\r\n        return this.cache.has(key);\r\n    }\r\n    clear() {\r\n        this.cache.clear();\r\n    }\r\n}\n\n\n//# sourceMappingURL=MemoryStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL01lbW9yeVN0b3JhZ2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9jYWNoZS9NZW1vcnlTdG9yYWdlLm1qcz85NjZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIE1lbW9yeVN0b3JhZ2Uge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5jYWNoZSA9IG5ldyBNYXAoKTtcclxuICAgIH1cclxuICAgIGdldEl0ZW0oa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUuZ2V0KGtleSkgfHwgbnVsbDtcclxuICAgIH1cclxuICAgIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuY2FjaGUuc2V0KGtleSwgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgcmVtb3ZlSXRlbShrZXkpIHtcclxuICAgICAgICB0aGlzLmNhY2hlLmRlbGV0ZShrZXkpO1xyXG4gICAgfVxyXG4gICAgZ2V0S2V5cygpIHtcclxuICAgICAgICBjb25zdCBjYWNoZUtleXMgPSBbXTtcclxuICAgICAgICB0aGlzLmNhY2hlLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcclxuICAgICAgICAgICAgY2FjaGVLZXlzLnB1c2goa2V5KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gY2FjaGVLZXlzO1xyXG4gICAgfVxyXG4gICAgY29udGFpbnNLZXkoa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUuaGFzKGtleSk7XHJcbiAgICB9XHJcbiAgICBjbGVhcigpIHtcclxuICAgICAgICB0aGlzLmNhY2hlLmNsZWFyKCk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgTWVtb3J5U3RvcmFnZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWVtb3J5U3RvcmFnZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/SessionStorage.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/SessionStorage.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionStorage: function() { return /* binding */ SessionStorage; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SessionStorage {\r\n    constructor() {\r\n        if (!window.sessionStorage) {\r\n            throw (0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.storageNotSupported);\r\n        }\r\n    }\r\n    getItem(key) {\r\n        return window.sessionStorage.getItem(key);\r\n    }\r\n    setItem(key, value) {\r\n        window.sessionStorage.setItem(key, value);\r\n    }\r\n    removeItem(key) {\r\n        window.sessionStorage.removeItem(key);\r\n    }\r\n    getKeys() {\r\n        return Object.keys(window.sessionStorage);\r\n    }\r\n    containsKey(key) {\r\n        return window.sessionStorage.hasOwnProperty(key);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SessionStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL1Nlc3Npb25TdG9yYWdlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ29GO0FBQ1g7O0FBRXRGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDZHQUFtQyxDQUFDLDhGQUFtQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY2FjaGUvU2Vzc2lvblN0b3JhZ2UubWpzP2M2ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBzdG9yYWdlTm90U3VwcG9ydGVkIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY2xhc3MgU2Vzc2lvblN0b3JhZ2Uge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgaWYgKCF3aW5kb3cuc2Vzc2lvblN0b3JhZ2UpIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3Ioc3RvcmFnZU5vdFN1cHBvcnRlZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZ2V0SXRlbShrZXkpIHtcclxuICAgICAgICByZXR1cm4gd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oa2V5KTtcclxuICAgIH1cclxuICAgIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgcmVtb3ZlSXRlbShrZXkpIHtcclxuICAgICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xyXG4gICAgfVxyXG4gICAgZ2V0S2V5cygpIHtcclxuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMod2luZG93LnNlc3Npb25TdG9yYWdlKTtcclxuICAgIH1cclxuICAgIGNvbnRhaW5zS2V5KGtleSkge1xyXG4gICAgICAgIHJldHVybiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuaGFzT3duUHJvcGVydHkoa2V5KTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBTZXNzaW9uU3RvcmFnZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2Vzc2lvblN0b3JhZ2UubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/SessionStorage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenCache: function() { return /* binding */ TokenCache; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encode/Base64Decode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Token cache manager\r\n */\r\nclass TokenCache {\r\n    constructor(configuration, storage, logger, cryptoObj) {\r\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\r\n        this.config = configuration;\r\n        this.storage = storage;\r\n        this.logger = logger;\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    // Move getAllAccounts here and cache utility APIs\r\n    /**\r\n     * API to load tokens to msal-browser cache.\r\n     * @param request\r\n     * @param response\r\n     * @param options\r\n     * @returns `AuthenticationResult` for the response that was loaded.\r\n     */\r\n    loadExternalTokens(request, response, options) {\r\n        if (!this.isBrowserEnvironment) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.nonBrowserEnvironment);\r\n        }\r\n        const idTokenClaims = response.id_token\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.AuthToken.extractTokenClaims(response.id_token, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__.base64Decode)\r\n            : undefined;\r\n        const authorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata,\r\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\r\n        };\r\n        const authority = request.authority\r\n            ? new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.Authority(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.Authority.generateAuthority(request.authority, request.azureCloudOptions), this.config.system.networkClient, this.storage, authorityOptions, this.logger, request.correlationId || (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_4__.createNewGuid)())\r\n            : undefined;\r\n        const cacheRecordAccount = this.loadAccount(request, options.clientInfo || response.client_info || \"\", idTokenClaims, authority);\r\n        const idToken = this.loadIdToken(response, cacheRecordAccount.homeAccountId, cacheRecordAccount.environment, cacheRecordAccount.realm);\r\n        const accessToken = this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, cacheRecordAccount.environment, cacheRecordAccount.realm, options);\r\n        const refreshToken = this.loadRefreshToken(response, cacheRecordAccount.homeAccountId, cacheRecordAccount.environment);\r\n        return this.generateAuthenticationResult(request, {\r\n            account: cacheRecordAccount,\r\n            idToken,\r\n            accessToken,\r\n            refreshToken,\r\n        }, idTokenClaims, authority);\r\n    }\r\n    /**\r\n     * Helper function to load account to msal-browser cache\r\n     * @param idToken\r\n     * @param environment\r\n     * @param clientInfo\r\n     * @param authorityType\r\n     * @param requestHomeAccountId\r\n     * @returns `AccountEntity`\r\n     */\r\n    loadAccount(request, clientInfo, idTokenClaims, authority) {\r\n        this.logger.verbose(\"TokenCache - loading account\");\r\n        if (request.account) {\r\n            const accountEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.AccountEntity.createFromAccountInfo(request.account);\r\n            this.storage.setAccount(accountEntity);\r\n            return accountEntity;\r\n        }\r\n        else if (!authority || (!clientInfo && !idTokenClaims)) {\r\n            this.logger.error(\"TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead.\");\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.unableToLoadToken);\r\n        }\r\n        const homeAccountId = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.AccountEntity.generateHomeAccountId(clientInfo, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\r\n        const claimsTenantId = idTokenClaims?.tid;\r\n        const cachedAccount = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.buildAccountToCache)(this.storage, authority, homeAccountId, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__.base64Decode, idTokenClaims, clientInfo, authority.hostnameAndPort, claimsTenantId, undefined, // authCodePayload\r\n        undefined, // nativeAccountId\r\n        this.logger);\r\n        this.storage.setAccount(cachedAccount);\r\n        return cachedAccount;\r\n    }\r\n    /**\r\n     * Helper function to load id tokens to msal-browser cache\r\n     * @param idToken\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param tenantId\r\n     * @returns `IdTokenEntity`\r\n     */\r\n    loadIdToken(response, homeAccountId, environment, tenantId) {\r\n        if (!response.id_token) {\r\n            this.logger.verbose(\"TokenCache - no id token found in response\");\r\n            return null;\r\n        }\r\n        this.logger.verbose(\"TokenCache - loading id token\");\r\n        const idTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.CacheHelpers.createIdTokenEntity(homeAccountId, environment, response.id_token, this.config.auth.clientId, tenantId);\r\n        this.storage.setIdTokenCredential(idTokenEntity);\r\n        return idTokenEntity;\r\n    }\r\n    /**\r\n     * Helper function to load access tokens to msal-browser cache\r\n     * @param request\r\n     * @param response\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param tenantId\r\n     * @returns `AccessTokenEntity`\r\n     */\r\n    loadAccessToken(request, response, homeAccountId, environment, tenantId, options) {\r\n        if (!response.access_token) {\r\n            this.logger.verbose(\"TokenCache - no access token found in response\");\r\n            return null;\r\n        }\r\n        else if (!response.expires_in) {\r\n            this.logger.error(\"TokenCache - no expiration set on the access token. Cannot add it to the cache.\");\r\n            return null;\r\n        }\r\n        else if (!response.scope &&\r\n            (!request.scopes || !request.scopes.length)) {\r\n            this.logger.error(\"TokenCache - scopes not specified in the request or response. Cannot add token to the cache.\");\r\n            return null;\r\n        }\r\n        this.logger.verbose(\"TokenCache - loading access token\");\r\n        const scopes = response.scope\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.ScopeSet.fromString(response.scope)\r\n            : new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.ScopeSet(request.scopes);\r\n        const expiresOn = options.expiresOn ||\r\n            response.expires_in + new Date().getTime() / 1000;\r\n        const extendedExpiresOn = options.extendedExpiresOn ||\r\n            (response.ext_expires_in || response.expires_in) +\r\n                new Date().getTime() / 1000;\r\n        const accessTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.CacheHelpers.createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes.printScopes(), expiresOn, extendedExpiresOn, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__.base64Decode);\r\n        this.storage.setAccessTokenCredential(accessTokenEntity);\r\n        return accessTokenEntity;\r\n    }\r\n    /**\r\n     * Helper function to load refresh tokens to msal-browser cache\r\n     * @param request\r\n     * @param response\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @returns `RefreshTokenEntity`\r\n     */\r\n    loadRefreshToken(response, homeAccountId, environment) {\r\n        if (!response.refresh_token) {\r\n            this.logger.verbose(\"TokenCache - no refresh token found in response\");\r\n            return null;\r\n        }\r\n        this.logger.verbose(\"TokenCache - loading refresh token\");\r\n        const refreshTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.CacheHelpers.createRefreshTokenEntity(homeAccountId, environment, response.refresh_token, this.config.auth.clientId, response.foci, undefined, // userAssertionHash\r\n        response.refresh_token_expires_in);\r\n        this.storage.setRefreshTokenCredential(refreshTokenEntity);\r\n        return refreshTokenEntity;\r\n    }\r\n    /**\r\n     * Helper function to generate an `AuthenticationResult` for the result.\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param cacheRecord\r\n     * @param authority\r\n     * @returns `AuthenticationResult`\r\n     */\r\n    generateAuthenticationResult(request, cacheRecord, idTokenClaims, authority) {\r\n        let accessToken = \"\";\r\n        let responseScopes = [];\r\n        let expiresOn = null;\r\n        let extExpiresOn;\r\n        if (cacheRecord?.accessToken) {\r\n            accessToken = cacheRecord.accessToken.secret;\r\n            responseScopes = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\r\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\r\n        }\r\n        const accountEntity = cacheRecord.account;\r\n        return {\r\n            authority: authority ? authority.canonicalAuthority : \"\",\r\n            uniqueId: cacheRecord.account.localAccountId,\r\n            tenantId: cacheRecord.account.realm,\r\n            scopes: responseScopes,\r\n            account: accountEntity.getAccountInfo(),\r\n            idToken: cacheRecord.idToken?.secret || \"\",\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken,\r\n            fromCache: true,\r\n            expiresOn: expiresOn,\r\n            correlationId: request.correlationId || \"\",\r\n            requestId: \"\",\r\n            extExpiresOn: extExpiresOn,\r\n            familyId: cacheRecord.refreshToken?.familyId || \"\",\r\n            tokenType: cacheRecord?.accessToken?.tokenType || \"\",\r\n            state: request.state || \"\",\r\n            cloudGraphHostName: accountEntity.cloudGraphHostName || \"\",\r\n            msGraphHost: accountEntity.msGraphHost || \"\",\r\n            fromNativeBroker: false,\r\n        };\r\n    }\r\n}\n\n\n//# sourceMappingURL=TokenCache.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/config/Configuration.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/config/Configuration.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_IFRAME_TIMEOUT_MS: function() { return /* binding */ DEFAULT_IFRAME_TIMEOUT_MS; },\n/* harmony export */   DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS: function() { return /* binding */ DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS; },\n/* harmony export */   DEFAULT_POPUP_TIMEOUT_MS: function() { return /* binding */ DEFAULT_POPUP_TIMEOUT_MS; },\n/* harmony export */   DEFAULT_REDIRECT_TIMEOUT_MS: function() { return /* binding */ DEFAULT_REDIRECT_TIMEOUT_MS; },\n/* harmony export */   buildConfiguration: function() { return /* binding */ buildConfiguration; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../navigation/NavigationClient.mjs */ \"./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs\");\n/* harmony import */ var _network_FetchClient_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../network/FetchClient.mjs */ \"./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Default timeout for popup windows and iframes in milliseconds\r\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nconst DEFAULT_IFRAME_TIMEOUT_MS = 10000;\r\nconst DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\r\nconst DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\r\nfunction buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem, telemetry: userInputTelemetry, }, isBrowserEnvironment) {\r\n    // Default auth options for browser\r\n    const DEFAULT_AUTH_OPTIONS = {\r\n        clientId: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        authority: `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_AUTHORITY}`,\r\n        knownAuthorities: [],\r\n        cloudDiscoveryMetadata: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        authorityMetadata: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        redirectUri: typeof window !== \"undefined\" ? (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.getCurrentUri)() : \"\",\r\n        postLogoutRedirectUri: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        navigateToLoginRequestUrl: true,\r\n        clientCapabilities: [],\r\n        protocolMode: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ProtocolMode.AAD,\r\n        OIDCOptions: {\r\n            serverResponseType: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ServerResponseType.FRAGMENT,\r\n            defaultScopes: [\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.OPENID_SCOPE,\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.PROFILE_SCOPE,\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.OFFLINE_ACCESS_SCOPE,\r\n            ],\r\n        },\r\n        azureCloudOptions: {\r\n            azureCloudInstance: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AzureCloudInstance.None,\r\n            tenant: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        },\r\n        skipAuthorityMetadataCache: false,\r\n        supportsNestedAppAuth: false,\r\n        instanceAware: false,\r\n    };\r\n    // Default cache options for browser\r\n    const DEFAULT_CACHE_OPTIONS = {\r\n        cacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage,\r\n        temporaryCacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false,\r\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\r\n        cacheMigrationEnabled: userInputCache &&\r\n            userInputCache.cacheLocation === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.LocalStorage\r\n            ? true\r\n            : false,\r\n        claimsBasedCachingEnabled: false,\r\n    };\r\n    // Default logger options for browser\r\n    const DEFAULT_LOGGER_OPTIONS = {\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        loggerCallback: () => {\r\n            // allow users to not set logger call back\r\n        },\r\n        logLevel: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Info,\r\n        piiLoggingEnabled: false,\r\n    };\r\n    // Default system options for browser\r\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS = {\r\n        ..._azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_SYSTEM_OPTIONS,\r\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\r\n        networkClient: isBrowserEnvironment\r\n            ? new _network_FetchClient_mjs__WEBPACK_IMPORTED_MODULE_3__.FetchClient()\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.StubbedNetworkModule,\r\n        navigationClient: new _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_4__.NavigationClient(),\r\n        loadFrameTimeout: 0,\r\n        // If loadFrameTimeout is provided, use that as default.\r\n        windowHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\r\n        iframeHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\r\n        navigateFrameWait: 0,\r\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\r\n        asyncPopups: false,\r\n        allowRedirectInIframe: false,\r\n        allowNativeBroker: false,\r\n        nativeBrokerHandshakeTimeout: userInputSystem?.nativeBrokerHandshakeTimeout ||\r\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\r\n        pollIntervalMilliseconds: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\r\n    };\r\n    const providedSystemOptions = {\r\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\r\n        ...userInputSystem,\r\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\r\n    };\r\n    const DEFAULT_TELEMETRY_OPTIONS = {\r\n        application: {\r\n            appName: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n            appVersion: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        },\r\n        client: new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.StubPerformanceClient(),\r\n    };\r\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\r\n    if (userInputAuth?.protocolMode !== _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ProtocolMode.OIDC &&\r\n        userInputAuth?.OIDCOptions) {\r\n        const logger = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Logger(providedSystemOptions.loggerOptions);\r\n        logger.warning(JSON.stringify((0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientConfigurationErrorCodes.cannotSetOIDCOptions)));\r\n    }\r\n    // Throw an error if user has set allowNativeBroker to true without being in AAD protocol mode\r\n    if (userInputAuth?.protocolMode &&\r\n        userInputAuth.protocolMode !== _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ProtocolMode.AAD &&\r\n        providedSystemOptions?.allowNativeBroker) {\r\n        throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientConfigurationErrorCodes.cannotAllowNativeBroker);\r\n    }\r\n    const overlayedConfig = {\r\n        auth: {\r\n            ...DEFAULT_AUTH_OPTIONS,\r\n            ...userInputAuth,\r\n            OIDCOptions: {\r\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\r\n                ...userInputAuth?.OIDCOptions,\r\n            },\r\n        },\r\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\r\n        system: providedSystemOptions,\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\r\n    };\r\n    return overlayedConfig;\r\n}\n\n\n//# sourceMappingURL=Configuration.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NvbmZpZy9Db25maWd1cmF0aW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNzUDtBQUM1SztBQUNqQjtBQUNiO0FBQ0M7O0FBRTFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixxR0FBcUc7QUFDbkk7QUFDQTtBQUNBLGtCQUFrQixpRUFBUztBQUMzQixzQkFBc0IsaUVBQVMsbUJBQW1CO0FBQ2xEO0FBQ0EsZ0NBQWdDLGlFQUFTO0FBQ3pDLDJCQUEyQixpRUFBUztBQUNwQyxxREFBcUQsc0VBQWE7QUFDbEUsK0JBQStCLGlFQUFTO0FBQ3hDO0FBQ0E7QUFDQSxzQkFBc0Isb0VBQVk7QUFDbEM7QUFDQSxnQ0FBZ0MsMEVBQWtCO0FBQ2xEO0FBQ0EsZ0JBQWdCLGlFQUFTO0FBQ3pCLGdCQUFnQixpRUFBUztBQUN6QixnQkFBZ0IsaUVBQVM7QUFDekI7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxnQ0FBZ0MsMEVBQWtCO0FBQ2xELG9CQUFvQixpRUFBUztBQUM3QixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDZFQUFvQjtBQUMzQyxnQ0FBZ0MsNkVBQW9CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLDZFQUFvQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsa0JBQWtCLGdFQUFRO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4RUFBc0I7QUFDakM7QUFDQTtBQUNBLGtCQUFrQixpRUFBVztBQUM3QixjQUFjLDRFQUFvQjtBQUNsQyw4QkFBOEIsOEVBQWdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseUVBQWdCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaUVBQVM7QUFDOUIsd0JBQXdCLGlFQUFTO0FBQ2pDLFNBQVM7QUFDVCxvQkFBb0IsNkVBQXFCO0FBQ3pDO0FBQ0E7QUFDQSx3Q0FBd0Msb0VBQVk7QUFDcEQ7QUFDQSwyQkFBMkIsOERBQU07QUFDakMsc0NBQXNDLDBGQUE4QixDQUFDLHFGQUE2QjtBQUNsRztBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsb0VBQVk7QUFDbkQ7QUFDQSxjQUFjLDBGQUE4QixDQUFDLHFGQUE2QjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCxpQkFBaUIsNkNBQTZDO0FBQzlEO0FBQ0EscUJBQXFCLHFEQUFxRDtBQUMxRTtBQUNBO0FBQ0E7O0FBRTRKO0FBQzVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY29uZmlnL0NvbmZpZ3VyYXRpb24ubWpzP2NhNmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDb25zdGFudHMsIFByb3RvY29sTW9kZSwgU2VydmVyUmVzcG9uc2VUeXBlLCBBenVyZUNsb3VkSW5zdGFuY2UsIFN0dWJQZXJmb3JtYW5jZUNsaWVudCwgTG9nZ2VyLCBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IsIENsaWVudENvbmZpZ3VyYXRpb25FcnJvckNvZGVzLCBMb2dMZXZlbCwgREVGQVVMVF9TWVNURU1fT1BUSU9OUywgU3R1YmJlZE5ldHdvcmtNb2R1bGUgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBCcm93c2VyQ2FjaGVMb2NhdGlvbiwgQnJvd3NlckNvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJDb25zdGFudHMubWpzJztcbmltcG9ydCB7IE5hdmlnYXRpb25DbGllbnQgfSBmcm9tICcuLi9uYXZpZ2F0aW9uL05hdmlnYXRpb25DbGllbnQubWpzJztcbmltcG9ydCB7IEZldGNoQ2xpZW50IH0gZnJvbSAnLi4vbmV0d29yay9GZXRjaENsaWVudC5tanMnO1xuaW1wb3J0IHsgZ2V0Q3VycmVudFVyaSB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJVdGlscy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLy8gRGVmYXVsdCB0aW1lb3V0IGZvciBwb3B1cCB3aW5kb3dzIGFuZCBpZnJhbWVzIGluIG1pbGxpc2Vjb25kc1xyXG5jb25zdCBERUZBVUxUX1BPUFVQX1RJTUVPVVRfTVMgPSA2MDAwMDtcclxuY29uc3QgREVGQVVMVF9JRlJBTUVfVElNRU9VVF9NUyA9IDEwMDAwO1xyXG5jb25zdCBERUZBVUxUX1JFRElSRUNUX1RJTUVPVVRfTVMgPSAzMDAwMDtcclxuY29uc3QgREVGQVVMVF9OQVRJVkVfQlJPS0VSX0hBTkRTSEFLRV9USU1FT1VUX01TID0gMjAwMDtcclxuLyoqXHJcbiAqIE1TQUwgZnVuY3Rpb24gdGhhdCBzZXRzIHRoZSBkZWZhdWx0IG9wdGlvbnMgd2hlbiBub3QgZXhwbGljaXRseSBjb25maWd1cmVkIGZyb20gYXBwIGRldmVsb3BlclxyXG4gKlxyXG4gKiBAcGFyYW0gYXV0aFxyXG4gKiBAcGFyYW0gY2FjaGVcclxuICogQHBhcmFtIHN5c3RlbVxyXG4gKlxyXG4gKiBAcmV0dXJucyBDb25maWd1cmF0aW9uIG9iamVjdFxyXG4gKi9cclxuZnVuY3Rpb24gYnVpbGRDb25maWd1cmF0aW9uKHsgYXV0aDogdXNlcklucHV0QXV0aCwgY2FjaGU6IHVzZXJJbnB1dENhY2hlLCBzeXN0ZW06IHVzZXJJbnB1dFN5c3RlbSwgdGVsZW1ldHJ5OiB1c2VySW5wdXRUZWxlbWV0cnksIH0sIGlzQnJvd3NlckVudmlyb25tZW50KSB7XHJcbiAgICAvLyBEZWZhdWx0IGF1dGggb3B0aW9ucyBmb3IgYnJvd3NlclxyXG4gICAgY29uc3QgREVGQVVMVF9BVVRIX09QVElPTlMgPSB7XHJcbiAgICAgICAgY2xpZW50SWQ6IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXHJcbiAgICAgICAgYXV0aG9yaXR5OiBgJHtDb25zdGFudHMuREVGQVVMVF9BVVRIT1JJVFl9YCxcclxuICAgICAgICBrbm93bkF1dGhvcml0aWVzOiBbXSxcclxuICAgICAgICBjbG91ZERpc2NvdmVyeU1ldGFkYXRhOiBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG4gICAgICAgIGF1dGhvcml0eU1ldGFkYXRhOiBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG4gICAgICAgIHJlZGlyZWN0VXJpOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gZ2V0Q3VycmVudFVyaSgpIDogXCJcIixcclxuICAgICAgICBwb3N0TG9nb3V0UmVkaXJlY3RVcmk6IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXHJcbiAgICAgICAgbmF2aWdhdGVUb0xvZ2luUmVxdWVzdFVybDogdHJ1ZSxcclxuICAgICAgICBjbGllbnRDYXBhYmlsaXRpZXM6IFtdLFxyXG4gICAgICAgIHByb3RvY29sTW9kZTogUHJvdG9jb2xNb2RlLkFBRCxcclxuICAgICAgICBPSURDT3B0aW9uczoge1xyXG4gICAgICAgICAgICBzZXJ2ZXJSZXNwb25zZVR5cGU6IFNlcnZlclJlc3BvbnNlVHlwZS5GUkFHTUVOVCxcclxuICAgICAgICAgICAgZGVmYXVsdFNjb3BlczogW1xyXG4gICAgICAgICAgICAgICAgQ29uc3RhbnRzLk9QRU5JRF9TQ09QRSxcclxuICAgICAgICAgICAgICAgIENvbnN0YW50cy5QUk9GSUxFX1NDT1BFLFxyXG4gICAgICAgICAgICAgICAgQ29uc3RhbnRzLk9GRkxJTkVfQUNDRVNTX1NDT1BFLFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYXp1cmVDbG91ZE9wdGlvbnM6IHtcclxuICAgICAgICAgICAgYXp1cmVDbG91ZEluc3RhbmNlOiBBenVyZUNsb3VkSW5zdGFuY2UuTm9uZSxcclxuICAgICAgICAgICAgdGVuYW50OiBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2tpcEF1dGhvcml0eU1ldGFkYXRhQ2FjaGU6IGZhbHNlLFxyXG4gICAgICAgIHN1cHBvcnRzTmVzdGVkQXBwQXV0aDogZmFsc2UsXHJcbiAgICAgICAgaW5zdGFuY2VBd2FyZTogZmFsc2UsXHJcbiAgICB9O1xyXG4gICAgLy8gRGVmYXVsdCBjYWNoZSBvcHRpb25zIGZvciBicm93c2VyXHJcbiAgICBjb25zdCBERUZBVUxUX0NBQ0hFX09QVElPTlMgPSB7XHJcbiAgICAgICAgY2FjaGVMb2NhdGlvbjogQnJvd3NlckNhY2hlTG9jYXRpb24uU2Vzc2lvblN0b3JhZ2UsXHJcbiAgICAgICAgdGVtcG9yYXJ5Q2FjaGVMb2NhdGlvbjogQnJvd3NlckNhY2hlTG9jYXRpb24uU2Vzc2lvblN0b3JhZ2UsXHJcbiAgICAgICAgc3RvcmVBdXRoU3RhdGVJbkNvb2tpZTogZmFsc2UsXHJcbiAgICAgICAgc2VjdXJlQ29va2llczogZmFsc2UsXHJcbiAgICAgICAgLy8gRGVmYXVsdCBjYWNoZSBtaWdyYXRpb24gdG8gdHJ1ZSBpZiBjYWNoZSBsb2NhdGlvbiBpcyBsb2NhbFN0b3JhZ2Ugc2luY2UgZW50cmllcyBhcmUgcHJlc2VydmVkIGFjcm9zcyB0YWJzL3dpbmRvd3MuIE1pZ3JhdGlvbiBoYXMgbGl0dGxlIHRvIG5vIGJlbmVmaXQgaW4gc2Vzc2lvblN0b3JhZ2UgYW5kIG1lbW9yeVN0b3JhZ2VcclxuICAgICAgICBjYWNoZU1pZ3JhdGlvbkVuYWJsZWQ6IHVzZXJJbnB1dENhY2hlICYmXHJcbiAgICAgICAgICAgIHVzZXJJbnB1dENhY2hlLmNhY2hlTG9jYXRpb24gPT09IEJyb3dzZXJDYWNoZUxvY2F0aW9uLkxvY2FsU3RvcmFnZVxyXG4gICAgICAgICAgICA/IHRydWVcclxuICAgICAgICAgICAgOiBmYWxzZSxcclxuICAgICAgICBjbGFpbXNCYXNlZENhY2hpbmdFbmFibGVkOiBmYWxzZSxcclxuICAgIH07XHJcbiAgICAvLyBEZWZhdWx0IGxvZ2dlciBvcHRpb25zIGZvciBicm93c2VyXHJcbiAgICBjb25zdCBERUZBVUxUX0xPR0dFUl9PUFRJT05TID0ge1xyXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cclxuICAgICAgICBsb2dnZXJDYWxsYmFjazogKCkgPT4ge1xyXG4gICAgICAgICAgICAvLyBhbGxvdyB1c2VycyB0byBub3Qgc2V0IGxvZ2dlciBjYWxsIGJhY2tcclxuICAgICAgICB9LFxyXG4gICAgICAgIGxvZ0xldmVsOiBMb2dMZXZlbC5JbmZvLFxyXG4gICAgICAgIHBpaUxvZ2dpbmdFbmFibGVkOiBmYWxzZSxcclxuICAgIH07XHJcbiAgICAvLyBEZWZhdWx0IHN5c3RlbSBvcHRpb25zIGZvciBicm93c2VyXHJcbiAgICBjb25zdCBERUZBVUxUX0JST1dTRVJfU1lTVEVNX09QVElPTlMgPSB7XHJcbiAgICAgICAgLi4uREVGQVVMVF9TWVNURU1fT1BUSU9OUyxcclxuICAgICAgICBsb2dnZXJPcHRpb25zOiBERUZBVUxUX0xPR0dFUl9PUFRJT05TLFxyXG4gICAgICAgIG5ldHdvcmtDbGllbnQ6IGlzQnJvd3NlckVudmlyb25tZW50XHJcbiAgICAgICAgICAgID8gbmV3IEZldGNoQ2xpZW50KClcclxuICAgICAgICAgICAgOiBTdHViYmVkTmV0d29ya01vZHVsZSxcclxuICAgICAgICBuYXZpZ2F0aW9uQ2xpZW50OiBuZXcgTmF2aWdhdGlvbkNsaWVudCgpLFxyXG4gICAgICAgIGxvYWRGcmFtZVRpbWVvdXQ6IDAsXHJcbiAgICAgICAgLy8gSWYgbG9hZEZyYW1lVGltZW91dCBpcyBwcm92aWRlZCwgdXNlIHRoYXQgYXMgZGVmYXVsdC5cclxuICAgICAgICB3aW5kb3dIYXNoVGltZW91dDogdXNlcklucHV0U3lzdGVtPy5sb2FkRnJhbWVUaW1lb3V0IHx8IERFRkFVTFRfUE9QVVBfVElNRU9VVF9NUyxcclxuICAgICAgICBpZnJhbWVIYXNoVGltZW91dDogdXNlcklucHV0U3lzdGVtPy5sb2FkRnJhbWVUaW1lb3V0IHx8IERFRkFVTFRfSUZSQU1FX1RJTUVPVVRfTVMsXHJcbiAgICAgICAgbmF2aWdhdGVGcmFtZVdhaXQ6IDAsXHJcbiAgICAgICAgcmVkaXJlY3ROYXZpZ2F0aW9uVGltZW91dDogREVGQVVMVF9SRURJUkVDVF9USU1FT1VUX01TLFxyXG4gICAgICAgIGFzeW5jUG9wdXBzOiBmYWxzZSxcclxuICAgICAgICBhbGxvd1JlZGlyZWN0SW5JZnJhbWU6IGZhbHNlLFxyXG4gICAgICAgIGFsbG93TmF0aXZlQnJva2VyOiBmYWxzZSxcclxuICAgICAgICBuYXRpdmVCcm9rZXJIYW5kc2hha2VUaW1lb3V0OiB1c2VySW5wdXRTeXN0ZW0/Lm5hdGl2ZUJyb2tlckhhbmRzaGFrZVRpbWVvdXQgfHxcclxuICAgICAgICAgICAgREVGQVVMVF9OQVRJVkVfQlJPS0VSX0hBTkRTSEFLRV9USU1FT1VUX01TLFxyXG4gICAgICAgIHBvbGxJbnRlcnZhbE1pbGxpc2Vjb25kczogQnJvd3NlckNvbnN0YW50cy5ERUZBVUxUX1BPTExfSU5URVJWQUxfTVMsXHJcbiAgICB9O1xyXG4gICAgY29uc3QgcHJvdmlkZWRTeXN0ZW1PcHRpb25zID0ge1xyXG4gICAgICAgIC4uLkRFRkFVTFRfQlJPV1NFUl9TWVNURU1fT1BUSU9OUyxcclxuICAgICAgICAuLi51c2VySW5wdXRTeXN0ZW0sXHJcbiAgICAgICAgbG9nZ2VyT3B0aW9uczogdXNlcklucHV0U3lzdGVtPy5sb2dnZXJPcHRpb25zIHx8IERFRkFVTFRfTE9HR0VSX09QVElPTlMsXHJcbiAgICB9O1xyXG4gICAgY29uc3QgREVGQVVMVF9URUxFTUVUUllfT1BUSU9OUyA9IHtcclxuICAgICAgICBhcHBsaWNhdGlvbjoge1xyXG4gICAgICAgICAgICBhcHBOYW1lOiBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG4gICAgICAgICAgICBhcHBWZXJzaW9uOiBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2xpZW50OiBuZXcgU3R1YlBlcmZvcm1hbmNlQ2xpZW50KCksXHJcbiAgICB9O1xyXG4gICAgLy8gVGhyb3cgYW4gZXJyb3IgaWYgdXNlciBoYXMgc2V0IE9JRENPcHRpb25zIHdpdGhvdXQgYmVpbmcgaW4gT0lEQyBwcm90b2NvbCBtb2RlXHJcbiAgICBpZiAodXNlcklucHV0QXV0aD8ucHJvdG9jb2xNb2RlICE9PSBQcm90b2NvbE1vZGUuT0lEQyAmJlxyXG4gICAgICAgIHVzZXJJbnB1dEF1dGg/Lk9JRENPcHRpb25zKSB7XHJcbiAgICAgICAgY29uc3QgbG9nZ2VyID0gbmV3IExvZ2dlcihwcm92aWRlZFN5c3RlbU9wdGlvbnMubG9nZ2VyT3B0aW9ucyk7XHJcbiAgICAgICAgbG9nZ2VyLndhcm5pbmcoSlNPTi5zdHJpbmdpZnkoY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKENsaWVudENvbmZpZ3VyYXRpb25FcnJvckNvZGVzLmNhbm5vdFNldE9JRENPcHRpb25zKSkpO1xyXG4gICAgfVxyXG4gICAgLy8gVGhyb3cgYW4gZXJyb3IgaWYgdXNlciBoYXMgc2V0IGFsbG93TmF0aXZlQnJva2VyIHRvIHRydWUgd2l0aG91dCBiZWluZyBpbiBBQUQgcHJvdG9jb2wgbW9kZVxyXG4gICAgaWYgKHVzZXJJbnB1dEF1dGg/LnByb3RvY29sTW9kZSAmJlxyXG4gICAgICAgIHVzZXJJbnB1dEF1dGgucHJvdG9jb2xNb2RlICE9PSBQcm90b2NvbE1vZGUuQUFEICYmXHJcbiAgICAgICAgcHJvdmlkZWRTeXN0ZW1PcHRpb25zPy5hbGxvd05hdGl2ZUJyb2tlcikge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvcihDbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2Rlcy5jYW5ub3RBbGxvd05hdGl2ZUJyb2tlcik7XHJcbiAgICB9XHJcbiAgICBjb25zdCBvdmVybGF5ZWRDb25maWcgPSB7XHJcbiAgICAgICAgYXV0aDoge1xyXG4gICAgICAgICAgICAuLi5ERUZBVUxUX0FVVEhfT1BUSU9OUyxcclxuICAgICAgICAgICAgLi4udXNlcklucHV0QXV0aCxcclxuICAgICAgICAgICAgT0lEQ09wdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgIC4uLkRFRkFVTFRfQVVUSF9PUFRJT05TLk9JRENPcHRpb25zLFxyXG4gICAgICAgICAgICAgICAgLi4udXNlcklucHV0QXV0aD8uT0lEQ09wdGlvbnMsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjYWNoZTogeyAuLi5ERUZBVUxUX0NBQ0hFX09QVElPTlMsIC4uLnVzZXJJbnB1dENhY2hlIH0sXHJcbiAgICAgICAgc3lzdGVtOiBwcm92aWRlZFN5c3RlbU9wdGlvbnMsXHJcbiAgICAgICAgdGVsZW1ldHJ5OiB7IC4uLkRFRkFVTFRfVEVMRU1FVFJZX09QVElPTlMsIC4uLnVzZXJJbnB1dFRlbGVtZXRyeSB9LFxyXG4gICAgfTtcclxuICAgIHJldHVybiBvdmVybGF5ZWRDb25maWc7XHJcbn1cblxuZXhwb3J0IHsgREVGQVVMVF9JRlJBTUVfVElNRU9VVF9NUywgREVGQVVMVF9OQVRJVkVfQlJPS0VSX0hBTkRTSEFLRV9USU1FT1VUX01TLCBERUZBVUxUX1BPUFVQX1RJTUVPVVRfTVMsIERFRkFVTFRfUkVESVJFQ1RfVElNRU9VVF9NUywgYnVpbGRDb25maWd1cmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25maWd1cmF0aW9uLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createController: function() { return /* binding */ createController; },\n/* harmony export */   createV3Controller: function() { return /* binding */ createV3Controller; }\n/* harmony export */ });\n/* harmony import */ var _operatingcontext_NestedAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operatingcontext/NestedAppOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs\");\n/* harmony import */ var _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operatingcontext/StandardOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs\");\n/* harmony import */ var _StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StandardController.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\");\n/* harmony import */ var _NestedAppAuthController_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NestedAppAuthController.mjs */ \"./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nasync function createV3Controller(config, request) {\r\n    const standard = new _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardOperatingContext(config);\r\n    await standard.initialize();\r\n    return _StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__.StandardController.createController(standard, request);\r\n}\r\nasync function createController(config) {\r\n    const standard = new _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardOperatingContext(config);\r\n    const nestedApp = new _operatingcontext_NestedAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__.NestedAppOperatingContext(config);\r\n    const operatingContexts = [standard.initialize(), nestedApp.initialize()];\r\n    await Promise.all(operatingContexts);\r\n    if (nestedApp.isAvailable() && config.auth.supportsNestedAppAuth) {\r\n        return _NestedAppAuthController_mjs__WEBPACK_IMPORTED_MODULE_3__.NestedAppAuthController.createController(nestedApp);\r\n    }\r\n    else if (standard.isAvailable()) {\r\n        return _StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__.StandardController.createController(standard);\r\n    }\r\n    else {\r\n        // Since neither of the actual operating contexts are available keep the UnknownOperatingContextController\r\n        return null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=ControllerFactory.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NvbnRyb2xsZXJzL0NvbnRyb2xsZXJGYWN0b3J5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2lGO0FBQ0Y7QUFDOUI7QUFDVTs7QUFFeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvR0FBd0I7QUFDakQ7QUFDQSxXQUFXLHVFQUFrQjtBQUM3QjtBQUNBO0FBQ0EseUJBQXlCLG9HQUF3QjtBQUNqRCwwQkFBMEIsc0dBQXlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUZBQXVCO0FBQ3RDO0FBQ0E7QUFDQSxlQUFlLHVFQUFrQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWdEO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY29udHJvbGxlcnMvQ29udHJvbGxlckZhY3RvcnkubWpzPzE2NDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBOZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0IH0gZnJvbSAnLi4vb3BlcmF0aW5nY29udGV4dC9OZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0Lm1qcyc7XG5pbXBvcnQgeyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQgfSBmcm9tICcuLi9vcGVyYXRpbmdjb250ZXh0L1N0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5tanMnO1xuaW1wb3J0IHsgU3RhbmRhcmRDb250cm9sbGVyIH0gZnJvbSAnLi9TdGFuZGFyZENvbnRyb2xsZXIubWpzJztcbmltcG9ydCB7IE5lc3RlZEFwcEF1dGhDb250cm9sbGVyIH0gZnJvbSAnLi9OZXN0ZWRBcHBBdXRoQ29udHJvbGxlci5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlVjNDb250cm9sbGVyKGNvbmZpZywgcmVxdWVzdCkge1xyXG4gICAgY29uc3Qgc3RhbmRhcmQgPSBuZXcgU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0KGNvbmZpZyk7XHJcbiAgICBhd2FpdCBzdGFuZGFyZC5pbml0aWFsaXplKCk7XHJcbiAgICByZXR1cm4gU3RhbmRhcmRDb250cm9sbGVyLmNyZWF0ZUNvbnRyb2xsZXIoc3RhbmRhcmQsIHJlcXVlc3QpO1xyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNvbnRyb2xsZXIoY29uZmlnKSB7XHJcbiAgICBjb25zdCBzdGFuZGFyZCA9IG5ldyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQoY29uZmlnKTtcclxuICAgIGNvbnN0IG5lc3RlZEFwcCA9IG5ldyBOZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0KGNvbmZpZyk7XHJcbiAgICBjb25zdCBvcGVyYXRpbmdDb250ZXh0cyA9IFtzdGFuZGFyZC5pbml0aWFsaXplKCksIG5lc3RlZEFwcC5pbml0aWFsaXplKCldO1xyXG4gICAgYXdhaXQgUHJvbWlzZS5hbGwob3BlcmF0aW5nQ29udGV4dHMpO1xyXG4gICAgaWYgKG5lc3RlZEFwcC5pc0F2YWlsYWJsZSgpICYmIGNvbmZpZy5hdXRoLnN1cHBvcnRzTmVzdGVkQXBwQXV0aCkge1xyXG4gICAgICAgIHJldHVybiBOZXN0ZWRBcHBBdXRoQ29udHJvbGxlci5jcmVhdGVDb250cm9sbGVyKG5lc3RlZEFwcCk7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChzdGFuZGFyZC5pc0F2YWlsYWJsZSgpKSB7XHJcbiAgICAgICAgcmV0dXJuIFN0YW5kYXJkQ29udHJvbGxlci5jcmVhdGVDb250cm9sbGVyKHN0YW5kYXJkKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIC8vIFNpbmNlIG5laXRoZXIgb2YgdGhlIGFjdHVhbCBvcGVyYXRpbmcgY29udGV4dHMgYXJlIGF2YWlsYWJsZSBrZWVwIHRoZSBVbmtub3duT3BlcmF0aW5nQ29udGV4dENvbnRyb2xsZXJcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBjcmVhdGVDb250cm9sbGVyLCBjcmVhdGVWM0NvbnRyb2xsZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnRyb2xsZXJGYWN0b3J5Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedAppAuthController: function() { return /* binding */ NestedAppAuthController; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/CryptoOps.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\");\n/* harmony import */ var _naa_mapping_NestedAppAuthAdapter_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../naa/mapping/NestedAppAuthAdapter.mjs */ \"./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs\");\n/* harmony import */ var _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/NestedAppAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs\");\n/* harmony import */ var _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../event/EventHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../event/EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cache/BrowserCacheManager.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\");\n/* harmony import */ var _cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cache/AccountManager.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NestedAppAuthController {\r\n    constructor(operatingContext) {\r\n        this.operatingContext = operatingContext;\r\n        const proxy = this.operatingContext.getBridgeProxy();\r\n        if (proxy !== undefined) {\r\n            this.bridgeProxy = proxy;\r\n        }\r\n        else {\r\n            throw new Error(\"unexpected: bridgeProxy is undefined\");\r\n        }\r\n        // Set the configuration.\r\n        this.config = operatingContext.getConfig();\r\n        // Initialize logger\r\n        this.logger = this.operatingContext.getLogger();\r\n        // Initialize performance client\r\n        this.performanceClient = this.config.telemetry.client;\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = operatingContext.isBrowserEnvironment()\r\n            ? new _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_0__.CryptoOps(this.logger, this.performanceClient, true)\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CRYPTO_IMPLEMENTATION;\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = this.operatingContext.isBrowserEnvironment()\r\n            ? new _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger, (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.buildStaticAuthorityOptions)(this.config.auth))\r\n            : (0,_cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_BROWSER_CACHE_MANAGER)(this.config.auth.clientId, this.logger);\r\n        this.eventHandler = new _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_3__.EventHandler(this.logger);\r\n        this.nestedAppAuthAdapter = new _naa_mapping_NestedAppAuthAdapter_mjs__WEBPACK_IMPORTED_MODULE_4__.NestedAppAuthAdapter(this.config.auth.clientId, this.config.auth.clientCapabilities, this.browserCrypto, this.logger);\r\n        // Set the active account if available\r\n        const accountContext = this.bridgeProxy.getAccountContext();\r\n        if (accountContext) {\r\n            const cachedAccount = (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.getAccount)(accountContext, this.logger, this.browserStorage);\r\n            (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.setActiveAccount)(cachedAccount, this.browserStorage);\r\n        }\r\n    }\r\n    /**\r\n     * Factory function to create a new instance of NestedAppAuthController\r\n     * @param operatingContext\r\n     * @returns Promise<IController>\r\n     */\r\n    static async createController(operatingContext) {\r\n        const controller = new NestedAppAuthController(operatingContext);\r\n        return Promise.resolve(controller);\r\n    }\r\n    /**\r\n     * Specific implementation of initialize function for NestedAppAuthController\r\n     * @returns\r\n     */\r\n    initialize() {\r\n        // do nothing not required by this controller\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Validate the incoming request and add correlationId if not present\r\n     * @param request\r\n     * @returns\r\n     */\r\n    ensureValidRequest(request) {\r\n        if (request?.correlationId) {\r\n            return request;\r\n        }\r\n        return {\r\n            ...request,\r\n            correlationId: this.browserCrypto.createNewGuid(),\r\n        };\r\n    }\r\n    /**\r\n     * Internal implementation of acquireTokenInteractive flow\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenInteractive(request) {\r\n        const validRequest = this.ensureValidRequest(request);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionType.Popup, validRequest);\r\n        const atPopupMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenPopup, validRequest.correlationId);\r\n        atPopupMeasurement?.add({ nestedAppAuthRequest: true });\r\n        try {\r\n            const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(validRequest);\r\n            const reqTimestamp = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.TimeUtils.nowSeconds();\r\n            const response = await this.bridgeProxy.getTokenInteractive(naaRequest);\r\n            const result = {\r\n                ...this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp),\r\n            };\r\n            // cache the tokens in the response\r\n            await this.hydrateCache(result, request);\r\n            this.browserStorage.setActiveAccount(result.account);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionType.Popup, result);\r\n            atPopupMeasurement.add({\r\n                accessTokenSize: result.accessToken.length,\r\n                idTokenSize: result.idToken.length,\r\n            });\r\n            atPopupMeasurement.end({\r\n                success: true,\r\n                requestId: result.requestId,\r\n            });\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionType.Popup, null, e);\r\n            atPopupMeasurement.end({\r\n                success: false,\r\n            }, e);\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Internal implementation of acquireTokenSilent flow\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenSilentInternal(request) {\r\n        const validRequest = this.ensureValidRequest(request);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionType.Silent, validRequest);\r\n        // Look for tokens in the cache first\r\n        const result = await this.acquireTokenFromCache(validRequest);\r\n        if (result) {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionType.Silent, result);\r\n            return result;\r\n        }\r\n        // proceed with acquiring tokens via the host\r\n        const ssoSilentMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SsoSilent, validRequest.correlationId);\r\n        ssoSilentMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n        ssoSilentMeasurement?.add({\r\n            nestedAppAuthRequest: true,\r\n        });\r\n        try {\r\n            const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(validRequest);\r\n            const reqTimestamp = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.TimeUtils.nowSeconds();\r\n            const response = await this.bridgeProxy.getTokenSilent(naaRequest);\r\n            const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp);\r\n            // cache the tokens in the response\r\n            await this.hydrateCache(result, request);\r\n            this.browserStorage.setActiveAccount(result.account);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionType.Silent, result);\r\n            ssoSilentMeasurement?.add({\r\n                accessTokenSize: result.accessToken.length,\r\n                idTokenSize: result.idToken.length,\r\n            });\r\n            ssoSilentMeasurement?.end({\r\n                success: true,\r\n                requestId: result.requestId,\r\n            });\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionType.Silent, null, e);\r\n            ssoSilentMeasurement?.end({\r\n                success: false,\r\n            }, e);\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * acquires tokens from cache\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenFromCache(request) {\r\n        const atsMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AcquireTokenSilent, request.correlationId);\r\n        atsMeasurement?.add({\r\n            nestedAppAuthRequest: true,\r\n        });\r\n        // if the request has claims, we cannot look up in the cache\r\n        if (request.claims) {\r\n            this.logger.verbose(\"Claims are present in the request, skipping cache lookup\");\r\n            return null;\r\n        }\r\n        // respect cache lookup policy\r\n        let result = null;\r\n        switch (request.cacheLookupPolicy) {\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.CacheLookupPolicy.Default:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.CacheLookupPolicy.AccessToken:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.CacheLookupPolicy.AccessTokenAndRefreshToken:\r\n                result = await this.acquireTokenFromCacheInternal(request);\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n        if (result) {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionType.Silent, result);\r\n            atsMeasurement?.add({\r\n                accessTokenSize: result?.accessToken.length,\r\n                idTokenSize: result?.idToken.length,\r\n            });\r\n            atsMeasurement?.end({\r\n                success: true,\r\n            });\r\n            return result;\r\n        }\r\n        this.logger.error(\"Cached tokens are not found for the account, proceeding with silent token request.\");\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionType.Silent, null);\r\n        atsMeasurement?.end({\r\n            success: false,\r\n        });\r\n        return null;\r\n    }\r\n    /**\r\n     *\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenFromCacheInternal(request) {\r\n        const accountContext = this.bridgeProxy.getAccountContext();\r\n        let currentAccount = null;\r\n        if (accountContext) {\r\n            const hubAccount = (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.getAccount)(accountContext, this.logger, this.browserStorage);\r\n            // always prioritize for hub account context, the reqirement of `request.account` will be removed soon\r\n            currentAccount = hubAccount || request.account;\r\n        }\r\n        // fall back to brokering if no cached account is found\r\n        if (!currentAccount) {\r\n            this.logger.verbose(\"No active account found, falling back to the host\");\r\n            return Promise.resolve(null);\r\n        }\r\n        this.logger.verbose(\"active account found, attempting to acquire token silently\");\r\n        const authRequest = {\r\n            ...request,\r\n            correlationId: request.correlationId || this.browserCrypto.createNewGuid(),\r\n            authority: request.authority || currentAccount.environment,\r\n            scopes: request.scopes?.length\r\n                ? request.scopes\r\n                : [..._azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES],\r\n        };\r\n        // fetch access token and check for expiry\r\n        const tokenKeys = this.browserStorage.getTokenKeys();\r\n        const cachedAccessToken = this.browserStorage.getAccessToken(currentAccount, authRequest, tokenKeys, currentAccount.tenantId, this.performanceClient, authRequest.correlationId);\r\n        // If there is no access token, log it and return null\r\n        if (!cachedAccessToken) {\r\n            this.logger.verbose(\"No cached access token found\");\r\n            return Promise.resolve(null);\r\n        }\r\n        else if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.TimeUtils.wasClockTurnedBack(cachedAccessToken.cachedAt) ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.TimeUtils.isTokenExpired(cachedAccessToken.expiresOn, this.config.system.tokenRenewalOffsetSeconds)) {\r\n            this.logger.verbose(\"Cached access token has expired\");\r\n            return Promise.resolve(null);\r\n        }\r\n        const cachedIdToken = this.browserStorage.getIdToken(currentAccount, tokenKeys, currentAccount.tenantId, this.performanceClient, authRequest.correlationId);\r\n        if (!cachedIdToken) {\r\n            this.logger.verbose(\"No cached id token found\");\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.nestedAppAuthAdapter.toAuthenticationResultFromCache(currentAccount, cachedIdToken, cachedAccessToken, authRequest, authRequest.correlationId);\r\n    }\r\n    /**\r\n     * acquireTokenPopup flow implementation\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenPopup(request) {\r\n        return this.acquireTokenInteractive(request);\r\n    }\r\n    /**\r\n     * acquireTokenRedirect flow is not supported in nested app auth\r\n     * @param request\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    acquireTokenRedirect(request) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * acquireTokenSilent flow implementation\r\n     * @param silentRequest\r\n     * @returns\r\n     */\r\n    async acquireTokenSilent(silentRequest) {\r\n        return this.acquireTokenSilentInternal(silentRequest);\r\n    }\r\n    /**\r\n     * Hybrid flow is not currently supported in nested app auth\r\n     * @param request\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    acquireTokenByCode(request // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * acquireTokenNative flow is not currently supported in nested app auth\r\n     * @param request\r\n     * @param apiId\r\n     * @param accountId\r\n     */\r\n    acquireTokenNative(request, apiId, // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    accountId // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * acquireTokenByRefreshToken flow is not currently supported in nested app auth\r\n     * @param commonRequest\r\n     * @param silentRequest\r\n     */\r\n    acquireTokenByRefreshToken(commonRequest, // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    silentRequest // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     * @param eventTypes\r\n     */\r\n    addEventCallback(callback, eventTypes) {\r\n        return this.eventHandler.addEventCallback(callback, eventTypes);\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        this.eventHandler.removeEventCallback(callbackId);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    addPerformanceCallback(callback) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removePerformanceCallback(callbackId) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    enableAccountStorageEvents() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    disableAccountStorageEvents() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    // #region Account APIs\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.getAllAccounts)(this.logger, this.browserStorage, this.isBrowserEnv(), accountFilter);\r\n    }\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.getAccount)(accountFilter, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param username\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByUsername(username) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.getAccountByUsername)(username, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByHomeId(homeAccountId) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.getAccountByHomeId)(homeAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByLocalId(localAccountId) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.getAccountByLocalId)(localAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        /*\r\n         * StandardController uses this to allow the developer to set the active account\r\n         * in the nested app auth scenario the active account is controlled by the app hosting the nested app\r\n         */\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.setActiveAccount)(account, this.browserStorage);\r\n    }\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount() {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_5__.getActiveAccount)(this.browserStorage);\r\n    }\r\n    // #endregion\r\n    handleRedirectPromise(hash // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        return Promise.resolve(null);\r\n    }\r\n    loginPopup(request // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        return this.acquireTokenInteractive(request || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_REQUEST);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    loginRedirect(request) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    logout(logoutRequest) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    logoutRedirect(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    logoutPopup(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    ssoSilent(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    request) {\r\n        return this.acquireTokenSilentInternal(request);\r\n    }\r\n    getTokenCache() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.logger = logger;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    initializeWrapperLibrary(sku, version) {\r\n        /*\r\n         * Standard controller uses this to set the sku and version of the wrapper library in the storage\r\n         * we do nothing here\r\n         */\r\n        return;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    setNavigationClient(navigationClient) {\r\n        this.logger.warning(\"setNavigationClient is not supported in nested app auth\");\r\n    }\r\n    getConfiguration() {\r\n        return this.config;\r\n    }\r\n    isBrowserEnv() {\r\n        return this.operatingContext.isBrowserEnvironment();\r\n    }\r\n    getBrowserCrypto() {\r\n        return this.browserCrypto;\r\n    }\r\n    getPerformanceClient() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    getRedirectResponse() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    async clearCache(logoutRequest) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    async hydrateCache(result, request) {\r\n        this.logger.verbose(\"hydrateCache called\");\r\n        const accountEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AccountEntity.createFromAccountInfo(result.account, result.cloudGraphHostName, result.msGraphHost);\r\n        this.browserStorage.setAccount(accountEntity);\r\n        return this.browserStorage.hydrateCache(result, request);\r\n    }\r\n}\n\n\n//# sourceMappingURL=NestedAppAuthController.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardController: function() { return /* binding */ StandardController; }\n/* harmony export */ });\n/* harmony import */ var _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto/CryptoOps.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cache/BrowserCacheManager.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\");\n/* harmony import */ var _cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../cache/AccountManager.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../event/EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../event/EventHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\");\n/* harmony import */ var _interaction_client_PopupClient_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../interaction_client/PopupClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs\");\n/* harmony import */ var _interaction_client_RedirectClient_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../interaction_client/RedirectClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs\");\n/* harmony import */ var _interaction_client_SilentIframeClient_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../interaction_client/SilentIframeClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs\");\n/* harmony import */ var _interaction_client_SilentRefreshClient_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../interaction_client/SilentRefreshClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs\");\n/* harmony import */ var _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../cache/TokenCache.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs\");\n/* harmony import */ var _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../interaction_client/NativeInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/NativeAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/* harmony import */ var _interaction_client_SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../interaction_client/SilentCacheClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\");\n/* harmony import */ var _interaction_client_SilentAuthCodeClient_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../interaction_client/SilentAuthCodeClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../request/RequestHelpers.mjs */ \"./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction getAccountType(account) {\r\n    const idTokenClaims = account?.idTokenClaims;\r\n    if (idTokenClaims?.tfp || idTokenClaims?.acr) {\r\n        return \"B2C\";\r\n    }\r\n    if (!idTokenClaims?.tid) {\r\n        return undefined;\r\n    }\r\n    else if (idTokenClaims?.tid === \"9188040d-6c67-4c5b-b112-36a304b66dad\") {\r\n        return \"MSA\";\r\n    }\r\n    return \"AAD\";\r\n}\r\nfunction preflightCheck(initialized, performanceEvent) {\r\n    try {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.preflightCheck)(initialized);\r\n    }\r\n    catch (e) {\r\n        performanceEvent.end({ success: false }, e);\r\n        throw e;\r\n    }\r\n}\r\nclass StandardController {\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     */\r\n    constructor(operatingContext) {\r\n        this.operatingContext = operatingContext;\r\n        this.isBrowserEnvironment =\r\n            this.operatingContext.isBrowserEnvironment();\r\n        // Set the configuration.\r\n        this.config = operatingContext.getConfig();\r\n        this.initialized = false;\r\n        // Initialize logger\r\n        this.logger = this.operatingContext.getLogger();\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n        // Initialize the navigation client class.\r\n        this.navigationClient = this.config.system.navigationClient;\r\n        // Initialize redirectResponse Map\r\n        this.redirectResponse = new Map();\r\n        // Initial hybrid spa map\r\n        this.hybridAuthCodeResponses = new Map();\r\n        // Initialize performance client\r\n        this.performanceClient = this.config.telemetry.client;\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = this.isBrowserEnvironment\r\n            ? new _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_1__.CryptoOps(this.logger, this.performanceClient)\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_CRYPTO_IMPLEMENTATION;\r\n        this.eventHandler = new _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_3__.EventHandler(this.logger);\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = this.isBrowserEnvironment\r\n            ? new _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger, (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.buildStaticAuthorityOptions)(this.config.auth), this.performanceClient)\r\n            : (0,_cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_BROWSER_CACHE_MANAGER)(this.config.auth.clientId, this.logger);\r\n        // initialize in memory storage for native flows\r\n        const nativeCacheOptions = {\r\n            cacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserCacheLocation.MemoryStorage,\r\n            temporaryCacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserCacheLocation.MemoryStorage,\r\n            storeAuthStateInCookie: false,\r\n            secureCookies: false,\r\n            cacheMigrationEnabled: false,\r\n            claimsBasedCachingEnabled: false,\r\n        };\r\n        this.nativeInternalStorage = new _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserCacheManager(this.config.auth.clientId, nativeCacheOptions, this.browserCrypto, this.logger, undefined, this.performanceClient);\r\n        // Initialize the token cache\r\n        this.tokenCache = new _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_6__.TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\r\n        this.activeSilentTokenRequests = new Map();\r\n        // Register listener functions\r\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\r\n        // Register listener functions\r\n        this.trackPageVisibilityWithMeasurement =\r\n            this.trackPageVisibilityWithMeasurement.bind(this);\r\n        // account storage events\r\n        this.listeningToStorageEvents = false;\r\n        this.handleAccountCacheChange =\r\n            this.handleAccountCacheChange.bind(this);\r\n    }\r\n    static async createController(operatingContext, request) {\r\n        const controller = new StandardController(operatingContext);\r\n        await controller.initialize(request);\r\n        return controller;\r\n    }\r\n    trackPageVisibility(correlationId) {\r\n        if (!correlationId) {\r\n            return;\r\n        }\r\n        this.logger.info(\"Perf: Visibility change detected\");\r\n        this.performanceClient.incrementFields({ visibilityChangeCount: 1 }, correlationId);\r\n    }\r\n    /**\r\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\r\n     * @param request {?InitializeApplicationRequest} correlation id\r\n     */\r\n    async initialize(request) {\r\n        this.logger.trace(\"initialize called\");\r\n        if (this.initialized) {\r\n            this.logger.info(\"initialize has already been called, exiting early.\");\r\n            return;\r\n        }\r\n        if (!this.isBrowserEnvironment) {\r\n            this.logger.info(\"in non-browser environment, exiting early.\");\r\n            this.initialized = true;\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.INITIALIZE_END);\r\n            return;\r\n        }\r\n        const initCorrelationId = request?.correlationId || this.getRequestCorrelationId();\r\n        const allowNativeBroker = this.config.system.allowNativeBroker;\r\n        const initMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.InitializeClientApplication, initCorrelationId);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.INITIALIZE_START);\r\n        if (allowNativeBroker) {\r\n            try {\r\n                this.nativeExtensionProvider =\r\n                    await _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.NativeMessageHandler.createProvider(this.logger, this.config.system.nativeBrokerHandshakeTimeout, this.performanceClient);\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(e);\r\n            }\r\n        }\r\n        if (!this.config.cache.claimsBasedCachingEnabled) {\r\n            this.logger.verbose(\"Claims-based caching is disabled. Clearing the previous cache with claims\");\r\n            await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.ClearTokensAndKeysWithClaims, this.logger, this.performanceClient, initCorrelationId)(this.performanceClient, initCorrelationId);\r\n        }\r\n        this.initialized = true;\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.INITIALIZE_END);\r\n        initMeasurement.end({ allowNativeBroker, success: true });\r\n    }\r\n    // #region Redirect Flow\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    async handleRedirectPromise(hash) {\r\n        this.logger.verbose(\"handleRedirectPromise called\");\r\n        // Block token acquisition before initialize has been called\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        if (this.isBrowserEnvironment) {\r\n            /**\r\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\r\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\r\n             * several times concurrently.\r\n             */\r\n            const redirectResponseKey = hash || \"\";\r\n            let response = this.redirectResponse.get(redirectResponseKey);\r\n            if (typeof response === \"undefined\") {\r\n                response = this.handleRedirectPromiseInternal(hash);\r\n                this.redirectResponse.set(redirectResponseKey, response);\r\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\r\n            }\r\n            else {\r\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\r\n            }\r\n            return response;\r\n        }\r\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\r\n        return null;\r\n    }\r\n    /**\r\n     * The internal details of handleRedirectPromise. This is separated out to a helper to allow handleRedirectPromise to memoize requests\r\n     * @param hash\r\n     * @returns\r\n     */\r\n    async handleRedirectPromiseInternal(hash) {\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        const request = this.browserStorage.getCachedNativeRequest();\r\n        const useNative = request &&\r\n            _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider) &&\r\n            this.nativeExtensionProvider &&\r\n            !hash;\r\n        const correlationId = useNative\r\n            ? request?.correlationId\r\n            : this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.TemporaryCacheKeys.CORRELATION_ID, true) || \"\";\r\n        const rootMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenRedirect, correlationId);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.HANDLE_REDIRECT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect);\r\n        let redirectResponse;\r\n        if (useNative && this.nativeExtensionProvider) {\r\n            this.logger.trace(\"handleRedirectPromise - acquiring token from native platform\");\r\n            const nativeClient = new _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_9__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.ApiId.handleRedirectPromise, this.performanceClient, this.nativeExtensionProvider, request.accountId, this.nativeInternalStorage, request.correlationId);\r\n            redirectResponse = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(nativeClient.handleRedirectPromise.bind(nativeClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.HandleNativeRedirectPromiseMeasurement, this.logger, this.performanceClient, rootMeasurement.event.correlationId)(this.performanceClient, rootMeasurement.event.correlationId);\r\n        }\r\n        else {\r\n            this.logger.trace(\"handleRedirectPromise - acquiring token from web flow\");\r\n            const redirectClient = this.createRedirectClient(correlationId);\r\n            redirectResponse = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(redirectClient.handleRedirectPromise.bind(redirectClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.HandleRedirectPromiseMeasurement, this.logger, this.performanceClient, rootMeasurement.event.correlationId)(hash, rootMeasurement);\r\n        }\r\n        return redirectResponse\r\n            .then((result) => {\r\n            if (result) {\r\n                // Emit login event if number of accounts change\r\n                const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\r\n                if (isLoggingIn) {\r\n                    this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.LOGIN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect, result);\r\n                    this.logger.verbose(\"handleRedirectResponse returned result, login success\");\r\n                }\r\n                else {\r\n                    this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect, result);\r\n                    this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\r\n                }\r\n                rootMeasurement.end({\r\n                    success: true,\r\n                    accountType: getAccountType(result.account),\r\n                });\r\n            }\r\n            else {\r\n                /*\r\n                 * Instrument an event only if an error code is set. Otherwise, discard it when the redirect response\r\n                 * is empty and the error code is missing.\r\n                 */\r\n                if (rootMeasurement.event.errorCode) {\r\n                    rootMeasurement.end({ success: false });\r\n                }\r\n                else {\r\n                    rootMeasurement.discard();\r\n                }\r\n            }\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.HANDLE_REDIRECT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect);\r\n            return result;\r\n        })\r\n            .catch((e) => {\r\n            const eventError = e;\r\n            // Emit login event if there is an account\r\n            if (loggedInAccounts.length > 0) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect, null, eventError);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.LOGIN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect, null, eventError);\r\n            }\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.HANDLE_REDIRECT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect);\r\n            rootMeasurement.end({\r\n                success: false,\r\n            }, eventError);\r\n            throw e;\r\n        });\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async acquireTokenRedirect(request) {\r\n        // Preflight request\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\r\n        const atrMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenPreRedirect, correlationId);\r\n        atrMeasurement.add({\r\n            accountType: getAccountType(request.account),\r\n            scenarioId: request.scenarioId,\r\n        });\r\n        // Override on request only if set, as onRedirectNavigate field is deprecated\r\n        const onRedirectNavigateCb = request.onRedirectNavigate;\r\n        if (onRedirectNavigateCb) {\r\n            request.onRedirectNavigate = (url) => {\r\n                const navigate = typeof onRedirectNavigateCb === \"function\"\r\n                    ? onRedirectNavigateCb(url)\r\n                    : undefined;\r\n                if (navigate !== false) {\r\n                    atrMeasurement.end({ success: true });\r\n                }\r\n                else {\r\n                    atrMeasurement.discard();\r\n                }\r\n                return navigate;\r\n            };\r\n        }\r\n        else {\r\n            const configOnRedirectNavigateCb = this.config.auth.onRedirectNavigate;\r\n            this.config.auth.onRedirectNavigate = (url) => {\r\n                const navigate = typeof configOnRedirectNavigateCb === \"function\"\r\n                    ? configOnRedirectNavigateCb(url)\r\n                    : undefined;\r\n                if (navigate !== false) {\r\n                    atrMeasurement.end({ success: true });\r\n                }\r\n                else {\r\n                    atrMeasurement.discard();\r\n                }\r\n                return navigate;\r\n            };\r\n        }\r\n        // If logged in, emit acquire token events\r\n        const isLoggedIn = this.getAllAccounts().length > 0;\r\n        try {\r\n            (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectPreflightCheck)(this.initialized, this.config);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n            if (isLoggedIn) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect, request);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.LOGIN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect, request);\r\n            }\r\n            let result;\r\n            if (this.nativeExtensionProvider && this.canUseNative(request)) {\r\n                const nativeClient = new _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_9__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.ApiId.acquireTokenRedirect, this.performanceClient, this.nativeExtensionProvider, this.getNativeAccountId(request), this.nativeInternalStorage, correlationId);\r\n                result = nativeClient\r\n                    .acquireTokenRedirect(request, atrMeasurement)\r\n                    .catch((e) => {\r\n                    if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError &&\r\n                        (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.isFatalNativeAuthError)(e)) {\r\n                        this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                        const redirectClient = this.createRedirectClient(correlationId);\r\n                        return redirectClient.acquireToken(request);\r\n                    }\r\n                    else if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError) {\r\n                        this.logger.verbose(\"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\");\r\n                        const redirectClient = this.createRedirectClient(correlationId);\r\n                        return redirectClient.acquireToken(request);\r\n                    }\r\n                    this.browserStorage.setInteractionInProgress(false);\r\n                    throw e;\r\n                });\r\n            }\r\n            else {\r\n                const redirectClient = this.createRedirectClient(correlationId);\r\n                result = redirectClient.acquireToken(request);\r\n            }\r\n            return await result;\r\n        }\r\n        catch (e) {\r\n            atrMeasurement.end({ success: false }, e);\r\n            if (isLoggedIn) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect, null, e);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.LOGIN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect, null, e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    // #endregion\r\n    // #region Popup Flow\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenPopup(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const atPopupMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenPopup, correlationId);\r\n        atPopupMeasurement.add({\r\n            scenarioId: request.scenarioId,\r\n            accountType: getAccountType(request.account),\r\n        });\r\n        try {\r\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\r\n            preflightCheck(this.initialized, atPopupMeasurement);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n        }\r\n        catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n        // If logged in, emit acquire token events\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        if (loggedInAccounts.length > 0) {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Popup, request);\r\n        }\r\n        else {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.LOGIN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Popup, request);\r\n        }\r\n        let result;\r\n        if (this.canUseNative(request)) {\r\n            result = this.acquireTokenNative({\r\n                ...request,\r\n                correlationId,\r\n            }, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.ApiId.acquireTokenPopup)\r\n                .then((response) => {\r\n                this.browserStorage.setInteractionInProgress(false);\r\n                atPopupMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: true,\r\n                    accountType: getAccountType(response.account),\r\n                });\r\n                return response;\r\n            })\r\n                .catch((e) => {\r\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError &&\r\n                    (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.isFatalNativeAuthError)(e)) {\r\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                    const popupClient = this.createPopupClient(correlationId);\r\n                    return popupClient.acquireToken(request);\r\n                }\r\n                else if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError) {\r\n                    this.logger.verbose(\"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\");\r\n                    const popupClient = this.createPopupClient(correlationId);\r\n                    return popupClient.acquireToken(request);\r\n                }\r\n                this.browserStorage.setInteractionInProgress(false);\r\n                throw e;\r\n            });\r\n        }\r\n        else {\r\n            const popupClient = this.createPopupClient(correlationId);\r\n            result = popupClient.acquireToken(request);\r\n        }\r\n        return result\r\n            .then((result) => {\r\n            /*\r\n             *  If logged in, emit acquire token events\r\n             */\r\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\r\n            if (isLoggingIn) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.LOGIN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Popup, result);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Popup, result);\r\n            }\r\n            atPopupMeasurement.end({\r\n                success: true,\r\n                accessTokenSize: result.accessToken.length,\r\n                idTokenSize: result.idToken.length,\r\n                accountType: getAccountType(result.account),\r\n            });\r\n            return result;\r\n        })\r\n            .catch((e) => {\r\n            if (loggedInAccounts.length > 0) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Popup, null, e);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.LOGIN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Popup, null, e);\r\n            }\r\n            atPopupMeasurement.end({\r\n                success: false,\r\n            }, e);\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        });\r\n    }\r\n    trackPageVisibilityWithMeasurement() {\r\n        const measurement = this.ssoSilentMeasurement ||\r\n            this.acquireTokenByCodeAsyncMeasurement;\r\n        if (!measurement) {\r\n            return;\r\n        }\r\n        this.logger.info(\"Perf: Visibility change detected in \", measurement.event.name);\r\n        measurement.increment({\r\n            visibilityChangeCount: 1,\r\n        });\r\n    }\r\n    // #endregion\r\n    // #region Silent Flow\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async ssoSilent(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const validRequest = {\r\n            ...request,\r\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\r\n            prompt: request.prompt,\r\n            correlationId: correlationId,\r\n        };\r\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.SsoSilent, correlationId);\r\n        this.ssoSilentMeasurement?.add({\r\n            scenarioId: request.scenarioId,\r\n            accountType: getAccountType(request.account),\r\n        });\r\n        preflightCheck(this.initialized, this.ssoSilentMeasurement);\r\n        this.ssoSilentMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        this.logger.verbose(\"ssoSilent called\", correlationId);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.SSO_SILENT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, validRequest);\r\n        let result;\r\n        if (this.canUseNative(validRequest)) {\r\n            result = this.acquireTokenNative(validRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.ApiId.ssoSilent).catch((e) => {\r\n                // If native token acquisition fails for availability reasons fallback to standard flow\r\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError && (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.isFatalNativeAuthError)(e)) {\r\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                    const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\r\n                    return silentIframeClient.acquireToken(validRequest);\r\n                }\r\n                throw e;\r\n            });\r\n        }\r\n        else {\r\n            const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\r\n            result = silentIframeClient.acquireToken(validRequest);\r\n        }\r\n        return result\r\n            .then((response) => {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.SSO_SILENT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, response);\r\n            this.ssoSilentMeasurement?.end({\r\n                success: true,\r\n                isNativeBroker: response.fromNativeBroker,\r\n                accessTokenSize: response.accessToken.length,\r\n                idTokenSize: response.idToken.length,\r\n                accountType: getAccountType(response.account),\r\n            });\r\n            return response;\r\n        })\r\n            .catch((e) => {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.SSO_SILENT_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, null, e);\r\n            this.ssoSilentMeasurement?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        })\r\n            .finally(() => {\r\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        });\r\n    }\r\n    /**\r\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\r\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\r\n     * This API is not indended for normal authorization code acquisition and redemption.\r\n     *\r\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\r\n     *\r\n     * @param request {@link AuthorizationCodeRequest}\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenByCode(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\r\n        const atbcMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenByCode, correlationId);\r\n        preflightCheck(this.initialized, atbcMeasurement);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_BY_CODE_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, request);\r\n        atbcMeasurement.add({ scenarioId: request.scenarioId });\r\n        try {\r\n            if (request.code && request.nativeAccountId) {\r\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.spaCodeAndNativeAccountIdPresent);\r\n            }\r\n            else if (request.code) {\r\n                const hybridAuthCode = request.code;\r\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\r\n                if (!response) {\r\n                    this.logger.verbose(\"Initiating new acquireTokenByCode request\", correlationId);\r\n                    response = this.acquireTokenByCodeAsync({\r\n                        ...request,\r\n                        correlationId,\r\n                    })\r\n                        .then((result) => {\r\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, result);\r\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\r\n                        atbcMeasurement.end({\r\n                            success: true,\r\n                            isNativeBroker: result.fromNativeBroker,\r\n                            accessTokenSize: result.accessToken.length,\r\n                            idTokenSize: result.idToken.length,\r\n                            accountType: getAccountType(result.account),\r\n                        });\r\n                        return result;\r\n                    })\r\n                        .catch((error) => {\r\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\r\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, null, error);\r\n                        atbcMeasurement.end({\r\n                            success: false,\r\n                        }, error);\r\n                        throw error;\r\n                    });\r\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"Existing acquireTokenByCode request found\", correlationId);\r\n                    atbcMeasurement.discard();\r\n                }\r\n                return await response;\r\n            }\r\n            else if (request.nativeAccountId) {\r\n                if (this.canUseNative(request, request.nativeAccountId)) {\r\n                    const result = await this.acquireTokenNative({\r\n                        ...request,\r\n                        correlationId,\r\n                    }, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.ApiId.acquireTokenByCode, request.nativeAccountId).catch((e) => {\r\n                        // If native token acquisition fails for availability reasons fallback to standard flow\r\n                        if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError &&\r\n                            (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.isFatalNativeAuthError)(e)) {\r\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                        }\r\n                        throw e;\r\n                    });\r\n                    atbcMeasurement.end({\r\n                        accountType: getAccountType(result.account),\r\n                        success: true,\r\n                    });\r\n                    return result;\r\n                }\r\n                else {\r\n                    throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.unableToAcquireTokenFromNativePlatform);\r\n                }\r\n            }\r\n            else {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.authCodeOrNativeAccountIdRequired);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, null, e);\r\n            atbcMeasurement.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\r\n     * @param request\r\n     * @returns Result of the operation to redeem the authorization code\r\n     */\r\n    async acquireTokenByCodeAsync(request) {\r\n        this.logger.trace(\"acquireTokenByCodeAsync called\", request.correlationId);\r\n        this.acquireTokenByCodeAsyncMeasurement =\r\n            this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenByCodeAsync, request.correlationId);\r\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(request.correlationId);\r\n        const silentTokenResult = await silentAuthCodeClient\r\n            .acquireToken(request)\r\n            .then((response) => {\r\n            this.acquireTokenByCodeAsyncMeasurement?.end({\r\n                success: true,\r\n                fromCache: response.fromCache,\r\n                isNativeBroker: response.fromNativeBroker,\r\n            });\r\n            return response;\r\n        })\r\n            .catch((tokenRenewalError) => {\r\n            this.acquireTokenByCodeAsyncMeasurement?.end({\r\n                success: false,\r\n            }, tokenRenewalError);\r\n            throw tokenRenewalError;\r\n        })\r\n            .finally(() => {\r\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        });\r\n        return silentTokenResult;\r\n    }\r\n    /**\r\n     * Attempt to acquire an access token from the cache\r\n     * @param silentCacheClient SilentCacheClient\r\n     * @param commonRequest CommonSilentFlowRequest\r\n     * @param silentRequest SilentRequest\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    async acquireTokenFromCache(commonRequest, cacheLookupPolicy) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenFromCache, commonRequest.correlationId);\r\n        switch (cacheLookupPolicy) {\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.Default:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.AccessToken:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.AccessTokenAndRefreshToken:\r\n                const silentCacheClient = this.createSilentCacheClient(commonRequest.correlationId);\r\n                return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(silentCacheClient.acquireToken.bind(silentCacheClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.SilentCacheClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\r\n            default:\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.ClientAuthErrorCodes.tokenRefreshRequired);\r\n        }\r\n    }\r\n    /**\r\n     * Attempt to acquire an access token via a refresh token\r\n     * @param commonRequest CommonSilentFlowRequest\r\n     * @param cacheLookupPolicy CacheLookupPolicy\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    async acquireTokenByRefreshToken(commonRequest, cacheLookupPolicy) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenByRefreshToken, commonRequest.correlationId);\r\n        switch (cacheLookupPolicy) {\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.Default:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.AccessTokenAndRefreshToken:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.RefreshToken:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.RefreshTokenAndNetwork:\r\n                const silentRefreshClient = this.createSilentRefreshClient(commonRequest.correlationId);\r\n                return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(silentRefreshClient.acquireToken.bind(silentRefreshClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.SilentRefreshClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\r\n            default:\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.ClientAuthErrorCodes.tokenRefreshRequired);\r\n        }\r\n    }\r\n    /**\r\n     * Attempt to acquire an access token via an iframe\r\n     * @param request CommonSilentFlowRequest\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    async acquireTokenBySilentIframe(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenBySilentIframe, request.correlationId);\r\n        const silentIframeClient = this.createSilentIframeClient(request.correlationId);\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(silentIframeClient.acquireToken.bind(silentIframeClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.SilentIframeClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(request);\r\n    }\r\n    // #endregion\r\n    // #region Logout\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest\r\n     * @deprecated\r\n     */\r\n    async logout(logoutRequest) {\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\", correlationId);\r\n        return this.logoutRedirect({\r\n            correlationId,\r\n            ...logoutRequest,\r\n        });\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logoutRedirect(logoutRequest) {\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectPreflightCheck)(this.initialized, this.config);\r\n        this.browserStorage.setInteractionInProgress(true);\r\n        const redirectClient = this.createRedirectClient(correlationId);\r\n        return redirectClient.logout(logoutRequest);\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logoutPopup(logoutRequest) {\r\n        try {\r\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n            (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.preflightCheck)(this.initialized);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n            const popupClient = this.createPopupClient(correlationId);\r\n            return popupClient.logout(logoutRequest);\r\n        }\r\n        catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    /**\r\n     * Creates a cache interaction client to clear broswer cache.\r\n     * @param logoutRequest\r\n     */\r\n    async clearCache(logoutRequest) {\r\n        if (!this.isBrowserEnvironment) {\r\n            this.logger.info(\"in non-browser environment, returning early.\");\r\n            return;\r\n        }\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        const cacheClient = this.createSilentCacheClient(correlationId);\r\n        return cacheClient.logout(logoutRequest);\r\n    }\r\n    // #endregion\r\n    // #region Account APIs\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_13__.getAllAccounts)(this.logger, this.browserStorage, this.isBrowserEnvironment, accountFilter);\r\n    }\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_13__.getAccount)(accountFilter, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param username\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByUsername(username) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_13__.getAccountByUsername)(username, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByHomeId(homeAccountId) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_13__.getAccountByHomeId)(homeAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByLocalId(localAccountId) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_13__.getAccountByLocalId)(localAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_13__.setActiveAccount)(account, this.browserStorage);\r\n    }\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount() {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_13__.getActiveAccount)(this.browserStorage);\r\n    }\r\n    // #endregion\r\n    /**\r\n     * Hydrates the cache with the tokens from an AuthenticationResult\r\n     * @param result\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async hydrateCache(result, request) {\r\n        this.logger.verbose(\"hydrateCache called\");\r\n        // Account gets saved to browser storage regardless of native or not\r\n        const accountEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.AccountEntity.createFromAccountInfo(result.account, result.cloudGraphHostName, result.msGraphHost);\r\n        this.browserStorage.setAccount(accountEntity);\r\n        if (result.fromNativeBroker) {\r\n            this.logger.verbose(\"Response was from native broker, storing in-memory\");\r\n            // Tokens from native broker are stored in-memory\r\n            return this.nativeInternalStorage.hydrateCache(result, request);\r\n        }\r\n        else {\r\n            return this.browserStorage.hydrateCache(result, request);\r\n        }\r\n    }\r\n    // #region Helpers\r\n    /**\r\n     * Acquire a token from native device (e.g. WAM)\r\n     * @param request\r\n     */\r\n    async acquireTokenNative(request, apiId, accountId) {\r\n        this.logger.trace(\"acquireTokenNative called\");\r\n        if (!this.nativeExtensionProvider) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.nativeConnectionNotEstablished);\r\n        }\r\n        const nativeClient = new _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_9__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, apiId, this.performanceClient, this.nativeExtensionProvider, accountId || this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\r\n        return nativeClient.acquireToken(request);\r\n    }\r\n    /**\r\n     * Returns boolean indicating if this request can use the native broker\r\n     * @param request\r\n     */\r\n    canUseNative(request, accountId) {\r\n        this.logger.trace(\"canUseNative called\");\r\n        if (!_broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme)) {\r\n            this.logger.trace(\"canUseNative: isNativeAvailable returned false, returning false\");\r\n            return false;\r\n        }\r\n        if (request.prompt) {\r\n            switch (request.prompt) {\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PromptValue.NONE:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PromptValue.CONSENT:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PromptValue.LOGIN:\r\n                    this.logger.trace(\"canUseNative: prompt is compatible with native flow\");\r\n                    break;\r\n                default:\r\n                    this.logger.trace(`canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`);\r\n                    return false;\r\n            }\r\n        }\r\n        if (!accountId && !this.getNativeAccountId(request)) {\r\n            this.logger.trace(\"canUseNative: nativeAccountId is not available, returning false\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Get the native accountId from the account\r\n     * @param request\r\n     * @returns\r\n     */\r\n    getNativeAccountId(request) {\r\n        const account = request.account ||\r\n            this.getAccount({\r\n                loginHint: request.loginHint,\r\n                sid: request.sid,\r\n            }) ||\r\n            this.getActiveAccount();\r\n        return (account && account.nativeAccountId) || \"\";\r\n    }\r\n    /**\r\n     * Returns new instance of the Popup Interaction Client\r\n     * @param correlationId\r\n     */\r\n    createPopupClient(correlationId) {\r\n        return new _interaction_client_PopupClient_mjs__WEBPACK_IMPORTED_MODULE_14__.PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Redirect Interaction Client\r\n     * @param correlationId\r\n     */\r\n    createRedirectClient(correlationId) {\r\n        return new _interaction_client_RedirectClient_mjs__WEBPACK_IMPORTED_MODULE_15__.RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent Iframe Interaction Client\r\n     * @param correlationId\r\n     */\r\n    createSilentIframeClient(correlationId) {\r\n        return new _interaction_client_SilentIframeClient_mjs__WEBPACK_IMPORTED_MODULE_16__.SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.ApiId.ssoSilent, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent Cache Interaction Client\r\n     */\r\n    createSilentCacheClient(correlationId) {\r\n        return new _interaction_client_SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_17__.SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent Refresh Interaction Client\r\n     */\r\n    createSilentRefreshClient(correlationId) {\r\n        return new _interaction_client_SilentRefreshClient_mjs__WEBPACK_IMPORTED_MODULE_18__.SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent AuthCode Interaction Client\r\n     */\r\n    createSilentAuthCodeClient(correlationId) {\r\n        return new _interaction_client_SilentAuthCodeClient_mjs__WEBPACK_IMPORTED_MODULE_19__.SilentAuthCodeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.ApiId.acquireTokenByCode, this.performanceClient, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(callback, eventTypes) {\r\n        return this.eventHandler.addEventCallback(callback, eventTypes);\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        this.eventHandler.removeEventCallback(callbackId);\r\n    }\r\n    /**\r\n     * Registers a callback to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.blockNonBrowserEnvironment)();\r\n        return this.performanceClient.addPerformanceCallback(callback);\r\n    }\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId) {\r\n        return this.performanceClient.removePerformanceCallback(callbackId);\r\n    }\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents() {\r\n        if (typeof window === \"undefined\") {\r\n            return;\r\n        }\r\n        if (!this.listeningToStorageEvents) {\r\n            this.logger.verbose(\"Adding account storage listener.\");\r\n            this.listeningToStorageEvents = true;\r\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\r\n        }\r\n        else {\r\n            this.logger.verbose(\"Account storage listener already registered.\");\r\n        }\r\n    }\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents() {\r\n        if (typeof window === \"undefined\") {\r\n            return;\r\n        }\r\n        if (this.listeningToStorageEvents) {\r\n            this.logger.verbose(\"Removing account storage listener.\");\r\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\r\n            this.listeningToStorageEvents = false;\r\n        }\r\n        else {\r\n            this.logger.verbose(\"No account storage listener registered.\");\r\n        }\r\n    }\r\n    /**\r\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\r\n     */\r\n    handleAccountCacheChange(e) {\r\n        try {\r\n            // Handle active account filter change\r\n            if (e.key?.includes(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS)) {\r\n                // This event has no payload, it only signals cross-tab app instances that the results of calling getActiveAccount() will have changed\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACTIVE_ACCOUNT_CHANGED);\r\n            }\r\n            // Handle account object change\r\n            const cacheValue = e.newValue || e.oldValue;\r\n            if (!cacheValue) {\r\n                return;\r\n            }\r\n            const parsedValue = JSON.parse(cacheValue);\r\n            if (typeof parsedValue !== \"object\" ||\r\n                !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.AccountEntity.isAccountEntity(parsedValue)) {\r\n                return;\r\n            }\r\n            const accountEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.CacheManager.toObject(new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.AccountEntity(), parsedValue);\r\n            const accountInfo = accountEntity.getAccountInfo();\r\n            if (!e.oldValue && e.newValue) {\r\n                this.logger.info(\"Account was added to cache in a different window\");\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACCOUNT_ADDED, undefined, accountInfo);\r\n            }\r\n            else if (!e.newValue && e.oldValue) {\r\n                this.logger.info(\"Account was removed from cache in a different window\");\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACCOUNT_REMOVED, undefined, accountInfo);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache() {\r\n        return this.tokenCache;\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku, version) {\r\n        // Validate the SKU passed in is one we expect\r\n        this.browserStorage.setWrapperMetadata(sku, version);\r\n    }\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient) {\r\n        this.navigationClient = navigationClient;\r\n    }\r\n    /**\r\n     * Returns the configuration object\r\n     */\r\n    getConfiguration() {\r\n        return this.config;\r\n    }\r\n    /**\r\n     * Returns the performance client\r\n     */\r\n    getPerformanceClient() {\r\n        return this.performanceClient;\r\n    }\r\n    /**\r\n     * Returns the browser env indicator\r\n     */\r\n    isBrowserEnv() {\r\n        return this.isBrowserEnvironment;\r\n    }\r\n    /**\r\n     * Generates a correlation id for a request if none is provided.\r\n     *\r\n     * @protected\r\n     * @param {?Partial<BaseAuthRequest>} [request]\r\n     * @returns {string}\r\n     */\r\n    getRequestCorrelationId(request) {\r\n        if (request?.correlationId) {\r\n            return request.correlationId;\r\n        }\r\n        if (this.isBrowserEnvironment) {\r\n            return (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_20__.createNewGuid)();\r\n        }\r\n        /*\r\n         * Included for fallback for non-browser environments,\r\n         * and to ensure this method always returns a string.\r\n         */\r\n        return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\r\n    }\r\n    // #endregion\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async loginRedirect(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"loginRedirect called\", correlationId);\r\n        return this.acquireTokenRedirect({\r\n            correlationId,\r\n            ...(request || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_REQUEST),\r\n        });\r\n    }\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"loginPopup called\", correlationId);\r\n        return this.acquireTokenPopup({\r\n            correlationId,\r\n            ...(request || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_REQUEST),\r\n        });\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async acquireTokenSilent(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const atsMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenSilent, correlationId);\r\n        atsMeasurement.add({\r\n            cacheLookupPolicy: request.cacheLookupPolicy,\r\n            scenarioId: request.scenarioId,\r\n        });\r\n        preflightCheck(this.initialized, atsMeasurement);\r\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\r\n        const account = request.account || this.getActiveAccount();\r\n        if (!account) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.noAccountError);\r\n        }\r\n        atsMeasurement.add({ accountType: getAccountType(account) });\r\n        const thumbprint = {\r\n            clientId: this.config.auth.clientId,\r\n            authority: request.authority || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING,\r\n            scopes: request.scopes,\r\n            homeAccountIdentifier: account.homeAccountId,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n            shrOptions: request.shrOptions,\r\n        };\r\n        const silentRequestKey = JSON.stringify(thumbprint);\r\n        const cachedResponse = this.activeSilentTokenRequests.get(silentRequestKey);\r\n        if (typeof cachedResponse === \"undefined\") {\r\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", correlationId);\r\n            const response = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.acquireTokenSilentAsync.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenSilentAsync, this.logger, this.performanceClient, correlationId)({\r\n                ...request,\r\n                correlationId,\r\n            }, account)\r\n                .then((result) => {\r\n                this.activeSilentTokenRequests.delete(silentRequestKey);\r\n                atsMeasurement.end({\r\n                    success: true,\r\n                    fromCache: result.fromCache,\r\n                    isNativeBroker: result.fromNativeBroker,\r\n                    cacheLookupPolicy: request.cacheLookupPolicy,\r\n                    accessTokenSize: result.accessToken.length,\r\n                    idTokenSize: result.idToken.length,\r\n                });\r\n                return result;\r\n            })\r\n                .catch((error) => {\r\n                this.activeSilentTokenRequests.delete(silentRequestKey);\r\n                atsMeasurement.end({\r\n                    success: false,\r\n                }, error);\r\n                throw error;\r\n            });\r\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\r\n            return {\r\n                ...(await response),\r\n                state: request.state,\r\n            };\r\n        }\r\n        else {\r\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", correlationId);\r\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\r\n            atsMeasurement.discard();\r\n            return {\r\n                ...(await cachedResponse),\r\n                state: request.state,\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\r\n     * @param {@link (SilentRequest:type)}\r\n     * @param {@link (AccountInfo:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\r\n     */\r\n    async acquireTokenSilentAsync(request, account) {\r\n        const trackPageVisibility = () => this.trackPageVisibility(request.correlationId);\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, request);\r\n        if (request.correlationId) {\r\n            this.performanceClient.incrementFields({ visibilityChangeCount: 0 }, request.correlationId);\r\n        }\r\n        document.addEventListener(\"visibilitychange\", trackPageVisibility);\r\n        const silentRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(_request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_21__.initializeSilentRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.InitializeSilentRequest, this.logger, this.performanceClient, request.correlationId)(request, account, this.config, this.performanceClient, this.logger);\r\n        const cacheLookupPolicy = request.cacheLookupPolicy || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.Default;\r\n        const result = this.acquireTokenSilentNoIframe(silentRequest, cacheLookupPolicy).catch(async (refreshTokenError) => {\r\n            const shouldTryToResolveSilently = checkIfRefreshTokenErrorCanBeResolvedSilently(refreshTokenError, cacheLookupPolicy);\r\n            if (shouldTryToResolveSilently) {\r\n                if (!this.activeIframeRequest) {\r\n                    let _resolve;\r\n                    // Always set the active request tracker immediately after checking it to prevent races\r\n                    this.activeIframeRequest = [\r\n                        new Promise((resolve) => {\r\n                            _resolve = resolve;\r\n                        }),\r\n                        silentRequest.correlationId,\r\n                    ];\r\n                    this.logger.verbose(\"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\", silentRequest.correlationId);\r\n                    return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.acquireTokenBySilentIframe.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenBySilentIframe, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest)\r\n                        .then((iframeResult) => {\r\n                        _resolve(true);\r\n                        return iframeResult;\r\n                    })\r\n                        .catch((e) => {\r\n                        _resolve(false);\r\n                        throw e;\r\n                    })\r\n                        .finally(() => {\r\n                        this.activeIframeRequest = undefined;\r\n                    });\r\n                }\r\n                else if (cacheLookupPolicy !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.Skip) {\r\n                    const [activePromise, activeCorrelationId] = this.activeIframeRequest;\r\n                    this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${activeCorrelationId}`, silentRequest.correlationId);\r\n                    const awaitConcurrentIframeMeasure = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AwaitConcurrentIframe, silentRequest.correlationId);\r\n                    awaitConcurrentIframeMeasure.add({\r\n                        awaitIframeCorrelationId: activeCorrelationId,\r\n                    });\r\n                    const activePromiseResult = await activePromise;\r\n                    awaitConcurrentIframeMeasure.end({\r\n                        success: activePromiseResult,\r\n                    });\r\n                    if (activePromiseResult) {\r\n                        this.logger.verbose(`Parallel iframe request with correlationId: ${activeCorrelationId} succeeded. Retrying cache and/or RT redemption`, silentRequest.correlationId);\r\n                        // Retry cache lookup and/or RT exchange after iframe completes\r\n                        return this.acquireTokenSilentNoIframe(silentRequest, cacheLookupPolicy);\r\n                    }\r\n                    else {\r\n                        this.logger.info(`Iframe request with correlationId: ${activeCorrelationId} failed. Interaction is required.`);\r\n                        // If previous iframe request failed, it's unlikely to succeed this time. Throw original error.\r\n                        throw refreshTokenError;\r\n                    }\r\n                }\r\n                else {\r\n                    // Cache policy set to skip and another iframe request is already in progress\r\n                    this.logger.warning(\"Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.\", silentRequest.correlationId);\r\n                    return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.acquireTokenBySilentIframe.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenBySilentIframe, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\r\n                }\r\n            }\r\n            else {\r\n                // Error cannot be silently resolved or iframe renewal is not allowed, interaction required\r\n                throw refreshTokenError;\r\n            }\r\n        });\r\n        return result\r\n            .then((response) => {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, response);\r\n            if (request.correlationId) {\r\n                this.performanceClient.addFields({\r\n                    fromCache: response.fromCache,\r\n                    isNativeBroker: response.fromNativeBroker,\r\n                }, request.correlationId);\r\n            }\r\n            return response;\r\n        })\r\n            .catch((tokenRenewalError) => {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, null, tokenRenewalError);\r\n            throw tokenRenewalError;\r\n        })\r\n            .finally(() => {\r\n            document.removeEventListener(\"visibilitychange\", trackPageVisibility);\r\n        });\r\n    }\r\n    /**\r\n     * AcquireTokenSilent without the iframe fallback. This is used to enable the correct fallbacks in cases where there's a potential for multiple silent requests to be made in parallel and prevent those requests from making concurrent iframe requests.\r\n     * @param silentRequest\r\n     * @param cacheLookupPolicy\r\n     * @returns\r\n     */\r\n    async acquireTokenSilentNoIframe(silentRequest, cacheLookupPolicy) {\r\n        if (_broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, silentRequest.authenticationScheme) &&\r\n            silentRequest.account.nativeAccountId) {\r\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from native platform\");\r\n            return this.acquireTokenNative(silentRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.ApiId.acquireTokenSilent_silentFlow).catch(async (e) => {\r\n                // If native token acquisition fails for availability reasons fallback to web flow\r\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeAuthError && (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.isFatalNativeAuthError)(e)) {\r\n                    this.logger.verbose(\"acquireTokenSilent - native platform unavailable, falling back to web flow\");\r\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\r\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\r\n                    throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.ClientAuthErrorCodes.tokenRefreshRequired);\r\n                }\r\n                throw e;\r\n            });\r\n        }\r\n        else {\r\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from web flow\");\r\n            return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.acquireTokenFromCache.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenFromCache, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest, cacheLookupPolicy).catch((cacheError) => {\r\n                if (cacheLookupPolicy === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheLookupPolicy.AccessToken) {\r\n                    throw cacheError;\r\n                }\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_NETWORK_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent, silentRequest);\r\n                return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.acquireTokenByRefreshToken.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.AcquireTokenByRefreshToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest, cacheLookupPolicy);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Determines whether an error thrown by the refresh token endpoint can be resolved without interaction\r\n * @param refreshTokenError\r\n * @param silentRequest\r\n * @param cacheLookupPolicy\r\n * @returns\r\n */\r\nfunction checkIfRefreshTokenErrorCanBeResolvedSilently(refreshTokenError, cacheLookupPolicy) {\r\n    const noInteractionRequired = !(refreshTokenError instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError &&\r\n        // For refresh token errors, bad_token does not always require interaction (silently resolvable)\r\n        refreshTokenError.subError !==\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthErrorCodes.badToken);\r\n    // Errors that result when the refresh token needs to be replaced\r\n    const refreshTokenRefreshRequired = refreshTokenError.errorCode === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserConstants.INVALID_GRANT_ERROR ||\r\n        refreshTokenError.errorCode ===\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.ClientAuthErrorCodes.tokenRefreshRequired;\r\n    // Errors that may be resolved before falling back to interaction (through iframe renewal)\r\n    const isSilentlyResolvable = (noInteractionRequired && refreshTokenRefreshRequired) ||\r\n        refreshTokenError.errorCode ===\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthErrorCodes.noTokensFound ||\r\n        refreshTokenError.errorCode ===\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthErrorCodes.refreshTokenExpired;\r\n    // Only these policies allow for an iframe renewal attempt\r\n    const tryIframeRenewal = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.iFrameRenewalPolicies.includes(cacheLookupPolicy);\r\n    return isSilentlyResolvable && tryIframeRenewal;\r\n}\n\n\n//# sourceMappingURL=StandardController.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/controllers/UnknownOperatingContextController.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/controllers/UnknownOperatingContextController.mjs ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnknownOperatingContextController: function() { return /* binding */ UnknownOperatingContextController; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cache/BrowserCacheManager.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\");\n/* harmony import */ var _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/CryptoOps.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * UnknownOperatingContextController class\r\n *\r\n * - Until initialize method is called, this controller is the default\r\n * - AFter initialize method is called, this controller will be swapped out for the appropriate controller\r\n * if the operating context can be determined; otherwise this controller will continued be used\r\n *\r\n * - Why do we have this?  We don't want to dynamically import (download) all of the code in StandardController if we don't need to.\r\n *\r\n * - Only includes implementation for getAccounts and handleRedirectPromise\r\n *   - All other methods are will throw initialization error (because either initialize method or the factory method were not used)\r\n *   - This controller is necessary for React Native wrapper, server side rendering and any other scenario where we don't have a DOM\r\n *\r\n */\r\nclass UnknownOperatingContextController {\r\n    constructor(operatingContext) {\r\n        // Flag representing whether or not the initialize API has been called and completed\r\n        this.initialized = false;\r\n        this.operatingContext = operatingContext;\r\n        this.isBrowserEnvironment =\r\n            this.operatingContext.isBrowserEnvironment();\r\n        this.config = operatingContext.getConfig();\r\n        this.logger = operatingContext.getLogger();\r\n        // Initialize performance client\r\n        this.performanceClient = this.config.telemetry.client;\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = this.isBrowserEnvironment\r\n            ? new _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_0__.CryptoOps(this.logger, this.performanceClient)\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CRYPTO_IMPLEMENTATION;\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = this.isBrowserEnvironment\r\n            ? new _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger, undefined, this.performanceClient)\r\n            : (0,_cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_BROWSER_CACHE_MANAGER)(this.config.auth.clientId, this.logger);\r\n    }\r\n    getBrowserStorage() {\r\n        return this.browserStorage;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    getAccount(accountFilter) {\r\n        return null;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    getAccountByHomeId(homeAccountId) {\r\n        return null;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    getAccountByLocalId(localAccountId) {\r\n        return null;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    getAccountByUsername(username) {\r\n        return null;\r\n    }\r\n    getAllAccounts() {\r\n        return [];\r\n    }\r\n    initialize() {\r\n        this.initialized = true;\r\n        return Promise.resolve();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    acquireTokenPopup(request) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    acquireTokenRedirect(request) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return Promise.resolve();\r\n    }\r\n    acquireTokenSilent(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    silentRequest) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    acquireTokenByCode(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    request) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    acquireTokenNative(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    request, \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    apiId, \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    accountId) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    acquireTokenByRefreshToken(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    commonRequest, \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    silentRequest) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    addEventCallback(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    callback, \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    eventTypes) {\r\n        return null;\r\n    }\r\n    removeEventCallback(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    callbackId) { }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    addPerformanceCallback(callback) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return \"\";\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removePerformanceCallback(callbackId) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return true;\r\n    }\r\n    enableAccountStorageEvents() {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n    }\r\n    disableAccountStorageEvents() {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n    }\r\n    handleRedirectPromise(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    hash) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        return Promise.resolve(null);\r\n    }\r\n    loginPopup(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    request) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    loginRedirect(request) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    logout(logoutRequest) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    logoutRedirect(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    logoutRequest) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    logoutPopup(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    logoutRequest) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    ssoSilent(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    request) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    getTokenCache() {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    setLogger(logger) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    setActiveAccount(account) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n    }\r\n    getActiveAccount() {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return null;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    initializeWrapperLibrary(sku, version) {\r\n        this.browserStorage.setWrapperMetadata(sku, version);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    setNavigationClient(navigationClient) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n    }\r\n    getConfiguration() {\r\n        return this.config;\r\n    }\r\n    isBrowserEnv() {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return true;\r\n    }\r\n    getBrowserCrypto() {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    getPerformanceClient() {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    getRedirectResponse() {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n        return {};\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    async clearCache(logoutRequest) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    async hydrateCache(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    result, \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    request) {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNonBrowserEnvironment)();\r\n    }\r\n}\n\n\n//# sourceMappingURL=UnknownOperatingContextController.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NvbnRyb2xsZXJzL1Vua25vd25PcGVyYXRpbmdDb250ZXh0Q29udHJvbGxlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNhO0FBQzhEO0FBQzJCO0FBQ2xEO0FBQ2tEOztBQUV0RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDREQUFTO0FBQzNCLGNBQWMscUZBQTZCO0FBQzNDO0FBQ0E7QUFDQSxrQkFBa0IsK0VBQW1CO0FBQ3JDLGNBQWMsNkZBQTZCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQyxRQUFRLG1GQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0ZBQTZCO0FBQ3JDLFFBQVEsbUZBQTBCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQyxRQUFRLG1GQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQyxRQUFRLG1GQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQyxRQUFRLG1GQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQyxRQUFRLG1GQUEwQjtBQUNsQztBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQyxRQUFRLG1GQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0ZBQTZCO0FBQ3JDLFFBQVEsbUZBQTBCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQyxRQUFRLG1GQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0ZBQTZCO0FBQ3JDLFFBQVEsbUZBQTBCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0ZBQTZCO0FBQ3JDLFFBQVEsbUZBQTBCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBLFFBQVEsc0ZBQTZCO0FBQ3JDLFFBQVEsbUZBQTBCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQyxRQUFRLG1GQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBNkI7QUFDckMsUUFBUSxtRkFBMEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNGQUE2QjtBQUNyQyxRQUFRLG1GQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0ZBQTZCO0FBQ3JDLFFBQVEsbUZBQTBCO0FBQ2xDO0FBQ0E7O0FBRTZDO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY29udHJvbGxlcnMvVW5rbm93bk9wZXJhdGluZ0NvbnRleHRDb250cm9sbGVyLm1qcz85MDE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgREVGQVVMVF9DUllQVE9fSU1QTEVNRU5UQVRJT04gfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBCcm93c2VyQ2FjaGVNYW5hZ2VyLCBERUZBVUxUX0JST1dTRVJfQ0FDSEVfTUFOQUdFUiB9IGZyb20gJy4uL2NhY2hlL0Jyb3dzZXJDYWNoZU1hbmFnZXIubWpzJztcbmltcG9ydCB7IENyeXB0b09wcyB9IGZyb20gJy4uL2NyeXB0by9DcnlwdG9PcHMubWpzJztcbmltcG9ydCB7IGJsb2NrQVBJQ2FsbHNCZWZvcmVJbml0aWFsaXplLCBibG9ja05vbkJyb3dzZXJFbnZpcm9ubWVudCB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJVdGlscy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFVua25vd25PcGVyYXRpbmdDb250ZXh0Q29udHJvbGxlciBjbGFzc1xyXG4gKlxyXG4gKiAtIFVudGlsIGluaXRpYWxpemUgbWV0aG9kIGlzIGNhbGxlZCwgdGhpcyBjb250cm9sbGVyIGlzIHRoZSBkZWZhdWx0XHJcbiAqIC0gQUZ0ZXIgaW5pdGlhbGl6ZSBtZXRob2QgaXMgY2FsbGVkLCB0aGlzIGNvbnRyb2xsZXIgd2lsbCBiZSBzd2FwcGVkIG91dCBmb3IgdGhlIGFwcHJvcHJpYXRlIGNvbnRyb2xsZXJcclxuICogaWYgdGhlIG9wZXJhdGluZyBjb250ZXh0IGNhbiBiZSBkZXRlcm1pbmVkOyBvdGhlcndpc2UgdGhpcyBjb250cm9sbGVyIHdpbGwgY29udGludWVkIGJlIHVzZWRcclxuICpcclxuICogLSBXaHkgZG8gd2UgaGF2ZSB0aGlzPyAgV2UgZG9uJ3Qgd2FudCB0byBkeW5hbWljYWxseSBpbXBvcnQgKGRvd25sb2FkKSBhbGwgb2YgdGhlIGNvZGUgaW4gU3RhbmRhcmRDb250cm9sbGVyIGlmIHdlIGRvbid0IG5lZWQgdG8uXHJcbiAqXHJcbiAqIC0gT25seSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBmb3IgZ2V0QWNjb3VudHMgYW5kIGhhbmRsZVJlZGlyZWN0UHJvbWlzZVxyXG4gKiAgIC0gQWxsIG90aGVyIG1ldGhvZHMgYXJlIHdpbGwgdGhyb3cgaW5pdGlhbGl6YXRpb24gZXJyb3IgKGJlY2F1c2UgZWl0aGVyIGluaXRpYWxpemUgbWV0aG9kIG9yIHRoZSBmYWN0b3J5IG1ldGhvZCB3ZXJlIG5vdCB1c2VkKVxyXG4gKiAgIC0gVGhpcyBjb250cm9sbGVyIGlzIG5lY2Vzc2FyeSBmb3IgUmVhY3QgTmF0aXZlIHdyYXBwZXIsIHNlcnZlciBzaWRlIHJlbmRlcmluZyBhbmQgYW55IG90aGVyIHNjZW5hcmlvIHdoZXJlIHdlIGRvbid0IGhhdmUgYSBET01cclxuICpcclxuICovXHJcbmNsYXNzIFVua25vd25PcGVyYXRpbmdDb250ZXh0Q29udHJvbGxlciB7XHJcbiAgICBjb25zdHJ1Y3RvcihvcGVyYXRpbmdDb250ZXh0KSB7XHJcbiAgICAgICAgLy8gRmxhZyByZXByZXNlbnRpbmcgd2hldGhlciBvciBub3QgdGhlIGluaXRpYWxpemUgQVBJIGhhcyBiZWVuIGNhbGxlZCBhbmQgY29tcGxldGVkXHJcbiAgICAgICAgdGhpcy5pbml0aWFsaXplZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMub3BlcmF0aW5nQ29udGV4dCA9IG9wZXJhdGluZ0NvbnRleHQ7XHJcbiAgICAgICAgdGhpcy5pc0Jyb3dzZXJFbnZpcm9ubWVudCA9XHJcbiAgICAgICAgICAgIHRoaXMub3BlcmF0aW5nQ29udGV4dC5pc0Jyb3dzZXJFbnZpcm9ubWVudCgpO1xyXG4gICAgICAgIHRoaXMuY29uZmlnID0gb3BlcmF0aW5nQ29udGV4dC5nZXRDb25maWcoKTtcclxuICAgICAgICB0aGlzLmxvZ2dlciA9IG9wZXJhdGluZ0NvbnRleHQuZ2V0TG9nZ2VyKCk7XHJcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBwZXJmb3JtYW5jZSBjbGllbnRcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50ID0gdGhpcy5jb25maWcudGVsZW1ldHJ5LmNsaWVudDtcclxuICAgICAgICAvLyBJbml0aWFsaXplIHRoZSBjcnlwdG8gY2xhc3MuXHJcbiAgICAgICAgdGhpcy5icm93c2VyQ3J5cHRvID0gdGhpcy5pc0Jyb3dzZXJFbnZpcm9ubWVudFxyXG4gICAgICAgICAgICA/IG5ldyBDcnlwdG9PcHModGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQpXHJcbiAgICAgICAgICAgIDogREVGQVVMVF9DUllQVE9fSU1QTEVNRU5UQVRJT047XHJcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSB0aGUgYnJvd3NlciBzdG9yYWdlIGNsYXNzLlxyXG4gICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2UgPSB0aGlzLmlzQnJvd3NlckVudmlyb25tZW50XHJcbiAgICAgICAgICAgID8gbmV3IEJyb3dzZXJDYWNoZU1hbmFnZXIodGhpcy5jb25maWcuYXV0aC5jbGllbnRJZCwgdGhpcy5jb25maWcuY2FjaGUsIHRoaXMuYnJvd3NlckNyeXB0bywgdGhpcy5sb2dnZXIsIHVuZGVmaW5lZCwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudClcclxuICAgICAgICAgICAgOiBERUZBVUxUX0JST1dTRVJfQ0FDSEVfTUFOQUdFUih0aGlzLmNvbmZpZy5hdXRoLmNsaWVudElkLCB0aGlzLmxvZ2dlcik7XHJcbiAgICB9XHJcbiAgICBnZXRCcm93c2VyU3RvcmFnZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5icm93c2VyU3RvcmFnZTtcclxuICAgIH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGdldEFjY291bnQoYWNjb3VudEZpbHRlcikge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgZ2V0QWNjb3VudEJ5SG9tZUlkKGhvbWVBY2NvdW50SWQpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGdldEFjY291bnRCeUxvY2FsSWQobG9jYWxBY2NvdW50SWQpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGdldEFjY291bnRCeVVzZXJuYW1lKHVzZXJuYW1lKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICBnZXRBbGxBY2NvdW50cygpIHtcclxuICAgICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbiAgICBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgIH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGFjcXVpcmVUb2tlblBvcHVwKHJlcXVlc3QpIHtcclxuICAgICAgICBibG9ja0FQSUNhbGxzQmVmb3JlSW5pdGlhbGl6ZSh0aGlzLmluaXRpYWxpemVkKTtcclxuICAgICAgICBibG9ja05vbkJyb3dzZXJFbnZpcm9ubWVudCgpO1xyXG4gICAgICAgIHJldHVybiB7fTtcclxuICAgIH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGFjcXVpcmVUb2tlblJlZGlyZWN0KHJlcXVlc3QpIHtcclxuICAgICAgICBibG9ja0FQSUNhbGxzQmVmb3JlSW5pdGlhbGl6ZSh0aGlzLmluaXRpYWxpemVkKTtcclxuICAgICAgICBibG9ja05vbkJyb3dzZXJFbnZpcm9ubWVudCgpO1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgIH1cclxuICAgIGFjcXVpcmVUb2tlblNpbGVudChcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIHNpbGVudFJlcXVlc3QpIHtcclxuICAgICAgICBibG9ja0FQSUNhbGxzQmVmb3JlSW5pdGlhbGl6ZSh0aGlzLmluaXRpYWxpemVkKTtcclxuICAgICAgICBibG9ja05vbkJyb3dzZXJFbnZpcm9ubWVudCgpO1xyXG4gICAgICAgIHJldHVybiB7fTtcclxuICAgIH1cclxuICAgIGFjcXVpcmVUb2tlbkJ5Q29kZShcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIHJlcXVlc3QpIHtcclxuICAgICAgICBibG9ja0FQSUNhbGxzQmVmb3JlSW5pdGlhbGl6ZSh0aGlzLmluaXRpYWxpemVkKTtcclxuICAgICAgICBibG9ja05vbkJyb3dzZXJFbnZpcm9ubWVudCgpO1xyXG4gICAgICAgIHJldHVybiB7fTtcclxuICAgIH1cclxuICAgIGFjcXVpcmVUb2tlbk5hdGl2ZShcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIHJlcXVlc3QsIFxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgYXBpSWQsIFxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgYWNjb3VudElkKSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgICAgICByZXR1cm4ge307XHJcbiAgICB9XHJcbiAgICBhY3F1aXJlVG9rZW5CeVJlZnJlc2hUb2tlbihcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGNvbW1vblJlcXVlc3QsIFxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgc2lsZW50UmVxdWVzdCkge1xyXG4gICAgICAgIGJsb2NrQVBJQ2FsbHNCZWZvcmVJbml0aWFsaXplKHRoaXMuaW5pdGlhbGl6ZWQpO1xyXG4gICAgICAgIGJsb2NrTm9uQnJvd3NlckVudmlyb25tZW50KCk7XHJcbiAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgfVxyXG4gICAgYWRkRXZlbnRDYWxsYmFjayhcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGNhbGxiYWNrLCBcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGV2ZW50VHlwZXMpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIHJlbW92ZUV2ZW50Q2FsbGJhY2soXHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXHJcbiAgICBjYWxsYmFja0lkKSB7IH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGFkZFBlcmZvcm1hbmNlQ2FsbGJhY2soY2FsbGJhY2spIHtcclxuICAgICAgICBibG9ja0FQSUNhbGxzQmVmb3JlSW5pdGlhbGl6ZSh0aGlzLmluaXRpYWxpemVkKTtcclxuICAgICAgICBibG9ja05vbkJyb3dzZXJFbnZpcm9ubWVudCgpO1xyXG4gICAgICAgIHJldHVybiBcIlwiO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgcmVtb3ZlUGVyZm9ybWFuY2VDYWxsYmFjayhjYWxsYmFja0lkKSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIGVuYWJsZUFjY291bnRTdG9yYWdlRXZlbnRzKCkge1xyXG4gICAgICAgIGJsb2NrQVBJQ2FsbHNCZWZvcmVJbml0aWFsaXplKHRoaXMuaW5pdGlhbGl6ZWQpO1xyXG4gICAgICAgIGJsb2NrTm9uQnJvd3NlckVudmlyb25tZW50KCk7XHJcbiAgICB9XHJcbiAgICBkaXNhYmxlQWNjb3VudFN0b3JhZ2VFdmVudHMoKSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgIH1cclxuICAgIGhhbmRsZVJlZGlyZWN0UHJvbWlzZShcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGhhc2gpIHtcclxuICAgICAgICBibG9ja0FQSUNhbGxzQmVmb3JlSW5pdGlhbGl6ZSh0aGlzLmluaXRpYWxpemVkKTtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG51bGwpO1xyXG4gICAgfVxyXG4gICAgbG9naW5Qb3B1cChcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIHJlcXVlc3QpIHtcclxuICAgICAgICBibG9ja0FQSUNhbGxzQmVmb3JlSW5pdGlhbGl6ZSh0aGlzLmluaXRpYWxpemVkKTtcclxuICAgICAgICBibG9ja05vbkJyb3dzZXJFbnZpcm9ubWVudCgpO1xyXG4gICAgICAgIHJldHVybiB7fTtcclxuICAgIH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGxvZ2luUmVkaXJlY3QocmVxdWVzdCkge1xyXG4gICAgICAgIGJsb2NrQVBJQ2FsbHNCZWZvcmVJbml0aWFsaXplKHRoaXMuaW5pdGlhbGl6ZWQpO1xyXG4gICAgICAgIGJsb2NrTm9uQnJvd3NlckVudmlyb25tZW50KCk7XHJcbiAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgbG9nb3V0KGxvZ291dFJlcXVlc3QpIHtcclxuICAgICAgICBibG9ja0FQSUNhbGxzQmVmb3JlSW5pdGlhbGl6ZSh0aGlzLmluaXRpYWxpemVkKTtcclxuICAgICAgICBibG9ja05vbkJyb3dzZXJFbnZpcm9ubWVudCgpO1xyXG4gICAgICAgIHJldHVybiB7fTtcclxuICAgIH1cclxuICAgIGxvZ291dFJlZGlyZWN0KFxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgbG9nb3V0UmVxdWVzdCkge1xyXG4gICAgICAgIGJsb2NrQVBJQ2FsbHNCZWZvcmVJbml0aWFsaXplKHRoaXMuaW5pdGlhbGl6ZWQpO1xyXG4gICAgICAgIGJsb2NrTm9uQnJvd3NlckVudmlyb25tZW50KCk7XHJcbiAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgfVxyXG4gICAgbG9nb3V0UG9wdXAoXHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXHJcbiAgICBsb2dvdXRSZXF1ZXN0KSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgICAgICByZXR1cm4ge307XHJcbiAgICB9XHJcbiAgICBzc29TaWxlbnQoXHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXHJcbiAgICByZXF1ZXN0KSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgICAgICByZXR1cm4ge307XHJcbiAgICB9XHJcbiAgICBnZXRUb2tlbkNhY2hlKCkge1xyXG4gICAgICAgIGJsb2NrQVBJQ2FsbHNCZWZvcmVJbml0aWFsaXplKHRoaXMuaW5pdGlhbGl6ZWQpO1xyXG4gICAgICAgIGJsb2NrTm9uQnJvd3NlckVudmlyb25tZW50KCk7XHJcbiAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgfVxyXG4gICAgZ2V0TG9nZ2VyKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxvZ2dlcjtcclxuICAgIH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIHNldExvZ2dlcihsb2dnZXIpIHtcclxuICAgICAgICBibG9ja0FQSUNhbGxzQmVmb3JlSW5pdGlhbGl6ZSh0aGlzLmluaXRpYWxpemVkKTtcclxuICAgICAgICBibG9ja05vbkJyb3dzZXJFbnZpcm9ubWVudCgpO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgc2V0QWN0aXZlQWNjb3VudChhY2NvdW50KSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgIH1cclxuICAgIGdldEFjdGl2ZUFjY291bnQoKSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGluaXRpYWxpemVXcmFwcGVyTGlicmFyeShza3UsIHZlcnNpb24pIHtcclxuICAgICAgICB0aGlzLmJyb3dzZXJTdG9yYWdlLnNldFdyYXBwZXJNZXRhZGF0YShza3UsIHZlcnNpb24pO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgc2V0TmF2aWdhdGlvbkNsaWVudChuYXZpZ2F0aW9uQ2xpZW50KSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgIH1cclxuICAgIGdldENvbmZpZ3VyYXRpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlnO1xyXG4gICAgfVxyXG4gICAgaXNCcm93c2VyRW52KCkge1xyXG4gICAgICAgIGJsb2NrQVBJQ2FsbHNCZWZvcmVJbml0aWFsaXplKHRoaXMuaW5pdGlhbGl6ZWQpO1xyXG4gICAgICAgIGJsb2NrTm9uQnJvd3NlckVudmlyb25tZW50KCk7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBnZXRCcm93c2VyQ3J5cHRvKCkge1xyXG4gICAgICAgIGJsb2NrQVBJQ2FsbHNCZWZvcmVJbml0aWFsaXplKHRoaXMuaW5pdGlhbGl6ZWQpO1xyXG4gICAgICAgIGJsb2NrTm9uQnJvd3NlckVudmlyb25tZW50KCk7XHJcbiAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgfVxyXG4gICAgZ2V0UGVyZm9ybWFuY2VDbGllbnQoKSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgICAgICByZXR1cm4ge307XHJcbiAgICB9XHJcbiAgICBnZXRSZWRpcmVjdFJlc3BvbnNlKCkge1xyXG4gICAgICAgIGJsb2NrQVBJQ2FsbHNCZWZvcmVJbml0aWFsaXplKHRoaXMuaW5pdGlhbGl6ZWQpO1xyXG4gICAgICAgIGJsb2NrTm9uQnJvd3NlckVudmlyb25tZW50KCk7XHJcbiAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgYXN5bmMgY2xlYXJDYWNoZShsb2dvdXRSZXF1ZXN0KSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgIH1cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIGFzeW5jIGh5ZHJhdGVDYWNoZShcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIHJlc3VsdCwgXHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXHJcbiAgICByZXF1ZXN0KSB7XHJcbiAgICAgICAgYmxvY2tBUElDYWxsc0JlZm9yZUluaXRpYWxpemUodGhpcy5pbml0aWFsaXplZCk7XHJcbiAgICAgICAgYmxvY2tOb25Ccm93c2VyRW52aXJvbm1lbnQoKTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBVbmtub3duT3BlcmF0aW5nQ29udGV4dENvbnRyb2xsZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVua25vd25PcGVyYXRpbmdDb250ZXh0Q29udHJvbGxlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/controllers/UnknownOperatingContextController.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNewGuid: function() { return /* binding */ createNewGuid; },\n/* harmony export */   exportJwk: function() { return /* binding */ exportJwk; },\n/* harmony export */   generateKeyPair: function() { return /* binding */ generateKeyPair; },\n/* harmony export */   getRandomValues: function() { return /* binding */ getRandomValues; },\n/* harmony export */   hashString: function() { return /* binding */ hashString; },\n/* harmony export */   importJwk: function() { return /* binding */ importJwk; },\n/* harmony export */   sha256Digest: function() { return /* binding */ sha256Digest; },\n/* harmony export */   sign: function() { return /* binding */ sign; },\n/* harmony export */   validateCryptoAvailable: function() { return /* binding */ validateCryptoAvailable; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This file defines functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\n/**\r\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\r\n */\r\n// RSA KeyGen Algorithm\r\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\r\n// SHA-256 hashing algorithm\r\nconst S256_HASH_ALG = \"SHA-256\";\r\n// MOD length for PoP tokens\r\nconst MODULUS_LENGTH = 2048;\r\n// Public Exponent\r\nconst PUBLIC_EXPONENT = new Uint8Array([0x01, 0x00, 0x01]);\r\n// UUID hex digits\r\nconst UUID_CHARS = \"0123456789abcdef\";\r\n// Array to store UINT32 random value\r\nconst UINT32_ARR = new Uint32Array(1);\r\nconst SUBTLE_SUBERROR = \"crypto_subtle_undefined\";\r\nconst keygenAlgorithmOptions = {\r\n    name: PKCS1_V15_KEYGEN_ALG,\r\n    hash: S256_HASH_ALG,\r\n    modulusLength: MODULUS_LENGTH,\r\n    publicExponent: PUBLIC_EXPONENT,\r\n};\r\n/**\r\n * Check whether browser crypto is available.\r\n */\r\nfunction validateCryptoAvailable(skipValidateSubtleCrypto) {\r\n    if (!window) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.nonBrowserEnvironment);\r\n    }\r\n    if (!window.crypto) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.cryptoNonExistent);\r\n    }\r\n    if (!skipValidateSubtleCrypto && !window.crypto.subtle) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.cryptoNonExistent, SUBTLE_SUBERROR);\r\n    }\r\n}\r\n/**\r\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n * @param dataString {string} data string\r\n * @param performanceClient {?IPerformanceClient}\r\n * @param correlationId {?string} correlation id\r\n */\r\nasync function sha256Digest(dataString, performanceClient, correlationId) {\r\n    performanceClient?.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.Sha256Digest, correlationId);\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(dataString);\r\n    return window.crypto.subtle.digest(S256_HASH_ALG, data);\r\n}\r\n/**\r\n * Populates buffer with cryptographically random values.\r\n * @param dataBuffer\r\n */\r\nfunction getRandomValues(dataBuffer) {\r\n    return window.crypto.getRandomValues(dataBuffer);\r\n}\r\n/**\r\n * Returns random Uint32 value.\r\n * @returns {number}\r\n */\r\nfunction getRandomUint32() {\r\n    window.crypto.getRandomValues(UINT32_ARR);\r\n    return UINT32_ARR[0];\r\n}\r\n/**\r\n * Creates a UUID v7 from the current timestamp.\r\n * Implementation relies on the system clock to guarantee increasing order of generated identifiers.\r\n * @returns {number}\r\n */\r\nfunction createNewGuid() {\r\n    const currentTimestamp = Date.now();\r\n    const baseRand = getRandomUint32() * 0x400 + (getRandomUint32() & 0x3ff);\r\n    // Result byte array\r\n    const bytes = new Uint8Array(16);\r\n    // A 12-bit `rand_a` field value\r\n    const randA = Math.trunc(baseRand / 2 ** 30);\r\n    // The higher 30 bits of 62-bit `rand_b` field value\r\n    const randBHi = baseRand & (2 ** 30 - 1);\r\n    // The lower 32 bits of 62-bit `rand_b` field value\r\n    const randBLo = getRandomUint32();\r\n    bytes[0] = currentTimestamp / 2 ** 40;\r\n    bytes[1] = currentTimestamp / 2 ** 32;\r\n    bytes[2] = currentTimestamp / 2 ** 24;\r\n    bytes[3] = currentTimestamp / 2 ** 16;\r\n    bytes[4] = currentTimestamp / 2 ** 8;\r\n    bytes[5] = currentTimestamp;\r\n    bytes[6] = 0x70 | (randA >>> 8);\r\n    bytes[7] = randA;\r\n    bytes[8] = 0x80 | (randBHi >>> 24);\r\n    bytes[9] = randBHi >>> 16;\r\n    bytes[10] = randBHi >>> 8;\r\n    bytes[11] = randBHi;\r\n    bytes[12] = randBLo >>> 24;\r\n    bytes[13] = randBLo >>> 16;\r\n    bytes[14] = randBLo >>> 8;\r\n    bytes[15] = randBLo;\r\n    let text = \"\";\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        text += UUID_CHARS.charAt(bytes[i] >>> 4);\r\n        text += UUID_CHARS.charAt(bytes[i] & 0xf);\r\n        if (i === 3 || i === 5 || i === 7 || i === 9) {\r\n            text += \"-\";\r\n        }\r\n    }\r\n    return text;\r\n}\r\n/**\r\n * Generates a keypair based on current keygen algorithm config.\r\n * @param extractable\r\n * @param usages\r\n */\r\nasync function generateKeyPair(extractable, usages) {\r\n    return window.crypto.subtle.generateKey(keygenAlgorithmOptions, extractable, usages);\r\n}\r\n/**\r\n * Export key as Json Web Key (JWK)\r\n * @param key\r\n */\r\nasync function exportJwk(key) {\r\n    return window.crypto.subtle.exportKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.KEY_FORMAT_JWK, key);\r\n}\r\n/**\r\n * Imports key as Json Web Key (JWK), can set extractable and usages.\r\n * @param key\r\n * @param extractable\r\n * @param usages\r\n */\r\nasync function importJwk(key, extractable, usages) {\r\n    return window.crypto.subtle.importKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.KEY_FORMAT_JWK, key, keygenAlgorithmOptions, extractable, usages);\r\n}\r\n/**\r\n * Signs given data with given key\r\n * @param key\r\n * @param data\r\n */\r\nasync function sign(key, data) {\r\n    return window.crypto.subtle.sign(keygenAlgorithmOptions, key, data);\r\n}\r\n/**\r\n * Returns the SHA-256 hash of an input string\r\n * @param plainText\r\n */\r\nasync function hashString(plainText) {\r\n    const hashBuffer = await sha256Digest(plainText);\r\n    const hashBytes = new Uint8Array(hashBuffer);\r\n    return (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_4__.urlEncodeArr)(hashBytes);\r\n}\n\n\n//# sourceMappingURL=BrowserCrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CryptoOps: function() { return /* binding */ CryptoOps; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/* harmony import */ var _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encode/Base64Decode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\");\n/* harmony import */ var _BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _cache_AsyncMemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cache/AsyncMemoryStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nclass CryptoOps {\r\n    constructor(logger, performanceClient, skipValidateSubtleCrypto) {\r\n        this.logger = logger;\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.validateCryptoAvailable)(skipValidateSubtleCrypto ?? false);\r\n        this.cache = new _cache_AsyncMemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.AsyncMemoryStorage(this.logger);\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    createNewGuid() {\r\n        return (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.createNewGuid)();\r\n    }\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input\r\n     */\r\n    base64Encode(input) {\r\n        return (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.base64Encode)(input);\r\n    }\r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input\r\n     */\r\n    base64Decode(input) {\r\n        return (0,_encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__.base64Decode)(input);\r\n    }\r\n    /**\r\n     * Encodes input string to base64 URL safe string.\r\n     * @param input\r\n     */\r\n    base64UrlEncode(input) {\r\n        return (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncode)(input);\r\n    }\r\n    /**\r\n     * Stringifies and base64Url encodes input public key\r\n     * @param inputKid\r\n     * @returns Base64Url encoded public key\r\n     */\r\n    encodeKid(inputKid) {\r\n        return this.base64UrlEncode(JSON.stringify({ kid: inputKid }));\r\n    }\r\n    /**\r\n     * Generates a keypair, stores it and returns a thumbprint\r\n     * @param request\r\n     */\r\n    async getPublicKeyThumbprint(request) {\r\n        const publicKeyThumbMeasurement = this.performanceClient?.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.CryptoOptsGetPublicKeyThumbprint, request.correlationId);\r\n        // Generate Keypair\r\n        const keyPair = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.generateKeyPair)(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\r\n        // Generate Thumbprint for Public Key\r\n        const publicKeyJwk = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.exportJwk)(keyPair.publicKey);\r\n        const pubKeyThumprintObj = {\r\n            e: publicKeyJwk.e,\r\n            kty: publicKeyJwk.kty,\r\n            n: publicKeyJwk.n,\r\n        };\r\n        const publicJwkString = getSortedObjectString(pubKeyThumprintObj);\r\n        const publicJwkHash = await this.hashString(publicJwkString);\r\n        // Generate Thumbprint for Private Key\r\n        const privateKeyJwk = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.exportJwk)(keyPair.privateKey);\r\n        // Re-import private key to make it unextractable\r\n        const unextractablePrivateKey = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.importJwk)(privateKeyJwk, false, [\"sign\"]);\r\n        // Store Keypair data in keystore\r\n        await this.cache.setItem(publicJwkHash, {\r\n            privateKey: unextractablePrivateKey,\r\n            publicKey: keyPair.publicKey,\r\n            requestMethod: request.resourceRequestMethod,\r\n            requestUri: request.resourceRequestUri,\r\n        });\r\n        if (publicKeyThumbMeasurement) {\r\n            publicKeyThumbMeasurement.end({\r\n                success: true,\r\n            });\r\n        }\r\n        return publicJwkHash;\r\n    }\r\n    /**\r\n     * Removes cryptographic keypair from key store matching the keyId passed in\r\n     * @param kid\r\n     */\r\n    async removeTokenBindingKey(kid) {\r\n        await this.cache.removeItem(kid);\r\n        const keyFound = await this.cache.containsKey(kid);\r\n        return !keyFound;\r\n    }\r\n    /**\r\n     * Removes all cryptographic keys from IndexedDB storage\r\n     */\r\n    async clearKeystore() {\r\n        // Delete in-memory keystores\r\n        this.cache.clearInMemory();\r\n        /**\r\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\r\n         * every persistent keystore\r\n         */\r\n        try {\r\n            await this.cache.clearPersistent();\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                this.logger.error(`Clearing keystore failed with error: ${e.message}`);\r\n            }\r\n            else {\r\n                this.logger.error(\"Clearing keystore failed with unknown error\");\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\r\n     * @param payload\r\n     * @param kid\r\n     */\r\n    async signJwt(payload, kid, shrOptions, correlationId) {\r\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.CryptoOptsSignJwt, correlationId);\r\n        const cachedKeyPair = await this.cache.getItem(kid);\r\n        if (!cachedKeyPair) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.cryptoKeyNotFound);\r\n        }\r\n        // Get public key as JWK\r\n        const publicKeyJwk = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.exportJwk)(cachedKeyPair.publicKey);\r\n        const publicKeyJwkString = getSortedObjectString(publicKeyJwk);\r\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\r\n        const encodedKeyIdThumbprint = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncode)(JSON.stringify({ kid: kid }));\r\n        // Generate header\r\n        const shrHeader = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.JoseHeader.getShrHeaderString({\r\n            ...shrOptions?.header,\r\n            alg: publicKeyJwk.alg,\r\n            kid: encodedKeyIdThumbprint,\r\n        });\r\n        const encodedShrHeader = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncode)(shrHeader);\r\n        // Generate payload\r\n        payload.cnf = {\r\n            jwk: JSON.parse(publicKeyJwkString),\r\n        };\r\n        const encodedPayload = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncode)(JSON.stringify(payload));\r\n        // Form token string\r\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\r\n        // Sign token\r\n        const encoder = new TextEncoder();\r\n        const tokenBuffer = encoder.encode(tokenString);\r\n        const signatureBuffer = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.sign)(cachedKeyPair.privateKey, tokenBuffer);\r\n        const encodedSignature = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncodeArr)(new Uint8Array(signatureBuffer));\r\n        const signedJwt = `${tokenString}.${encodedSignature}`;\r\n        if (signJwtMeasurement) {\r\n            signJwtMeasurement.end({\r\n                success: true,\r\n            });\r\n        }\r\n        return signedJwt;\r\n    }\r\n    /**\r\n     * Returns the SHA-256 hash of an input string\r\n     * @param plainText\r\n     */\r\n    async hashString(plainText) {\r\n        return (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.hashString)(plainText);\r\n    }\r\n}\r\nCryptoOps.POP_KEY_USAGES = [\"sign\", \"verify\"];\r\nCryptoOps.EXTRACTABLE = true;\r\nfunction getSortedObjectString(obj) {\r\n    return JSON.stringify(obj, Object.keys(obj).sort());\r\n}\n\n\n//# sourceMappingURL=CryptoOps.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatePkceCodes: function() { return /* binding */ generatePkceCodes; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/* harmony import */ var _BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Constant byte array length\r\nconst RANDOM_BYTE_ARR_LENGTH = 32;\r\n/**\r\n * This file defines APIs to generate PKCE codes and code verifiers.\r\n */\r\n/**\r\n * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n */\r\nasync function generatePkceCodes(performanceClient, logger, correlationId) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GeneratePkceCodes, correlationId);\r\n    const codeVerifier = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invoke)(generateCodeVerifier, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GenerateCodeVerifier, logger, performanceClient, correlationId)(performanceClient, logger, correlationId);\r\n    const codeChallenge = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invokeAsync)(generateCodeChallengeFromVerifier, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GenerateCodeChallengeFromVerifier, logger, performanceClient, correlationId)(codeVerifier, performanceClient, logger, correlationId);\r\n    return {\r\n        verifier: codeVerifier,\r\n        challenge: codeChallenge,\r\n    };\r\n}\r\n/**\r\n * Generates a random 32 byte buffer and returns the base64\r\n * encoded string to be used as a PKCE Code Verifier\r\n */\r\nfunction generateCodeVerifier(performanceClient, logger, correlationId) {\r\n    try {\r\n        // Generate random values as utf-8\r\n        const buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n        (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invoke)(_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_1__.getRandomValues, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GetRandomValues, logger, performanceClient, correlationId)(buffer);\r\n        // encode verifier as base64\r\n        const pkceCodeVerifierB64 = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncodeArr)(buffer);\r\n        return pkceCodeVerifierB64;\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.pkceNotCreated);\r\n    }\r\n}\r\n/**\r\n * Creates a base64 encoded PKCE Code Challenge string from the\r\n * hash created from the PKCE Code Verifier supplied\r\n */\r\nasync function generateCodeChallengeFromVerifier(pkceCodeVerifier, performanceClient, logger, correlationId) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GenerateCodeChallengeFromVerifier, correlationId);\r\n    try {\r\n        // hashed verifier\r\n        const pkceHashedCodeVerifier = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invokeAsync)(_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_1__.sha256Digest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.Sha256Digest, logger, performanceClient, correlationId)(pkceCodeVerifier, performanceClient, correlationId);\r\n        // encode hash as base64\r\n        return (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncodeArr)(new Uint8Array(pkceHashedCodeVerifier));\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.pkceNotCreated);\r\n    }\r\n}\n\n\n//# sourceMappingURL=PkceGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9Qa2NlR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ3VFO0FBQ2I7QUFDYjtBQUNVO0FBQ0E7O0FBRXBFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHlFQUFpQjtBQUMzRCx5QkFBeUIsa0VBQU0sdUJBQXVCLHlFQUFpQjtBQUN2RSxnQ0FBZ0MsdUVBQVcsb0NBQW9DLHlFQUFpQjtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0VBQU0sQ0FBQywrREFBZSxFQUFFLHlFQUFpQjtBQUNqRDtBQUNBLG9DQUFvQyxzRUFBWTtBQUNoRDtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1GQUFzQixDQUFDLDRFQUFjO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHlFQUFpQjtBQUMzRDtBQUNBO0FBQ0EsNkNBQTZDLHVFQUFXLENBQUMsNERBQVksRUFBRSx5RUFBaUI7QUFDeEY7QUFDQSxlQUFlLHNFQUFZO0FBQzNCO0FBQ0E7QUFDQSxjQUFjLG1GQUFzQixDQUFDLDRFQUFjO0FBQ25EO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY3J5cHRvL1BrY2VHZW5lcmF0b3IubWpzPzExZDciXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50cywgaW52b2tlLCBpbnZva2VBc3luYyB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyB1cmxFbmNvZGVBcnIgfSBmcm9tICcuLi9lbmNvZGUvQmFzZTY0RW5jb2RlLm1qcyc7XG5pbXBvcnQgeyBnZXRSYW5kb21WYWx1ZXMsIHNoYTI1NkRpZ2VzdCB9IGZyb20gJy4vQnJvd3NlckNyeXB0by5tanMnO1xuaW1wb3J0IHsgcGtjZU5vdENyZWF0ZWQgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8vIENvbnN0YW50IGJ5dGUgYXJyYXkgbGVuZ3RoXHJcbmNvbnN0IFJBTkRPTV9CWVRFX0FSUl9MRU5HVEggPSAzMjtcclxuLyoqXHJcbiAqIFRoaXMgZmlsZSBkZWZpbmVzIEFQSXMgdG8gZ2VuZXJhdGUgUEtDRSBjb2RlcyBhbmQgY29kZSB2ZXJpZmllcnMuXHJcbiAqL1xyXG4vKipcclxuICogR2VuZXJhdGVzIFBLQ0UgQ29kZXMuIFNlZSB0aGUgUkZDIGZvciBtb3JlIGluZm9ybWF0aW9uOiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzYzNlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVQa2NlQ29kZXMocGVyZm9ybWFuY2VDbGllbnQsIGxvZ2dlciwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgcGVyZm9ybWFuY2VDbGllbnQuYWRkUXVldWVNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5HZW5lcmF0ZVBrY2VDb2RlcywgY29ycmVsYXRpb25JZCk7XHJcbiAgICBjb25zdCBjb2RlVmVyaWZpZXIgPSBpbnZva2UoZ2VuZXJhdGVDb2RlVmVyaWZpZXIsIFBlcmZvcm1hbmNlRXZlbnRzLkdlbmVyYXRlQ29kZVZlcmlmaWVyLCBsb2dnZXIsIHBlcmZvcm1hbmNlQ2xpZW50LCBjb3JyZWxhdGlvbklkKShwZXJmb3JtYW5jZUNsaWVudCwgbG9nZ2VyLCBjb3JyZWxhdGlvbklkKTtcclxuICAgIGNvbnN0IGNvZGVDaGFsbGVuZ2UgPSBhd2FpdCBpbnZva2VBc3luYyhnZW5lcmF0ZUNvZGVDaGFsbGVuZ2VGcm9tVmVyaWZpZXIsIFBlcmZvcm1hbmNlRXZlbnRzLkdlbmVyYXRlQ29kZUNoYWxsZW5nZUZyb21WZXJpZmllciwgbG9nZ2VyLCBwZXJmb3JtYW5jZUNsaWVudCwgY29ycmVsYXRpb25JZCkoY29kZVZlcmlmaWVyLCBwZXJmb3JtYW5jZUNsaWVudCwgbG9nZ2VyLCBjb3JyZWxhdGlvbklkKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgdmVyaWZpZXI6IGNvZGVWZXJpZmllcixcclxuICAgICAgICBjaGFsbGVuZ2U6IGNvZGVDaGFsbGVuZ2UsXHJcbiAgICB9O1xyXG59XHJcbi8qKlxyXG4gKiBHZW5lcmF0ZXMgYSByYW5kb20gMzIgYnl0ZSBidWZmZXIgYW5kIHJldHVybnMgdGhlIGJhc2U2NFxyXG4gKiBlbmNvZGVkIHN0cmluZyB0byBiZSB1c2VkIGFzIGEgUEtDRSBDb2RlIFZlcmlmaWVyXHJcbiAqL1xyXG5mdW5jdGlvbiBnZW5lcmF0ZUNvZGVWZXJpZmllcihwZXJmb3JtYW5jZUNsaWVudCwgbG9nZ2VyLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIC8vIEdlbmVyYXRlIHJhbmRvbSB2YWx1ZXMgYXMgdXRmLThcclxuICAgICAgICBjb25zdCBidWZmZXIgPSBuZXcgVWludDhBcnJheShSQU5ET01fQllURV9BUlJfTEVOR1RIKTtcclxuICAgICAgICBpbnZva2UoZ2V0UmFuZG9tVmFsdWVzLCBQZXJmb3JtYW5jZUV2ZW50cy5HZXRSYW5kb21WYWx1ZXMsIGxvZ2dlciwgcGVyZm9ybWFuY2VDbGllbnQsIGNvcnJlbGF0aW9uSWQpKGJ1ZmZlcik7XHJcbiAgICAgICAgLy8gZW5jb2RlIHZlcmlmaWVyIGFzIGJhc2U2NFxyXG4gICAgICAgIGNvbnN0IHBrY2VDb2RlVmVyaWZpZXJCNjQgPSB1cmxFbmNvZGVBcnIoYnVmZmVyKTtcclxuICAgICAgICByZXR1cm4gcGtjZUNvZGVWZXJpZmllckI2NDtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcihwa2NlTm90Q3JlYXRlZCk7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIENyZWF0ZXMgYSBiYXNlNjQgZW5jb2RlZCBQS0NFIENvZGUgQ2hhbGxlbmdlIHN0cmluZyBmcm9tIHRoZVxyXG4gKiBoYXNoIGNyZWF0ZWQgZnJvbSB0aGUgUEtDRSBDb2RlIFZlcmlmaWVyIHN1cHBsaWVkXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUNvZGVDaGFsbGVuZ2VGcm9tVmVyaWZpZXIocGtjZUNvZGVWZXJpZmllciwgcGVyZm9ybWFuY2VDbGllbnQsIGxvZ2dlciwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgcGVyZm9ybWFuY2VDbGllbnQuYWRkUXVldWVNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5HZW5lcmF0ZUNvZGVDaGFsbGVuZ2VGcm9tVmVyaWZpZXIsIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICAvLyBoYXNoZWQgdmVyaWZpZXJcclxuICAgICAgICBjb25zdCBwa2NlSGFzaGVkQ29kZVZlcmlmaWVyID0gYXdhaXQgaW52b2tlQXN5bmMoc2hhMjU2RGlnZXN0LCBQZXJmb3JtYW5jZUV2ZW50cy5TaGEyNTZEaWdlc3QsIGxvZ2dlciwgcGVyZm9ybWFuY2VDbGllbnQsIGNvcnJlbGF0aW9uSWQpKHBrY2VDb2RlVmVyaWZpZXIsIHBlcmZvcm1hbmNlQ2xpZW50LCBjb3JyZWxhdGlvbklkKTtcclxuICAgICAgICAvLyBlbmNvZGUgaGFzaCBhcyBiYXNlNjRcclxuICAgICAgICByZXR1cm4gdXJsRW5jb2RlQXJyKG5ldyBVaW50OEFycmF5KHBrY2VIYXNoZWRDb2RlVmVyaWZpZXIpKTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcihwa2NlTm90Q3JlYXRlZCk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgZ2VuZXJhdGVQa2NlQ29kZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBrY2VHZW5lcmF0b3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignedHttpRequest: function() { return /* binding */ SignedHttpRequest; }\n/* harmony export */ });\n/* harmony import */ var _CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CryptoOps.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SignedHttpRequest {\r\n    constructor(shrParameters, shrOptions) {\r\n        const loggerOptions = (shrOptions && shrOptions.loggerOptions) || {};\r\n        this.logger = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Logger(loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.version);\r\n        this.cryptoOps = new _CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_2__.CryptoOps(this.logger);\r\n        this.popTokenGenerator = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PopTokenGenerator(this.cryptoOps);\r\n        this.shrParameters = shrParameters;\r\n    }\r\n    /**\r\n     * Generates and caches a keypair for the given request options.\r\n     * @returns Public key digest, which should be sent to the token issuer.\r\n     */\r\n    async generatePublicKeyThumbprint() {\r\n        const { kid } = await this.popTokenGenerator.generateKid(this.shrParameters);\r\n        return kid;\r\n    }\r\n    /**\r\n     * Generates a signed http request for the given payload with the given key.\r\n     * @param payload Payload to sign (e.g. access token)\r\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\r\n     * @param claims Additional claims to include/override in the signed JWT\r\n     * @returns Pop token signed with the corresponding private key\r\n     */\r\n    async signRequest(payload, publicKeyThumbprint, claims) {\r\n        return this.popTokenGenerator.signPayload(payload, publicKeyThumbprint, this.shrParameters, claims);\r\n    }\r\n    /**\r\n     * Removes cached keys from browser for given public key thumbprint\r\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\r\n     * @returns If keys are properly deleted\r\n     */\r\n    async removeKeys(publicKeyThumbprint) {\r\n        return this.cryptoOps.removeTokenBindingKey(publicKeyThumbprint);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SignedHttpRequest.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9TaWduZWRIdHRwUmVxdWVzdC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDK0I7QUFDMkI7QUFDaEI7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhEQUFNLGdCQUFnQixzREFBSSxFQUFFLHlEQUFPO0FBQzdELDZCQUE2QixxREFBUztBQUN0QyxxQ0FBcUMseUVBQWlCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE1BQU07QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9TaWduZWRIdHRwUmVxdWVzdC5tanM/OWNmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENyeXB0b09wcyB9IGZyb20gJy4vQ3J5cHRvT3BzLm1qcyc7XG5pbXBvcnQgeyBMb2dnZXIsIFBvcFRva2VuR2VuZXJhdG9yIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuaW1wb3J0IHsgbmFtZSwgdmVyc2lvbiB9IGZyb20gJy4uL3BhY2thZ2VNZXRhZGF0YS5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY2xhc3MgU2lnbmVkSHR0cFJlcXVlc3Qge1xyXG4gICAgY29uc3RydWN0b3Ioc2hyUGFyYW1ldGVycywgc2hyT3B0aW9ucykge1xyXG4gICAgICAgIGNvbnN0IGxvZ2dlck9wdGlvbnMgPSAoc2hyT3B0aW9ucyAmJiBzaHJPcHRpb25zLmxvZ2dlck9wdGlvbnMpIHx8IHt9O1xyXG4gICAgICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcihsb2dnZXJPcHRpb25zLCBuYW1lLCB2ZXJzaW9uKTtcclxuICAgICAgICB0aGlzLmNyeXB0b09wcyA9IG5ldyBDcnlwdG9PcHModGhpcy5sb2dnZXIpO1xyXG4gICAgICAgIHRoaXMucG9wVG9rZW5HZW5lcmF0b3IgPSBuZXcgUG9wVG9rZW5HZW5lcmF0b3IodGhpcy5jcnlwdG9PcHMpO1xyXG4gICAgICAgIHRoaXMuc2hyUGFyYW1ldGVycyA9IHNoclBhcmFtZXRlcnM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdlbmVyYXRlcyBhbmQgY2FjaGVzIGEga2V5cGFpciBmb3IgdGhlIGdpdmVuIHJlcXVlc3Qgb3B0aW9ucy5cclxuICAgICAqIEByZXR1cm5zIFB1YmxpYyBrZXkgZGlnZXN0LCB3aGljaCBzaG91bGQgYmUgc2VudCB0byB0aGUgdG9rZW4gaXNzdWVyLlxyXG4gICAgICovXHJcbiAgICBhc3luYyBnZW5lcmF0ZVB1YmxpY0tleVRodW1icHJpbnQoKSB7XHJcbiAgICAgICAgY29uc3QgeyBraWQgfSA9IGF3YWl0IHRoaXMucG9wVG9rZW5HZW5lcmF0b3IuZ2VuZXJhdGVLaWQodGhpcy5zaHJQYXJhbWV0ZXJzKTtcclxuICAgICAgICByZXR1cm4ga2lkO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZW5lcmF0ZXMgYSBzaWduZWQgaHR0cCByZXF1ZXN0IGZvciB0aGUgZ2l2ZW4gcGF5bG9hZCB3aXRoIHRoZSBnaXZlbiBrZXkuXHJcbiAgICAgKiBAcGFyYW0gcGF5bG9hZCBQYXlsb2FkIHRvIHNpZ24gKGUuZy4gYWNjZXNzIHRva2VuKVxyXG4gICAgICogQHBhcmFtIHB1YmxpY0tleVRodW1icHJpbnQgUHVibGljIGtleSBkaWdlc3QgKGZyb20gZ2VuZXJhdGVQdWJsaWNLZXlUaHVtYnByaW50IEFQSSlcclxuICAgICAqIEBwYXJhbSBjbGFpbXMgQWRkaXRpb25hbCBjbGFpbXMgdG8gaW5jbHVkZS9vdmVycmlkZSBpbiB0aGUgc2lnbmVkIEpXVFxyXG4gICAgICogQHJldHVybnMgUG9wIHRva2VuIHNpZ25lZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHByaXZhdGUga2V5XHJcbiAgICAgKi9cclxuICAgIGFzeW5jIHNpZ25SZXF1ZXN0KHBheWxvYWQsIHB1YmxpY0tleVRodW1icHJpbnQsIGNsYWltcykge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBvcFRva2VuR2VuZXJhdG9yLnNpZ25QYXlsb2FkKHBheWxvYWQsIHB1YmxpY0tleVRodW1icHJpbnQsIHRoaXMuc2hyUGFyYW1ldGVycywgY2xhaW1zKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlcyBjYWNoZWQga2V5cyBmcm9tIGJyb3dzZXIgZm9yIGdpdmVuIHB1YmxpYyBrZXkgdGh1bWJwcmludFxyXG4gICAgICogQHBhcmFtIHB1YmxpY0tleVRodW1icHJpbnQgUHVibGljIGtleSBkaWdlc3QgKGZyb20gZ2VuZXJhdGVQdWJsaWNLZXlUaHVtYnByaW50IEFQSSlcclxuICAgICAqIEByZXR1cm5zIElmIGtleXMgYXJlIHByb3Blcmx5IGRlbGV0ZWRcclxuICAgICAqL1xyXG4gICAgYXN5bmMgcmVtb3ZlS2V5cyhwdWJsaWNLZXlUaHVtYnByaW50KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY3J5cHRvT3BzLnJlbW92ZVRva2VuQmluZGluZ0tleShwdWJsaWNLZXlUaHVtYnByaW50KTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBTaWduZWRIdHRwUmVxdWVzdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2lnbmVkSHR0cFJlcXVlc3QubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Decode: function() { return /* binding */ base64Decode; }\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\r\n */\r\n/**\r\n * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n * @param input\r\n */\r\nfunction base64Decode(input) {\r\n    return new TextDecoder().decode(base64DecToArr(input));\r\n}\r\n/**\r\n * Decodes base64 into Uint8Array\r\n * @param base64String\r\n */\r\nfunction base64DecToArr(base64String) {\r\n    let encodedString = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    switch (encodedString.length % 4) {\r\n        case 0:\r\n            break;\r\n        case 2:\r\n            encodedString += \"==\";\r\n            break;\r\n        case 3:\r\n            encodedString += \"=\";\r\n            break;\r\n        default:\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidBase64String);\r\n    }\r\n    const binString = atob(encodedString);\r\n    return Uint8Array.from(binString, (m) => m.codePointAt(0) || 0);\r\n}\n\n\n//# sourceMappingURL=Base64Decode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjREZWNvZGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDMEQ7QUFDRTs7QUFFekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUZBQXNCLENBQUMsaUZBQW1CO0FBQzVEO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjREZWNvZGUubWpzPzY1MDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgaW52YWxpZEJhc2U2NFN0cmluZyB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIENsYXNzIHdoaWNoIGV4cG9zZXMgQVBJcyB0byBkZWNvZGUgYmFzZTY0IHN0cmluZ3MgdG8gcGxhaW50ZXh0LiBTZWUgaGVyZSBmb3IgaW1wbGVtZW50YXRpb24gZGV0YWlsczpcclxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9HbG9zc2FyeS9CYXNlNjQjdGhlX3VuaWNvZGVfcHJvYmxlbVxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybnMgYSBVUkwtc2FmZSBwbGFpbnRleHQgZGVjb2RlZCBzdHJpbmcgZnJvbSBiNjQgZW5jb2RlZCBpbnB1dC5cclxuICogQHBhcmFtIGlucHV0XHJcbiAqL1xyXG5mdW5jdGlvbiBiYXNlNjREZWNvZGUoaW5wdXQpIHtcclxuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYmFzZTY0RGVjVG9BcnIoaW5wdXQpKTtcclxufVxyXG4vKipcclxuICogRGVjb2RlcyBiYXNlNjQgaW50byBVaW50OEFycmF5XHJcbiAqIEBwYXJhbSBiYXNlNjRTdHJpbmdcclxuICovXHJcbmZ1bmN0aW9uIGJhc2U2NERlY1RvQXJyKGJhc2U2NFN0cmluZykge1xyXG4gICAgbGV0IGVuY29kZWRTdHJpbmcgPSBiYXNlNjRTdHJpbmcucmVwbGFjZSgvLS9nLCBcIitcIikucmVwbGFjZSgvXy9nLCBcIi9cIik7XHJcbiAgICBzd2l0Y2ggKGVuY29kZWRTdHJpbmcubGVuZ3RoICUgNCkge1xyXG4gICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICBlbmNvZGVkU3RyaW5nICs9IFwiPT1cIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICBlbmNvZGVkU3RyaW5nICs9IFwiPVwiO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGludmFsaWRCYXNlNjRTdHJpbmcpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgYmluU3RyaW5nID0gYXRvYihlbmNvZGVkU3RyaW5nKTtcclxuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oYmluU3RyaW5nLCAobSkgPT4gbS5jb2RlUG9pbnRBdCgwKSB8fCAwKTtcclxufVxuXG5leHBvcnQgeyBiYXNlNjREZWNvZGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2U2NERlY29kZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Encode: function() { return /* binding */ base64Encode; },\n/* harmony export */   urlEncode: function() { return /* binding */ urlEncode; },\n/* harmony export */   urlEncodeArr: function() { return /* binding */ urlEncodeArr; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\n/**\r\n * Returns URL Safe b64 encoded string from a plaintext string.\r\n * @param input\r\n */\r\nfunction urlEncode(input) {\r\n    return encodeURIComponent(base64Encode(input)\r\n        .replace(/=/g, \"\")\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\"));\r\n}\r\n/**\r\n * Returns URL Safe b64 encoded string from an int8Array.\r\n * @param inputArr\r\n */\r\nfunction urlEncodeArr(inputArr) {\r\n    return base64EncArr(inputArr)\r\n        .replace(/=/g, \"\")\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\");\r\n}\r\n/**\r\n * Returns b64 encoded string from plaintext string.\r\n * @param input\r\n */\r\nfunction base64Encode(input) {\r\n    return base64EncArr(new TextEncoder().encode(input));\r\n}\r\n/**\r\n * Base64 encode byte array\r\n * @param aBytes\r\n */\r\nfunction base64EncArr(aBytes) {\r\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\"\");\r\n    return btoa(binString);\r\n}\n\n\n//# sourceMappingURL=Base64Encode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjRFbmNvZGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUQ7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9lbmNvZGUvQmFzZTY0RW5jb2RlLm1qcz80Nzc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBDbGFzcyB3aGljaCBleHBvc2VzIEFQSXMgdG8gZW5jb2RlIHBsYWludGV4dCB0byBiYXNlNjQgZW5jb2RlZCBzdHJpbmcuIFNlZSBoZXJlIGZvciBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzOlxyXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2luZG93QmFzZTY0L0Jhc2U2NF9lbmNvZGluZ19hbmRfZGVjb2RpbmcjU29sdXRpb25fMl8lRTIlODAlOTNfSmF2YVNjcmlwdCdzX1VURi0xNl8lM0VfVVRGLThfJTNFX2Jhc2U2NFxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybnMgVVJMIFNhZmUgYjY0IGVuY29kZWQgc3RyaW5nIGZyb20gYSBwbGFpbnRleHQgc3RyaW5nLlxyXG4gKiBAcGFyYW0gaW5wdXRcclxuICovXHJcbmZ1bmN0aW9uIHVybEVuY29kZShpbnB1dCkge1xyXG4gICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChiYXNlNjRFbmNvZGUoaW5wdXQpXHJcbiAgICAgICAgLnJlcGxhY2UoLz0vZywgXCJcIilcclxuICAgICAgICAucmVwbGFjZSgvXFwrL2csIFwiLVwiKVxyXG4gICAgICAgIC5yZXBsYWNlKC9cXC8vZywgXCJfXCIpKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBVUkwgU2FmZSBiNjQgZW5jb2RlZCBzdHJpbmcgZnJvbSBhbiBpbnQ4QXJyYXkuXHJcbiAqIEBwYXJhbSBpbnB1dEFyclxyXG4gKi9cclxuZnVuY3Rpb24gdXJsRW5jb2RlQXJyKGlucHV0QXJyKSB7XHJcbiAgICByZXR1cm4gYmFzZTY0RW5jQXJyKGlucHV0QXJyKVxyXG4gICAgICAgIC5yZXBsYWNlKC89L2csIFwiXCIpXHJcbiAgICAgICAgLnJlcGxhY2UoL1xcKy9nLCBcIi1cIilcclxuICAgICAgICAucmVwbGFjZSgvXFwvL2csIFwiX1wiKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBiNjQgZW5jb2RlZCBzdHJpbmcgZnJvbSBwbGFpbnRleHQgc3RyaW5nLlxyXG4gKiBAcGFyYW0gaW5wdXRcclxuICovXHJcbmZ1bmN0aW9uIGJhc2U2NEVuY29kZShpbnB1dCkge1xyXG4gICAgcmV0dXJuIGJhc2U2NEVuY0FycihuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoaW5wdXQpKTtcclxufVxyXG4vKipcclxuICogQmFzZTY0IGVuY29kZSBieXRlIGFycmF5XHJcbiAqIEBwYXJhbSBhQnl0ZXNcclxuICovXHJcbmZ1bmN0aW9uIGJhc2U2NEVuY0FycihhQnl0ZXMpIHtcclxuICAgIGNvbnN0IGJpblN0cmluZyA9IEFycmF5LmZyb20oYUJ5dGVzLCAoeCkgPT4gU3RyaW5nLmZyb21Db2RlUG9pbnQoeCkpLmpvaW4oXCJcIik7XHJcbiAgICByZXR1cm4gYnRvYShiaW5TdHJpbmcpO1xyXG59XG5cbmV4cG9ydCB7IGJhc2U2NEVuY29kZSwgdXJsRW5jb2RlLCB1cmxFbmNvZGVBcnIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2U2NEVuY29kZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserAuthError: function() { return /* binding */ BrowserAuthError; },\n/* harmony export */   BrowserAuthErrorCodes: function() { return /* reexport module object */ _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   BrowserAuthErrorMessage: function() { return /* binding */ BrowserAuthErrorMessage; },\n/* harmony export */   BrowserAuthErrorMessages: function() { return /* binding */ BrowserAuthErrorMessages; },\n/* harmony export */   createBrowserAuthError: function() { return /* binding */ createBrowserAuthError; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst BrowserAuthErrorMessages = {\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceNotCreated]: \"The PKCE code challenge and verifier could not be generated.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoNonExistent]: \"The crypto object or function is not available.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyNavigateUri]: \"Navigation URI is empty. Please check stack trace for more info.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noStateInHash]: \"Hash does not contain state. Please verify that the request originated from msal.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseState]: \"Unable to parse state. Please verify that the request originated from msal.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateInteractionTypeMismatch]: \"Hash contains state but the interaction type does not match the caller.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.popupWindowError]: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyWindowError]: \"window.open returned null or undefined window object.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCancelled]: \"User cancelled the flow.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectInIframe]: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockNestedPopups]: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.iframeClosedPrematurely]: \"The iframe being monitored was closed prematurely.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentLogoutUnsupported]: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountError]: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentPromptValueError]: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokenRequestCacheError]: \"No token request found in cache.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseTokenRequestCacheError]: \"The cached token request could not be parsed.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCachedAuthorityError]: \"No cached authority found.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authRequestNotSetError]: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheType]: \"Invalid cache type\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonBrowserEnvironment]: \"Login and token requests are not supported in non-browser environments.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseNotOpen]: \"Database is not open!\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed]: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.getRequestFailed]: \"Network request failed. Please check the network trace to determine root cause.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.failedToParseResponse]: \"Failed to parse network response. Check network trace.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToLoadToken]: \"Error loading token to cache.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoKeyNotFound]: \"Cryptographic Key or Keypair not found in browser storage.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeRequired]: \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeOrNativeAccountIdRequired]: \"An authorization code or nativeAccountId must be provided to this flow.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.spaCodeAndNativeAccountIdPresent]: \"Request cannot contain both spa code and native account id.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseUnavailable]: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeHandshakeTimeout]: \"Timed out while attempting to establish connection to browser extension\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeExtensionNotInstalled]: \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativePromptNotSupported]: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidBase64String]: \"Invalid base64 encoded string.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPopTokenRequest]: \"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.failedToBuildHeaders]: \"Failed to build request headers object.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.failedToParseHeaders]: \"Failed to parse response headers\",\r\n};\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use exported BrowserAuthErrorCodes instead.\r\n * In your app you can do :\r\n * ```\r\n * import { BrowserAuthErrorCodes } from \"@azure/msal-browser\";\r\n * ```\r\n */\r\nconst BrowserAuthErrorMessage = {\r\n    pkceNotGenerated: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceNotCreated,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceNotCreated],\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoNonExistent,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoNonExistent],\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyNavigateUri,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyNavigateUri],\r\n    },\r\n    hashEmptyError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashEmptyError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashEmptyError],\r\n    },\r\n    hashDoesNotContainStateError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noStateInHash,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noStateInHash],\r\n    },\r\n    hashDoesNotContainKnownPropertiesError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashDoesNotContainKnownProperties,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashDoesNotContainKnownProperties],\r\n    },\r\n    unableToParseStateError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseState,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseState],\r\n    },\r\n    stateInteractionTypeMismatchError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateInteractionTypeMismatch,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateInteractionTypeMismatch],\r\n    },\r\n    interactionInProgress: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.interactionInProgress,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.interactionInProgress],\r\n    },\r\n    popupWindowError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.popupWindowError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.popupWindowError],\r\n    },\r\n    emptyWindowError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyWindowError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyWindowError],\r\n    },\r\n    userCancelledError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCancelled,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCancelled],\r\n    },\r\n    monitorPopupTimeoutError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorPopupTimeout,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorPopupTimeout],\r\n    },\r\n    monitorIframeTimeoutError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorWindowTimeout,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorWindowTimeout],\r\n    },\r\n    redirectInIframeError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectInIframe,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectInIframe],\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockIframeReload,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockIframeReload],\r\n    },\r\n    blockAcquireTokenInPopupsError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockNestedPopups,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockNestedPopups],\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.iframeClosedPrematurely,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.iframeClosedPrematurely],\r\n    },\r\n    silentLogoutUnsupportedError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentLogoutUnsupported,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentLogoutUnsupported],\r\n    },\r\n    noAccountError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountError],\r\n    },\r\n    silentPromptValueError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentPromptValueError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentPromptValueError],\r\n    },\r\n    noTokenRequestCacheError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokenRequestCacheError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokenRequestCacheError],\r\n    },\r\n    unableToParseTokenRequestCacheError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseTokenRequestCacheError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseTokenRequestCacheError],\r\n    },\r\n    noCachedAuthorityError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCachedAuthorityError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCachedAuthorityError],\r\n    },\r\n    authRequestNotSet: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authRequestNotSetError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authRequestNotSetError],\r\n    },\r\n    invalidCacheType: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheType,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheType],\r\n    },\r\n    notInBrowserEnvironment: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonBrowserEnvironment,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonBrowserEnvironment],\r\n    },\r\n    databaseNotOpen: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseNotOpen,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseNotOpen],\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity],\r\n    },\r\n    postRequestFailed: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed],\r\n    },\r\n    getRequestFailed: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.getRequestFailed,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.getRequestFailed],\r\n    },\r\n    failedToParseNetworkResponse: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.failedToParseResponse,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.failedToParseResponse],\r\n    },\r\n    unableToLoadTokenError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToLoadToken,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToLoadToken],\r\n    },\r\n    signingKeyNotFoundInStorage: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoKeyNotFound,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoKeyNotFound],\r\n    },\r\n    authCodeRequired: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeRequired,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeRequired],\r\n    },\r\n    authCodeOrNativeAccountRequired: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeOrNativeAccountIdRequired,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeOrNativeAccountIdRequired],\r\n    },\r\n    spaCodeAndNativeAccountPresent: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.spaCodeAndNativeAccountIdPresent,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.spaCodeAndNativeAccountIdPresent],\r\n    },\r\n    databaseUnavailable: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseUnavailable,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseUnavailable],\r\n    },\r\n    unableToAcquireTokenFromNativePlatform: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToAcquireTokenFromNativePlatform,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToAcquireTokenFromNativePlatform],\r\n    },\r\n    nativeHandshakeTimeout: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeHandshakeTimeout,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeHandshakeTimeout],\r\n    },\r\n    nativeExtensionNotInstalled: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeExtensionNotInstalled,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeExtensionNotInstalled],\r\n    },\r\n    nativeConnectionNotEstablished: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeConnectionNotEstablished,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeConnectionNotEstablished],\r\n    },\r\n    uninitializedPublicClientApplication: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.uninitializedPublicClientApplication,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.uninitializedPublicClientApplication],\r\n    },\r\n    nativePromptNotSupported: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativePromptNotSupported,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativePromptNotSupported],\r\n    },\r\n    invalidBase64StringError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidBase64String,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidBase64String],\r\n    },\r\n    invalidPopTokenRequest: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPopTokenRequest,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPopTokenRequest],\r\n    },\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nclass BrowserAuthError extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, subError) {\r\n        super(errorCode, BrowserAuthErrorMessages[errorCode], subError);\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n}\r\nfunction createBrowserAuthError(errorCode, subError) {\r\n    return new BrowserAuthError(errorCode, subError);\r\n}\n\n\n//# sourceMappingURL=BrowserAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQzBDO0FBQzBrQztBQUM1akM7QUFDcEM7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssc0VBQWM7QUFDbkIsS0FBSyx5RUFBaUI7QUFDdEIsS0FBSyx3RUFBZ0I7QUFDckIsS0FBSyxzRUFBYyx3SEFBd0gsVUFBVTtBQUNySixLQUFLLHFFQUFhO0FBQ2xCLEtBQUsseUZBQWlDLDZHQUE2RyxVQUFVO0FBQzdKLEtBQUssMEVBQWtCO0FBQ3ZCLEtBQUssb0ZBQTRCO0FBQ2pDLEtBQUssNkVBQXFCLHdJQUF3SSxVQUFVO0FBQzVLLEtBQUssd0VBQWdCO0FBQ3JCLEtBQUssd0VBQWdCO0FBQ3JCLEtBQUsscUVBQWE7QUFDbEIsS0FBSywyRUFBbUIseURBQXlELFVBQVU7QUFDM0YsS0FBSyw0RUFBb0IsMERBQTBELFVBQVU7QUFDN0YsS0FBSyx3RUFBZ0I7QUFDckIsS0FBSyx5RUFBaUIsOEZBQThGLFVBQVU7QUFDOUgsS0FBSyx5RUFBaUI7QUFDdEIsS0FBSywrRUFBdUI7QUFDNUIsS0FBSywrRUFBdUI7QUFDNUIsS0FBSyxzRUFBYztBQUNuQixLQUFLLDhFQUFzQjtBQUMzQixLQUFLLGdGQUF3QjtBQUM3QixLQUFLLDJGQUFtQztBQUN4QyxLQUFLLDhFQUFzQjtBQUMzQixLQUFLLDhFQUFzQjtBQUMzQixLQUFLLHdFQUFnQjtBQUNyQixLQUFLLDZFQUFxQjtBQUMxQixLQUFLLHVFQUFlO0FBQ3BCLEtBQUssNkVBQXFCO0FBQzFCLEtBQUsseUVBQWlCO0FBQ3RCLEtBQUssd0VBQWdCO0FBQ3JCLEtBQUssNkVBQXFCO0FBQzFCLEtBQUsseUVBQWlCO0FBQ3RCLEtBQUsseUVBQWlCO0FBQ3RCLEtBQUssd0VBQWdCO0FBQ3JCLEtBQUsseUZBQWlDO0FBQ3RDLEtBQUssd0ZBQWdDO0FBQ3JDLEtBQUssMkVBQW1CO0FBQ3hCLEtBQUssOEZBQXNDLHFEQUFxRCxVQUFVO0FBQzFHLEtBQUssOEVBQXNCO0FBQzNCLEtBQUssbUZBQTJCO0FBQ2hDLEtBQUssc0ZBQThCLG1JQUFtSSxVQUFVO0FBQ2hMLEtBQUssNEZBQW9DLHFHQUFxRyxVQUFVO0FBQ3hKLEtBQUssZ0ZBQXdCO0FBQzdCLEtBQUssMkVBQW1CO0FBQ3hCLEtBQUssOEVBQXNCO0FBQzNCLEtBQUssNEVBQW9CO0FBQ3pCLEtBQUssNEVBQW9CO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0JBQXdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxzRUFBYztBQUM1Qix1Q0FBdUMsc0VBQWM7QUFDckQsS0FBSztBQUNMO0FBQ0EsY0FBYyx5RUFBaUI7QUFDL0IsdUNBQXVDLHlFQUFpQjtBQUN4RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLHdFQUFnQjtBQUM5Qix1Q0FBdUMsd0VBQWdCO0FBQ3ZELEtBQUs7QUFDTDtBQUNBLGNBQWMsc0VBQWM7QUFDNUIsdUNBQXVDLHNFQUFjO0FBQ3JELEtBQUs7QUFDTDtBQUNBLGNBQWMscUVBQWE7QUFDM0IsdUNBQXVDLHFFQUFhO0FBQ3BELEtBQUs7QUFDTDtBQUNBLGNBQWMseUZBQWlDO0FBQy9DLHVDQUF1Qyx5RkFBaUM7QUFDeEUsS0FBSztBQUNMO0FBQ0EsY0FBYywwRUFBa0I7QUFDaEMsdUNBQXVDLDBFQUFrQjtBQUN6RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLG9GQUE0QjtBQUMxQyx1Q0FBdUMsb0ZBQTRCO0FBQ25FLEtBQUs7QUFDTDtBQUNBLGNBQWMsNkVBQXFCO0FBQ25DLHVDQUF1Qyw2RUFBcUI7QUFDNUQsS0FBSztBQUNMO0FBQ0EsY0FBYyx3RUFBZ0I7QUFDOUIsdUNBQXVDLHdFQUFnQjtBQUN2RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLHdFQUFnQjtBQUM5Qix1Q0FBdUMsd0VBQWdCO0FBQ3ZELEtBQUs7QUFDTDtBQUNBLGNBQWMscUVBQWE7QUFDM0IsdUNBQXVDLHFFQUFhO0FBQ3BELEtBQUs7QUFDTDtBQUNBLGNBQWMsMkVBQW1CO0FBQ2pDLHVDQUF1QywyRUFBbUI7QUFDMUQsS0FBSztBQUNMO0FBQ0EsY0FBYyw0RUFBb0I7QUFDbEMsdUNBQXVDLDRFQUFvQjtBQUMzRCxLQUFLO0FBQ0w7QUFDQSxjQUFjLHdFQUFnQjtBQUM5Qix1Q0FBdUMsd0VBQWdCO0FBQ3ZELEtBQUs7QUFDTDtBQUNBLGNBQWMseUVBQWlCO0FBQy9CLHVDQUF1Qyx5RUFBaUI7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyx5RUFBaUI7QUFDL0IsdUNBQXVDLHlFQUFpQjtBQUN4RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLCtFQUF1QjtBQUNyQyx1Q0FBdUMsK0VBQXVCO0FBQzlELEtBQUs7QUFDTDtBQUNBLGNBQWMsK0VBQXVCO0FBQ3JDLHVDQUF1QywrRUFBdUI7QUFDOUQsS0FBSztBQUNMO0FBQ0EsY0FBYyxzRUFBYztBQUM1Qix1Q0FBdUMsc0VBQWM7QUFDckQsS0FBSztBQUNMO0FBQ0EsY0FBYyw4RUFBc0I7QUFDcEMsdUNBQXVDLDhFQUFzQjtBQUM3RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLGdGQUF3QjtBQUN0Qyx1Q0FBdUMsZ0ZBQXdCO0FBQy9ELEtBQUs7QUFDTDtBQUNBLGNBQWMsMkZBQW1DO0FBQ2pELHVDQUF1QywyRkFBbUM7QUFDMUUsS0FBSztBQUNMO0FBQ0EsY0FBYyw4RUFBc0I7QUFDcEMsdUNBQXVDLDhFQUFzQjtBQUM3RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLDhFQUFzQjtBQUNwQyx1Q0FBdUMsOEVBQXNCO0FBQzdELEtBQUs7QUFDTDtBQUNBLGNBQWMsd0VBQWdCO0FBQzlCLHVDQUF1Qyx3RUFBZ0I7QUFDdkQsS0FBSztBQUNMO0FBQ0EsY0FBYyw2RUFBcUI7QUFDbkMsdUNBQXVDLDZFQUFxQjtBQUM1RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLHVFQUFlO0FBQzdCLHVDQUF1Qyx1RUFBZTtBQUN0RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLDZFQUFxQjtBQUNuQyx1Q0FBdUMsNkVBQXFCO0FBQzVELEtBQUs7QUFDTDtBQUNBLGNBQWMseUVBQWlCO0FBQy9CLHVDQUF1Qyx5RUFBaUI7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyx3RUFBZ0I7QUFDOUIsdUNBQXVDLHdFQUFnQjtBQUN2RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLDZFQUFxQjtBQUNuQyx1Q0FBdUMsNkVBQXFCO0FBQzVELEtBQUs7QUFDTDtBQUNBLGNBQWMseUVBQWlCO0FBQy9CLHVDQUF1Qyx5RUFBaUI7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyx5RUFBaUI7QUFDL0IsdUNBQXVDLHlFQUFpQjtBQUN4RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLHdFQUFnQjtBQUM5Qix1Q0FBdUMsd0VBQWdCO0FBQ3ZELEtBQUs7QUFDTDtBQUNBLGNBQWMseUZBQWlDO0FBQy9DLHVDQUF1Qyx5RkFBaUM7QUFDeEUsS0FBSztBQUNMO0FBQ0EsY0FBYyx3RkFBZ0M7QUFDOUMsdUNBQXVDLHdGQUFnQztBQUN2RSxLQUFLO0FBQ0w7QUFDQSxjQUFjLDJFQUFtQjtBQUNqQyx1Q0FBdUMsMkVBQW1CO0FBQzFELEtBQUs7QUFDTDtBQUNBLGNBQWMsOEZBQXNDO0FBQ3BELHVDQUF1Qyw4RkFBc0M7QUFDN0UsS0FBSztBQUNMO0FBQ0EsY0FBYyw4RUFBc0I7QUFDcEMsdUNBQXVDLDhFQUFzQjtBQUM3RCxLQUFLO0FBQ0w7QUFDQSxjQUFjLG1GQUEyQjtBQUN6Qyx1Q0FBdUMsbUZBQTJCO0FBQ2xFLEtBQUs7QUFDTDtBQUNBLGNBQWMsc0ZBQThCO0FBQzVDLHVDQUF1QyxzRkFBOEI7QUFDckUsS0FBSztBQUNMO0FBQ0EsY0FBYyw0RkFBb0M7QUFDbEQsdUNBQXVDLDRGQUFvQztBQUMzRSxLQUFLO0FBQ0w7QUFDQSxjQUFjLGdGQUF3QjtBQUN0Qyx1Q0FBdUMsZ0ZBQXdCO0FBQy9ELEtBQUs7QUFDTDtBQUNBLGNBQWMsMkVBQW1CO0FBQ2pDLHVDQUF1QywyRUFBbUI7QUFDMUQsS0FBSztBQUNMO0FBQ0EsY0FBYyw4RUFBc0I7QUFDcEMsdUNBQXVDLDhFQUFzQjtBQUM3RCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsaUVBQVM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1RztBQUN2RyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzPzU2YmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBwa2NlTm90Q3JlYXRlZCwgY3J5cHRvTm9uRXhpc3RlbnQsIGVtcHR5TmF2aWdhdGVVcmksIGhhc2hFbXB0eUVycm9yLCBub1N0YXRlSW5IYXNoLCBoYXNoRG9lc05vdENvbnRhaW5Lbm93blByb3BlcnRpZXMsIHVuYWJsZVRvUGFyc2VTdGF0ZSwgc3RhdGVJbnRlcmFjdGlvblR5cGVNaXNtYXRjaCwgaW50ZXJhY3Rpb25JblByb2dyZXNzLCBwb3B1cFdpbmRvd0Vycm9yLCBlbXB0eVdpbmRvd0Vycm9yLCB1c2VyQ2FuY2VsbGVkLCBtb25pdG9yUG9wdXBUaW1lb3V0LCBtb25pdG9yV2luZG93VGltZW91dCwgcmVkaXJlY3RJbklmcmFtZSwgYmxvY2tJZnJhbWVSZWxvYWQsIGJsb2NrTmVzdGVkUG9wdXBzLCBpZnJhbWVDbG9zZWRQcmVtYXR1cmVseSwgc2lsZW50TG9nb3V0VW5zdXBwb3J0ZWQsIG5vQWNjb3VudEVycm9yLCBzaWxlbnRQcm9tcHRWYWx1ZUVycm9yLCBub1Rva2VuUmVxdWVzdENhY2hlRXJyb3IsIHVuYWJsZVRvUGFyc2VUb2tlblJlcXVlc3RDYWNoZUVycm9yLCBub0NhY2hlZEF1dGhvcml0eUVycm9yLCBhdXRoUmVxdWVzdE5vdFNldEVycm9yLCBpbnZhbGlkQ2FjaGVUeXBlLCBub25Ccm93c2VyRW52aXJvbm1lbnQsIGRhdGFiYXNlTm90T3Blbiwgbm9OZXR3b3JrQ29ubmVjdGl2aXR5LCBwb3N0UmVxdWVzdEZhaWxlZCwgZ2V0UmVxdWVzdEZhaWxlZCwgZmFpbGVkVG9QYXJzZVJlc3BvbnNlLCB1bmFibGVUb0xvYWRUb2tlbiwgY3J5cHRvS2V5Tm90Rm91bmQsIGF1dGhDb2RlUmVxdWlyZWQsIGF1dGhDb2RlT3JOYXRpdmVBY2NvdW50SWRSZXF1aXJlZCwgc3BhQ29kZUFuZE5hdGl2ZUFjY291bnRJZFByZXNlbnQsIGRhdGFiYXNlVW5hdmFpbGFibGUsIHVuYWJsZVRvQWNxdWlyZVRva2VuRnJvbU5hdGl2ZVBsYXRmb3JtLCBuYXRpdmVIYW5kc2hha2VUaW1lb3V0LCBuYXRpdmVFeHRlbnNpb25Ob3RJbnN0YWxsZWQsIG5hdGl2ZUNvbm5lY3Rpb25Ob3RFc3RhYmxpc2hlZCwgdW5pbml0aWFsaXplZFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uLCBuYXRpdmVQcm9tcHROb3RTdXBwb3J0ZWQsIGludmFsaWRCYXNlNjRTdHJpbmcsIGludmFsaWRQb3BUb2tlblJlcXVlc3QsIGZhaWxlZFRvQnVpbGRIZWFkZXJzLCBmYWlsZWRUb1BhcnNlSGVhZGVycyB9IGZyb20gJy4vQnJvd3NlckF1dGhFcnJvckNvZGVzLm1qcyc7XG5pbXBvcnQgKiBhcyBCcm93c2VyQXV0aEVycm9yQ29kZXMgZnJvbSAnLi9Ccm93c2VyQXV0aEVycm9yQ29kZXMubWpzJztcbmV4cG9ydCB7IEJyb3dzZXJBdXRoRXJyb3JDb2RlcyB9O1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgRXJyb3JMaW5rID0gXCJGb3IgbW9yZSB2aXNpdDogYWthLm1zL21zYWxqcy9icm93c2VyLWVycm9yc1wiO1xyXG4vKipcclxuICogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2UgY2xhc3MgY29udGFpbmluZyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzLlxyXG4gKi9cclxuY29uc3QgQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzID0ge1xyXG4gICAgW3BrY2VOb3RDcmVhdGVkXTogXCJUaGUgUEtDRSBjb2RlIGNoYWxsZW5nZSBhbmQgdmVyaWZpZXIgY291bGQgbm90IGJlIGdlbmVyYXRlZC5cIixcclxuICAgIFtjcnlwdG9Ob25FeGlzdGVudF06IFwiVGhlIGNyeXB0byBvYmplY3Qgb3IgZnVuY3Rpb24gaXMgbm90IGF2YWlsYWJsZS5cIixcclxuICAgIFtlbXB0eU5hdmlnYXRlVXJpXTogXCJOYXZpZ2F0aW9uIFVSSSBpcyBlbXB0eS4gUGxlYXNlIGNoZWNrIHN0YWNrIHRyYWNlIGZvciBtb3JlIGluZm8uXCIsXHJcbiAgICBbaGFzaEVtcHR5RXJyb3JdOiBgSGFzaCB2YWx1ZSBjYW5ub3QgYmUgcHJvY2Vzc2VkIGJlY2F1c2UgaXQgaXMgZW1wdHkuIFBsZWFzZSB2ZXJpZnkgdGhhdCB5b3VyIHJlZGlyZWN0VXJpIGlzIG5vdCBjbGVhcmluZyB0aGUgaGFzaC4gJHtFcnJvckxpbmt9YCxcclxuICAgIFtub1N0YXRlSW5IYXNoXTogXCJIYXNoIGRvZXMgbm90IGNvbnRhaW4gc3RhdGUuIFBsZWFzZSB2ZXJpZnkgdGhhdCB0aGUgcmVxdWVzdCBvcmlnaW5hdGVkIGZyb20gbXNhbC5cIixcclxuICAgIFtoYXNoRG9lc05vdENvbnRhaW5Lbm93blByb3BlcnRpZXNdOiBgSGFzaCBkb2VzIG5vdCBjb250YWluIGtub3duIHByb3Blcml0ZXMuIFBsZWFzZSB2ZXJpZnkgdGhhdCB5b3VyIHJlZGlyZWN0VXJpIGlzIG5vdCBjaGFuZ2luZyB0aGUgaGFzaC4gICR7RXJyb3JMaW5rfWAsXHJcbiAgICBbdW5hYmxlVG9QYXJzZVN0YXRlXTogXCJVbmFibGUgdG8gcGFyc2Ugc3RhdGUuIFBsZWFzZSB2ZXJpZnkgdGhhdCB0aGUgcmVxdWVzdCBvcmlnaW5hdGVkIGZyb20gbXNhbC5cIixcclxuICAgIFtzdGF0ZUludGVyYWN0aW9uVHlwZU1pc21hdGNoXTogXCJIYXNoIGNvbnRhaW5zIHN0YXRlIGJ1dCB0aGUgaW50ZXJhY3Rpb24gdHlwZSBkb2VzIG5vdCBtYXRjaCB0aGUgY2FsbGVyLlwiLFxyXG4gICAgW2ludGVyYWN0aW9uSW5Qcm9ncmVzc106IGBJbnRlcmFjdGlvbiBpcyBjdXJyZW50bHkgaW4gcHJvZ3Jlc3MuIFBsZWFzZSBlbnN1cmUgdGhhdCB0aGlzIGludGVyYWN0aW9uIGhhcyBiZWVuIGNvbXBsZXRlZCBiZWZvcmUgY2FsbGluZyBhbiBpbnRlcmFjdGl2ZSBBUEkuICAgJHtFcnJvckxpbmt9YCxcclxuICAgIFtwb3B1cFdpbmRvd0Vycm9yXTogXCJFcnJvciBvcGVuaW5nIHBvcHVwIHdpbmRvdy4gVGhpcyBjYW4gaGFwcGVuIGlmIHlvdSBhcmUgdXNpbmcgSUUgb3IgaWYgcG9wdXBzIGFyZSBibG9ja2VkIGluIHRoZSBicm93c2VyLlwiLFxyXG4gICAgW2VtcHR5V2luZG93RXJyb3JdOiBcIndpbmRvdy5vcGVuIHJldHVybmVkIG51bGwgb3IgdW5kZWZpbmVkIHdpbmRvdyBvYmplY3QuXCIsXHJcbiAgICBbdXNlckNhbmNlbGxlZF06IFwiVXNlciBjYW5jZWxsZWQgdGhlIGZsb3cuXCIsXHJcbiAgICBbbW9uaXRvclBvcHVwVGltZW91dF06IGBUb2tlbiBhY3F1aXNpdGlvbiBpbiBwb3B1cCBmYWlsZWQgZHVlIHRvIHRpbWVvdXQuICAke0Vycm9yTGlua31gLFxyXG4gICAgW21vbml0b3JXaW5kb3dUaW1lb3V0XTogYFRva2VuIGFjcXVpc2l0aW9uIGluIGlmcmFtZSBmYWlsZWQgZHVlIHRvIHRpbWVvdXQuICAke0Vycm9yTGlua31gLFxyXG4gICAgW3JlZGlyZWN0SW5JZnJhbWVdOiBcIlJlZGlyZWN0cyBhcmUgbm90IHN1cHBvcnRlZCBmb3IgaWZyYW1lZCBvciBicm9rZXJlZCBhcHBsaWNhdGlvbnMuIFBsZWFzZSBlbnN1cmUgeW91IGFyZSB1c2luZyBNU0FMLmpzIGluIGEgdG9wIGZyYW1lIG9mIHRoZSB3aW5kb3cgaWYgdXNpbmcgdGhlIHJlZGlyZWN0IEFQSXMsIG9yIHVzZSB0aGUgcG9wdXAgQVBJcy5cIixcclxuICAgIFtibG9ja0lmcmFtZVJlbG9hZF06IGBSZXF1ZXN0IHdhcyBibG9ja2VkIGluc2lkZSBhbiBpZnJhbWUgYmVjYXVzZSBNU0FMIGRldGVjdGVkIGFuIGF1dGhlbnRpY2F0aW9uIHJlc3BvbnNlLiAgJHtFcnJvckxpbmt9YCxcclxuICAgIFtibG9ja05lc3RlZFBvcHVwc106IFwiUmVxdWVzdCB3YXMgYmxvY2tlZCBpbnNpZGUgYSBwb3B1cCBiZWNhdXNlIE1TQUwgZGV0ZWN0ZWQgaXQgd2FzIHJ1bm5pbmcgaW4gYSBwb3B1cC5cIixcclxuICAgIFtpZnJhbWVDbG9zZWRQcmVtYXR1cmVseV06IFwiVGhlIGlmcmFtZSBiZWluZyBtb25pdG9yZWQgd2FzIGNsb3NlZCBwcmVtYXR1cmVseS5cIixcclxuICAgIFtzaWxlbnRMb2dvdXRVbnN1cHBvcnRlZF06IFwiU2lsZW50IGxvZ291dCBub3Qgc3VwcG9ydGVkLiBQbGVhc2UgY2FsbCBsb2dvdXRSZWRpcmVjdCBvciBsb2dvdXRQb3B1cCBpbnN0ZWFkLlwiLFxyXG4gICAgW25vQWNjb3VudEVycm9yXTogXCJObyBhY2NvdW50IG9iamVjdCBwcm92aWRlZCB0byBhY3F1aXJlVG9rZW5TaWxlbnQgYW5kIG5vIGFjdGl2ZSBhY2NvdW50IGhhcyBiZWVuIHNldC4gUGxlYXNlIGNhbGwgc2V0QWN0aXZlQWNjb3VudCBvciBwcm92aWRlIGFuIGFjY291bnQgb24gdGhlIHJlcXVlc3QuXCIsXHJcbiAgICBbc2lsZW50UHJvbXB0VmFsdWVFcnJvcl06IFwiVGhlIHZhbHVlIGdpdmVuIGZvciB0aGUgcHJvbXB0IHZhbHVlIGlzIG5vdCB2YWxpZCBmb3Igc2lsZW50IHJlcXVlc3RzIC0gbXVzdCBiZSBzZXQgdG8gJ25vbmUnIG9yICdub19zZXNzaW9uJy5cIixcclxuICAgIFtub1Rva2VuUmVxdWVzdENhY2hlRXJyb3JdOiBcIk5vIHRva2VuIHJlcXVlc3QgZm91bmQgaW4gY2FjaGUuXCIsXHJcbiAgICBbdW5hYmxlVG9QYXJzZVRva2VuUmVxdWVzdENhY2hlRXJyb3JdOiBcIlRoZSBjYWNoZWQgdG9rZW4gcmVxdWVzdCBjb3VsZCBub3QgYmUgcGFyc2VkLlwiLFxyXG4gICAgW25vQ2FjaGVkQXV0aG9yaXR5RXJyb3JdOiBcIk5vIGNhY2hlZCBhdXRob3JpdHkgZm91bmQuXCIsXHJcbiAgICBbYXV0aFJlcXVlc3ROb3RTZXRFcnJvcl06IFwiQXV0aCBSZXF1ZXN0IG5vdCBzZXQuIFBsZWFzZSBlbnN1cmUgaW5pdGlhdGVBdXRoUmVxdWVzdCB3YXMgY2FsbGVkIGZyb20gdGhlIEludGVyYWN0aW9uSGFuZGxlclwiLFxyXG4gICAgW2ludmFsaWRDYWNoZVR5cGVdOiBcIkludmFsaWQgY2FjaGUgdHlwZVwiLFxyXG4gICAgW25vbkJyb3dzZXJFbnZpcm9ubWVudF06IFwiTG9naW4gYW5kIHRva2VuIHJlcXVlc3RzIGFyZSBub3Qgc3VwcG9ydGVkIGluIG5vbi1icm93c2VyIGVudmlyb25tZW50cy5cIixcclxuICAgIFtkYXRhYmFzZU5vdE9wZW5dOiBcIkRhdGFiYXNlIGlzIG5vdCBvcGVuIVwiLFxyXG4gICAgW25vTmV0d29ya0Nvbm5lY3Rpdml0eV06IFwiTm8gbmV0d29yayBjb25uZWN0aXZpdHkuIENoZWNrIHlvdXIgaW50ZXJuZXQgY29ubmVjdGlvbi5cIixcclxuICAgIFtwb3N0UmVxdWVzdEZhaWxlZF06IFwiTmV0d29yayByZXF1ZXN0IGZhaWxlZDogSWYgdGhlIGJyb3dzZXIgdGhyZXcgYSBDT1JTIGVycm9yLCBjaGVjayB0aGF0IHRoZSByZWRpcmVjdFVyaSBpcyByZWdpc3RlcmVkIGluIHRoZSBBenVyZSBBcHAgUG9ydGFsIGFzIHR5cGUgJ1NQQSdcIixcclxuICAgIFtnZXRSZXF1ZXN0RmFpbGVkXTogXCJOZXR3b3JrIHJlcXVlc3QgZmFpbGVkLiBQbGVhc2UgY2hlY2sgdGhlIG5ldHdvcmsgdHJhY2UgdG8gZGV0ZXJtaW5lIHJvb3QgY2F1c2UuXCIsXHJcbiAgICBbZmFpbGVkVG9QYXJzZVJlc3BvbnNlXTogXCJGYWlsZWQgdG8gcGFyc2UgbmV0d29yayByZXNwb25zZS4gQ2hlY2sgbmV0d29yayB0cmFjZS5cIixcclxuICAgIFt1bmFibGVUb0xvYWRUb2tlbl06IFwiRXJyb3IgbG9hZGluZyB0b2tlbiB0byBjYWNoZS5cIixcclxuICAgIFtjcnlwdG9LZXlOb3RGb3VuZF06IFwiQ3J5cHRvZ3JhcGhpYyBLZXkgb3IgS2V5cGFpciBub3QgZm91bmQgaW4gYnJvd3NlciBzdG9yYWdlLlwiLFxyXG4gICAgW2F1dGhDb2RlUmVxdWlyZWRdOiBcIkFuIGF1dGhvcml6YXRpb24gY29kZSBtdXN0IGJlIHByb3ZpZGVkIChhcyB0aGUgYGNvZGVgIHByb3BlcnR5IG9uIHRoZSByZXF1ZXN0KSB0byB0aGlzIGZsb3cuXCIsXHJcbiAgICBbYXV0aENvZGVPck5hdGl2ZUFjY291bnRJZFJlcXVpcmVkXTogXCJBbiBhdXRob3JpemF0aW9uIGNvZGUgb3IgbmF0aXZlQWNjb3VudElkIG11c3QgYmUgcHJvdmlkZWQgdG8gdGhpcyBmbG93LlwiLFxyXG4gICAgW3NwYUNvZGVBbmROYXRpdmVBY2NvdW50SWRQcmVzZW50XTogXCJSZXF1ZXN0IGNhbm5vdCBjb250YWluIGJvdGggc3BhIGNvZGUgYW5kIG5hdGl2ZSBhY2NvdW50IGlkLlwiLFxyXG4gICAgW2RhdGFiYXNlVW5hdmFpbGFibGVdOiBcIkluZGV4ZWREQiwgd2hpY2ggaXMgcmVxdWlyZWQgZm9yIHBlcnNpc3RlbnQgY3J5cHRvZ3JhcGhpYyBrZXkgc3RvcmFnZSwgaXMgdW5hdmFpbGFibGUuIFRoaXMgbWF5IGJlIGNhdXNlZCBieSBicm93c2VyIHByaXZhY3kgZmVhdHVyZXMgd2hpY2ggYmxvY2sgcGVyc2lzdGVudCBzdG9yYWdlIGluIHRoaXJkLXBhcnR5IGNvbnRleHRzLlwiLFxyXG4gICAgW3VuYWJsZVRvQWNxdWlyZVRva2VuRnJvbU5hdGl2ZVBsYXRmb3JtXTogYFVuYWJsZSB0byBhY3F1aXJlIHRva2VuIGZyb20gbmF0aXZlIHBsYXRmb3JtLiAgJHtFcnJvckxpbmt9YCxcclxuICAgIFtuYXRpdmVIYW5kc2hha2VUaW1lb3V0XTogXCJUaW1lZCBvdXQgd2hpbGUgYXR0ZW1wdGluZyB0byBlc3RhYmxpc2ggY29ubmVjdGlvbiB0byBicm93c2VyIGV4dGVuc2lvblwiLFxyXG4gICAgW25hdGl2ZUV4dGVuc2lvbk5vdEluc3RhbGxlZF06IFwiTmF0aXZlIGV4dGVuc2lvbiBpcyBub3QgaW5zdGFsbGVkLiBJZiB5b3UgdGhpbmsgdGhpcyBpcyBhIG1pc3Rha2UgY2FsbCB0aGUgaW5pdGlhbGl6ZSBmdW5jdGlvbi5cIixcclxuICAgIFtuYXRpdmVDb25uZWN0aW9uTm90RXN0YWJsaXNoZWRdOiBgQ29ubmVjdGlvbiB0byBuYXRpdmUgcGxhdGZvcm0gaGFzIG5vdCBiZWVuIGVzdGFibGlzaGVkLiBQbGVhc2UgaW5zdGFsbCBhIGNvbXBhdGlibGUgYnJvd3NlciBleHRlbnNpb24gYW5kIHJ1biBpbml0aWFsaXplKCkuICAke0Vycm9yTGlua31gLFxyXG4gICAgW3VuaW5pdGlhbGl6ZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbl06IGBZb3UgbXVzdCBjYWxsIGFuZCBhd2FpdCB0aGUgaW5pdGlhbGl6ZSBmdW5jdGlvbiBiZWZvcmUgYXR0ZW1wdGluZyB0byBjYWxsIGFueSBvdGhlciBNU0FMIEFQSS4gICR7RXJyb3JMaW5rfWAsXHJcbiAgICBbbmF0aXZlUHJvbXB0Tm90U3VwcG9ydGVkXTogXCJUaGUgcHJvdmlkZWQgcHJvbXB0IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIG5hdGl2ZSBwbGF0Zm9ybS4gVGhpcyByZXF1ZXN0IHNob3VsZCBiZSByb3V0ZWQgdG8gdGhlIHdlYiBiYXNlZCBmbG93LlwiLFxyXG4gICAgW2ludmFsaWRCYXNlNjRTdHJpbmddOiBcIkludmFsaWQgYmFzZTY0IGVuY29kZWQgc3RyaW5nLlwiLFxyXG4gICAgW2ludmFsaWRQb3BUb2tlblJlcXVlc3RdOiBcIkludmFsaWQgUG9QIHRva2VuIHJlcXVlc3QuIFRoZSByZXF1ZXN0IHNob3VsZCBub3QgaGF2ZSBib3RoIGEgcG9wS2lkIHZhbHVlIGFuZCBzaWduUG9wVG9rZW4gc2V0IHRvIHRydWUuXCIsXHJcbiAgICBbZmFpbGVkVG9CdWlsZEhlYWRlcnNdOiBcIkZhaWxlZCB0byBidWlsZCByZXF1ZXN0IGhlYWRlcnMgb2JqZWN0LlwiLFxyXG4gICAgW2ZhaWxlZFRvUGFyc2VIZWFkZXJzXTogXCJGYWlsZWQgdG8gcGFyc2UgcmVzcG9uc2UgaGVhZGVyc1wiLFxyXG59O1xyXG4vKipcclxuICogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2UgY2xhc3MgY29udGFpbmluZyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzLlxyXG4gKiBAZGVwcmVjYXRlZCBVc2UgZXhwb3J0ZWQgQnJvd3NlckF1dGhFcnJvckNvZGVzIGluc3RlYWQuXHJcbiAqIEluIHlvdXIgYXBwIHlvdSBjYW4gZG8gOlxyXG4gKiBgYGBcclxuICogaW1wb3J0IHsgQnJvd3NlckF1dGhFcnJvckNvZGVzIH0gZnJvbSBcIkBhenVyZS9tc2FsLWJyb3dzZXJcIjtcclxuICogYGBgXHJcbiAqL1xyXG5jb25zdCBCcm93c2VyQXV0aEVycm9yTWVzc2FnZSA9IHtcclxuICAgIHBrY2VOb3RHZW5lcmF0ZWQ6IHtcclxuICAgICAgICBjb2RlOiBwa2NlTm90Q3JlYXRlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbcGtjZU5vdENyZWF0ZWRdLFxyXG4gICAgfSxcclxuICAgIGNyeXB0b0RvZXNOb3RFeGlzdDoge1xyXG4gICAgICAgIGNvZGU6IGNyeXB0b05vbkV4aXN0ZW50LFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tjcnlwdG9Ob25FeGlzdGVudF0sXHJcbiAgICB9LFxyXG4gICAgZW1wdHlOYXZpZ2F0ZVVyaUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogZW1wdHlOYXZpZ2F0ZVVyaSxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbZW1wdHlOYXZpZ2F0ZVVyaV0sXHJcbiAgICB9LFxyXG4gICAgaGFzaEVtcHR5RXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBoYXNoRW1wdHlFcnJvcixcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbaGFzaEVtcHR5RXJyb3JdLFxyXG4gICAgfSxcclxuICAgIGhhc2hEb2VzTm90Q29udGFpblN0YXRlRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBub1N0YXRlSW5IYXNoLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tub1N0YXRlSW5IYXNoXSxcclxuICAgIH0sXHJcbiAgICBoYXNoRG9lc05vdENvbnRhaW5Lbm93blByb3BlcnRpZXNFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IGhhc2hEb2VzTm90Q29udGFpbktub3duUHJvcGVydGllcyxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbaGFzaERvZXNOb3RDb250YWluS25vd25Qcm9wZXJ0aWVzXSxcclxuICAgIH0sXHJcbiAgICB1bmFibGVUb1BhcnNlU3RhdGVFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IHVuYWJsZVRvUGFyc2VTdGF0ZSxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbdW5hYmxlVG9QYXJzZVN0YXRlXSxcclxuICAgIH0sXHJcbiAgICBzdGF0ZUludGVyYWN0aW9uVHlwZU1pc21hdGNoRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBzdGF0ZUludGVyYWN0aW9uVHlwZU1pc21hdGNoLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tzdGF0ZUludGVyYWN0aW9uVHlwZU1pc21hdGNoXSxcclxuICAgIH0sXHJcbiAgICBpbnRlcmFjdGlvbkluUHJvZ3Jlc3M6IHtcclxuICAgICAgICBjb2RlOiBpbnRlcmFjdGlvbkluUHJvZ3Jlc3MsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW2ludGVyYWN0aW9uSW5Qcm9ncmVzc10sXHJcbiAgICB9LFxyXG4gICAgcG9wdXBXaW5kb3dFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IHBvcHVwV2luZG93RXJyb3IsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW3BvcHVwV2luZG93RXJyb3JdLFxyXG4gICAgfSxcclxuICAgIGVtcHR5V2luZG93RXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBlbXB0eVdpbmRvd0Vycm9yLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tlbXB0eVdpbmRvd0Vycm9yXSxcclxuICAgIH0sXHJcbiAgICB1c2VyQ2FuY2VsbGVkRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiB1c2VyQ2FuY2VsbGVkLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1t1c2VyQ2FuY2VsbGVkXSxcclxuICAgIH0sXHJcbiAgICBtb25pdG9yUG9wdXBUaW1lb3V0RXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBtb25pdG9yUG9wdXBUaW1lb3V0LFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1ttb25pdG9yUG9wdXBUaW1lb3V0XSxcclxuICAgIH0sXHJcbiAgICBtb25pdG9ySWZyYW1lVGltZW91dEVycm9yOiB7XHJcbiAgICAgICAgY29kZTogbW9uaXRvcldpbmRvd1RpbWVvdXQsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW21vbml0b3JXaW5kb3dUaW1lb3V0XSxcclxuICAgIH0sXHJcbiAgICByZWRpcmVjdEluSWZyYW1lRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiByZWRpcmVjdEluSWZyYW1lLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tyZWRpcmVjdEluSWZyYW1lXSxcclxuICAgIH0sXHJcbiAgICBibG9ja1Rva2VuUmVxdWVzdHNJbkhpZGRlbklmcmFtZUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogYmxvY2tJZnJhbWVSZWxvYWQsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW2Jsb2NrSWZyYW1lUmVsb2FkXSxcclxuICAgIH0sXHJcbiAgICBibG9ja0FjcXVpcmVUb2tlbkluUG9wdXBzRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBibG9ja05lc3RlZFBvcHVwcyxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbYmxvY2tOZXN0ZWRQb3B1cHNdLFxyXG4gICAgfSxcclxuICAgIGlmcmFtZUNsb3NlZFByZW1hdHVyZWx5RXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBpZnJhbWVDbG9zZWRQcmVtYXR1cmVseSxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbaWZyYW1lQ2xvc2VkUHJlbWF0dXJlbHldLFxyXG4gICAgfSxcclxuICAgIHNpbGVudExvZ291dFVuc3VwcG9ydGVkRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBzaWxlbnRMb2dvdXRVbnN1cHBvcnRlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbc2lsZW50TG9nb3V0VW5zdXBwb3J0ZWRdLFxyXG4gICAgfSxcclxuICAgIG5vQWNjb3VudEVycm9yOiB7XHJcbiAgICAgICAgY29kZTogbm9BY2NvdW50RXJyb3IsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW25vQWNjb3VudEVycm9yXSxcclxuICAgIH0sXHJcbiAgICBzaWxlbnRQcm9tcHRWYWx1ZUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogc2lsZW50UHJvbXB0VmFsdWVFcnJvcixcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbc2lsZW50UHJvbXB0VmFsdWVFcnJvcl0sXHJcbiAgICB9LFxyXG4gICAgbm9Ub2tlblJlcXVlc3RDYWNoZUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogbm9Ub2tlblJlcXVlc3RDYWNoZUVycm9yLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tub1Rva2VuUmVxdWVzdENhY2hlRXJyb3JdLFxyXG4gICAgfSxcclxuICAgIHVuYWJsZVRvUGFyc2VUb2tlblJlcXVlc3RDYWNoZUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogdW5hYmxlVG9QYXJzZVRva2VuUmVxdWVzdENhY2hlRXJyb3IsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW3VuYWJsZVRvUGFyc2VUb2tlblJlcXVlc3RDYWNoZUVycm9yXSxcclxuICAgIH0sXHJcbiAgICBub0NhY2hlZEF1dGhvcml0eUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogbm9DYWNoZWRBdXRob3JpdHlFcnJvcixcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbbm9DYWNoZWRBdXRob3JpdHlFcnJvcl0sXHJcbiAgICB9LFxyXG4gICAgYXV0aFJlcXVlc3ROb3RTZXQ6IHtcclxuICAgICAgICBjb2RlOiBhdXRoUmVxdWVzdE5vdFNldEVycm9yLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1thdXRoUmVxdWVzdE5vdFNldEVycm9yXSxcclxuICAgIH0sXHJcbiAgICBpbnZhbGlkQ2FjaGVUeXBlOiB7XHJcbiAgICAgICAgY29kZTogaW52YWxpZENhY2hlVHlwZSxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbaW52YWxpZENhY2hlVHlwZV0sXHJcbiAgICB9LFxyXG4gICAgbm90SW5Ccm93c2VyRW52aXJvbm1lbnQ6IHtcclxuICAgICAgICBjb2RlOiBub25Ccm93c2VyRW52aXJvbm1lbnQsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW25vbkJyb3dzZXJFbnZpcm9ubWVudF0sXHJcbiAgICB9LFxyXG4gICAgZGF0YWJhc2VOb3RPcGVuOiB7XHJcbiAgICAgICAgY29kZTogZGF0YWJhc2VOb3RPcGVuLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tkYXRhYmFzZU5vdE9wZW5dLFxyXG4gICAgfSxcclxuICAgIG5vTmV0d29ya0Nvbm5lY3Rpdml0eToge1xyXG4gICAgICAgIGNvZGU6IG5vTmV0d29ya0Nvbm5lY3Rpdml0eSxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbbm9OZXR3b3JrQ29ubmVjdGl2aXR5XSxcclxuICAgIH0sXHJcbiAgICBwb3N0UmVxdWVzdEZhaWxlZDoge1xyXG4gICAgICAgIGNvZGU6IHBvc3RSZXF1ZXN0RmFpbGVkLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1twb3N0UmVxdWVzdEZhaWxlZF0sXHJcbiAgICB9LFxyXG4gICAgZ2V0UmVxdWVzdEZhaWxlZDoge1xyXG4gICAgICAgIGNvZGU6IGdldFJlcXVlc3RGYWlsZWQsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW2dldFJlcXVlc3RGYWlsZWRdLFxyXG4gICAgfSxcclxuICAgIGZhaWxlZFRvUGFyc2VOZXR3b3JrUmVzcG9uc2U6IHtcclxuICAgICAgICBjb2RlOiBmYWlsZWRUb1BhcnNlUmVzcG9uc2UsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW2ZhaWxlZFRvUGFyc2VSZXNwb25zZV0sXHJcbiAgICB9LFxyXG4gICAgdW5hYmxlVG9Mb2FkVG9rZW5FcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IHVuYWJsZVRvTG9hZFRva2VuLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1t1bmFibGVUb0xvYWRUb2tlbl0sXHJcbiAgICB9LFxyXG4gICAgc2lnbmluZ0tleU5vdEZvdW5kSW5TdG9yYWdlOiB7XHJcbiAgICAgICAgY29kZTogY3J5cHRvS2V5Tm90Rm91bmQsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW2NyeXB0b0tleU5vdEZvdW5kXSxcclxuICAgIH0sXHJcbiAgICBhdXRoQ29kZVJlcXVpcmVkOiB7XHJcbiAgICAgICAgY29kZTogYXV0aENvZGVSZXF1aXJlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbYXV0aENvZGVSZXF1aXJlZF0sXHJcbiAgICB9LFxyXG4gICAgYXV0aENvZGVPck5hdGl2ZUFjY291bnRSZXF1aXJlZDoge1xyXG4gICAgICAgIGNvZGU6IGF1dGhDb2RlT3JOYXRpdmVBY2NvdW50SWRSZXF1aXJlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbYXV0aENvZGVPck5hdGl2ZUFjY291bnRJZFJlcXVpcmVkXSxcclxuICAgIH0sXHJcbiAgICBzcGFDb2RlQW5kTmF0aXZlQWNjb3VudFByZXNlbnQ6IHtcclxuICAgICAgICBjb2RlOiBzcGFDb2RlQW5kTmF0aXZlQWNjb3VudElkUHJlc2VudCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbc3BhQ29kZUFuZE5hdGl2ZUFjY291bnRJZFByZXNlbnRdLFxyXG4gICAgfSxcclxuICAgIGRhdGFiYXNlVW5hdmFpbGFibGU6IHtcclxuICAgICAgICBjb2RlOiBkYXRhYmFzZVVuYXZhaWxhYmxlLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tkYXRhYmFzZVVuYXZhaWxhYmxlXSxcclxuICAgIH0sXHJcbiAgICB1bmFibGVUb0FjcXVpcmVUb2tlbkZyb21OYXRpdmVQbGF0Zm9ybToge1xyXG4gICAgICAgIGNvZGU6IHVuYWJsZVRvQWNxdWlyZVRva2VuRnJvbU5hdGl2ZVBsYXRmb3JtLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1t1bmFibGVUb0FjcXVpcmVUb2tlbkZyb21OYXRpdmVQbGF0Zm9ybV0sXHJcbiAgICB9LFxyXG4gICAgbmF0aXZlSGFuZHNoYWtlVGltZW91dDoge1xyXG4gICAgICAgIGNvZGU6IG5hdGl2ZUhhbmRzaGFrZVRpbWVvdXQsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW25hdGl2ZUhhbmRzaGFrZVRpbWVvdXRdLFxyXG4gICAgfSxcclxuICAgIG5hdGl2ZUV4dGVuc2lvbk5vdEluc3RhbGxlZDoge1xyXG4gICAgICAgIGNvZGU6IG5hdGl2ZUV4dGVuc2lvbk5vdEluc3RhbGxlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbbmF0aXZlRXh0ZW5zaW9uTm90SW5zdGFsbGVkXSxcclxuICAgIH0sXHJcbiAgICBuYXRpdmVDb25uZWN0aW9uTm90RXN0YWJsaXNoZWQ6IHtcclxuICAgICAgICBjb2RlOiBuYXRpdmVDb25uZWN0aW9uTm90RXN0YWJsaXNoZWQsXHJcbiAgICAgICAgZGVzYzogQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzW25hdGl2ZUNvbm5lY3Rpb25Ob3RFc3RhYmxpc2hlZF0sXHJcbiAgICB9LFxyXG4gICAgdW5pbml0aWFsaXplZFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uOiB7XHJcbiAgICAgICAgY29kZTogdW5pbml0aWFsaXplZFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1t1bmluaXRpYWxpemVkUHVibGljQ2xpZW50QXBwbGljYXRpb25dLFxyXG4gICAgfSxcclxuICAgIG5hdGl2ZVByb21wdE5vdFN1cHBvcnRlZDoge1xyXG4gICAgICAgIGNvZGU6IG5hdGl2ZVByb21wdE5vdFN1cHBvcnRlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbbmF0aXZlUHJvbXB0Tm90U3VwcG9ydGVkXSxcclxuICAgIH0sXHJcbiAgICBpbnZhbGlkQmFzZTY0U3RyaW5nRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBpbnZhbGlkQmFzZTY0U3RyaW5nLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tpbnZhbGlkQmFzZTY0U3RyaW5nXSxcclxuICAgIH0sXHJcbiAgICBpbnZhbGlkUG9wVG9rZW5SZXF1ZXN0OiB7XHJcbiAgICAgICAgY29kZTogaW52YWxpZFBvcFRva2VuUmVxdWVzdCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZXNbaW52YWxpZFBvcFRva2VuUmVxdWVzdF0sXHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogQnJvd3NlciBsaWJyYXJ5IGVycm9yIGNsYXNzIHRocm93biBieSB0aGUgTVNBTC5qcyBsaWJyYXJ5IGZvciBTUEFzXHJcbiAqL1xyXG5jbGFzcyBCcm93c2VyQXV0aEVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgc3ViRXJyb3IpIHtcclxuICAgICAgICBzdXBlcihlcnJvckNvZGUsIEJyb3dzZXJBdXRoRXJyb3JNZXNzYWdlc1tlcnJvckNvZGVdLCBzdWJFcnJvcik7XHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEJyb3dzZXJBdXRoRXJyb3IucHJvdG90eXBlKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIkJyb3dzZXJBdXRoRXJyb3JcIjtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGVycm9yQ29kZSwgc3ViRXJyb3IpIHtcclxuICAgIHJldHVybiBuZXcgQnJvd3NlckF1dGhFcnJvcihlcnJvckNvZGUsIHN1YkVycm9yKTtcclxufVxuXG5leHBvcnQgeyBCcm93c2VyQXV0aEVycm9yLCBCcm93c2VyQXV0aEVycm9yTWVzc2FnZSwgQnJvd3NlckF1dGhFcnJvck1lc3NhZ2VzLCBjcmVhdGVCcm93c2VyQXV0aEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ccm93c2VyQXV0aEVycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authCodeOrNativeAccountIdRequired: function() { return /* binding */ authCodeOrNativeAccountIdRequired; },\n/* harmony export */   authCodeRequired: function() { return /* binding */ authCodeRequired; },\n/* harmony export */   authRequestNotSetError: function() { return /* binding */ authRequestNotSetError; },\n/* harmony export */   blockIframeReload: function() { return /* binding */ blockIframeReload; },\n/* harmony export */   blockNestedPopups: function() { return /* binding */ blockNestedPopups; },\n/* harmony export */   cryptoKeyNotFound: function() { return /* binding */ cryptoKeyNotFound; },\n/* harmony export */   cryptoNonExistent: function() { return /* binding */ cryptoNonExistent; },\n/* harmony export */   databaseNotOpen: function() { return /* binding */ databaseNotOpen; },\n/* harmony export */   databaseUnavailable: function() { return /* binding */ databaseUnavailable; },\n/* harmony export */   emptyNavigateUri: function() { return /* binding */ emptyNavigateUri; },\n/* harmony export */   emptyWindowError: function() { return /* binding */ emptyWindowError; },\n/* harmony export */   failedToBuildHeaders: function() { return /* binding */ failedToBuildHeaders; },\n/* harmony export */   failedToParseHeaders: function() { return /* binding */ failedToParseHeaders; },\n/* harmony export */   failedToParseResponse: function() { return /* binding */ failedToParseResponse; },\n/* harmony export */   getRequestFailed: function() { return /* binding */ getRequestFailed; },\n/* harmony export */   hashDoesNotContainKnownProperties: function() { return /* binding */ hashDoesNotContainKnownProperties; },\n/* harmony export */   hashEmptyError: function() { return /* binding */ hashEmptyError; },\n/* harmony export */   iframeClosedPrematurely: function() { return /* binding */ iframeClosedPrematurely; },\n/* harmony export */   interactionInProgress: function() { return /* binding */ interactionInProgress; },\n/* harmony export */   invalidBase64String: function() { return /* binding */ invalidBase64String; },\n/* harmony export */   invalidCacheType: function() { return /* binding */ invalidCacheType; },\n/* harmony export */   invalidPopTokenRequest: function() { return /* binding */ invalidPopTokenRequest; },\n/* harmony export */   monitorPopupTimeout: function() { return /* binding */ monitorPopupTimeout; },\n/* harmony export */   monitorWindowTimeout: function() { return /* binding */ monitorWindowTimeout; },\n/* harmony export */   nativeConnectionNotEstablished: function() { return /* binding */ nativeConnectionNotEstablished; },\n/* harmony export */   nativeExtensionNotInstalled: function() { return /* binding */ nativeExtensionNotInstalled; },\n/* harmony export */   nativeHandshakeTimeout: function() { return /* binding */ nativeHandshakeTimeout; },\n/* harmony export */   nativePromptNotSupported: function() { return /* binding */ nativePromptNotSupported; },\n/* harmony export */   noAccountError: function() { return /* binding */ noAccountError; },\n/* harmony export */   noCachedAuthorityError: function() { return /* binding */ noCachedAuthorityError; },\n/* harmony export */   noNetworkConnectivity: function() { return /* binding */ noNetworkConnectivity; },\n/* harmony export */   noStateInHash: function() { return /* binding */ noStateInHash; },\n/* harmony export */   noTokenRequestCacheError: function() { return /* binding */ noTokenRequestCacheError; },\n/* harmony export */   nonBrowserEnvironment: function() { return /* binding */ nonBrowserEnvironment; },\n/* harmony export */   pkceNotCreated: function() { return /* binding */ pkceNotCreated; },\n/* harmony export */   popupWindowError: function() { return /* binding */ popupWindowError; },\n/* harmony export */   postRequestFailed: function() { return /* binding */ postRequestFailed; },\n/* harmony export */   redirectInIframe: function() { return /* binding */ redirectInIframe; },\n/* harmony export */   silentLogoutUnsupported: function() { return /* binding */ silentLogoutUnsupported; },\n/* harmony export */   silentPromptValueError: function() { return /* binding */ silentPromptValueError; },\n/* harmony export */   spaCodeAndNativeAccountIdPresent: function() { return /* binding */ spaCodeAndNativeAccountIdPresent; },\n/* harmony export */   stateInteractionTypeMismatch: function() { return /* binding */ stateInteractionTypeMismatch; },\n/* harmony export */   unableToAcquireTokenFromNativePlatform: function() { return /* binding */ unableToAcquireTokenFromNativePlatform; },\n/* harmony export */   unableToLoadToken: function() { return /* binding */ unableToLoadToken; },\n/* harmony export */   unableToParseState: function() { return /* binding */ unableToParseState; },\n/* harmony export */   unableToParseTokenRequestCacheError: function() { return /* binding */ unableToParseTokenRequestCacheError; },\n/* harmony export */   uninitializedPublicClientApplication: function() { return /* binding */ uninitializedPublicClientApplication; },\n/* harmony export */   userCancelled: function() { return /* binding */ userCancelled; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst pkceNotCreated = \"pkce_not_created\";\r\nconst cryptoNonExistent = \"crypto_nonexistent\";\r\nconst emptyNavigateUri = \"empty_navigate_uri\";\r\nconst hashEmptyError = \"hash_empty_error\";\r\nconst noStateInHash = \"no_state_in_hash\";\r\nconst hashDoesNotContainKnownProperties = \"hash_does_not_contain_known_properties\";\r\nconst unableToParseState = \"unable_to_parse_state\";\r\nconst stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\r\nconst interactionInProgress = \"interaction_in_progress\";\r\nconst popupWindowError = \"popup_window_error\";\r\nconst emptyWindowError = \"empty_window_error\";\r\nconst userCancelled = \"user_cancelled\";\r\nconst monitorPopupTimeout = \"monitor_popup_timeout\";\r\nconst monitorWindowTimeout = \"monitor_window_timeout\";\r\nconst redirectInIframe = \"redirect_in_iframe\";\r\nconst blockIframeReload = \"block_iframe_reload\";\r\nconst blockNestedPopups = \"block_nested_popups\";\r\nconst iframeClosedPrematurely = \"iframe_closed_prematurely\";\r\nconst silentLogoutUnsupported = \"silent_logout_unsupported\";\r\nconst noAccountError = \"no_account_error\";\r\nconst silentPromptValueError = \"silent_prompt_value_error\";\r\nconst noTokenRequestCacheError = \"no_token_request_cache_error\";\r\nconst unableToParseTokenRequestCacheError = \"unable_to_parse_token_request_cache_error\";\r\nconst noCachedAuthorityError = \"no_cached_authority_error\";\r\nconst authRequestNotSetError = \"auth_request_not_set_error\";\r\nconst invalidCacheType = \"invalid_cache_type\";\r\nconst nonBrowserEnvironment = \"non_browser_environment\";\r\nconst databaseNotOpen = \"database_not_open\";\r\nconst noNetworkConnectivity = \"no_network_connectivity\";\r\nconst postRequestFailed = \"post_request_failed\";\r\nconst getRequestFailed = \"get_request_failed\";\r\nconst failedToParseResponse = \"failed_to_parse_response\";\r\nconst unableToLoadToken = \"unable_to_load_token\";\r\nconst cryptoKeyNotFound = \"crypto_key_not_found\";\r\nconst authCodeRequired = \"auth_code_required\";\r\nconst authCodeOrNativeAccountIdRequired = \"auth_code_or_nativeAccountId_required\";\r\nconst spaCodeAndNativeAccountIdPresent = \"spa_code_and_nativeAccountId_present\";\r\nconst databaseUnavailable = \"database_unavailable\";\r\nconst unableToAcquireTokenFromNativePlatform = \"unable_to_acquire_token_from_native_platform\";\r\nconst nativeHandshakeTimeout = \"native_handshake_timeout\";\r\nconst nativeExtensionNotInstalled = \"native_extension_not_installed\";\r\nconst nativeConnectionNotEstablished = \"native_connection_not_established\";\r\nconst uninitializedPublicClientApplication = \"uninitialized_public_client_application\";\r\nconst nativePromptNotSupported = \"native_prompt_not_supported\";\r\nconst invalidBase64String = \"invalid_base64_string\";\r\nconst invalidPopTokenRequest = \"invalid_pop_token_request\";\r\nconst failedToBuildHeaders = \"failed_to_build_headers\";\r\nconst failedToParseHeaders = \"failed_to_parse_headers\";\n\n\n//# sourceMappingURL=BrowserAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4bEM7QUFDOWxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvZXJyb3IvQnJvd3NlckF1dGhFcnJvckNvZGVzLm1qcz85YjhjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IHBrY2VOb3RDcmVhdGVkID0gXCJwa2NlX25vdF9jcmVhdGVkXCI7XHJcbmNvbnN0IGNyeXB0b05vbkV4aXN0ZW50ID0gXCJjcnlwdG9fbm9uZXhpc3RlbnRcIjtcclxuY29uc3QgZW1wdHlOYXZpZ2F0ZVVyaSA9IFwiZW1wdHlfbmF2aWdhdGVfdXJpXCI7XHJcbmNvbnN0IGhhc2hFbXB0eUVycm9yID0gXCJoYXNoX2VtcHR5X2Vycm9yXCI7XHJcbmNvbnN0IG5vU3RhdGVJbkhhc2ggPSBcIm5vX3N0YXRlX2luX2hhc2hcIjtcclxuY29uc3QgaGFzaERvZXNOb3RDb250YWluS25vd25Qcm9wZXJ0aWVzID0gXCJoYXNoX2RvZXNfbm90X2NvbnRhaW5fa25vd25fcHJvcGVydGllc1wiO1xyXG5jb25zdCB1bmFibGVUb1BhcnNlU3RhdGUgPSBcInVuYWJsZV90b19wYXJzZV9zdGF0ZVwiO1xyXG5jb25zdCBzdGF0ZUludGVyYWN0aW9uVHlwZU1pc21hdGNoID0gXCJzdGF0ZV9pbnRlcmFjdGlvbl90eXBlX21pc21hdGNoXCI7XHJcbmNvbnN0IGludGVyYWN0aW9uSW5Qcm9ncmVzcyA9IFwiaW50ZXJhY3Rpb25faW5fcHJvZ3Jlc3NcIjtcclxuY29uc3QgcG9wdXBXaW5kb3dFcnJvciA9IFwicG9wdXBfd2luZG93X2Vycm9yXCI7XHJcbmNvbnN0IGVtcHR5V2luZG93RXJyb3IgPSBcImVtcHR5X3dpbmRvd19lcnJvclwiO1xyXG5jb25zdCB1c2VyQ2FuY2VsbGVkID0gXCJ1c2VyX2NhbmNlbGxlZFwiO1xyXG5jb25zdCBtb25pdG9yUG9wdXBUaW1lb3V0ID0gXCJtb25pdG9yX3BvcHVwX3RpbWVvdXRcIjtcclxuY29uc3QgbW9uaXRvcldpbmRvd1RpbWVvdXQgPSBcIm1vbml0b3Jfd2luZG93X3RpbWVvdXRcIjtcclxuY29uc3QgcmVkaXJlY3RJbklmcmFtZSA9IFwicmVkaXJlY3RfaW5faWZyYW1lXCI7XHJcbmNvbnN0IGJsb2NrSWZyYW1lUmVsb2FkID0gXCJibG9ja19pZnJhbWVfcmVsb2FkXCI7XHJcbmNvbnN0IGJsb2NrTmVzdGVkUG9wdXBzID0gXCJibG9ja19uZXN0ZWRfcG9wdXBzXCI7XHJcbmNvbnN0IGlmcmFtZUNsb3NlZFByZW1hdHVyZWx5ID0gXCJpZnJhbWVfY2xvc2VkX3ByZW1hdHVyZWx5XCI7XHJcbmNvbnN0IHNpbGVudExvZ291dFVuc3VwcG9ydGVkID0gXCJzaWxlbnRfbG9nb3V0X3Vuc3VwcG9ydGVkXCI7XHJcbmNvbnN0IG5vQWNjb3VudEVycm9yID0gXCJub19hY2NvdW50X2Vycm9yXCI7XHJcbmNvbnN0IHNpbGVudFByb21wdFZhbHVlRXJyb3IgPSBcInNpbGVudF9wcm9tcHRfdmFsdWVfZXJyb3JcIjtcclxuY29uc3Qgbm9Ub2tlblJlcXVlc3RDYWNoZUVycm9yID0gXCJub190b2tlbl9yZXF1ZXN0X2NhY2hlX2Vycm9yXCI7XHJcbmNvbnN0IHVuYWJsZVRvUGFyc2VUb2tlblJlcXVlc3RDYWNoZUVycm9yID0gXCJ1bmFibGVfdG9fcGFyc2VfdG9rZW5fcmVxdWVzdF9jYWNoZV9lcnJvclwiO1xyXG5jb25zdCBub0NhY2hlZEF1dGhvcml0eUVycm9yID0gXCJub19jYWNoZWRfYXV0aG9yaXR5X2Vycm9yXCI7XHJcbmNvbnN0IGF1dGhSZXF1ZXN0Tm90U2V0RXJyb3IgPSBcImF1dGhfcmVxdWVzdF9ub3Rfc2V0X2Vycm9yXCI7XHJcbmNvbnN0IGludmFsaWRDYWNoZVR5cGUgPSBcImludmFsaWRfY2FjaGVfdHlwZVwiO1xyXG5jb25zdCBub25Ccm93c2VyRW52aXJvbm1lbnQgPSBcIm5vbl9icm93c2VyX2Vudmlyb25tZW50XCI7XHJcbmNvbnN0IGRhdGFiYXNlTm90T3BlbiA9IFwiZGF0YWJhc2Vfbm90X29wZW5cIjtcclxuY29uc3Qgbm9OZXR3b3JrQ29ubmVjdGl2aXR5ID0gXCJub19uZXR3b3JrX2Nvbm5lY3Rpdml0eVwiO1xyXG5jb25zdCBwb3N0UmVxdWVzdEZhaWxlZCA9IFwicG9zdF9yZXF1ZXN0X2ZhaWxlZFwiO1xyXG5jb25zdCBnZXRSZXF1ZXN0RmFpbGVkID0gXCJnZXRfcmVxdWVzdF9mYWlsZWRcIjtcclxuY29uc3QgZmFpbGVkVG9QYXJzZVJlc3BvbnNlID0gXCJmYWlsZWRfdG9fcGFyc2VfcmVzcG9uc2VcIjtcclxuY29uc3QgdW5hYmxlVG9Mb2FkVG9rZW4gPSBcInVuYWJsZV90b19sb2FkX3Rva2VuXCI7XHJcbmNvbnN0IGNyeXB0b0tleU5vdEZvdW5kID0gXCJjcnlwdG9fa2V5X25vdF9mb3VuZFwiO1xyXG5jb25zdCBhdXRoQ29kZVJlcXVpcmVkID0gXCJhdXRoX2NvZGVfcmVxdWlyZWRcIjtcclxuY29uc3QgYXV0aENvZGVPck5hdGl2ZUFjY291bnRJZFJlcXVpcmVkID0gXCJhdXRoX2NvZGVfb3JfbmF0aXZlQWNjb3VudElkX3JlcXVpcmVkXCI7XHJcbmNvbnN0IHNwYUNvZGVBbmROYXRpdmVBY2NvdW50SWRQcmVzZW50ID0gXCJzcGFfY29kZV9hbmRfbmF0aXZlQWNjb3VudElkX3ByZXNlbnRcIjtcclxuY29uc3QgZGF0YWJhc2VVbmF2YWlsYWJsZSA9IFwiZGF0YWJhc2VfdW5hdmFpbGFibGVcIjtcclxuY29uc3QgdW5hYmxlVG9BY3F1aXJlVG9rZW5Gcm9tTmF0aXZlUGxhdGZvcm0gPSBcInVuYWJsZV90b19hY3F1aXJlX3Rva2VuX2Zyb21fbmF0aXZlX3BsYXRmb3JtXCI7XHJcbmNvbnN0IG5hdGl2ZUhhbmRzaGFrZVRpbWVvdXQgPSBcIm5hdGl2ZV9oYW5kc2hha2VfdGltZW91dFwiO1xyXG5jb25zdCBuYXRpdmVFeHRlbnNpb25Ob3RJbnN0YWxsZWQgPSBcIm5hdGl2ZV9leHRlbnNpb25fbm90X2luc3RhbGxlZFwiO1xyXG5jb25zdCBuYXRpdmVDb25uZWN0aW9uTm90RXN0YWJsaXNoZWQgPSBcIm5hdGl2ZV9jb25uZWN0aW9uX25vdF9lc3RhYmxpc2hlZFwiO1xyXG5jb25zdCB1bmluaXRpYWxpemVkUHVibGljQ2xpZW50QXBwbGljYXRpb24gPSBcInVuaW5pdGlhbGl6ZWRfcHVibGljX2NsaWVudF9hcHBsaWNhdGlvblwiO1xyXG5jb25zdCBuYXRpdmVQcm9tcHROb3RTdXBwb3J0ZWQgPSBcIm5hdGl2ZV9wcm9tcHRfbm90X3N1cHBvcnRlZFwiO1xyXG5jb25zdCBpbnZhbGlkQmFzZTY0U3RyaW5nID0gXCJpbnZhbGlkX2Jhc2U2NF9zdHJpbmdcIjtcclxuY29uc3QgaW52YWxpZFBvcFRva2VuUmVxdWVzdCA9IFwiaW52YWxpZF9wb3BfdG9rZW5fcmVxdWVzdFwiO1xyXG5jb25zdCBmYWlsZWRUb0J1aWxkSGVhZGVycyA9IFwiZmFpbGVkX3RvX2J1aWxkX2hlYWRlcnNcIjtcclxuY29uc3QgZmFpbGVkVG9QYXJzZUhlYWRlcnMgPSBcImZhaWxlZF90b19wYXJzZV9oZWFkZXJzXCI7XG5cbmV4cG9ydCB7IGF1dGhDb2RlT3JOYXRpdmVBY2NvdW50SWRSZXF1aXJlZCwgYXV0aENvZGVSZXF1aXJlZCwgYXV0aFJlcXVlc3ROb3RTZXRFcnJvciwgYmxvY2tJZnJhbWVSZWxvYWQsIGJsb2NrTmVzdGVkUG9wdXBzLCBjcnlwdG9LZXlOb3RGb3VuZCwgY3J5cHRvTm9uRXhpc3RlbnQsIGRhdGFiYXNlTm90T3BlbiwgZGF0YWJhc2VVbmF2YWlsYWJsZSwgZW1wdHlOYXZpZ2F0ZVVyaSwgZW1wdHlXaW5kb3dFcnJvciwgZmFpbGVkVG9CdWlsZEhlYWRlcnMsIGZhaWxlZFRvUGFyc2VIZWFkZXJzLCBmYWlsZWRUb1BhcnNlUmVzcG9uc2UsIGdldFJlcXVlc3RGYWlsZWQsIGhhc2hEb2VzTm90Q29udGFpbktub3duUHJvcGVydGllcywgaGFzaEVtcHR5RXJyb3IsIGlmcmFtZUNsb3NlZFByZW1hdHVyZWx5LCBpbnRlcmFjdGlvbkluUHJvZ3Jlc3MsIGludmFsaWRCYXNlNjRTdHJpbmcsIGludmFsaWRDYWNoZVR5cGUsIGludmFsaWRQb3BUb2tlblJlcXVlc3QsIG1vbml0b3JQb3B1cFRpbWVvdXQsIG1vbml0b3JXaW5kb3dUaW1lb3V0LCBuYXRpdmVDb25uZWN0aW9uTm90RXN0YWJsaXNoZWQsIG5hdGl2ZUV4dGVuc2lvbk5vdEluc3RhbGxlZCwgbmF0aXZlSGFuZHNoYWtlVGltZW91dCwgbmF0aXZlUHJvbXB0Tm90U3VwcG9ydGVkLCBub0FjY291bnRFcnJvciwgbm9DYWNoZWRBdXRob3JpdHlFcnJvciwgbm9OZXR3b3JrQ29ubmVjdGl2aXR5LCBub1N0YXRlSW5IYXNoLCBub1Rva2VuUmVxdWVzdENhY2hlRXJyb3IsIG5vbkJyb3dzZXJFbnZpcm9ubWVudCwgcGtjZU5vdENyZWF0ZWQsIHBvcHVwV2luZG93RXJyb3IsIHBvc3RSZXF1ZXN0RmFpbGVkLCByZWRpcmVjdEluSWZyYW1lLCBzaWxlbnRMb2dvdXRVbnN1cHBvcnRlZCwgc2lsZW50UHJvbXB0VmFsdWVFcnJvciwgc3BhQ29kZUFuZE5hdGl2ZUFjY291bnRJZFByZXNlbnQsIHN0YXRlSW50ZXJhY3Rpb25UeXBlTWlzbWF0Y2gsIHVuYWJsZVRvQWNxdWlyZVRva2VuRnJvbU5hdGl2ZVBsYXRmb3JtLCB1bmFibGVUb0xvYWRUb2tlbiwgdW5hYmxlVG9QYXJzZVN0YXRlLCB1bmFibGVUb1BhcnNlVG9rZW5SZXF1ZXN0Q2FjaGVFcnJvciwgdW5pbml0aWFsaXplZFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uLCB1c2VyQ2FuY2VsbGVkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ccm93c2VyQXV0aEVycm9yQ29kZXMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserConfigurationAuthError: function() { return /* binding */ BrowserConfigurationAuthError; },\n/* harmony export */   BrowserConfigurationAuthErrorCodes: function() { return /* reexport module object */ _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   BrowserConfigurationAuthErrorMessage: function() { return /* binding */ BrowserConfigurationAuthErrorMessage; },\n/* harmony export */   BrowserConfigurationAuthErrorMessages: function() { return /* binding */ BrowserConfigurationAuthErrorMessages; },\n/* harmony export */   createBrowserConfigurationAuthError: function() { return /* binding */ createBrowserConfigurationAuthError; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrowserConfigurationAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst BrowserConfigurationAuthErrorMessages = {\r\n    [_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.storageNotSupported]: \"Given storage configuration option was not supported.\",\r\n    [_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stubbedPublicClientApplicationCalled]: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\r\n    [_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.inMemRedirectUnavailable]: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\r\n};\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use BrowserAuthErrorCodes instead\r\n */\r\nconst BrowserConfigurationAuthErrorMessage = {\r\n    storageNotSupportedError: {\r\n        code: _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.storageNotSupported,\r\n        desc: BrowserConfigurationAuthErrorMessages[_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.storageNotSupported],\r\n    },\r\n    stubPcaInstanceCalled: {\r\n        code: _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stubbedPublicClientApplicationCalled,\r\n        desc: BrowserConfigurationAuthErrorMessages[_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stubbedPublicClientApplicationCalled],\r\n    },\r\n    inMemRedirectUnavailable: {\r\n        code: _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.inMemRedirectUnavailable,\r\n        desc: BrowserConfigurationAuthErrorMessages[_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.inMemRedirectUnavailable],\r\n    },\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nclass BrowserConfigurationAuthError extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"BrowserConfigurationAuthError\";\r\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\r\n    }\r\n}\r\nfunction createBrowserConfigurationAuthError(errorCode) {\r\n    return new BrowserConfigurationAuthError(errorCode, BrowserConfigurationAuthErrorMessages[errorCode]);\r\n}\n\n\n//# sourceMappingURL=BrowserConfigurationAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUMwQztBQUN3RjtBQUNoRDtBQUNqRDs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssd0ZBQW1CO0FBQ3hCLEtBQUsseUdBQW9DO0FBQ3pDLEtBQUssNkZBQXdCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx3RkFBbUI7QUFDakMsb0RBQW9ELHdGQUFtQjtBQUN2RSxLQUFLO0FBQ0w7QUFDQSxjQUFjLHlHQUFvQztBQUNsRCxvREFBb0QseUdBQW9DO0FBQ3hGLEtBQUs7QUFDTDtBQUNBLGNBQWMsNkZBQXdCO0FBQ3RDLG9EQUFvRCw2RkFBd0I7QUFDNUUsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGlFQUFTO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMko7QUFDM0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9lcnJvci9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5tanM/MzQwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcbmltcG9ydCB7IHN0b3JhZ2VOb3RTdXBwb3J0ZWQsIHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCwgaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlIH0gZnJvbSAnLi9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvckNvZGVzLm1qcyc7XG5pbXBvcnQgKiBhcyBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvckNvZGVzIGZyb20gJy4vQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JDb2Rlcy5tanMnO1xuZXhwb3J0IHsgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JDb2RlcyB9O1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIFtzdG9yYWdlTm90U3VwcG9ydGVkXTogXCJHaXZlbiBzdG9yYWdlIGNvbmZpZ3VyYXRpb24gb3B0aW9uIHdhcyBub3Qgc3VwcG9ydGVkLlwiLFxyXG4gICAgW3N0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZF06IFwiU3R1YiBpbnN0YW5jZSBvZiBQdWJsaWMgQ2xpZW50IEFwcGxpY2F0aW9uIHdhcyBjYWxsZWQuIElmIHVzaW5nIG1zYWwtcmVhY3QsIHBsZWFzZSBlbnN1cmUgY29udGV4dCBpcyBub3QgdXNlZCB3aXRob3V0IGEgcHJvdmlkZXIuIEZvciBtb3JlIHZpc2l0OiBha2EubXMvbXNhbGpzL2Jyb3dzZXItZXJyb3JzXCIsXHJcbiAgICBbaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlXTogXCJSZWRpcmVjdCBjYW5ub3QgYmUgc3VwcG9ydGVkLiBJbi1tZW1vcnkgc3RvcmFnZSB3YXMgc2VsZWN0ZWQgYW5kIHN0b3JlQXV0aFN0YXRlSW5Db29raWU9ZmFsc2UsIHdoaWNoIHdvdWxkIGNhdXNlIHRoZSBsaWJyYXJ5IHRvIGJlIHVuYWJsZSB0byBoYW5kbGUgdGhlIGluY29taW5nIGhhc2guIElmIHlvdSB3b3VsZCBsaWtlIHRvIHVzZSB0aGUgcmVkaXJlY3QgQVBJLCBwbGVhc2UgdXNlIHNlc3Npb24vbG9jYWxTdG9yYWdlIG9yIHNldCBzdG9yZUF1dGhTdGF0ZUluQ29va2llPXRydWUuXCIsXHJcbn07XHJcbi8qKlxyXG4gKiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZSBjbGFzcyBjb250YWluaW5nIHN0cmluZyBjb25zdGFudHMgdXNlZCBieSBlcnJvciBjb2RlcyBhbmQgbWVzc2FnZXMuXHJcbiAqIEBkZXByZWNhdGVkIFVzZSBCcm93c2VyQXV0aEVycm9yQ29kZXMgaW5zdGVhZFxyXG4gKi9cclxuY29uc3QgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JNZXNzYWdlID0ge1xyXG4gICAgc3RvcmFnZU5vdFN1cHBvcnRlZEVycm9yOiB7XHJcbiAgICAgICAgY29kZTogc3RvcmFnZU5vdFN1cHBvcnRlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvck1lc3NhZ2VzW3N0b3JhZ2VOb3RTdXBwb3J0ZWRdLFxyXG4gICAgfSxcclxuICAgIHN0dWJQY2FJbnN0YW5jZUNhbGxlZDoge1xyXG4gICAgICAgIGNvZGU6IHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvck1lc3NhZ2VzW3N0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZF0sXHJcbiAgICB9LFxyXG4gICAgaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlOiB7XHJcbiAgICAgICAgY29kZTogaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yTWVzc2FnZXNbaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlXSxcclxuICAgIH0sXHJcbn07XHJcbi8qKlxyXG4gKiBCcm93c2VyIGxpYnJhcnkgZXJyb3IgY2xhc3MgdGhyb3duIGJ5IHRoZSBNU0FMLmpzIGxpYnJhcnkgZm9yIFNQQXNcclxuICovXHJcbmNsYXNzIEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICAgICAgc3VwZXIoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IFwiQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JcIjtcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IucHJvdG90eXBlKTtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvcihlcnJvckNvZGUpIHtcclxuICAgIHJldHVybiBuZXcgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IoZXJyb3JDb2RlLCBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvck1lc3NhZ2VzW2Vycm9yQ29kZV0pO1xyXG59XG5cbmV4cG9ydCB7IEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLCBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvck1lc3NhZ2UsIEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yTWVzc2FnZXMsIGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inMemRedirectUnavailable: function() { return /* binding */ inMemRedirectUnavailable; },\n/* harmony export */   storageNotSupported: function() { return /* binding */ storageNotSupported; },\n/* harmony export */   stubbedPublicClientApplicationCalled: function() { return /* binding */ stubbedPublicClientApplicationCalled; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst storageNotSupported = \"storage_not_supported\";\r\nconst stubbedPublicClientApplicationCalled = \"stubbed_public_client_application_called\";\r\nconst inMemRedirectUnavailable = \"in_mem_redirect_unavailable\";\n\n\n//# sourceMappingURL=BrowserConfigurationAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0Y7QUFDL0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9lcnJvci9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvckNvZGVzLm1qcz8xYTc3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IHN0b3JhZ2VOb3RTdXBwb3J0ZWQgPSBcInN0b3JhZ2Vfbm90X3N1cHBvcnRlZFwiO1xyXG5jb25zdCBzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb25DYWxsZWQgPSBcInN0dWJiZWRfcHVibGljX2NsaWVudF9hcHBsaWNhdGlvbl9jYWxsZWRcIjtcclxuY29uc3QgaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlID0gXCJpbl9tZW1fcmVkaXJlY3RfdW5hdmFpbGFibGVcIjtcblxuZXhwb3J0IHsgaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlLCBzdG9yYWdlTm90U3VwcG9ydGVkLCBzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb25DYWxsZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yQ29kZXMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeAuthError: function() { return /* binding */ NativeAuthError; },\n/* harmony export */   NativeAuthErrorMessages: function() { return /* binding */ NativeAuthErrorMessages; },\n/* harmony export */   createNativeAuthError: function() { return /* binding */ createNativeAuthError; },\n/* harmony export */   isFatalNativeAuthError: function() { return /* binding */ isFatalNativeAuthError; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NativeAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../broker/nativeBroker/NativeStatusCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs\");\n/* harmony import */ var _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst INVALID_METHOD_ERROR = -2147186943;\r\nconst NativeAuthErrorMessages = {\r\n    [_NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userSwitch]: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\r\n};\r\nclass NativeAuthError extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, description, ext) {\r\n        super(errorCode, description);\r\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\r\n        this.name = \"NativeAuthError\";\r\n        this.ext = ext;\r\n    }\r\n}\r\n/**\r\n * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n */\r\nfunction isFatalNativeAuthError(error) {\r\n    if (error.ext &&\r\n        error.ext.status &&\r\n        (error.ext.status === _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.PERSISTENT_ERROR ||\r\n            error.ext.status === _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.DISABLED)) {\r\n        return true;\r\n    }\r\n    if (error.ext &&\r\n        error.ext.error &&\r\n        error.ext.error === INVALID_METHOD_ERROR) {\r\n        return true;\r\n    }\r\n    switch (error.errorCode) {\r\n        case _NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.contentError:\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n/**\r\n * Create the appropriate error object based on the WAM status code.\r\n * @param code\r\n * @param description\r\n * @param ext\r\n * @returns\r\n */\r\nfunction createNativeAuthError(code, description, ext) {\r\n    if (ext && ext.status) {\r\n        switch (ext.status) {\r\n            case _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_UNAVAILABLE:\r\n                return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.createInteractionRequiredAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.InteractionRequiredAuthErrorCodes.nativeAccountUnavailable);\r\n            case _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.USER_INTERACTION_REQUIRED:\r\n                return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.InteractionRequiredAuthError(code, description);\r\n            case _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.USER_CANCEL:\r\n                return (0,_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.userCancelled);\r\n            case _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.NO_NETWORK:\r\n                return (0,_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.noNetworkConnectivity);\r\n        }\r\n    }\r\n    return new NativeAuthError(code, NativeAuthErrorMessages[code] || description, ext);\r\n}\n\n\n//# sourceMappingURL=NativeAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL05hdGl2ZUF1dGhFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUMrSTtBQUM1RjtBQUNNO0FBQzZGO0FBQ2hGOztBQUVuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLGlFQUFVO0FBQ2Y7QUFDQSw4QkFBOEIsaUVBQVM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsd0ZBQWdCO0FBQzlDLGlDQUFpQyxnRkFBUTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtRUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsMkZBQW1CO0FBQ3BDLHVCQUF1Qiw4RkFBa0MsQ0FBQyx5RkFBaUM7QUFDM0YsaUJBQWlCLGlHQUF5QjtBQUMxQywyQkFBMkIsb0ZBQTRCO0FBQ3ZELGlCQUFpQixtRkFBVztBQUM1Qix1QkFBdUIsNkVBQXNCLENBQUMscUVBQWE7QUFDM0QsaUJBQWlCLGtGQUFVO0FBQzNCLHVCQUF1Qiw2RUFBc0IsQ0FBQyw2RUFBcUI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7O0FBRW1HO0FBQ25HIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvZXJyb3IvTmF0aXZlQXV0aEVycm9yLm1qcz9iMTliIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQXV0aEVycm9yLCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLCBjcmVhdGVJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yQ29kZXMgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBjb250ZW50RXJyb3IsIHVzZXJTd2l0Y2ggfSBmcm9tICcuL05hdGl2ZUF1dGhFcnJvckNvZGVzLm1qcyc7XG5pbXBvcnQgeyBQRVJTSVNURU5UX0VSUk9SLCBESVNBQkxFRCwgTk9fTkVUV09SSywgVVNFUl9DQU5DRUwsIFVTRVJfSU5URVJBQ1RJT05fUkVRVUlSRUQsIEFDQ09VTlRfVU5BVkFJTEFCTEUgfSBmcm9tICcuLi9icm9rZXIvbmF0aXZlQnJva2VyL05hdGl2ZVN0YXR1c0NvZGVzLm1qcyc7XG5pbXBvcnQgeyBub05ldHdvcmtDb25uZWN0aXZpdHksIHVzZXJDYW5jZWxsZWQgfSBmcm9tICcuL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgSU5WQUxJRF9NRVRIT0RfRVJST1IgPSAtMjE0NzE4Njk0MztcclxuY29uc3QgTmF0aXZlQXV0aEVycm9yTWVzc2FnZXMgPSB7XHJcbiAgICBbdXNlclN3aXRjaF06IFwiVXNlciBhdHRlbXB0ZWQgdG8gc3dpdGNoIGFjY291bnRzIGluIHRoZSBuYXRpdmUgYnJva2VyLCB3aGljaCBpcyBub3QgYWxsb3dlZC4gQWxsIG5ldyBhY2NvdW50cyBtdXN0IHNpZ24taW4gdGhyb3VnaCB0aGUgc3RhbmRhcmQgd2ViIGZsb3cgZmlyc3QsIHBsZWFzZSB0cnkgYWdhaW4uXCIsXHJcbn07XHJcbmNsYXNzIE5hdGl2ZUF1dGhFcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihlcnJvckNvZGUsIGRlc2NyaXB0aW9uLCBleHQpIHtcclxuICAgICAgICBzdXBlcihlcnJvckNvZGUsIGRlc2NyaXB0aW9uKTtcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgTmF0aXZlQXV0aEVycm9yLnByb3RvdHlwZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gXCJOYXRpdmVBdXRoRXJyb3JcIjtcclxuICAgICAgICB0aGlzLmV4dCA9IGV4dDtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogVGhlc2UgZXJyb3JzIHNob3VsZCByZXN1bHQgaW4gYSBmYWxsYmFjayB0byB0aGUgJ3N0YW5kYXJkJyBicm93c2VyIGJhc2VkIGF1dGggZmxvdy5cclxuICovXHJcbmZ1bmN0aW9uIGlzRmF0YWxOYXRpdmVBdXRoRXJyb3IoZXJyb3IpIHtcclxuICAgIGlmIChlcnJvci5leHQgJiZcclxuICAgICAgICBlcnJvci5leHQuc3RhdHVzICYmXHJcbiAgICAgICAgKGVycm9yLmV4dC5zdGF0dXMgPT09IFBFUlNJU1RFTlRfRVJST1IgfHxcclxuICAgICAgICAgICAgZXJyb3IuZXh0LnN0YXR1cyA9PT0gRElTQUJMRUQpKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBpZiAoZXJyb3IuZXh0ICYmXHJcbiAgICAgICAgZXJyb3IuZXh0LmVycm9yICYmXHJcbiAgICAgICAgZXJyb3IuZXh0LmVycm9yID09PSBJTlZBTElEX01FVEhPRF9FUlJPUikge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgc3dpdGNoIChlcnJvci5lcnJvckNvZGUpIHtcclxuICAgICAgICBjYXNlIGNvbnRlbnRFcnJvcjpcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBDcmVhdGUgdGhlIGFwcHJvcHJpYXRlIGVycm9yIG9iamVjdCBiYXNlZCBvbiB0aGUgV0FNIHN0YXR1cyBjb2RlLlxyXG4gKiBAcGFyYW0gY29kZVxyXG4gKiBAcGFyYW0gZGVzY3JpcHRpb25cclxuICogQHBhcmFtIGV4dFxyXG4gKiBAcmV0dXJuc1xyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlTmF0aXZlQXV0aEVycm9yKGNvZGUsIGRlc2NyaXB0aW9uLCBleHQpIHtcclxuICAgIGlmIChleHQgJiYgZXh0LnN0YXR1cykge1xyXG4gICAgICAgIHN3aXRjaCAoZXh0LnN0YXR1cykge1xyXG4gICAgICAgICAgICBjYXNlIEFDQ09VTlRfVU5BVkFJTEFCTEU6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvcihJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yQ29kZXMubmF0aXZlQWNjb3VudFVuYXZhaWxhYmxlKTtcclxuICAgICAgICAgICAgY2FzZSBVU0VSX0lOVEVSQUNUSU9OX1JFUVVJUkVEOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKGNvZGUsIGRlc2NyaXB0aW9uKTtcclxuICAgICAgICAgICAgY2FzZSBVU0VSX0NBTkNFTDpcclxuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVCcm93c2VyQXV0aEVycm9yKHVzZXJDYW5jZWxsZWQpO1xyXG4gICAgICAgICAgICBjYXNlIE5PX05FVFdPUks6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQnJvd3NlckF1dGhFcnJvcihub05ldHdvcmtDb25uZWN0aXZpdHkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBuZXcgTmF0aXZlQXV0aEVycm9yKGNvZGUsIE5hdGl2ZUF1dGhFcnJvck1lc3NhZ2VzW2NvZGVdIHx8IGRlc2NyaXB0aW9uLCBleHQpO1xyXG59XG5cbmV4cG9ydCB7IE5hdGl2ZUF1dGhFcnJvciwgTmF0aXZlQXV0aEVycm9yTWVzc2FnZXMsIGNyZWF0ZU5hdGl2ZUF1dGhFcnJvciwgaXNGYXRhbE5hdGl2ZUF1dGhFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmF0aXZlQXV0aEVycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentError: function() { return /* binding */ contentError; },\n/* harmony export */   userSwitch: function() { return /* binding */ userSwitch; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst contentError = \"ContentError\";\r\nconst userSwitch = \"user_switch\";\n\n\n//# sourceMappingURL=NativeAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL05hdGl2ZUF1dGhFcnJvckNvZGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW9DO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvZXJyb3IvTmF0aXZlQXV0aEVycm9yQ29kZXMubWpzP2FiNGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgY29udGVudEVycm9yID0gXCJDb250ZW50RXJyb3JcIjtcclxuY29uc3QgdXNlclN3aXRjaCA9IFwidXNlcl9zd2l0Y2hcIjtcblxuZXhwb3J0IHsgY29udGVudEVycm9yLCB1c2VyU3dpdGNoIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1OYXRpdmVBdXRoRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedAppAuthError: function() { return /* binding */ NestedAppAuthError; },\n/* harmony export */   NestedAppAuthErrorMessage: function() { return /* binding */ NestedAppAuthErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * NestedAppAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst NestedAppAuthErrorMessage = {\r\n    unsupportedMethod: {\r\n        code: \"unsupported_method\",\r\n        desc: \"This method is not supported in nested app environment.\",\r\n    },\r\n};\r\nclass NestedAppAuthError extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        Object.setPrototypeOf(this, NestedAppAuthError.prototype);\r\n        this.name = \"NestedAppAuthError\";\r\n    }\r\n    static createUnsupportedError() {\r\n        return new NestedAppAuthError(NestedAppAuthErrorMessage.unsupportedMethod.code, NestedAppAuthErrorMessage.unsupportedMethod.desc);\r\n    }\r\n}\n\n\n//# sourceMappingURL=NestedAppAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL05lc3RlZEFwcEF1dGhFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUMwQzs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGlDQUFpQyxpRUFBUztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlEO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvZXJyb3IvTmVzdGVkQXBwQXV0aEVycm9yLm1qcz9jY2Q5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIE5lc3RlZEFwcEF1dGhFcnJvck1lc3NhZ2UgY2xhc3MgY29udGFpbmluZyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzLlxyXG4gKi9cclxuY29uc3QgTmVzdGVkQXBwQXV0aEVycm9yTWVzc2FnZSA9IHtcclxuICAgIHVuc3VwcG9ydGVkTWV0aG9kOiB7XHJcbiAgICAgICAgY29kZTogXCJ1bnN1cHBvcnRlZF9tZXRob2RcIixcclxuICAgICAgICBkZXNjOiBcIlRoaXMgbWV0aG9kIGlzIG5vdCBzdXBwb3J0ZWQgaW4gbmVzdGVkIGFwcCBlbnZpcm9ubWVudC5cIixcclxuICAgIH0sXHJcbn07XHJcbmNsYXNzIE5lc3RlZEFwcEF1dGhFcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKTtcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgTmVzdGVkQXBwQXV0aEVycm9yLnByb3RvdHlwZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gXCJOZXN0ZWRBcHBBdXRoRXJyb3JcIjtcclxuICAgIH1cclxuICAgIHN0YXRpYyBjcmVhdGVVbnN1cHBvcnRlZEVycm9yKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgTmVzdGVkQXBwQXV0aEVycm9yKE5lc3RlZEFwcEF1dGhFcnJvck1lc3NhZ2UudW5zdXBwb3J0ZWRNZXRob2QuY29kZSwgTmVzdGVkQXBwQXV0aEVycm9yTWVzc2FnZS51bnN1cHBvcnRlZE1ldGhvZC5kZXNjKTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBOZXN0ZWRBcHBBdXRoRXJyb3IsIE5lc3RlZEFwcEF1dGhFcnJvck1lc3NhZ2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5lc3RlZEFwcEF1dGhFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventHandler: function() { return /* binding */ EventHandler; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass EventHandler {\r\n    constructor(logger) {\r\n        this.eventCallbacks = new Map();\r\n        this.logger = logger || new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Logger({});\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback - callback to be invoked when an event is raised\r\n     * @param eventTypes - list of events that this callback will be invoked for, if not provided callback will be invoked for all events\r\n     * @param callbackId - Identifier for the callback, used to locate and remove the callback when no longer required\r\n     */\r\n    addEventCallback(callback, eventTypes, callbackId) {\r\n        if (typeof window !== \"undefined\") {\r\n            const id = callbackId || (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.createGuid)();\r\n            if (this.eventCallbacks.has(id)) {\r\n                this.logger.error(`Event callback with id: ${id} is already registered. Please provide a unique id or remove the existing callback and try again.`);\r\n                return null;\r\n            }\r\n            this.eventCallbacks.set(id, [callback, eventTypes || []]);\r\n            this.logger.verbose(`Event callback registered with id: ${id}`);\r\n            return id;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        this.eventCallbacks.delete(callbackId);\r\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\r\n    }\r\n    /**\r\n     * Emits events by calling callback with event message\r\n     * @param eventType\r\n     * @param interactionType\r\n     * @param payload\r\n     * @param error\r\n     */\r\n    emitEvent(eventType, interactionType, payload, error) {\r\n        if (typeof window !== \"undefined\") {\r\n            const message = {\r\n                eventType: eventType,\r\n                interactionType: interactionType || null,\r\n                payload: payload || null,\r\n                error: error || null,\r\n                timestamp: Date.now(),\r\n            };\r\n            this.eventCallbacks.forEach(([callback, eventTypes], callbackId) => {\r\n                if (eventTypes.length === 0 ||\r\n                    eventTypes.includes(eventType)) {\r\n                    this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\r\n                    callback.apply(null, [message]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=EventHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50SGFuZGxlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUN1QztBQUNHOztBQUV2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyw4REFBTSxHQUFHO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxtRUFBVTtBQUMvQztBQUNBLDZEQUE2RCxJQUFJO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSxHQUFHO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFlBQVk7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSxXQUFXLElBQUksVUFBVTtBQUMvRjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9ldmVudC9FdmVudEhhbmRsZXIubWpzP2UxNGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBjcmVhdGVHdWlkIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlclV0aWxzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBFdmVudEhhbmRsZXIge1xyXG4gICAgY29uc3RydWN0b3IobG9nZ2VyKSB7XHJcbiAgICAgICAgdGhpcy5ldmVudENhbGxiYWNrcyA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlciB8fCBuZXcgTG9nZ2VyKHt9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQWRkcyBldmVudCBjYWxsYmFja3MgdG8gYXJyYXlcclxuICAgICAqIEBwYXJhbSBjYWxsYmFjayAtIGNhbGxiYWNrIHRvIGJlIGludm9rZWQgd2hlbiBhbiBldmVudCBpcyByYWlzZWRcclxuICAgICAqIEBwYXJhbSBldmVudFR5cGVzIC0gbGlzdCBvZiBldmVudHMgdGhhdCB0aGlzIGNhbGxiYWNrIHdpbGwgYmUgaW52b2tlZCBmb3IsIGlmIG5vdCBwcm92aWRlZCBjYWxsYmFjayB3aWxsIGJlIGludm9rZWQgZm9yIGFsbCBldmVudHNcclxuICAgICAqIEBwYXJhbSBjYWxsYmFja0lkIC0gSWRlbnRpZmllciBmb3IgdGhlIGNhbGxiYWNrLCB1c2VkIHRvIGxvY2F0ZSBhbmQgcmVtb3ZlIHRoZSBjYWxsYmFjayB3aGVuIG5vIGxvbmdlciByZXF1aXJlZFxyXG4gICAgICovXHJcbiAgICBhZGRFdmVudENhbGxiYWNrKGNhbGxiYWNrLCBldmVudFR5cGVzLCBjYWxsYmFja0lkKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgICAgICAgY29uc3QgaWQgPSBjYWxsYmFja0lkIHx8IGNyZWF0ZUd1aWQoKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZXZlbnRDYWxsYmFja3MuaGFzKGlkKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoYEV2ZW50IGNhbGxiYWNrIHdpdGggaWQ6ICR7aWR9IGlzIGFscmVhZHkgcmVnaXN0ZXJlZC4gUGxlYXNlIHByb3ZpZGUgYSB1bmlxdWUgaWQgb3IgcmVtb3ZlIHRoZSBleGlzdGluZyBjYWxsYmFjayBhbmQgdHJ5IGFnYWluLmApO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5ldmVudENhbGxiYWNrcy5zZXQoaWQsIFtjYWxsYmFjaywgZXZlbnRUeXBlcyB8fCBbXV0pO1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKGBFdmVudCBjYWxsYmFjayByZWdpc3RlcmVkIHdpdGggaWQ6ICR7aWR9YCk7XHJcbiAgICAgICAgICAgIHJldHVybiBpZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZXMgY2FsbGJhY2sgd2l0aCBwcm92aWRlZCBpZCBmcm9tIGNhbGxiYWNrIGFycmF5XHJcbiAgICAgKiBAcGFyYW0gY2FsbGJhY2tJZFxyXG4gICAgICovXHJcbiAgICByZW1vdmVFdmVudENhbGxiYWNrKGNhbGxiYWNrSWQpIHtcclxuICAgICAgICB0aGlzLmV2ZW50Q2FsbGJhY2tzLmRlbGV0ZShjYWxsYmFja0lkKTtcclxuICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKGBFdmVudCBjYWxsYmFjayAke2NhbGxiYWNrSWR9IHJlbW92ZWQuYCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEVtaXRzIGV2ZW50cyBieSBjYWxsaW5nIGNhbGxiYWNrIHdpdGggZXZlbnQgbWVzc2FnZVxyXG4gICAgICogQHBhcmFtIGV2ZW50VHlwZVxyXG4gICAgICogQHBhcmFtIGludGVyYWN0aW9uVHlwZVxyXG4gICAgICogQHBhcmFtIHBheWxvYWRcclxuICAgICAqIEBwYXJhbSBlcnJvclxyXG4gICAgICovXHJcbiAgICBlbWl0RXZlbnQoZXZlbnRUeXBlLCBpbnRlcmFjdGlvblR5cGUsIHBheWxvYWQsIGVycm9yKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IHtcclxuICAgICAgICAgICAgICAgIGV2ZW50VHlwZTogZXZlbnRUeXBlLFxyXG4gICAgICAgICAgICAgICAgaW50ZXJhY3Rpb25UeXBlOiBpbnRlcmFjdGlvblR5cGUgfHwgbnVsbCxcclxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHBheWxvYWQgfHwgbnVsbCxcclxuICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvciB8fCBudWxsLFxyXG4gICAgICAgICAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB0aGlzLmV2ZW50Q2FsbGJhY2tzLmZvckVhY2goKFtjYWxsYmFjaywgZXZlbnRUeXBlc10sIGNhbGxiYWNrSWQpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChldmVudFR5cGVzLmxlbmd0aCA9PT0gMCB8fFxyXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50VHlwZXMuaW5jbHVkZXMoZXZlbnRUeXBlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoYEVtaXR0aW5nIGV2ZW50IHRvIGNhbGxiYWNrICR7Y2FsbGJhY2tJZH06ICR7ZXZlbnRUeXBlfWApO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KG51bGwsIFttZXNzYWdlXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBFdmVudEhhbmRsZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV2ZW50SGFuZGxlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/event/EventMessage.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/event/EventMessage.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventMessageUtils: function() { return /* binding */ EventMessageUtils; }\n/* harmony export */ });\n/* harmony import */ var _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass EventMessageUtils {\r\n    /**\r\n     * Gets interaction status from event message\r\n     * @param message\r\n     * @param currentStatus\r\n     */\r\n    static getInteractionStatusFromEvent(message, currentStatus) {\r\n        switch (message.eventType) {\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGIN_START:\r\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.Login;\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.SSO_SILENT_START:\r\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.SsoSilent;\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.ACQUIRE_TOKEN_START:\r\n                if (message.interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionType.Redirect ||\r\n                    message.interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionType.Popup) {\r\n                    return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.AcquireToken;\r\n                }\r\n                break;\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.HANDLE_REDIRECT_START:\r\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.HandleRedirect;\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGOUT_START:\r\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.Logout;\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.SSO_SILENT_SUCCESS:\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.SSO_SILENT_FAILURE:\r\n                if (currentStatus &&\r\n                    currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.SsoSilent) {\r\n                    // Prevent this event from clearing any status other than ssoSilent\r\n                    break;\r\n                }\r\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None;\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGOUT_END:\r\n                if (currentStatus &&\r\n                    currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.Logout) {\r\n                    // Prevent this event from clearing any status other than logout\r\n                    break;\r\n                }\r\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None;\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.HANDLE_REDIRECT_END:\r\n                if (currentStatus &&\r\n                    currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.HandleRedirect) {\r\n                    // Prevent this event from clearing any status other than handleRedirect\r\n                    break;\r\n                }\r\n                return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None;\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGIN_SUCCESS:\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.LOGIN_FAILURE:\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.ACQUIRE_TOKEN_SUCCESS:\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.ACQUIRE_TOKEN_FAILURE:\r\n            case _EventType_mjs__WEBPACK_IMPORTED_MODULE_0__.EventType.RESTORE_FROM_BFCACHE:\r\n                if (message.interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionType.Redirect ||\r\n                    message.interactionType === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionType.Popup) {\r\n                    if (currentStatus &&\r\n                        currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.Login &&\r\n                        currentStatus !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.AcquireToken) {\r\n                        // Prevent this event from clearing any status other than login or acquireToken\r\n                        break;\r\n                    }\r\n                    return _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None;\r\n                }\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=EventMessage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50TWVzc2FnZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUMrQjtBQUN1Qzs7QUFFbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFEQUFTO0FBQzFCLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCLGdEQUFnRCx3RUFBZTtBQUMvRCxnREFBZ0Qsd0VBQWU7QUFDL0QsMkJBQTJCLDBFQUFpQjtBQUM1QztBQUNBO0FBQ0EsaUJBQWlCLHFEQUFTO0FBQzFCLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCLGlCQUFpQixxREFBUztBQUMxQjtBQUNBLHNDQUFzQywwRUFBaUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDBFQUFpQjtBQUN4QyxpQkFBaUIscURBQVM7QUFDMUI7QUFDQSxzQ0FBc0MsMEVBQWlCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwwRUFBaUI7QUFDeEMsaUJBQWlCLHFEQUFTO0FBQzFCO0FBQ0Esc0NBQXNDLDBFQUFpQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMEVBQWlCO0FBQ3hDLGlCQUFpQixxREFBUztBQUMxQixpQkFBaUIscURBQVM7QUFDMUIsaUJBQWlCLHFEQUFTO0FBQzFCLGlCQUFpQixxREFBUztBQUMxQixpQkFBaUIscURBQVM7QUFDMUIsZ0RBQWdELHdFQUFlO0FBQy9ELGdEQUFnRCx3RUFBZTtBQUMvRDtBQUNBLDBDQUEwQywwRUFBaUI7QUFDM0QsMENBQTBDLDBFQUFpQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMEVBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9ldmVudC9FdmVudE1lc3NhZ2UubWpzPzgyNmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBFdmVudFR5cGUgfSBmcm9tICcuL0V2ZW50VHlwZS5tanMnO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25UeXBlLCBJbnRlcmFjdGlvblN0YXR1cyB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJDb25zdGFudHMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIEV2ZW50TWVzc2FnZVV0aWxzIHtcclxuICAgIC8qKlxyXG4gICAgICogR2V0cyBpbnRlcmFjdGlvbiBzdGF0dXMgZnJvbSBldmVudCBtZXNzYWdlXHJcbiAgICAgKiBAcGFyYW0gbWVzc2FnZVxyXG4gICAgICogQHBhcmFtIGN1cnJlbnRTdGF0dXNcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGdldEludGVyYWN0aW9uU3RhdHVzRnJvbUV2ZW50KG1lc3NhZ2UsIGN1cnJlbnRTdGF0dXMpIHtcclxuICAgICAgICBzd2l0Y2ggKG1lc3NhZ2UuZXZlbnRUeXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgRXZlbnRUeXBlLkxPR0lOX1NUQVJUOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEludGVyYWN0aW9uU3RhdHVzLkxvZ2luO1xyXG4gICAgICAgICAgICBjYXNlIEV2ZW50VHlwZS5TU09fU0lMRU5UX1NUQVJUOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEludGVyYWN0aW9uU3RhdHVzLlNzb1NpbGVudDtcclxuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuQUNRVUlSRV9UT0tFTl9TVEFSVDpcclxuICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlLmludGVyYWN0aW9uVHlwZSA9PT0gSW50ZXJhY3Rpb25UeXBlLlJlZGlyZWN0IHx8XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5pbnRlcmFjdGlvblR5cGUgPT09IEludGVyYWN0aW9uVHlwZS5Qb3B1cCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBJbnRlcmFjdGlvblN0YXR1cy5BY3F1aXJlVG9rZW47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuSEFORExFX1JFRElSRUNUX1NUQVJUOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEludGVyYWN0aW9uU3RhdHVzLkhhbmRsZVJlZGlyZWN0O1xyXG4gICAgICAgICAgICBjYXNlIEV2ZW50VHlwZS5MT0dPVVRfU1RBUlQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gSW50ZXJhY3Rpb25TdGF0dXMuTG9nb3V0O1xyXG4gICAgICAgICAgICBjYXNlIEV2ZW50VHlwZS5TU09fU0lMRU5UX1NVQ0NFU1M6XHJcbiAgICAgICAgICAgIGNhc2UgRXZlbnRUeXBlLlNTT19TSUxFTlRfRkFJTFVSRTpcclxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50U3RhdHVzICYmXHJcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFN0YXR1cyAhPT0gSW50ZXJhY3Rpb25TdGF0dXMuU3NvU2lsZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gUHJldmVudCB0aGlzIGV2ZW50IGZyb20gY2xlYXJpbmcgYW55IHN0YXR1cyBvdGhlciB0aGFuIHNzb1NpbGVudFxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEludGVyYWN0aW9uU3RhdHVzLk5vbmU7XHJcbiAgICAgICAgICAgIGNhc2UgRXZlbnRUeXBlLkxPR09VVF9FTkQ6XHJcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudFN0YXR1cyAmJlxyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTdGF0dXMgIT09IEludGVyYWN0aW9uU3RhdHVzLkxvZ291dCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgdGhpcyBldmVudCBmcm9tIGNsZWFyaW5nIGFueSBzdGF0dXMgb3RoZXIgdGhhbiBsb2dvdXRcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBJbnRlcmFjdGlvblN0YXR1cy5Ob25lO1xyXG4gICAgICAgICAgICBjYXNlIEV2ZW50VHlwZS5IQU5ETEVfUkVESVJFQ1RfRU5EOlxyXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRTdGF0dXMgJiZcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50U3RhdHVzICE9PSBJbnRlcmFjdGlvblN0YXR1cy5IYW5kbGVSZWRpcmVjdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgdGhpcyBldmVudCBmcm9tIGNsZWFyaW5nIGFueSBzdGF0dXMgb3RoZXIgdGhhbiBoYW5kbGVSZWRpcmVjdFxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEludGVyYWN0aW9uU3RhdHVzLk5vbmU7XHJcbiAgICAgICAgICAgIGNhc2UgRXZlbnRUeXBlLkxPR0lOX1NVQ0NFU1M6XHJcbiAgICAgICAgICAgIGNhc2UgRXZlbnRUeXBlLkxPR0lOX0ZBSUxVUkU6XHJcbiAgICAgICAgICAgIGNhc2UgRXZlbnRUeXBlLkFDUVVJUkVfVE9LRU5fU1VDQ0VTUzpcclxuICAgICAgICAgICAgY2FzZSBFdmVudFR5cGUuQUNRVUlSRV9UT0tFTl9GQUlMVVJFOlxyXG4gICAgICAgICAgICBjYXNlIEV2ZW50VHlwZS5SRVNUT1JFX0ZST01fQkZDQUNIRTpcclxuICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlLmludGVyYWN0aW9uVHlwZSA9PT0gSW50ZXJhY3Rpb25UeXBlLlJlZGlyZWN0IHx8XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5pbnRlcmFjdGlvblR5cGUgPT09IEludGVyYWN0aW9uVHlwZS5Qb3B1cCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50U3RhdHVzICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTdGF0dXMgIT09IEludGVyYWN0aW9uU3RhdHVzLkxvZ2luICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTdGF0dXMgIT09IEludGVyYWN0aW9uU3RhdHVzLkFjcXVpcmVUb2tlbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBQcmV2ZW50IHRoaXMgZXZlbnQgZnJvbSBjbGVhcmluZyBhbnkgc3RhdHVzIG90aGVyIHRoYW4gbG9naW4gb3IgYWNxdWlyZVRva2VuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gSW50ZXJhY3Rpb25TdGF0dXMuTm9uZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBFdmVudE1lc3NhZ2VVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXZlbnRNZXNzYWdlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/event/EventMessage.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/event/EventType.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/event/EventType.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventType: function() { return /* binding */ EventType; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst EventType = {\r\n    INITIALIZE_START: \"msal:initializeStart\",\r\n    INITIALIZE_END: \"msal:initializeEnd\",\r\n    ACCOUNT_ADDED: \"msal:accountAdded\",\r\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\r\n    ACTIVE_ACCOUNT_CHANGED: \"msal:activeAccountChanged\",\r\n    LOGIN_START: \"msal:loginStart\",\r\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\r\n    LOGIN_FAILURE: \"msal:loginFailure\",\r\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\r\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\r\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\r\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\r\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\r\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\r\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\r\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\r\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\r\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\r\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\r\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\r\n    POPUP_OPENED: \"msal:popupOpened\",\r\n    LOGOUT_START: \"msal:logoutStart\",\r\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\r\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\r\n    LOGOUT_END: \"msal:logoutEnd\",\r\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\r\n};\n\n\n//# sourceMappingURL=EventType.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50VHlwZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50VHlwZS5tanM/ZmVlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBFdmVudFR5cGUgPSB7XHJcbiAgICBJTklUSUFMSVpFX1NUQVJUOiBcIm1zYWw6aW5pdGlhbGl6ZVN0YXJ0XCIsXHJcbiAgICBJTklUSUFMSVpFX0VORDogXCJtc2FsOmluaXRpYWxpemVFbmRcIixcclxuICAgIEFDQ09VTlRfQURERUQ6IFwibXNhbDphY2NvdW50QWRkZWRcIixcclxuICAgIEFDQ09VTlRfUkVNT1ZFRDogXCJtc2FsOmFjY291bnRSZW1vdmVkXCIsXHJcbiAgICBBQ1RJVkVfQUNDT1VOVF9DSEFOR0VEOiBcIm1zYWw6YWN0aXZlQWNjb3VudENoYW5nZWRcIixcclxuICAgIExPR0lOX1NUQVJUOiBcIm1zYWw6bG9naW5TdGFydFwiLFxyXG4gICAgTE9HSU5fU1VDQ0VTUzogXCJtc2FsOmxvZ2luU3VjY2Vzc1wiLFxyXG4gICAgTE9HSU5fRkFJTFVSRTogXCJtc2FsOmxvZ2luRmFpbHVyZVwiLFxyXG4gICAgQUNRVUlSRV9UT0tFTl9TVEFSVDogXCJtc2FsOmFjcXVpcmVUb2tlblN0YXJ0XCIsXHJcbiAgICBBQ1FVSVJFX1RPS0VOX1NVQ0NFU1M6IFwibXNhbDphY3F1aXJlVG9rZW5TdWNjZXNzXCIsXHJcbiAgICBBQ1FVSVJFX1RPS0VOX0ZBSUxVUkU6IFwibXNhbDphY3F1aXJlVG9rZW5GYWlsdXJlXCIsXHJcbiAgICBBQ1FVSVJFX1RPS0VOX05FVFdPUktfU1RBUlQ6IFwibXNhbDphY3F1aXJlVG9rZW5Gcm9tTmV0d29ya1N0YXJ0XCIsXHJcbiAgICBTU09fU0lMRU5UX1NUQVJUOiBcIm1zYWw6c3NvU2lsZW50U3RhcnRcIixcclxuICAgIFNTT19TSUxFTlRfU1VDQ0VTUzogXCJtc2FsOnNzb1NpbGVudFN1Y2Nlc3NcIixcclxuICAgIFNTT19TSUxFTlRfRkFJTFVSRTogXCJtc2FsOnNzb1NpbGVudEZhaWx1cmVcIixcclxuICAgIEFDUVVJUkVfVE9LRU5fQllfQ09ERV9TVEFSVDogXCJtc2FsOmFjcXVpcmVUb2tlbkJ5Q29kZVN0YXJ0XCIsXHJcbiAgICBBQ1FVSVJFX1RPS0VOX0JZX0NPREVfU1VDQ0VTUzogXCJtc2FsOmFjcXVpcmVUb2tlbkJ5Q29kZVN1Y2Nlc3NcIixcclxuICAgIEFDUVVJUkVfVE9LRU5fQllfQ09ERV9GQUlMVVJFOiBcIm1zYWw6YWNxdWlyZVRva2VuQnlDb2RlRmFpbHVyZVwiLFxyXG4gICAgSEFORExFX1JFRElSRUNUX1NUQVJUOiBcIm1zYWw6aGFuZGxlUmVkaXJlY3RTdGFydFwiLFxyXG4gICAgSEFORExFX1JFRElSRUNUX0VORDogXCJtc2FsOmhhbmRsZVJlZGlyZWN0RW5kXCIsXHJcbiAgICBQT1BVUF9PUEVORUQ6IFwibXNhbDpwb3B1cE9wZW5lZFwiLFxyXG4gICAgTE9HT1VUX1NUQVJUOiBcIm1zYWw6bG9nb3V0U3RhcnRcIixcclxuICAgIExPR09VVF9TVUNDRVNTOiBcIm1zYWw6bG9nb3V0U3VjY2Vzc1wiLFxyXG4gICAgTE9HT1VUX0ZBSUxVUkU6IFwibXNhbDpsb2dvdXRGYWlsdXJlXCIsXHJcbiAgICBMT0dPVVRfRU5EOiBcIm1zYWw6bG9nb3V0RW5kXCIsXHJcbiAgICBSRVNUT1JFX0ZST01fQkZDQUNIRTogXCJtc2FsOnJlc3RvcmVGcm9tQkZDYWNoZVwiLFxyXG59O1xuXG5leHBvcnQgeyBFdmVudFR5cGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV2ZW50VHlwZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/event/EventType.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/index.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountEntity: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.AccountEntity; },\n/* harmony export */   ApiId: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId; },\n/* harmony export */   AuthError: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.AuthError; },\n/* harmony export */   AuthErrorCodes: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.AuthErrorCodes; },\n/* harmony export */   AuthErrorMessage: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.AuthErrorMessage; },\n/* harmony export */   AuthenticationHeaderParser: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.AuthenticationHeaderParser; },\n/* harmony export */   AuthenticationScheme: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.AuthenticationScheme; },\n/* harmony export */   AzureCloudInstance: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.AzureCloudInstance; },\n/* harmony export */   BrowserAuthError: function() { return /* reexport safe */ _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError; },\n/* harmony export */   BrowserAuthErrorCodes: function() { return /* reexport module object */ _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_21__; },\n/* harmony export */   BrowserAuthErrorMessage: function() { return /* reexport safe */ _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthErrorMessage; },\n/* harmony export */   BrowserCacheLocation: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserCacheLocation; },\n/* harmony export */   BrowserConfigurationAuthError: function() { return /* reexport safe */ _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserConfigurationAuthError; },\n/* harmony export */   BrowserConfigurationAuthErrorCodes: function() { return /* reexport module object */ _error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_22__; },\n/* harmony export */   BrowserConfigurationAuthErrorMessage: function() { return /* reexport safe */ _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserConfigurationAuthErrorMessage; },\n/* harmony export */   BrowserPerformanceClient: function() { return /* reexport safe */ _telemetry_BrowserPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_17__.BrowserPerformanceClient; },\n/* harmony export */   BrowserPerformanceMeasurement: function() { return /* reexport safe */ _telemetry_BrowserPerformanceMeasurement_mjs__WEBPACK_IMPORTED_MODULE_18__.BrowserPerformanceMeasurement; },\n/* harmony export */   BrowserStorage: function() { return /* reexport safe */ _cache_BrowserStorage_mjs__WEBPACK_IMPORTED_MODULE_10__.BrowserStorage; },\n/* harmony export */   BrowserUtils: function() { return /* reexport module object */ _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   CacheLookupPolicy: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.CacheLookupPolicy; },\n/* harmony export */   ClientAuthError: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.ClientAuthError; },\n/* harmony export */   ClientAuthErrorCodes: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.ClientAuthErrorCodes; },\n/* harmony export */   ClientAuthErrorMessage: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.ClientAuthErrorMessage; },\n/* harmony export */   ClientConfigurationError: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.ClientConfigurationError; },\n/* harmony export */   ClientConfigurationErrorCodes: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.ClientConfigurationErrorCodes; },\n/* harmony export */   ClientConfigurationErrorMessage: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.ClientConfigurationErrorMessage; },\n/* harmony export */   DEFAULT_IFRAME_TIMEOUT_MS: function() { return /* reexport safe */ _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_IFRAME_TIMEOUT_MS; },\n/* harmony export */   EventHandler: function() { return /* reexport safe */ _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_15__.EventHandler; },\n/* harmony export */   EventMessageUtils: function() { return /* reexport safe */ _event_EventMessage_mjs__WEBPACK_IMPORTED_MODULE_13__.EventMessageUtils; },\n/* harmony export */   EventType: function() { return /* reexport safe */ _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_14__.EventType; },\n/* harmony export */   InteractionRequiredAuthError: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.InteractionRequiredAuthError; },\n/* harmony export */   InteractionRequiredAuthErrorCodes: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.InteractionRequiredAuthErrorCodes; },\n/* harmony export */   InteractionRequiredAuthErrorMessage: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.InteractionRequiredAuthErrorMessage; },\n/* harmony export */   InteractionStatus: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus; },\n/* harmony export */   InteractionType: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType; },\n/* harmony export */   JsonWebTokenTypes: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.JsonWebTokenTypes; },\n/* harmony export */   LocalStorage: function() { return /* reexport safe */ _cache_LocalStorage_mjs__WEBPACK_IMPORTED_MODULE_11__.LocalStorage; },\n/* harmony export */   LogLevel: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.LogLevel; },\n/* harmony export */   Logger: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.Logger; },\n/* harmony export */   MemoryStorage: function() { return /* reexport safe */ _cache_MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_9__.MemoryStorage; },\n/* harmony export */   NavigationClient: function() { return /* reexport safe */ _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_8__.NavigationClient; },\n/* harmony export */   OIDC_DEFAULT_SCOPES: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.OIDC_DEFAULT_SCOPES; },\n/* harmony export */   PerformanceEvents: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.PerformanceEvents; },\n/* harmony export */   PromptValue: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.PromptValue; },\n/* harmony export */   ProtocolMode: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.ProtocolMode; },\n/* harmony export */   PublicClientApplication: function() { return /* reexport safe */ _app_PublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__.PublicClientApplication; },\n/* harmony export */   PublicClientNext: function() { return /* reexport safe */ _app_PublicClientNext_mjs__WEBPACK_IMPORTED_MODULE_2__.PublicClientNext; },\n/* harmony export */   ServerError: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.ServerError; },\n/* harmony export */   ServerResponseType: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.ServerResponseType; },\n/* harmony export */   SessionStorage: function() { return /* reexport safe */ _cache_SessionStorage_mjs__WEBPACK_IMPORTED_MODULE_12__.SessionStorage; },\n/* harmony export */   SignedHttpRequest: function() { return /* reexport safe */ _crypto_SignedHttpRequest_mjs__WEBPACK_IMPORTED_MODULE_16__.SignedHttpRequest; },\n/* harmony export */   StringUtils: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.StringUtils; },\n/* harmony export */   StubPerformanceClient: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.StubPerformanceClient; },\n/* harmony export */   UrlString: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.UrlString; },\n/* harmony export */   WrapperSKU: function() { return /* reexport safe */ _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.WrapperSKU; },\n/* harmony export */   createNestablePublicClientApplication: function() { return /* reexport safe */ _app_PublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__.createNestablePublicClientApplication; },\n/* harmony export */   createStandardPublicClientApplication: function() { return /* reexport safe */ _app_PublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__.createStandardPublicClientApplication; },\n/* harmony export */   stubbedPublicClientApplication: function() { return /* reexport safe */ _app_IPublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_7__.stubbedPublicClientApplication; },\n/* harmony export */   version: function() { return /* reexport safe */ _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_20__.version; }\n/* harmony export */ });\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _app_PublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app/PublicClientApplication.mjs */ \"./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs\");\n/* harmony import */ var _app_PublicClientNext_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/PublicClientNext.mjs */ \"./node_modules/@azure/msal-browser/dist/app/PublicClientNext.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config/Configuration.mjs */ \"./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _app_IPublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./app/IPublicClientApplication.mjs */ \"./node_modules/@azure/msal-browser/dist/app/IPublicClientApplication.mjs\");\n/* harmony import */ var _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./navigation/NavigationClient.mjs */ \"./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs\");\n/* harmony import */ var _cache_MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./cache/MemoryStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\");\n/* harmony import */ var _cache_BrowserStorage_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cache/BrowserStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs\");\n/* harmony import */ var _cache_LocalStorage_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cache/LocalStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/LocalStorage.mjs\");\n/* harmony import */ var _cache_SessionStorage_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cache/SessionStorage.mjs */ \"./node_modules/@azure/msal-browser/dist/cache/SessionStorage.mjs\");\n/* harmony import */ var _event_EventMessage_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./event/EventMessage.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventMessage.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./event/EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./event/EventHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\");\n/* harmony import */ var _crypto_SignedHttpRequest_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./crypto/SignedHttpRequest.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.mjs\");\n/* harmony import */ var _telemetry_BrowserPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./telemetry/BrowserPerformanceClient.mjs */ \"./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceClient.mjs\");\n/* harmony import */ var _telemetry_BrowserPerformanceMeasurement_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./telemetry/BrowserPerformanceMeasurement.mjs */ \"./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./error/BrowserConfigurationAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUM0QztBQUNqQztBQUNrSTtBQUM1RjtBQUNTO0FBQ3VFO0FBQ3JEO0FBQ3VDO0FBQzVDO0FBQ2Y7QUFDWDtBQUNFO0FBQ0o7QUFDSTtBQUNDO0FBQ1g7QUFDTTtBQUNXO0FBQ2lCO0FBQ1U7QUFDdWdCO0FBQ3JqQjtBQUMyQjtBQUMxQztBQUNvRTtBQUN2RDtBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2luZGV4Lm1qcz8yZWQ0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0ICogYXMgQnJvd3NlclV0aWxzIGZyb20gJy4vdXRpbHMvQnJvd3NlclV0aWxzLm1qcyc7XG5leHBvcnQgeyBCcm93c2VyVXRpbHMgfTtcbmV4cG9ydCB7IFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uLCBjcmVhdGVOZXN0YWJsZVB1YmxpY0NsaWVudEFwcGxpY2F0aW9uLCBjcmVhdGVTdGFuZGFyZFB1YmxpY0NsaWVudEFwcGxpY2F0aW9uIH0gZnJvbSAnLi9hcHAvUHVibGljQ2xpZW50QXBwbGljYXRpb24ubWpzJztcbmV4cG9ydCB7IFB1YmxpY0NsaWVudE5leHQgfSBmcm9tICcuL2FwcC9QdWJsaWNDbGllbnROZXh0Lm1qcyc7XG5leHBvcnQgeyBERUZBVUxUX0lGUkFNRV9USU1FT1VUX01TIH0gZnJvbSAnLi9jb25maWcvQ29uZmlndXJhdGlvbi5tanMnO1xuZXhwb3J0IHsgQXBpSWQsIEJyb3dzZXJDYWNoZUxvY2F0aW9uLCBDYWNoZUxvb2t1cFBvbGljeSwgSW50ZXJhY3Rpb25TdGF0dXMsIEludGVyYWN0aW9uVHlwZSwgV3JhcHBlclNLVSB9IGZyb20gJy4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuZXhwb3J0IHsgQnJvd3NlckF1dGhFcnJvciwgQnJvd3NlckF1dGhFcnJvck1lc3NhZ2UgfSBmcm9tICcuL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmV4cG9ydCB7IEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLCBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvck1lc3NhZ2UgfSBmcm9tICcuL2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLm1qcyc7XG5leHBvcnQgeyBzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb24gfSBmcm9tICcuL2FwcC9JUHVibGljQ2xpZW50QXBwbGljYXRpb24ubWpzJztcbmV4cG9ydCB7IE5hdmlnYXRpb25DbGllbnQgfSBmcm9tICcuL25hdmlnYXRpb24vTmF2aWdhdGlvbkNsaWVudC5tanMnO1xuZXhwb3J0IHsgTWVtb3J5U3RvcmFnZSB9IGZyb20gJy4vY2FjaGUvTWVtb3J5U3RvcmFnZS5tanMnO1xuZXhwb3J0IHsgQnJvd3NlclN0b3JhZ2UgfSBmcm9tICcuL2NhY2hlL0Jyb3dzZXJTdG9yYWdlLm1qcyc7XG5leHBvcnQgeyBMb2NhbFN0b3JhZ2UgfSBmcm9tICcuL2NhY2hlL0xvY2FsU3RvcmFnZS5tanMnO1xuZXhwb3J0IHsgU2Vzc2lvblN0b3JhZ2UgfSBmcm9tICcuL2NhY2hlL1Nlc3Npb25TdG9yYWdlLm1qcyc7XG5leHBvcnQgeyBFdmVudE1lc3NhZ2VVdGlscyB9IGZyb20gJy4vZXZlbnQvRXZlbnRNZXNzYWdlLm1qcyc7XG5leHBvcnQgeyBFdmVudFR5cGUgfSBmcm9tICcuL2V2ZW50L0V2ZW50VHlwZS5tanMnO1xuZXhwb3J0IHsgRXZlbnRIYW5kbGVyIH0gZnJvbSAnLi9ldmVudC9FdmVudEhhbmRsZXIubWpzJztcbmV4cG9ydCB7IFNpZ25lZEh0dHBSZXF1ZXN0IH0gZnJvbSAnLi9jcnlwdG8vU2lnbmVkSHR0cFJlcXVlc3QubWpzJztcbmV4cG9ydCB7IEJyb3dzZXJQZXJmb3JtYW5jZUNsaWVudCB9IGZyb20gJy4vdGVsZW1ldHJ5L0Jyb3dzZXJQZXJmb3JtYW5jZUNsaWVudC5tanMnO1xuZXhwb3J0IHsgQnJvd3NlclBlcmZvcm1hbmNlTWVhc3VyZW1lbnQgfSBmcm9tICcuL3RlbGVtZXRyeS9Ccm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5tanMnO1xuZXhwb3J0IHsgQWNjb3VudEVudGl0eSwgQXV0aEVycm9yLCBBdXRoRXJyb3JDb2RlcywgQXV0aEVycm9yTWVzc2FnZSwgQXV0aGVudGljYXRpb25IZWFkZXJQYXJzZXIsIEF1dGhlbnRpY2F0aW9uU2NoZW1lLCBBenVyZUNsb3VkSW5zdGFuY2UsIENsaWVudEF1dGhFcnJvciwgQ2xpZW50QXV0aEVycm9yQ29kZXMsIENsaWVudEF1dGhFcnJvck1lc3NhZ2UsIENsaWVudENvbmZpZ3VyYXRpb25FcnJvciwgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMsIENsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2RlcywgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2UsIEpzb25XZWJUb2tlblR5cGVzLCBMb2dMZXZlbCwgTG9nZ2VyLCBPSURDX0RFRkFVTFRfU0NPUEVTLCBQZXJmb3JtYW5jZUV2ZW50cywgUHJvbXB0VmFsdWUsIFByb3RvY29sTW9kZSwgU2VydmVyRXJyb3IsIFNlcnZlclJlc3BvbnNlVHlwZSwgU3RyaW5nVXRpbHMsIFN0dWJQZXJmb3JtYW5jZUNsaWVudCwgVXJsU3RyaW5nIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuZXhwb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG5pbXBvcnQgKiBhcyBCcm93c2VyQXV0aEVycm9yQ29kZXMgZnJvbSAnLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yQ29kZXMubWpzJztcbmV4cG9ydCB7IEJyb3dzZXJBdXRoRXJyb3JDb2RlcyB9O1xuaW1wb3J0ICogYXMgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JDb2RlcyBmcm9tICcuL2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yQ29kZXMubWpzJztcbmV4cG9ydCB7IEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yQ29kZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/index.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseInteractionClient: function() { return /* binding */ BaseInteractionClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass BaseInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\r\n        this.config = config;\r\n        this.browserStorage = storageImpl;\r\n        this.browserCrypto = browserCrypto;\r\n        this.networkClient = this.config.system.networkClient;\r\n        this.eventHandler = eventHandler;\r\n        this.navigationClient = navigationClient;\r\n        this.nativeMessageHandler = nativeMessageHandler;\r\n        this.correlationId = correlationId || (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.createNewGuid)();\r\n        this.logger = logger.clone(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConstants.MSAL_SKU, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version, this.correlationId);\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    async clearCacheOnLogout(account) {\r\n        if (account) {\r\n            if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\r\n                this.logger.verbose(\"Setting active account to null\");\r\n                this.browserStorage.setActiveAccount(null);\r\n            }\r\n            // Clear given account.\r\n            try {\r\n                await this.browserStorage.removeAccount(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.generateAccountCacheKey(account));\r\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\r\n            }\r\n            catch (error) {\r\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\r\n                // Clear all accounts and tokens\r\n                await this.browserStorage.clear();\r\n                // Clear any stray keys from IndexedDB\r\n                await this.browserCrypto.clearKeystore();\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @param requestRedirectUri\r\n     * @returns Redirect URL\r\n     *\r\n     */\r\n    getRedirectUri(requestRedirectUri) {\r\n        this.logger.verbose(\"getRedirectUri called\");\r\n        const redirectUri = requestRedirectUri || this.config.auth.redirectUri;\r\n        return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.UrlString.getAbsoluteUrl(redirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getCurrentUri)());\r\n    }\r\n    /**\r\n     *\r\n     * @param apiId\r\n     * @param correlationId\r\n     * @param forceRefresh\r\n     */\r\n    initializeServerTelemetryManager(apiId, forceRefresh) {\r\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\r\n        const telemetryPayload = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: this.correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false,\r\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\r\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\r\n        };\r\n        return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ServerTelemetryManager(telemetryPayload, this.browserStorage);\r\n    }\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     * @param params {\r\n     *         requestAuthority?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async getDiscoveredAuthority(params) {\r\n        const { account } = params;\r\n        const instanceAwareEQ = params.requestExtraQueryParameters &&\r\n            params.requestExtraQueryParameters.hasOwnProperty(\"instance_aware\")\r\n            ? params.requestExtraQueryParameters[\"instance_aware\"]\r\n            : undefined;\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\r\n        const authorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            OIDCOptions: this.config.auth.OIDCOptions,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata,\r\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\r\n        };\r\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\r\n        const resolvedAuthority = params.requestAuthority || this.config.auth.authority;\r\n        const resolvedInstanceAware = instanceAwareEQ?.length\r\n            ? instanceAwareEQ === \"true\"\r\n            : this.config.auth.instanceAware;\r\n        const userAuthority = account && resolvedInstanceAware\r\n            ? this.config.auth.authority.replace(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.UrlString.getDomainFromUrl(resolvedAuthority), account.environment)\r\n            : resolvedAuthority;\r\n        // fall back to the authority from config\r\n        const builtAuthority = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.Authority.generateAuthority(userAuthority, params.requestAzureCloudOptions ||\r\n            this.config.auth.azureCloudOptions);\r\n        const discoveredAuthority = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthorityFactory.createDiscoveredInstance, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, this.logger, this.performanceClient, this.correlationId)(builtAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger, this.correlationId, this.performanceClient);\r\n        if (account && !discoveredAuthority.isAlias(account.environment)) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientConfigurationErrorCodes.authorityMismatch);\r\n        }\r\n        return discoveredAuthority;\r\n    }\r\n}\n\n\n//# sourceMappingURL=BaseInteractionClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9CYXNlSW50ZXJhY3Rpb25DbGllbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDNk07QUFDeks7QUFDZ0I7QUFDUDtBQUNFOztBQUU1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyx3RUFBYTtBQUMzRCxtQ0FBbUMseUVBQWdCLFdBQVcseURBQU87QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUVBQWE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxxRUFBYTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpRUFBUyw2QkFBNkIsc0VBQWE7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4RUFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixVQUFVO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlFQUFpQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGlFQUFTO0FBQzFEO0FBQ0E7QUFDQSwrQkFBK0IsaUVBQVM7QUFDeEM7QUFDQSwwQ0FBMEMsdUVBQVcsQ0FBQyx3RUFBZ0IsMkJBQTJCLHlFQUFpQjtBQUNsSDtBQUNBLGtCQUFrQiwwRkFBOEIsQ0FBQyxxRkFBNkI7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7O0FBRWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvaW50ZXJhY3Rpb25fY2xpZW50L0Jhc2VJbnRlcmFjdGlvbkNsaWVudC5tanM/MjQyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEFjY291bnRFbnRpdHksIFVybFN0cmluZywgU2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgUGVyZm9ybWFuY2VFdmVudHMsIEF1dGhvcml0eSwgaW52b2tlQXN5bmMsIEF1dGhvcml0eUZhY3RvcnksIGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvciwgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG5pbXBvcnQgeyBCcm93c2VyQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgZ2V0Q3VycmVudFVyaSB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJVdGlscy5tanMnO1xuaW1wb3J0IHsgY3JlYXRlTmV3R3VpZCB9IGZyb20gJy4uL2NyeXB0by9Ccm93c2VyQ3J5cHRvLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBCYXNlSW50ZXJhY3Rpb25DbGllbnQge1xyXG4gICAgY29uc3RydWN0b3IoY29uZmlnLCBzdG9yYWdlSW1wbCwgYnJvd3NlckNyeXB0bywgbG9nZ2VyLCBldmVudEhhbmRsZXIsIG5hdmlnYXRpb25DbGllbnQsIHBlcmZvcm1hbmNlQ2xpZW50LCBuYXRpdmVNZXNzYWdlSGFuZGxlciwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xyXG4gICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2UgPSBzdG9yYWdlSW1wbDtcclxuICAgICAgICB0aGlzLmJyb3dzZXJDcnlwdG8gPSBicm93c2VyQ3J5cHRvO1xyXG4gICAgICAgIHRoaXMubmV0d29ya0NsaWVudCA9IHRoaXMuY29uZmlnLnN5c3RlbS5uZXR3b3JrQ2xpZW50O1xyXG4gICAgICAgIHRoaXMuZXZlbnRIYW5kbGVyID0gZXZlbnRIYW5kbGVyO1xyXG4gICAgICAgIHRoaXMubmF2aWdhdGlvbkNsaWVudCA9IG5hdmlnYXRpb25DbGllbnQ7XHJcbiAgICAgICAgdGhpcy5uYXRpdmVNZXNzYWdlSGFuZGxlciA9IG5hdGl2ZU1lc3NhZ2VIYW5kbGVyO1xyXG4gICAgICAgIHRoaXMuY29ycmVsYXRpb25JZCA9IGNvcnJlbGF0aW9uSWQgfHwgY3JlYXRlTmV3R3VpZCgpO1xyXG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyLmNsb25lKEJyb3dzZXJDb25zdGFudHMuTVNBTF9TS1UsIHZlcnNpb24sIHRoaXMuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCA9IHBlcmZvcm1hbmNlQ2xpZW50O1xyXG4gICAgfVxyXG4gICAgYXN5bmMgY2xlYXJDYWNoZU9uTG9nb3V0KGFjY291bnQpIHtcclxuICAgICAgICBpZiAoYWNjb3VudCkge1xyXG4gICAgICAgICAgICBpZiAoQWNjb3VudEVudGl0eS5hY2NvdW50SW5mb0lzRXF1YWwoYWNjb3VudCwgdGhpcy5icm93c2VyU3RvcmFnZS5nZXRBY3RpdmVBY2NvdW50KCksIGZhbHNlKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIlNldHRpbmcgYWN0aXZlIGFjY291bnQgdG8gbnVsbFwiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2Uuc2V0QWN0aXZlQWNjb3VudChudWxsKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBDbGVhciBnaXZlbiBhY2NvdW50LlxyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5icm93c2VyU3RvcmFnZS5yZW1vdmVBY2NvdW50KEFjY291bnRFbnRpdHkuZ2VuZXJhdGVBY2NvdW50Q2FjaGVLZXkoYWNjb3VudCkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIkNsZWFyZWQgY2FjaGUgaXRlbXMgYmVsb25naW5nIHRvIHRoZSBhY2NvdW50IHByb3ZpZGVkIGluIHRoZSBsb2dvdXQgcmVxdWVzdC5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcihcIkFjY291bnQgcHJvdmlkZWQgaW4gbG9nb3V0IHJlcXVlc3Qgd2FzIG5vdCBmb3VuZC4gTG9jYWwgY2FjaGUgdW5jaGFuZ2VkLlwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJObyBhY2NvdW50IHByb3ZpZGVkIGluIGxvZ291dCByZXF1ZXN0LCBjbGVhcmluZyBhbGwgY2FjaGUgaXRlbXMuXCIsIHRoaXMuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgICAgICAgICAvLyBDbGVhciBhbGwgYWNjb3VudHMgYW5kIHRva2Vuc1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5icm93c2VyU3RvcmFnZS5jbGVhcigpO1xyXG4gICAgICAgICAgICAgICAgLy8gQ2xlYXIgYW55IHN0cmF5IGtleXMgZnJvbSBJbmRleGVkREJcclxuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuYnJvd3NlckNyeXB0by5jbGVhcktleXN0b3JlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKFwiQXR0ZW1wdGVkIHRvIGNsZWFyIGFsbCBNU0FMIGNhY2hlIGl0ZW1zIGFuZCBmYWlsZWQuIExvY2FsIGNhY2hlIHVuY2hhbmdlZC5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKiBVc2UgdG8gZ2V0IHRoZSByZWRpcmVjdCB1cmkgY29uZmlndXJlZCBpbiBNU0FMIG9yIG51bGwuXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFJlZGlyZWN0VXJpXHJcbiAgICAgKiBAcmV0dXJucyBSZWRpcmVjdCBVUkxcclxuICAgICAqXHJcbiAgICAgKi9cclxuICAgIGdldFJlZGlyZWN0VXJpKHJlcXVlc3RSZWRpcmVjdFVyaSkge1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJnZXRSZWRpcmVjdFVyaSBjYWxsZWRcIik7XHJcbiAgICAgICAgY29uc3QgcmVkaXJlY3RVcmkgPSByZXF1ZXN0UmVkaXJlY3RVcmkgfHwgdGhpcy5jb25maWcuYXV0aC5yZWRpcmVjdFVyaTtcclxuICAgICAgICByZXR1cm4gVXJsU3RyaW5nLmdldEFic29sdXRlVXJsKHJlZGlyZWN0VXJpLCBnZXRDdXJyZW50VXJpKCkpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGFwaUlkXHJcbiAgICAgKiBAcGFyYW0gY29ycmVsYXRpb25JZFxyXG4gICAgICogQHBhcmFtIGZvcmNlUmVmcmVzaFxyXG4gICAgICovXHJcbiAgICBpbml0aWFsaXplU2VydmVyVGVsZW1ldHJ5TWFuYWdlcihhcGlJZCwgZm9yY2VSZWZyZXNoKSB7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcImluaXRpYWxpemVTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyIGNhbGxlZFwiKTtcclxuICAgICAgICBjb25zdCB0ZWxlbWV0cnlQYXlsb2FkID0ge1xyXG4gICAgICAgICAgICBjbGllbnRJZDogdGhpcy5jb25maWcuYXV0aC5jbGllbnRJZCxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogdGhpcy5jb3JyZWxhdGlvbklkLFxyXG4gICAgICAgICAgICBhcGlJZDogYXBpSWQsXHJcbiAgICAgICAgICAgIGZvcmNlUmVmcmVzaDogZm9yY2VSZWZyZXNoIHx8IGZhbHNlLFxyXG4gICAgICAgICAgICB3cmFwcGVyU0tVOiB0aGlzLmJyb3dzZXJTdG9yYWdlLmdldFdyYXBwZXJNZXRhZGF0YSgpWzBdLFxyXG4gICAgICAgICAgICB3cmFwcGVyVmVyOiB0aGlzLmJyb3dzZXJTdG9yYWdlLmdldFdyYXBwZXJNZXRhZGF0YSgpWzFdLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIG5ldyBTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyKHRlbGVtZXRyeVBheWxvYWQsIHRoaXMuYnJvd3NlclN0b3JhZ2UpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVc2VkIHRvIGdldCBhIGRpc2NvdmVyZWQgdmVyc2lvbiBvZiB0aGUgZGVmYXVsdCBhdXRob3JpdHkuXHJcbiAgICAgKiBAcGFyYW0gcGFyYW1zIHtcclxuICAgICAqICAgICAgICAgcmVxdWVzdEF1dGhvcml0eT86IHN0cmluZztcclxuICAgICAqICAgICAgICAgcmVxdWVzdEF6dXJlQ2xvdWRPcHRpb25zPzogQXp1cmVDbG91ZE9wdGlvbnM7XHJcbiAgICAgKiAgICAgICAgIHJlcXVlc3RFeHRyYVF1ZXJ5UGFyYW1ldGVycz86IFN0cmluZ0RpY3Q7XHJcbiAgICAgKiAgICAgICAgIGFjY291bnQ/OiBBY2NvdW50SW5mbztcclxuICAgICAqICAgICAgICB9XHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGdldERpc2NvdmVyZWRBdXRob3JpdHkocGFyYW1zKSB7XHJcbiAgICAgICAgY29uc3QgeyBhY2NvdW50IH0gPSBwYXJhbXM7XHJcbiAgICAgICAgY29uc3QgaW5zdGFuY2VBd2FyZUVRID0gcGFyYW1zLnJlcXVlc3RFeHRyYVF1ZXJ5UGFyYW1ldGVycyAmJlxyXG4gICAgICAgICAgICBwYXJhbXMucmVxdWVzdEV4dHJhUXVlcnlQYXJhbWV0ZXJzLmhhc093blByb3BlcnR5KFwiaW5zdGFuY2VfYXdhcmVcIilcclxuICAgICAgICAgICAgPyBwYXJhbXMucmVxdWVzdEV4dHJhUXVlcnlQYXJhbWV0ZXJzW1wiaW5zdGFuY2VfYXdhcmVcIl1cclxuICAgICAgICAgICAgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLlN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnRHZXREaXNjb3ZlcmVkQXV0aG9yaXR5LCB0aGlzLmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIGNvbnN0IGF1dGhvcml0eU9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgIHByb3RvY29sTW9kZTogdGhpcy5jb25maWcuYXV0aC5wcm90b2NvbE1vZGUsXHJcbiAgICAgICAgICAgIE9JRENPcHRpb25zOiB0aGlzLmNvbmZpZy5hdXRoLk9JRENPcHRpb25zLFxyXG4gICAgICAgICAgICBrbm93bkF1dGhvcml0aWVzOiB0aGlzLmNvbmZpZy5hdXRoLmtub3duQXV0aG9yaXRpZXMsXHJcbiAgICAgICAgICAgIGNsb3VkRGlzY292ZXJ5TWV0YWRhdGE6IHRoaXMuY29uZmlnLmF1dGguY2xvdWREaXNjb3ZlcnlNZXRhZGF0YSxcclxuICAgICAgICAgICAgYXV0aG9yaXR5TWV0YWRhdGE6IHRoaXMuY29uZmlnLmF1dGguYXV0aG9yaXR5TWV0YWRhdGEsXHJcbiAgICAgICAgICAgIHNraXBBdXRob3JpdHlNZXRhZGF0YUNhY2hlOiB0aGlzLmNvbmZpZy5hdXRoLnNraXBBdXRob3JpdHlNZXRhZGF0YUNhY2hlLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgLy8gYnVpbGQgYXV0aG9yaXR5IHN0cmluZyBiYXNlZCBvbiBhdXRoIHBhcmFtcywgcHJlY2VkZW5jZSAtIGF6dXJlQ2xvdWRJbnN0YW5jZSArIHRlbmFudCA+PiBhdXRob3JpdHlcclxuICAgICAgICBjb25zdCByZXNvbHZlZEF1dGhvcml0eSA9IHBhcmFtcy5yZXF1ZXN0QXV0aG9yaXR5IHx8IHRoaXMuY29uZmlnLmF1dGguYXV0aG9yaXR5O1xyXG4gICAgICAgIGNvbnN0IHJlc29sdmVkSW5zdGFuY2VBd2FyZSA9IGluc3RhbmNlQXdhcmVFUT8ubGVuZ3RoXHJcbiAgICAgICAgICAgID8gaW5zdGFuY2VBd2FyZUVRID09PSBcInRydWVcIlxyXG4gICAgICAgICAgICA6IHRoaXMuY29uZmlnLmF1dGguaW5zdGFuY2VBd2FyZTtcclxuICAgICAgICBjb25zdCB1c2VyQXV0aG9yaXR5ID0gYWNjb3VudCAmJiByZXNvbHZlZEluc3RhbmNlQXdhcmVcclxuICAgICAgICAgICAgPyB0aGlzLmNvbmZpZy5hdXRoLmF1dGhvcml0eS5yZXBsYWNlKFVybFN0cmluZy5nZXREb21haW5Gcm9tVXJsKHJlc29sdmVkQXV0aG9yaXR5KSwgYWNjb3VudC5lbnZpcm9ubWVudClcclxuICAgICAgICAgICAgOiByZXNvbHZlZEF1dGhvcml0eTtcclxuICAgICAgICAvLyBmYWxsIGJhY2sgdG8gdGhlIGF1dGhvcml0eSBmcm9tIGNvbmZpZ1xyXG4gICAgICAgIGNvbnN0IGJ1aWx0QXV0aG9yaXR5ID0gQXV0aG9yaXR5LmdlbmVyYXRlQXV0aG9yaXR5KHVzZXJBdXRob3JpdHksIHBhcmFtcy5yZXF1ZXN0QXp1cmVDbG91ZE9wdGlvbnMgfHxcclxuICAgICAgICAgICAgdGhpcy5jb25maWcuYXV0aC5henVyZUNsb3VkT3B0aW9ucyk7XHJcbiAgICAgICAgY29uc3QgZGlzY292ZXJlZEF1dGhvcml0eSA9IGF3YWl0IGludm9rZUFzeW5jKEF1dGhvcml0eUZhY3RvcnkuY3JlYXRlRGlzY292ZXJlZEluc3RhbmNlLCBQZXJmb3JtYW5jZUV2ZW50cy5BdXRob3JpdHlGYWN0b3J5Q3JlYXRlRGlzY292ZXJlZEluc3RhbmNlLCB0aGlzLmxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgdGhpcy5jb3JyZWxhdGlvbklkKShidWlsdEF1dGhvcml0eSwgdGhpcy5jb25maWcuc3lzdGVtLm5ldHdvcmtDbGllbnQsIHRoaXMuYnJvd3NlclN0b3JhZ2UsIGF1dGhvcml0eU9wdGlvbnMsIHRoaXMubG9nZ2VyLCB0aGlzLmNvcnJlbGF0aW9uSWQsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQpO1xyXG4gICAgICAgIGlmIChhY2NvdW50ICYmICFkaXNjb3ZlcmVkQXV0aG9yaXR5LmlzQWxpYXMoYWNjb3VudC5lbnZpcm9ubWVudCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKENsaWVudENvbmZpZ3VyYXRpb25FcnJvckNvZGVzLmF1dGhvcml0eU1pc21hdGNoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGRpc2NvdmVyZWRBdXRob3JpdHk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgQmFzZUludGVyYWN0aW9uQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CYXNlSW50ZXJhY3Rpb25DbGllbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HybridSpaAuthorizationCodeClient: function() { return /* binding */ HybridSpaAuthorizationCodeClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass HybridSpaAuthorizationCodeClient extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthorizationCodeClient {\r\n    constructor(config) {\r\n        super(config);\r\n        this.includeRedirectUri = false;\r\n    }\r\n}\n\n\n//# sourceMappingURL=HybridSpaAuthorizationCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9IeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ3dEOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQywrRUFBdUI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9pbnRlcmFjdGlvbl9jbGllbnQvSHlicmlkU3BhQXV0aG9yaXphdGlvbkNvZGVDbGllbnQubWpzP2Q2ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRob3JpemF0aW9uQ29kZUNsaWVudCB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIEh5YnJpZFNwYUF1dGhvcml6YXRpb25Db2RlQ2xpZW50IGV4dGVuZHMgQXV0aG9yaXphdGlvbkNvZGVDbGllbnQge1xyXG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XHJcbiAgICAgICAgc3VwZXIoY29uZmlnKTtcclxuICAgICAgICB0aGlzLmluY2x1ZGVSZWRpcmVjdFVyaSA9IGZhbHNlO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IEh5YnJpZFNwYUF1dGhvcml6YXRpb25Db2RlQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1IeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeInteractionClient: function() { return /* binding */ NativeInteractionClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/NativeAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SilentCacheClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\");\n/* harmony import */ var _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../encode/Base64Decode.mjs */ \"./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/* harmony import */ var _error_NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/NativeAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NativeInteractionClient extends _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseInteractionClient {\r\n    constructor(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\r\n        super(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\r\n        this.apiId = apiId;\r\n        this.accountId = accountId;\r\n        this.nativeMessageHandler = provider;\r\n        this.nativeStorageManager = nativeStorageImpl;\r\n        this.silentCacheClient = new _SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_1__.SilentCacheClient(config, this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\r\n        this.serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n        const extensionName = this.nativeMessageHandler.getExtensionId() ===\r\n            _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeConstants.PREFERRED_EXTENSION_ID\r\n            ? \"chrome\"\r\n            : this.nativeMessageHandler.getExtensionId()?.length\r\n                ? \"unknown\"\r\n                : undefined;\r\n        this.skus = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ServerTelemetryManager.makeExtraSkuString({\r\n            libraryName: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.MSAL_SKU,\r\n            libraryVersion: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.version,\r\n            extensionName: extensionName,\r\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\r\n        });\r\n    }\r\n    /**\r\n     * Adds SKUs to request extra query parameters\r\n     * @param request {NativeTokenRequest}\r\n     * @private\r\n     */\r\n    addRequestSKUs(request) {\r\n        request.extraParameters = {\r\n            ...request.extraParameters,\r\n            [_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AADServerParamKeys.X_CLIENT_EXTRA_SKU]: this.skus,\r\n        };\r\n    }\r\n    /**\r\n     * Acquire token from native platform via browser extension\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\r\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\r\n        // start the perf measurement\r\n        const nativeATMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\r\n        const reqTimestamp = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.TimeUtils.nowSeconds();\r\n        try {\r\n            // initialize native request\r\n            const nativeRequest = await this.initializeNativeRequest(request);\r\n            // check if the tokens can be retrieved from internal cache\r\n            try {\r\n                const result = await this.acquireTokensFromCache(this.accountId, nativeRequest);\r\n                nativeATMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: false,\r\n                    fromCache: true,\r\n                });\r\n                return result;\r\n            }\r\n            catch (e) {\r\n                // continue with a native call for any and all errors\r\n                this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\r\n            }\r\n            const { ...nativeTokenRequest } = nativeRequest;\r\n            // fall back to native calls\r\n            const messageBody = {\r\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeExtensionMethod.GetToken,\r\n                request: nativeTokenRequest,\r\n            };\r\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\r\n            const validatedResponse = this.validateNativeResponse(response);\r\n            return await this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\r\n                .then((result) => {\r\n                nativeATMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: true,\r\n                    requestId: result.requestId,\r\n                });\r\n                this.serverTelemetryManager.clearNativeBrokerErrorCode();\r\n                return result;\r\n            })\r\n                .catch((error) => {\r\n                nativeATMeasurement.end({\r\n                    success: false,\r\n                    errorCode: error.errorCode,\r\n                    subErrorCode: error.subError,\r\n                    isNativeBroker: true,\r\n                });\r\n                throw error;\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.NativeAuthError) {\r\n                this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Creates silent flow request\r\n     * @param request\r\n     * @param cachedAccount\r\n     * @returns CommonSilentFlowRequest\r\n     */\r\n    createSilentCacheRequest(request, cachedAccount) {\r\n        return {\r\n            authority: request.authority,\r\n            correlationId: this.correlationId,\r\n            scopes: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.fromString(request.scope).asArray(),\r\n            account: cachedAccount,\r\n            forceRefresh: false,\r\n        };\r\n    }\r\n    /**\r\n     * Fetches the tokens from the cache if un-expired\r\n     * @param nativeAccountId\r\n     * @param request\r\n     * @returns authenticationResult\r\n     */\r\n    async acquireTokensFromCache(nativeAccountId, request) {\r\n        if (!nativeAccountId) {\r\n            this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientAuthErrorCodes.noAccountFound);\r\n        }\r\n        // fetch the account from browser cache\r\n        const account = this.browserStorage.getBaseAccountInfo({\r\n            nativeAccountId,\r\n        });\r\n        if (!account) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientAuthErrorCodes.noAccountFound);\r\n        }\r\n        // leverage silent flow for cached tokens retrieval\r\n        try {\r\n            const silentRequest = this.createSilentCacheRequest(request, account);\r\n            const result = await this.silentCacheClient.acquireToken(silentRequest);\r\n            const fullAccount = {\r\n                ...account,\r\n                idTokenClaims: result?.idTokenClaims,\r\n                idToken: result?.idToken,\r\n            };\r\n            return {\r\n                ...result,\r\n                account: fullAccount,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\r\n     * @param {RedirectRequest} request\r\n     * @param {InProgressPerformanceEvent} rootMeasurement\r\n     */\r\n    async acquireTokenRedirect(request, rootMeasurement) {\r\n        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\r\n        const { ...remainingParameters } = request;\r\n        delete remainingParameters.onRedirectNavigate;\r\n        const nativeRequest = await this.initializeNativeRequest(remainingParameters);\r\n        const messageBody = {\r\n            method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeExtensionMethod.GetToken,\r\n            request: nativeRequest,\r\n        };\r\n        try {\r\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\r\n            this.validateNativeResponse(response);\r\n        }\r\n        catch (e) {\r\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\r\n            if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.NativeAuthError) {\r\n                this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\r\n                if ((0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.isFatalNativeAuthError)(e)) {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\r\n        const navigationOptions = {\r\n            apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenRedirect,\r\n            timeout: this.config.system.redirectNavigationTimeout,\r\n            noHistory: false,\r\n        };\r\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\r\n            ? window.location.href\r\n            : this.getRedirectUri(request.redirectUri);\r\n        rootMeasurement.end({ success: true });\r\n        await this.navigationClient.navigateExternal(redirectUri, navigationOptions); // Need to treat this as external to ensure handleRedirectPromise is run again\r\n    }\r\n    /**\r\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\r\n     * @param performanceClient {IPerformanceClient?}\r\n     * @param correlationId {string?} correlation identifier\r\n     */\r\n    async handleRedirectPromise(performanceClient, correlationId) {\r\n        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\r\n        if (!this.browserStorage.isInteractionInProgress(true)) {\r\n            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\r\n            return null;\r\n        }\r\n        // remove prompt from the request to prevent WAM from prompting twice\r\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\r\n        if (!cachedRequest) {\r\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\r\n            if (performanceClient && correlationId) {\r\n                performanceClient?.addFields({ errorCode: \"no_cached_request\" }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        const { prompt, ...request } = cachedRequest;\r\n        if (prompt) {\r\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\r\n        }\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NATIVE_REQUEST));\r\n        const messageBody = {\r\n            method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeExtensionMethod.GetToken,\r\n            request: request,\r\n        };\r\n        const reqTimestamp = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.TimeUtils.nowSeconds();\r\n        try {\r\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\r\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\r\n            this.validateNativeResponse(response);\r\n            const result = this.handleNativeResponse(response, request, reqTimestamp);\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            const res = await result;\r\n            this.serverTelemetryManager.clearNativeBrokerErrorCode();\r\n            return res;\r\n        }\r\n        catch (e) {\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Logout from native platform via browser extension\r\n     * @param request\r\n     */\r\n    logout() {\r\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\r\n        return Promise.reject(\"Logout not implemented yet\");\r\n    }\r\n    /**\r\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\r\n     * @param response\r\n     * @param request\r\n     * @param reqTimestamp\r\n     */\r\n    async handleNativeResponse(response, request, reqTimestamp) {\r\n        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\r\n        // generate identifiers\r\n        const idTokenClaims = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthToken.extractTokenClaims(response.id_token, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_6__.base64Decode);\r\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenClaims);\r\n        const cachedhomeAccountId = this.browserStorage.getAccountInfoFilteredBy({\r\n            nativeAccountId: request.accountId,\r\n        })?.homeAccountId;\r\n        if (homeAccountIdentifier !== cachedhomeAccountId &&\r\n            response.account.id !== request.accountId) {\r\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\r\n            throw (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createNativeAuthError)(_error_NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__.userSwitch);\r\n        }\r\n        // Get the preferred_cache domain for the given authority\r\n        const authority = await this.getDiscoveredAuthority({\r\n            requestAuthority: request.authority,\r\n        });\r\n        const baseAccount = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.buildAccountToCache)(this.browserStorage, authority, homeAccountIdentifier, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_6__.base64Decode, idTokenClaims, response.client_info, undefined, // environment\r\n        idTokenClaims.tid, undefined, // auth code payload\r\n        response.account.id, this.logger);\r\n        // generate authenticationResult\r\n        const result = await this.generateAuthenticationResult(response, request, idTokenClaims, baseAccount, authority.canonicalAuthority, reqTimestamp);\r\n        // cache accounts and tokens in the appropriate storage\r\n        this.cacheAccount(baseAccount);\r\n        this.cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, response.access_token, result.tenantId, reqTimestamp);\r\n        return result;\r\n    }\r\n    /**\r\n     * creates an homeAccountIdentifier for the account\r\n     * @param response\r\n     * @param idTokenObj\r\n     * @returns\r\n     */\r\n    createHomeAccountIdentifier(response, idTokenClaims) {\r\n        // Save account in browser storage\r\n        const homeAccountIdentifier = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.generateHomeAccountId(response.client_info || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.Constants.EMPTY_STRING, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthorityType.Default, this.logger, this.browserCrypto, idTokenClaims);\r\n        return homeAccountIdentifier;\r\n    }\r\n    /**\r\n     * Helper to generate scopes\r\n     * @param response\r\n     * @param request\r\n     * @returns\r\n     */\r\n    generateScopes(response, request) {\r\n        return response.scope\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.fromString(response.scope)\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.fromString(request.scope);\r\n    }\r\n    /**\r\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\r\n     * @param request\r\n     * @param response\r\n     */\r\n    async generatePopAccessToken(response, request) {\r\n        if (request.tokenType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.POP &&\r\n            request.signPopToken) {\r\n            /**\r\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\r\n             * is still received, SHR is calculated locally\r\n             */\r\n            // Check if native layer returned an SHR token\r\n            if (response.shr) {\r\n                this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\r\n                return response.shr;\r\n            }\r\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\r\n            const popTokenGenerator = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PopTokenGenerator(this.browserCrypto);\r\n            const shrParameters = {\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                shrClaims: request.shrClaims,\r\n                shrNonce: request.shrNonce,\r\n            };\r\n            /**\r\n             * KeyID must be present in the native request from when the PoP key was generated in order for\r\n             * PopTokenGenerator to query the full key for signing\r\n             */\r\n            if (!request.keyId) {\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientAuthErrorCodes.keyIdMissing);\r\n            }\r\n            return popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters);\r\n        }\r\n        else {\r\n            return response.access_token;\r\n        }\r\n    }\r\n    /**\r\n     * Generates authentication result\r\n     * @param response\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param accountEntity\r\n     * @param authority\r\n     * @param reqTimestamp\r\n     * @returns\r\n     */\r\n    async generateAuthenticationResult(response, request, idTokenClaims, accountEntity, authority, reqTimestamp) {\r\n        // Add Native Broker fields to Telemetry\r\n        const mats = this.addTelemetryFromNativeResponse(response);\r\n        // If scopes not returned in server response, use request scopes\r\n        const responseScopes = response.scope\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.fromString(response.scope)\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.fromString(request.scope);\r\n        const accountProperties = response.account.properties || {};\r\n        const uid = accountProperties[\"UID\"] ||\r\n            idTokenClaims.oid ||\r\n            idTokenClaims.sub ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.Constants.EMPTY_STRING;\r\n        const tid = accountProperties[\"TenantId\"] ||\r\n            idTokenClaims.tid ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.Constants.EMPTY_STRING;\r\n        const accountInfo = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.updateAccountTenantProfileData)(accountEntity.getAccountInfo(), undefined, // tenantProfile optional\r\n        idTokenClaims, response.id_token);\r\n        /**\r\n         * In pairwise broker flows, this check prevents the broker's native account id\r\n         * from being returned over the embedded app's account id.\r\n         */\r\n        if (accountInfo.nativeAccountId !== response.account.id) {\r\n            accountInfo.nativeAccountId = response.account.id;\r\n        }\r\n        // generate PoP token as needed\r\n        const responseAccessToken = await this.generatePopAccessToken(response, request);\r\n        const tokenType = request.tokenType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.POP\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.POP\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.BEARER;\r\n        const result = {\r\n            authority: authority,\r\n            uniqueId: uid,\r\n            tenantId: tid,\r\n            scopes: responseScopes.asArray(),\r\n            account: accountInfo,\r\n            idToken: response.id_token,\r\n            idTokenClaims: idTokenClaims,\r\n            accessToken: responseAccessToken,\r\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\r\n            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\r\n            tokenType: tokenType,\r\n            correlationId: this.correlationId,\r\n            state: response.state,\r\n            fromNativeBroker: true,\r\n        };\r\n        return result;\r\n    }\r\n    /**\r\n     * cache the account entity in browser storage\r\n     * @param accountEntity\r\n     */\r\n    cacheAccount(accountEntity) {\r\n        // Store the account info and hence `nativeAccountId` in browser cache\r\n        this.browserStorage.setAccount(accountEntity);\r\n        // Remove any existing cached tokens for this account in browser storage\r\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\r\n            this.logger.error(`Error occurred while removing account context from browser storage. ${e}`);\r\n        });\r\n    }\r\n    /**\r\n     * Stores the access_token and id_token in inmemory storage\r\n     * @param response\r\n     * @param request\r\n     * @param homeAccountIdentifier\r\n     * @param idTokenObj\r\n     * @param responseAccessToken\r\n     * @param tenantId\r\n     * @param reqTimestamp\r\n     */\r\n    cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, responseAccessToken, tenantId, reqTimestamp) {\r\n        const cachedIdToken = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.CacheHelpers.createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || \"\", request.clientId, idTokenClaims.tid || \"\");\r\n        // cache accessToken in inmemory storage\r\n        const expiresIn = request.tokenType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.POP\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.Constants.SHR_NONCE_VALIDITY\r\n            : (typeof response.expires_in === \"string\"\r\n                ? parseInt(response.expires_in, 10)\r\n                : response.expires_in) || 0;\r\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n        const responseScopes = this.generateScopes(response, request);\r\n        const cachedAccessToken = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.CacheHelpers.createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenClaims.tid || tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_6__.base64Decode, undefined, request.tokenType, undefined, request.keyId);\r\n        const nativeCacheRecord = {\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n        };\r\n        void this.nativeStorageManager.saveCacheRecord(nativeCacheRecord, request.storeInCache);\r\n    }\r\n    addTelemetryFromNativeResponse(response) {\r\n        const mats = this.getMATSFromResponse(response);\r\n        if (!mats) {\r\n            return null;\r\n        }\r\n        this.performanceClient.addFields({\r\n            extensionId: this.nativeMessageHandler.getExtensionId(),\r\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\r\n            matsBrokerVersion: mats.broker_version,\r\n            matsAccountJoinOnStart: mats.account_join_on_start,\r\n            matsAccountJoinOnEnd: mats.account_join_on_end,\r\n            matsDeviceJoin: mats.device_join,\r\n            matsPromptBehavior: mats.prompt_behavior,\r\n            matsApiErrorCode: mats.api_error_code,\r\n            matsUiVisible: mats.ui_visible,\r\n            matsSilentCode: mats.silent_code,\r\n            matsSilentBiSubCode: mats.silent_bi_sub_code,\r\n            matsSilentMessage: mats.silent_message,\r\n            matsSilentStatus: mats.silent_status,\r\n            matsHttpStatus: mats.http_status,\r\n            matsHttpEventCount: mats.http_event_count,\r\n        }, this.correlationId);\r\n        return mats;\r\n    }\r\n    /**\r\n     * Validates native platform response before processing\r\n     * @param response\r\n     */\r\n    validateNativeResponse(response) {\r\n        if (response.hasOwnProperty(\"access_token\") &&\r\n            response.hasOwnProperty(\"id_token\") &&\r\n            response.hasOwnProperty(\"client_info\") &&\r\n            response.hasOwnProperty(\"account\") &&\r\n            response.hasOwnProperty(\"scope\") &&\r\n            response.hasOwnProperty(\"expires_in\")) {\r\n            return response;\r\n        }\r\n        else {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthErrorCodes.unexpectedError, \"Response missing expected properties.\");\r\n        }\r\n    }\r\n    /**\r\n     * Gets MATS telemetry from native response\r\n     * @param response\r\n     * @returns\r\n     */\r\n    getMATSFromResponse(response) {\r\n        if (response.properties.MATS) {\r\n            try {\r\n                return JSON.parse(response.properties.MATS);\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns whether or not response came from native cache\r\n     * @param response\r\n     * @returns\r\n     */\r\n    isResponseFromCache(mats) {\r\n        if (typeof mats.is_cached === \"undefined\") {\r\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\r\n            return false;\r\n        }\r\n        return !!mats.is_cached;\r\n    }\r\n    /**\r\n     * Translates developer provided request object into NativeRequest object\r\n     * @param request\r\n     */\r\n    async initializeNativeRequest(request) {\r\n        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\r\n        const requestAuthority = request.authority || this.config.auth.authority;\r\n        if (request.account) {\r\n            // validate authority\r\n            await this.getDiscoveredAuthority({\r\n                requestAuthority,\r\n                requestAzureCloudOptions: request.azureCloudOptions,\r\n                account: request.account,\r\n            });\r\n        }\r\n        const canonicalAuthority = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.UrlString(requestAuthority);\r\n        canonicalAuthority.validateAsUri();\r\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\r\n        const { scopes, ...remainingProperties } = request;\r\n        const scopeSet = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ScopeSet(scopes || []);\r\n        scopeSet.appendScopes(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.OIDC_DEFAULT_SCOPES);\r\n        const getPrompt = () => {\r\n            // If request is silent, prompt is always none\r\n            switch (this.apiId) {\r\n                case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.ssoSilent:\r\n                case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenSilent_silentFlow:\r\n                    this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\r\n                    return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PromptValue.NONE;\r\n            }\r\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\r\n            if (!request.prompt) {\r\n                this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\r\n                return undefined;\r\n            }\r\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\r\n            switch (request.prompt) {\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PromptValue.NONE:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PromptValue.CONSENT:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PromptValue.LOGIN:\r\n                    this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\r\n                    return request.prompt;\r\n                default:\r\n                    this.logger.trace(`initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`);\r\n                    throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.nativePromptNotSupported);\r\n            }\r\n        };\r\n        const validatedRequest = {\r\n            ...remainingProperties,\r\n            accountId: this.accountId,\r\n            clientId: this.config.auth.clientId,\r\n            authority: canonicalAuthority.urlString,\r\n            scope: scopeSet.printScopes(),\r\n            redirectUri: this.getRedirectUri(request.redirectUri),\r\n            prompt: getPrompt(),\r\n            correlationId: this.correlationId,\r\n            tokenType: request.authenticationScheme,\r\n            windowTitleSubstring: document.title,\r\n            extraParameters: {\r\n                ...request.extraQueryParameters,\r\n                ...request.tokenQueryParameters,\r\n            },\r\n            extendedExpiryToken: false,\r\n            keyId: request.popKid,\r\n        };\r\n        // Check for PoP token requests: signPopToken should only be set to true if popKid is not set\r\n        if (validatedRequest.signPopToken && !!request.popKid) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.invalidPopTokenRequest);\r\n        }\r\n        this.handleExtraBrokerParams(validatedRequest);\r\n        validatedRequest.extraParameters =\r\n            validatedRequest.extraParameters || {};\r\n        validatedRequest.extraParameters.telemetry =\r\n            _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeConstants.MATS_TELEMETRY;\r\n        if (request.authenticationScheme === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.POP) {\r\n            // add POP request type\r\n            const shrParameters = {\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                shrClaims: request.shrClaims,\r\n                shrNonce: request.shrNonce,\r\n            };\r\n            const popTokenGenerator = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PopTokenGenerator(this.browserCrypto);\r\n            // generate reqCnf if not provided in the request\r\n            let reqCnfData;\r\n            if (!validatedRequest.keyId) {\r\n                const generatedReqCnfData = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(shrParameters, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n                validatedRequest.keyId = generatedReqCnfData.kid;\r\n                validatedRequest.signPopToken = true;\r\n            }\r\n            else {\r\n                reqCnfData = this.browserCrypto.base64UrlEncode(JSON.stringify({ kid: validatedRequest.keyId }));\r\n                validatedRequest.signPopToken = false;\r\n            }\r\n            // SPAs require whole string to be passed to broker\r\n            validatedRequest.reqCnf = reqCnfData;\r\n        }\r\n        this.addRequestSKUs(validatedRequest);\r\n        return validatedRequest;\r\n    }\r\n    /**\r\n     * Handles extra broker request parameters\r\n     * @param request {NativeTokenRequest}\r\n     * @private\r\n     */\r\n    handleExtraBrokerParams(request) {\r\n        const hasExtraBrokerParams = request.extraParameters &&\r\n            request.extraParameters.hasOwnProperty(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AADServerParamKeys.BROKER_CLIENT_ID) &&\r\n            request.extraParameters.hasOwnProperty(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AADServerParamKeys.BROKER_REDIRECT_URI) &&\r\n            request.extraParameters.hasOwnProperty(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AADServerParamKeys.CLIENT_ID);\r\n        if (!request.embeddedClientId && !hasExtraBrokerParams) {\r\n            return;\r\n        }\r\n        let child_client_id = \"\";\r\n        const child_redirect_uri = request.redirectUri;\r\n        if (request.embeddedClientId) {\r\n            request.redirectUri = this.config.auth.redirectUri;\r\n            child_client_id = request.embeddedClientId;\r\n        }\r\n        else if (request.extraParameters) {\r\n            request.redirectUri =\r\n                request.extraParameters[_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AADServerParamKeys.BROKER_REDIRECT_URI];\r\n            child_client_id =\r\n                request.extraParameters[_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AADServerParamKeys.CLIENT_ID];\r\n        }\r\n        request.extraParameters = {\r\n            child_client_id,\r\n            child_redirect_uri,\r\n        };\r\n        this.performanceClient?.addFields({\r\n            embeddedClientId: child_client_id,\r\n            embeddedRedirectUri: child_redirect_uri,\r\n        }, request.correlationId);\r\n    }\r\n}\n\n\n//# sourceMappingURL=NativeInteractionClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9OYXRpdmVJbnRlcmFjdGlvbkNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQzJaO0FBQ3BXO0FBQ2dFO0FBQ3RCO0FBQ3ZDO0FBQ1g7QUFDRjtBQUNUO0FBQ3FEO0FBQ3ZDOztBQUUvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyw2RUFBcUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHFFQUFpQjtBQUN0RDtBQUNBO0FBQ0EsWUFBWSx3RUFBZTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw4RUFBc0I7QUFDMUMseUJBQXlCLHlFQUFnQjtBQUN6Qyw0QkFBNEIseURBQU87QUFDbkM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsMEVBQWtCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlFQUFpQjtBQUNwRTtBQUNBO0FBQ0EsNEVBQTRFLHlFQUFpQjtBQUM3Riw2QkFBNkIsaUVBQVM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHdCQUF3QjtBQUM1QztBQUNBO0FBQ0Esd0JBQXdCLDhFQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsNkJBQTZCLHVFQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnRUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpRkFBcUIsQ0FBQyw0RUFBb0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxrQkFBa0IsaUZBQXFCLENBQUMsNEVBQW9CO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUJBQWlCO0FBQ2hDLGVBQWUsNEJBQTRCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix5QkFBeUI7QUFDekM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhFQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHVFQUFlO0FBQzVDO0FBQ0Esb0JBQW9CLGtGQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QywyRUFBa0I7QUFDaEU7QUFDQSxtQkFBbUIsOERBQUs7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGVBQWU7QUFDN0Msc0ZBQXNGO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyw2QkFBNkIsU0FBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsZ0NBQWdDO0FBQy9FO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxQkFBcUI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLDJFQUFrQjtBQUM5RjtBQUNBLG9CQUFvQiw4RUFBcUI7QUFDekM7QUFDQTtBQUNBLDZCQUE2QixpRUFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGlFQUFTLHVDQUF1QyxrRUFBWTtBQUMxRjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLHVFQUFVO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULDRCQUE0QiwrRUFBbUIsd0RBQXdELGtFQUFZO0FBQ25IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MscUVBQWEsK0NBQStDLGlFQUFTLGVBQWUscUVBQWE7QUFDdkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdFQUFRO0FBQ3RCLGNBQWMsZ0VBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsNEVBQW9CO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMseUVBQWlCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaUZBQXFCLENBQUMsNEVBQW9CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnRUFBUTtBQUN0QixjQUFjLGdFQUFRO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpRUFBUztBQUNyQjtBQUNBO0FBQ0EsWUFBWSxpRUFBUztBQUNyQiw0QkFBNEIsMEZBQThCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELDRFQUFvQjtBQUNwRSxjQUFjLDRFQUFvQjtBQUNsQyxjQUFjLDRFQUFvQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxR0FBcUcsRUFBRTtBQUN2RyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG9FQUFZO0FBQzFDO0FBQ0EsZ0RBQWdELDRFQUFvQjtBQUNwRSxjQUFjLGlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msb0VBQVksa01BQWtNLGtFQUFZO0FBQzVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyRUFBZSxDQUFDLHNFQUFjO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsdUNBQXVDLGlFQUFTO0FBQ2hEO0FBQ0E7QUFDQSxnQkFBZ0IsaUNBQWlDO0FBQ2pELDZCQUE2QixnRUFBUTtBQUNyQyw4QkFBOEIsMkVBQW1CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw4REFBSztBQUMxQixxQkFBcUIsOERBQUs7QUFDMUI7QUFDQSwyQkFBMkIsbUVBQVc7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixtRUFBVztBQUNoQyxxQkFBcUIsbUVBQVc7QUFDaEMscUJBQXFCLG1FQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxnQkFBZ0I7QUFDM0YsMEJBQTBCLG1GQUFzQixDQUFDLHNGQUF3QjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1GQUFzQixDQUFDLG9GQUFzQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3RUFBZTtBQUMzQiw2Q0FBNkMsNEVBQW9CO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHlFQUFpQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsdUVBQVcsd0RBQXdELHlFQUFpQjtBQUN0STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGLDZCQUE2QjtBQUM5RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCwwRUFBa0I7QUFDckUsbURBQW1ELDBFQUFrQjtBQUNyRSxtREFBbUQsMEVBQWtCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsMEVBQWtCO0FBQzFEO0FBQ0Esd0NBQXdDLDBFQUFrQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRW1DO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvaW50ZXJhY3Rpb25fY2xpZW50L05hdGl2ZUludGVyYWN0aW9uQ2xpZW50Lm1qcz84ODlhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgU2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgQUFEU2VydmVyUGFyYW1LZXlzLCBQZXJmb3JtYW5jZUV2ZW50cywgVGltZVV0aWxzLCBTY29wZVNldCwgY3JlYXRlQ2xpZW50QXV0aEVycm9yLCBDbGllbnRBdXRoRXJyb3JDb2RlcywgQXV0aFRva2VuLCBidWlsZEFjY291bnRUb0NhY2hlLCBBY2NvdW50RW50aXR5LCBDb25zdGFudHMsIEF1dGhvcml0eVR5cGUsIEF1dGhlbnRpY2F0aW9uU2NoZW1lLCBQb3BUb2tlbkdlbmVyYXRvciwgdXBkYXRlQWNjb3VudFRlbmFudFByb2ZpbGVEYXRhLCBDYWNoZUhlbHBlcnMsIGNyZWF0ZUF1dGhFcnJvciwgQXV0aEVycm9yQ29kZXMsIFVybFN0cmluZywgT0lEQ19ERUZBVUxUX1NDT1BFUywgaW52b2tlQXN5bmMsIFByb21wdFZhbHVlIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuaW1wb3J0IHsgQmFzZUludGVyYWN0aW9uQ2xpZW50IH0gZnJvbSAnLi9CYXNlSW50ZXJhY3Rpb25DbGllbnQubWpzJztcbmltcG9ydCB7IE5hdGl2ZUNvbnN0YW50cywgQnJvd3NlckNvbnN0YW50cywgTmF0aXZlRXh0ZW5zaW9uTWV0aG9kLCBUZW1wb3JhcnlDYWNoZUtleXMsIEFwaUlkIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgTmF0aXZlQXV0aEVycm9yLCBpc0ZhdGFsTmF0aXZlQXV0aEVycm9yLCBjcmVhdGVOYXRpdmVBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9OYXRpdmVBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBTaWxlbnRDYWNoZUNsaWVudCB9IGZyb20gJy4vU2lsZW50Q2FjaGVDbGllbnQubWpzJztcbmltcG9ydCB7IGJhc2U2NERlY29kZSB9IGZyb20gJy4uL2VuY29kZS9CYXNlNjREZWNvZGUubWpzJztcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuLi9wYWNrYWdlTWV0YWRhdGEubWpzJztcbmltcG9ydCB7IGludmFsaWRQb3BUb2tlblJlcXVlc3QsIG5hdGl2ZVByb21wdE5vdFN1cHBvcnRlZCB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuaW1wb3J0IHsgdXNlclN3aXRjaCB9IGZyb20gJy4uL2Vycm9yL05hdGl2ZUF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCBleHRlbmRzIEJhc2VJbnRlcmFjdGlvbkNsaWVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcsIGJyb3dzZXJTdG9yYWdlLCBicm93c2VyQ3J5cHRvLCBsb2dnZXIsIGV2ZW50SGFuZGxlciwgbmF2aWdhdGlvbkNsaWVudCwgYXBpSWQsIHBlcmZvcm1hbmNlQ2xpZW50LCBwcm92aWRlciwgYWNjb3VudElkLCBuYXRpdmVTdG9yYWdlSW1wbCwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgIHN1cGVyKGNvbmZpZywgYnJvd3NlclN0b3JhZ2UsIGJyb3dzZXJDcnlwdG8sIGxvZ2dlciwgZXZlbnRIYW5kbGVyLCBuYXZpZ2F0aW9uQ2xpZW50LCBwZXJmb3JtYW5jZUNsaWVudCwgcHJvdmlkZXIsIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIHRoaXMuYXBpSWQgPSBhcGlJZDtcclxuICAgICAgICB0aGlzLmFjY291bnRJZCA9IGFjY291bnRJZDtcclxuICAgICAgICB0aGlzLm5hdGl2ZU1lc3NhZ2VIYW5kbGVyID0gcHJvdmlkZXI7XHJcbiAgICAgICAgdGhpcy5uYXRpdmVTdG9yYWdlTWFuYWdlciA9IG5hdGl2ZVN0b3JhZ2VJbXBsO1xyXG4gICAgICAgIHRoaXMuc2lsZW50Q2FjaGVDbGllbnQgPSBuZXcgU2lsZW50Q2FjaGVDbGllbnQoY29uZmlnLCB0aGlzLm5hdGl2ZVN0b3JhZ2VNYW5hZ2VyLCBicm93c2VyQ3J5cHRvLCBsb2dnZXIsIGV2ZW50SGFuZGxlciwgbmF2aWdhdGlvbkNsaWVudCwgcGVyZm9ybWFuY2VDbGllbnQsIHByb3ZpZGVyLCBjb3JyZWxhdGlvbklkKTtcclxuICAgICAgICB0aGlzLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIgPSB0aGlzLmluaXRpYWxpemVTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyKHRoaXMuYXBpSWQpO1xyXG4gICAgICAgIGNvbnN0IGV4dGVuc2lvbk5hbWUgPSB0aGlzLm5hdGl2ZU1lc3NhZ2VIYW5kbGVyLmdldEV4dGVuc2lvbklkKCkgPT09XHJcbiAgICAgICAgICAgIE5hdGl2ZUNvbnN0YW50cy5QUkVGRVJSRURfRVhURU5TSU9OX0lEXHJcbiAgICAgICAgICAgID8gXCJjaHJvbWVcIlxyXG4gICAgICAgICAgICA6IHRoaXMubmF0aXZlTWVzc2FnZUhhbmRsZXIuZ2V0RXh0ZW5zaW9uSWQoKT8ubGVuZ3RoXHJcbiAgICAgICAgICAgICAgICA/IFwidW5rbm93blwiXHJcbiAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZDtcclxuICAgICAgICB0aGlzLnNrdXMgPSBTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLm1ha2VFeHRyYVNrdVN0cmluZyh7XHJcbiAgICAgICAgICAgIGxpYnJhcnlOYW1lOiBCcm93c2VyQ29uc3RhbnRzLk1TQUxfU0tVLFxyXG4gICAgICAgICAgICBsaWJyYXJ5VmVyc2lvbjogdmVyc2lvbixcclxuICAgICAgICAgICAgZXh0ZW5zaW9uTmFtZTogZXh0ZW5zaW9uTmFtZSxcclxuICAgICAgICAgICAgZXh0ZW5zaW9uVmVyc2lvbjogdGhpcy5uYXRpdmVNZXNzYWdlSGFuZGxlci5nZXRFeHRlbnNpb25WZXJzaW9uKCksXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFkZHMgU0tVcyB0byByZXF1ZXN0IGV4dHJhIHF1ZXJ5IHBhcmFtZXRlcnNcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0IHtOYXRpdmVUb2tlblJlcXVlc3R9XHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICovXHJcbiAgICBhZGRSZXF1ZXN0U0tVcyhyZXF1ZXN0KSB7XHJcbiAgICAgICAgcmVxdWVzdC5leHRyYVBhcmFtZXRlcnMgPSB7XHJcbiAgICAgICAgICAgIC4uLnJlcXVlc3QuZXh0cmFQYXJhbWV0ZXJzLFxyXG4gICAgICAgICAgICBbQUFEU2VydmVyUGFyYW1LZXlzLlhfQ0xJRU5UX0VYVFJBX1NLVV06IHRoaXMuc2t1cyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBY3F1aXJlIHRva2VuIGZyb20gbmF0aXZlIHBsYXRmb3JtIHZpYSBicm93c2VyIGV4dGVuc2lvblxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqL1xyXG4gICAgYXN5bmMgYWNxdWlyZVRva2VuKHJlcXVlc3QpIHtcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuTmF0aXZlSW50ZXJhY3Rpb25DbGllbnRBY3F1aXJlVG9rZW4sIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIGFjcXVpcmVUb2tlbiBjYWxsZWQuXCIpO1xyXG4gICAgICAgIC8vIHN0YXJ0IHRoZSBwZXJmIG1lYXN1cmVtZW50XHJcbiAgICAgICAgY29uc3QgbmF0aXZlQVRNZWFzdXJlbWVudCA9IHRoaXMucGVyZm9ybWFuY2VDbGllbnQuc3RhcnRNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5OYXRpdmVJbnRlcmFjdGlvbkNsaWVudEFjcXVpcmVUb2tlbiwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBjb25zdCByZXFUaW1lc3RhbXAgPSBUaW1lVXRpbHMubm93U2Vjb25kcygpO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIGluaXRpYWxpemUgbmF0aXZlIHJlcXVlc3RcclxuICAgICAgICAgICAgY29uc3QgbmF0aXZlUmVxdWVzdCA9IGF3YWl0IHRoaXMuaW5pdGlhbGl6ZU5hdGl2ZVJlcXVlc3QocmVxdWVzdCk7XHJcbiAgICAgICAgICAgIC8vIGNoZWNrIGlmIHRoZSB0b2tlbnMgY2FuIGJlIHJldHJpZXZlZCBmcm9tIGludGVybmFsIGNhY2hlXHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmFjcXVpcmVUb2tlbnNGcm9tQ2FjaGUodGhpcy5hY2NvdW50SWQsIG5hdGl2ZVJlcXVlc3QpO1xyXG4gICAgICAgICAgICAgICAgbmF0aXZlQVRNZWFzdXJlbWVudC5lbmQoe1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgaXNOYXRpdmVCcm9rZXI6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGZyb21DYWNoZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgLy8gY29udGludWUgd2l0aCBhIG5hdGl2ZSBjYWxsIGZvciBhbnkgYW5kIGFsbCBlcnJvcnNcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJNU0FMIGludGVybmFsIENhY2hlIGRvZXMgbm90IGNvbnRhaW4gdG9rZW5zLCBwcm9jZWVkIHRvIG1ha2UgYSBuYXRpdmUgY2FsbFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCB7IC4uLm5hdGl2ZVRva2VuUmVxdWVzdCB9ID0gbmF0aXZlUmVxdWVzdDtcclxuICAgICAgICAgICAgLy8gZmFsbCBiYWNrIHRvIG5hdGl2ZSBjYWxsc1xyXG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlQm9keSA9IHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogTmF0aXZlRXh0ZW5zaW9uTWV0aG9kLkdldFRva2VuLFxyXG4gICAgICAgICAgICAgICAgcmVxdWVzdDogbmF0aXZlVG9rZW5SZXF1ZXN0LFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMubmF0aXZlTWVzc2FnZUhhbmRsZXIuc2VuZE1lc3NhZ2UobWVzc2FnZUJvZHkpO1xyXG4gICAgICAgICAgICBjb25zdCB2YWxpZGF0ZWRSZXNwb25zZSA9IHRoaXMudmFsaWRhdGVOYXRpdmVSZXNwb25zZShyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmhhbmRsZU5hdGl2ZVJlc3BvbnNlKHZhbGlkYXRlZFJlc3BvbnNlLCBuYXRpdmVSZXF1ZXN0LCByZXFUaW1lc3RhbXApXHJcbiAgICAgICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBuYXRpdmVBVE1lYXN1cmVtZW50LmVuZCh7XHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBpc05hdGl2ZUJyb2tlcjogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0SWQ6IHJlc3VsdC5yZXF1ZXN0SWQsXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VydmVyVGVsZW1ldHJ5TWFuYWdlci5jbGVhck5hdGl2ZUJyb2tlckVycm9yQ29kZSgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgICAgIG5hdGl2ZUFUTWVhc3VyZW1lbnQuZW5kKHtcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckNvZGU6IGVycm9yLmVycm9yQ29kZSxcclxuICAgICAgICAgICAgICAgICAgICBzdWJFcnJvckNvZGU6IGVycm9yLnN1YkVycm9yLFxyXG4gICAgICAgICAgICAgICAgICAgIGlzTmF0aXZlQnJva2VyOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgTmF0aXZlQXV0aEVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIuc2V0TmF0aXZlQnJva2VyRXJyb3JDb2RlKGUuZXJyb3JDb2RlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aHJvdyBlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBzaWxlbnQgZmxvdyByZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHBhcmFtIGNhY2hlZEFjY291bnRcclxuICAgICAqIEByZXR1cm5zIENvbW1vblNpbGVudEZsb3dSZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZVNpbGVudENhY2hlUmVxdWVzdChyZXF1ZXN0LCBjYWNoZWRBY2NvdW50KSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgYXV0aG9yaXR5OiByZXF1ZXN0LmF1dGhvcml0eSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogdGhpcy5jb3JyZWxhdGlvbklkLFxyXG4gICAgICAgICAgICBzY29wZXM6IFNjb3BlU2V0LmZyb21TdHJpbmcocmVxdWVzdC5zY29wZSkuYXNBcnJheSgpLFxyXG4gICAgICAgICAgICBhY2NvdW50OiBjYWNoZWRBY2NvdW50LFxyXG4gICAgICAgICAgICBmb3JjZVJlZnJlc2g6IGZhbHNlLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEZldGNoZXMgdGhlIHRva2VucyBmcm9tIHRoZSBjYWNoZSBpZiB1bi1leHBpcmVkXHJcbiAgICAgKiBAcGFyYW0gbmF0aXZlQWNjb3VudElkXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHJldHVybnMgYXV0aGVudGljYXRpb25SZXN1bHRcclxuICAgICAqL1xyXG4gICAgYXN5bmMgYWNxdWlyZVRva2Vuc0Zyb21DYWNoZShuYXRpdmVBY2NvdW50SWQsIHJlcXVlc3QpIHtcclxuICAgICAgICBpZiAoIW5hdGl2ZUFjY291bnRJZCkge1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci53YXJuaW5nKFwiTmF0aXZlSW50ZXJhY3Rpb25DbGllbnQ6YWNxdWlyZVRva2Vuc0Zyb21DYWNoZSAtIE5vIG5hdGl2ZUFjY291bnRJZCBwcm92aWRlZFwiKTtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvckNvZGVzLm5vQWNjb3VudEZvdW5kKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gZmV0Y2ggdGhlIGFjY291bnQgZnJvbSBicm93c2VyIGNhY2hlXHJcbiAgICAgICAgY29uc3QgYWNjb3VudCA9IHRoaXMuYnJvd3NlclN0b3JhZ2UuZ2V0QmFzZUFjY291bnRJbmZvKHtcclxuICAgICAgICAgICAgbmF0aXZlQWNjb3VudElkLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmICghYWNjb3VudCkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yQ29kZXMubm9BY2NvdW50Rm91bmQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBsZXZlcmFnZSBzaWxlbnQgZmxvdyBmb3IgY2FjaGVkIHRva2VucyByZXRyaWV2YWxcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBzaWxlbnRSZXF1ZXN0ID0gdGhpcy5jcmVhdGVTaWxlbnRDYWNoZVJlcXVlc3QocmVxdWVzdCwgYWNjb3VudCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuc2lsZW50Q2FjaGVDbGllbnQuYWNxdWlyZVRva2VuKHNpbGVudFJlcXVlc3QpO1xyXG4gICAgICAgICAgICBjb25zdCBmdWxsQWNjb3VudCA9IHtcclxuICAgICAgICAgICAgICAgIC4uLmFjY291bnQsXHJcbiAgICAgICAgICAgICAgICBpZFRva2VuQ2xhaW1zOiByZXN1bHQ/LmlkVG9rZW5DbGFpbXMsXHJcbiAgICAgICAgICAgICAgICBpZFRva2VuOiByZXN1bHQ/LmlkVG9rZW4sXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAuLi5yZXN1bHQsXHJcbiAgICAgICAgICAgICAgICBhY2NvdW50OiBmdWxsQWNjb3VudCxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFjcXVpcmVzIGEgdG9rZW4gZnJvbSBuYXRpdmUgcGxhdGZvcm0gdGhlbiByZWRpcmVjdHMgdG8gdGhlIHJlZGlyZWN0VXJpIGluc3RlYWQgb2YgcmV0dXJuaW5nIHRoZSByZXNwb25zZVxyXG4gICAgICogQHBhcmFtIHtSZWRpcmVjdFJlcXVlc3R9IHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSB7SW5Qcm9ncmVzc1BlcmZvcm1hbmNlRXZlbnR9IHJvb3RNZWFzdXJlbWVudFxyXG4gICAgICovXHJcbiAgICBhc3luYyBhY3F1aXJlVG9rZW5SZWRpcmVjdChyZXF1ZXN0LCByb290TWVhc3VyZW1lbnQpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcIk5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IC0gYWNxdWlyZVRva2VuUmVkaXJlY3QgY2FsbGVkLlwiKTtcclxuICAgICAgICBjb25zdCB7IC4uLnJlbWFpbmluZ1BhcmFtZXRlcnMgfSA9IHJlcXVlc3Q7XHJcbiAgICAgICAgZGVsZXRlIHJlbWFpbmluZ1BhcmFtZXRlcnMub25SZWRpcmVjdE5hdmlnYXRlO1xyXG4gICAgICAgIGNvbnN0IG5hdGl2ZVJlcXVlc3QgPSBhd2FpdCB0aGlzLmluaXRpYWxpemVOYXRpdmVSZXF1ZXN0KHJlbWFpbmluZ1BhcmFtZXRlcnMpO1xyXG4gICAgICAgIGNvbnN0IG1lc3NhZ2VCb2R5ID0ge1xyXG4gICAgICAgICAgICBtZXRob2Q6IE5hdGl2ZUV4dGVuc2lvbk1ldGhvZC5HZXRUb2tlbixcclxuICAgICAgICAgICAgcmVxdWVzdDogbmF0aXZlUmVxdWVzdCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5uYXRpdmVNZXNzYWdlSGFuZGxlci5zZW5kTWVzc2FnZShtZXNzYWdlQm9keSk7XHJcbiAgICAgICAgICAgIHRoaXMudmFsaWRhdGVOYXRpdmVSZXNwb25zZShyZXNwb25zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIC8vIE9ubHkgdGhyb3cgZmF0YWwgZXJyb3JzIGhlcmUgdG8gYWxsb3cgYXBwbGljYXRpb24gdG8gZmFsbGJhY2sgdG8gcmVndWxhciByZWRpcmVjdC4gT3RoZXJ3aXNlIHByb2NlZWQgYW5kIHRoZSBlcnJvciB3aWxsIGJlIHRocm93biBpbiBoYW5kbGVSZWRpcmVjdFByb21pc2VcclxuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBOYXRpdmVBdXRoRXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VydmVyVGVsZW1ldHJ5TWFuYWdlci5zZXROYXRpdmVCcm9rZXJFcnJvckNvZGUoZS5lcnJvckNvZGUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGlzRmF0YWxOYXRpdmVBdXRoRXJyb3IoZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2Uuc2V0VGVtcG9yYXJ5Q2FjaGUoVGVtcG9yYXJ5Q2FjaGVLZXlzLk5BVElWRV9SRVFVRVNULCBKU09OLnN0cmluZ2lmeShuYXRpdmVSZXF1ZXN0KSwgdHJ1ZSk7XHJcbiAgICAgICAgY29uc3QgbmF2aWdhdGlvbk9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgIGFwaUlkOiBBcGlJZC5hY3F1aXJlVG9rZW5SZWRpcmVjdCxcclxuICAgICAgICAgICAgdGltZW91dDogdGhpcy5jb25maWcuc3lzdGVtLnJlZGlyZWN0TmF2aWdhdGlvblRpbWVvdXQsXHJcbiAgICAgICAgICAgIG5vSGlzdG9yeTogZmFsc2UsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCByZWRpcmVjdFVyaSA9IHRoaXMuY29uZmlnLmF1dGgubmF2aWdhdGVUb0xvZ2luUmVxdWVzdFVybFxyXG4gICAgICAgICAgICA/IHdpbmRvdy5sb2NhdGlvbi5ocmVmXHJcbiAgICAgICAgICAgIDogdGhpcy5nZXRSZWRpcmVjdFVyaShyZXF1ZXN0LnJlZGlyZWN0VXJpKTtcclxuICAgICAgICByb290TWVhc3VyZW1lbnQuZW5kKHsgc3VjY2VzczogdHJ1ZSB9KTtcclxuICAgICAgICBhd2FpdCB0aGlzLm5hdmlnYXRpb25DbGllbnQubmF2aWdhdGVFeHRlcm5hbChyZWRpcmVjdFVyaSwgbmF2aWdhdGlvbk9wdGlvbnMpOyAvLyBOZWVkIHRvIHRyZWF0IHRoaXMgYXMgZXh0ZXJuYWwgdG8gZW5zdXJlIGhhbmRsZVJlZGlyZWN0UHJvbWlzZSBpcyBydW4gYWdhaW5cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogSWYgdGhlIHByZXZpb3VzIHBhZ2UgY2FsbGVkIG5hdGl2ZSBwbGF0Zm9ybSBmb3IgYSB0b2tlbiB1c2luZyByZWRpcmVjdCBBUElzLCBzZW5kIHRoZSBzYW1lIHJlcXVlc3QgYWdhaW4gYW5kIHJldHVybiB0aGUgcmVzcG9uc2VcclxuICAgICAqIEBwYXJhbSBwZXJmb3JtYW5jZUNsaWVudCB7SVBlcmZvcm1hbmNlQ2xpZW50P31cclxuICAgICAqIEBwYXJhbSBjb3JyZWxhdGlvbklkIHtzdHJpbmc/fSBjb3JyZWxhdGlvbiBpZGVudGlmaWVyXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGhhbmRsZVJlZGlyZWN0UHJvbWlzZShwZXJmb3JtYW5jZUNsaWVudCwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLnRyYWNlKFwiTmF0aXZlSW50ZXJhY3Rpb25DbGllbnQgLSBoYW5kbGVSZWRpcmVjdFByb21pc2UgY2FsbGVkLlwiKTtcclxuICAgICAgICBpZiAoIXRoaXMuYnJvd3NlclN0b3JhZ2UuaXNJbnRlcmFjdGlvbkluUHJvZ3Jlc3ModHJ1ZSkpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImhhbmRsZVJlZGlyZWN0UHJvbWlzZSBjYWxsZWQgYnV0IHRoZXJlIGlzIG5vIGludGVyYWN0aW9uIGluIHByb2dyZXNzLCByZXR1cm5pbmcgbnVsbC5cIik7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyByZW1vdmUgcHJvbXB0IGZyb20gdGhlIHJlcXVlc3QgdG8gcHJldmVudCBXQU0gZnJvbSBwcm9tcHRpbmcgdHdpY2VcclxuICAgICAgICBjb25zdCBjYWNoZWRSZXF1ZXN0ID0gdGhpcy5icm93c2VyU3RvcmFnZS5nZXRDYWNoZWROYXRpdmVSZXF1ZXN0KCk7XHJcbiAgICAgICAgaWYgKCFjYWNoZWRSZXF1ZXN0KSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIGhhbmRsZVJlZGlyZWN0UHJvbWlzZSBjYWxsZWQgYnV0IHRoZXJlIGlzIG5vIGNhY2hlZCByZXF1ZXN0LCByZXR1cm5pbmcgbnVsbC5cIik7XHJcbiAgICAgICAgICAgIGlmIChwZXJmb3JtYW5jZUNsaWVudCAmJiBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgICAgICAgICBwZXJmb3JtYW5jZUNsaWVudD8uYWRkRmllbGRzKHsgZXJyb3JDb2RlOiBcIm5vX2NhY2hlZF9yZXF1ZXN0XCIgfSwgY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHsgcHJvbXB0LCAuLi5yZXF1ZXN0IH0gPSBjYWNoZWRSZXF1ZXN0O1xyXG4gICAgICAgIGlmIChwcm9tcHQpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIk5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IC0gaGFuZGxlUmVkaXJlY3RQcm9taXNlIGNhbGxlZCBhbmQgcHJvbXB0IHdhcyBpbmNsdWRlZCBpbiB0aGUgb3JpZ2luYWwgcmVxdWVzdCwgcmVtb3ZpbmcgcHJvbXB0IGZyb20gY2FjaGVkIHJlcXVlc3QgdG8gcHJldmVudCBzZWNvbmQgaW50ZXJhY3Rpb24gd2l0aCBuYXRpdmUgYnJva2VyIHdpbmRvdy5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLmJyb3dzZXJTdG9yYWdlLmdlbmVyYXRlQ2FjaGVLZXkoVGVtcG9yYXJ5Q2FjaGVLZXlzLk5BVElWRV9SRVFVRVNUKSk7XHJcbiAgICAgICAgY29uc3QgbWVzc2FnZUJvZHkgPSB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogTmF0aXZlRXh0ZW5zaW9uTWV0aG9kLkdldFRva2VuLFxyXG4gICAgICAgICAgICByZXF1ZXN0OiByZXF1ZXN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgcmVxVGltZXN0YW1wID0gVGltZVV0aWxzLm5vd1NlY29uZHMoKTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiTmF0aXZlSW50ZXJhY3Rpb25DbGllbnQgLSBoYW5kbGVSZWRpcmVjdFByb21pc2Ugc2VuZGluZyBtZXNzYWdlIHRvIG5hdGl2ZSBicm9rZXIuXCIpO1xyXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMubmF0aXZlTWVzc2FnZUhhbmRsZXIuc2VuZE1lc3NhZ2UobWVzc2FnZUJvZHkpO1xyXG4gICAgICAgICAgICB0aGlzLnZhbGlkYXRlTmF0aXZlUmVzcG9uc2UocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmhhbmRsZU5hdGl2ZVJlc3BvbnNlKHJlc3BvbnNlLCByZXF1ZXN0LCByZXFUaW1lc3RhbXApO1xyXG4gICAgICAgICAgICB0aGlzLmJyb3dzZXJTdG9yYWdlLnNldEludGVyYWN0aW9uSW5Qcm9ncmVzcyhmYWxzZSk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHJlc3VsdDtcclxuICAgICAgICAgICAgdGhpcy5zZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLmNsZWFyTmF0aXZlQnJva2VyRXJyb3JDb2RlKCk7XHJcbiAgICAgICAgICAgIHJldHVybiByZXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2Uuc2V0SW50ZXJhY3Rpb25JblByb2dyZXNzKGZhbHNlKTtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIExvZ291dCBmcm9tIG5hdGl2ZSBwbGF0Zm9ybSB2aWEgYnJvd3NlciBleHRlbnNpb25cclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIGxvZ291dCgpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcIk5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IC0gbG9nb3V0IGNhbGxlZC5cIik7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFwiTG9nb3V0IG5vdCBpbXBsZW1lbnRlZCB5ZXRcIik7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRyYW5zZm9ybSByZXNwb25zZSBmcm9tIG5hdGl2ZSBwbGF0Zm9ybSBpbnRvIEF1dGhlbnRpY2F0aW9uUmVzdWx0IG9iamVjdCB3aGljaCB3aWxsIGJlIHJldHVybmVkIHRvIHRoZSBlbmQgdXNlclxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHBhcmFtIHJlcVRpbWVzdGFtcFxyXG4gICAgICovXHJcbiAgICBhc3luYyBoYW5kbGVOYXRpdmVSZXNwb25zZShyZXNwb25zZSwgcmVxdWVzdCwgcmVxVGltZXN0YW1wKSB7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIGhhbmRsZU5hdGl2ZVJlc3BvbnNlIGNhbGxlZC5cIik7XHJcbiAgICAgICAgLy8gZ2VuZXJhdGUgaWRlbnRpZmllcnNcclxuICAgICAgICBjb25zdCBpZFRva2VuQ2xhaW1zID0gQXV0aFRva2VuLmV4dHJhY3RUb2tlbkNsYWltcyhyZXNwb25zZS5pZF90b2tlbiwgYmFzZTY0RGVjb2RlKTtcclxuICAgICAgICBjb25zdCBob21lQWNjb3VudElkZW50aWZpZXIgPSB0aGlzLmNyZWF0ZUhvbWVBY2NvdW50SWRlbnRpZmllcihyZXNwb25zZSwgaWRUb2tlbkNsYWltcyk7XHJcbiAgICAgICAgY29uc3QgY2FjaGVkaG9tZUFjY291bnRJZCA9IHRoaXMuYnJvd3NlclN0b3JhZ2UuZ2V0QWNjb3VudEluZm9GaWx0ZXJlZEJ5KHtcclxuICAgICAgICAgICAgbmF0aXZlQWNjb3VudElkOiByZXF1ZXN0LmFjY291bnRJZCxcclxuICAgICAgICB9KT8uaG9tZUFjY291bnRJZDtcclxuICAgICAgICBpZiAoaG9tZUFjY291bnRJZGVudGlmaWVyICE9PSBjYWNoZWRob21lQWNjb3VudElkICYmXHJcbiAgICAgICAgICAgIHJlc3BvbnNlLmFjY291bnQuaWQgIT09IHJlcXVlc3QuYWNjb3VudElkKSB7XHJcbiAgICAgICAgICAgIC8vIFVzZXIgc3dpdGNoIGluIG5hdGl2ZSBicm9rZXIgcHJvbXB0IGlzIG5vdCBzdXBwb3J0ZWQuIEFsbCB1c2VycyBtdXN0IGZpcnN0IHNpZ24gaW4gdGhyb3VnaCB3ZWIgZmxvdyB0byBlbnN1cmUgc2VydmVyIHN0YXRlIGlzIGluIHN5bmNcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlTmF0aXZlQXV0aEVycm9yKHVzZXJTd2l0Y2gpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBHZXQgdGhlIHByZWZlcnJlZF9jYWNoZSBkb21haW4gZm9yIHRoZSBnaXZlbiBhdXRob3JpdHlcclxuICAgICAgICBjb25zdCBhdXRob3JpdHkgPSBhd2FpdCB0aGlzLmdldERpc2NvdmVyZWRBdXRob3JpdHkoe1xyXG4gICAgICAgICAgICByZXF1ZXN0QXV0aG9yaXR5OiByZXF1ZXN0LmF1dGhvcml0eSxcclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCBiYXNlQWNjb3VudCA9IGJ1aWxkQWNjb3VudFRvQ2FjaGUodGhpcy5icm93c2VyU3RvcmFnZSwgYXV0aG9yaXR5LCBob21lQWNjb3VudElkZW50aWZpZXIsIGJhc2U2NERlY29kZSwgaWRUb2tlbkNsYWltcywgcmVzcG9uc2UuY2xpZW50X2luZm8sIHVuZGVmaW5lZCwgLy8gZW52aXJvbm1lbnRcclxuICAgICAgICBpZFRva2VuQ2xhaW1zLnRpZCwgdW5kZWZpbmVkLCAvLyBhdXRoIGNvZGUgcGF5bG9hZFxyXG4gICAgICAgIHJlc3BvbnNlLmFjY291bnQuaWQsIHRoaXMubG9nZ2VyKTtcclxuICAgICAgICAvLyBnZW5lcmF0ZSBhdXRoZW50aWNhdGlvblJlc3VsdFxyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZ2VuZXJhdGVBdXRoZW50aWNhdGlvblJlc3VsdChyZXNwb25zZSwgcmVxdWVzdCwgaWRUb2tlbkNsYWltcywgYmFzZUFjY291bnQsIGF1dGhvcml0eS5jYW5vbmljYWxBdXRob3JpdHksIHJlcVRpbWVzdGFtcCk7XHJcbiAgICAgICAgLy8gY2FjaGUgYWNjb3VudHMgYW5kIHRva2VucyBpbiB0aGUgYXBwcm9wcmlhdGUgc3RvcmFnZVxyXG4gICAgICAgIHRoaXMuY2FjaGVBY2NvdW50KGJhc2VBY2NvdW50KTtcclxuICAgICAgICB0aGlzLmNhY2hlTmF0aXZlVG9rZW5zKHJlc3BvbnNlLCByZXF1ZXN0LCBob21lQWNjb3VudElkZW50aWZpZXIsIGlkVG9rZW5DbGFpbXMsIHJlc3BvbnNlLmFjY2Vzc190b2tlbiwgcmVzdWx0LnRlbmFudElkLCByZXFUaW1lc3RhbXApO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIGNyZWF0ZXMgYW4gaG9tZUFjY291bnRJZGVudGlmaWVyIGZvciB0aGUgYWNjb3VudFxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcGFyYW0gaWRUb2tlbk9ialxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgY3JlYXRlSG9tZUFjY291bnRJZGVudGlmaWVyKHJlc3BvbnNlLCBpZFRva2VuQ2xhaW1zKSB7XHJcbiAgICAgICAgLy8gU2F2ZSBhY2NvdW50IGluIGJyb3dzZXIgc3RvcmFnZVxyXG4gICAgICAgIGNvbnN0IGhvbWVBY2NvdW50SWRlbnRpZmllciA9IEFjY291bnRFbnRpdHkuZ2VuZXJhdGVIb21lQWNjb3VudElkKHJlc3BvbnNlLmNsaWVudF9pbmZvIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsIEF1dGhvcml0eVR5cGUuRGVmYXVsdCwgdGhpcy5sb2dnZXIsIHRoaXMuYnJvd3NlckNyeXB0bywgaWRUb2tlbkNsYWltcyk7XHJcbiAgICAgICAgcmV0dXJuIGhvbWVBY2NvdW50SWRlbnRpZmllcjtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogSGVscGVyIHRvIGdlbmVyYXRlIHNjb3Blc1xyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgZ2VuZXJhdGVTY29wZXMocmVzcG9uc2UsIHJlcXVlc3QpIHtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2Uuc2NvcGVcclxuICAgICAgICAgICAgPyBTY29wZVNldC5mcm9tU3RyaW5nKHJlc3BvbnNlLnNjb3BlKVxyXG4gICAgICAgICAgICA6IFNjb3BlU2V0LmZyb21TdHJpbmcocmVxdWVzdC5zY29wZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIElmIFBvUCB0b2tlbiBpcyByZXF1ZXNyZWQsIHJlY29yZHMgdGhlIFBvUCB0b2tlbiBpZiByZXR1cm5lZCBmcm9tIHRoZSBXQU0sIGVsc2UgZ2VuZXJhdGVzIG9uZSBpbiB0aGUgYnJvd3NlclxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSByZXNwb25zZVxyXG4gICAgICovXHJcbiAgICBhc3luYyBnZW5lcmF0ZVBvcEFjY2Vzc1Rva2VuKHJlc3BvbnNlLCByZXF1ZXN0KSB7XHJcbiAgICAgICAgaWYgKHJlcXVlc3QudG9rZW5UeXBlID09PSBBdXRoZW50aWNhdGlvblNjaGVtZS5QT1AgJiZcclxuICAgICAgICAgICAgcmVxdWVzdC5zaWduUG9wVG9rZW4pIHtcclxuICAgICAgICAgICAgLyoqXHJcbiAgICAgICAgICAgICAqIFRoaXMgY29kZSBwcmlvcml0aXplcyBTSFIgcmV0dXJuZWQgZnJvbSB0aGUgbmF0aXZlIGxheWVyLiBJbiBjYXNlIG9mIGVycm9yL1NIUiBub3QgY2FsY3VsYXRlZCBmcm9tIFdBTSBhbmQgdGhlIEFUXHJcbiAgICAgICAgICAgICAqIGlzIHN0aWxsIHJlY2VpdmVkLCBTSFIgaXMgY2FsY3VsYXRlZCBsb2NhbGx5XHJcbiAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICAvLyBDaGVjayBpZiBuYXRpdmUgbGF5ZXIgcmV0dXJuZWQgYW4gU0hSIHRva2VuXHJcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zaHIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLnRyYWNlKFwiaGFuZGxlTmF0aXZlU2VydmVyUmVzcG9uc2U6IFNIUiBpcyBlbmFibGVkIGluIG5hdGl2ZSBsYXllclwiKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5zaHI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gR2VuZXJhdGUgU0hSIGluIG1zYWwganMgaWYgV0FNIGRvZXMgbm90IGNvbXB1dGUgaXQgd2hlbiBQT1AgaXMgZW5hYmxlZFxyXG4gICAgICAgICAgICBjb25zdCBwb3BUb2tlbkdlbmVyYXRvciA9IG5ldyBQb3BUb2tlbkdlbmVyYXRvcih0aGlzLmJyb3dzZXJDcnlwdG8pO1xyXG4gICAgICAgICAgICBjb25zdCBzaHJQYXJhbWV0ZXJzID0ge1xyXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VSZXF1ZXN0TWV0aG9kOiByZXF1ZXN0LnJlc291cmNlUmVxdWVzdE1ldGhvZCxcclxuICAgICAgICAgICAgICAgIHJlc291cmNlUmVxdWVzdFVyaTogcmVxdWVzdC5yZXNvdXJjZVJlcXVlc3RVcmksXHJcbiAgICAgICAgICAgICAgICBzaHJDbGFpbXM6IHJlcXVlc3Quc2hyQ2xhaW1zLFxyXG4gICAgICAgICAgICAgICAgc2hyTm9uY2U6IHJlcXVlc3Quc2hyTm9uY2UsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIC8qKlxyXG4gICAgICAgICAgICAgKiBLZXlJRCBtdXN0IGJlIHByZXNlbnQgaW4gdGhlIG5hdGl2ZSByZXF1ZXN0IGZyb20gd2hlbiB0aGUgUG9QIGtleSB3YXMgZ2VuZXJhdGVkIGluIG9yZGVyIGZvclxyXG4gICAgICAgICAgICAgKiBQb3BUb2tlbkdlbmVyYXRvciB0byBxdWVyeSB0aGUgZnVsbCBrZXkgZm9yIHNpZ25pbmdcclxuICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5rZXlJZCkge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvckNvZGVzLmtleUlkTWlzc2luZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHBvcFRva2VuR2VuZXJhdG9yLnNpZ25Qb3BUb2tlbihyZXNwb25zZS5hY2Nlc3NfdG9rZW4sIHJlcXVlc3Qua2V5SWQsIHNoclBhcmFtZXRlcnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmFjY2Vzc190b2tlbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdlbmVyYXRlcyBhdXRoZW50aWNhdGlvbiByZXN1bHRcclxuICAgICAqIEBwYXJhbSByZXNwb25zZVxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSBpZFRva2VuT2JqXHJcbiAgICAgKiBAcGFyYW0gYWNjb3VudEVudGl0eVxyXG4gICAgICogQHBhcmFtIGF1dGhvcml0eVxyXG4gICAgICogQHBhcmFtIHJlcVRpbWVzdGFtcFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgYXN5bmMgZ2VuZXJhdGVBdXRoZW50aWNhdGlvblJlc3VsdChyZXNwb25zZSwgcmVxdWVzdCwgaWRUb2tlbkNsYWltcywgYWNjb3VudEVudGl0eSwgYXV0aG9yaXR5LCByZXFUaW1lc3RhbXApIHtcclxuICAgICAgICAvLyBBZGQgTmF0aXZlIEJyb2tlciBmaWVsZHMgdG8gVGVsZW1ldHJ5XHJcbiAgICAgICAgY29uc3QgbWF0cyA9IHRoaXMuYWRkVGVsZW1ldHJ5RnJvbU5hdGl2ZVJlc3BvbnNlKHJlc3BvbnNlKTtcclxuICAgICAgICAvLyBJZiBzY29wZXMgbm90IHJldHVybmVkIGluIHNlcnZlciByZXNwb25zZSwgdXNlIHJlcXVlc3Qgc2NvcGVzXHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2VTY29wZXMgPSByZXNwb25zZS5zY29wZVxyXG4gICAgICAgICAgICA/IFNjb3BlU2V0LmZyb21TdHJpbmcocmVzcG9uc2Uuc2NvcGUpXHJcbiAgICAgICAgICAgIDogU2NvcGVTZXQuZnJvbVN0cmluZyhyZXF1ZXN0LnNjb3BlKTtcclxuICAgICAgICBjb25zdCBhY2NvdW50UHJvcGVydGllcyA9IHJlc3BvbnNlLmFjY291bnQucHJvcGVydGllcyB8fCB7fTtcclxuICAgICAgICBjb25zdCB1aWQgPSBhY2NvdW50UHJvcGVydGllc1tcIlVJRFwiXSB8fFxyXG4gICAgICAgICAgICBpZFRva2VuQ2xhaW1zLm9pZCB8fFxyXG4gICAgICAgICAgICBpZFRva2VuQ2xhaW1zLnN1YiB8fFxyXG4gICAgICAgICAgICBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xyXG4gICAgICAgIGNvbnN0IHRpZCA9IGFjY291bnRQcm9wZXJ0aWVzW1wiVGVuYW50SWRcIl0gfHxcclxuICAgICAgICAgICAgaWRUb2tlbkNsYWltcy50aWQgfHxcclxuICAgICAgICAgICAgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICBjb25zdCBhY2NvdW50SW5mbyA9IHVwZGF0ZUFjY291bnRUZW5hbnRQcm9maWxlRGF0YShhY2NvdW50RW50aXR5LmdldEFjY291bnRJbmZvKCksIHVuZGVmaW5lZCwgLy8gdGVuYW50UHJvZmlsZSBvcHRpb25hbFxyXG4gICAgICAgIGlkVG9rZW5DbGFpbXMsIHJlc3BvbnNlLmlkX3Rva2VuKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBJbiBwYWlyd2lzZSBicm9rZXIgZmxvd3MsIHRoaXMgY2hlY2sgcHJldmVudHMgdGhlIGJyb2tlcidzIG5hdGl2ZSBhY2NvdW50IGlkXHJcbiAgICAgICAgICogZnJvbSBiZWluZyByZXR1cm5lZCBvdmVyIHRoZSBlbWJlZGRlZCBhcHAncyBhY2NvdW50IGlkLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGlmIChhY2NvdW50SW5mby5uYXRpdmVBY2NvdW50SWQgIT09IHJlc3BvbnNlLmFjY291bnQuaWQpIHtcclxuICAgICAgICAgICAgYWNjb3VudEluZm8ubmF0aXZlQWNjb3VudElkID0gcmVzcG9uc2UuYWNjb3VudC5pZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gZ2VuZXJhdGUgUG9QIHRva2VuIGFzIG5lZWRlZFxyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlQWNjZXNzVG9rZW4gPSBhd2FpdCB0aGlzLmdlbmVyYXRlUG9wQWNjZXNzVG9rZW4ocmVzcG9uc2UsIHJlcXVlc3QpO1xyXG4gICAgICAgIGNvbnN0IHRva2VuVHlwZSA9IHJlcXVlc3QudG9rZW5UeXBlID09PSBBdXRoZW50aWNhdGlvblNjaGVtZS5QT1BcclxuICAgICAgICAgICAgPyBBdXRoZW50aWNhdGlvblNjaGVtZS5QT1BcclxuICAgICAgICAgICAgOiBBdXRoZW50aWNhdGlvblNjaGVtZS5CRUFSRVI7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgICAgICAgICBhdXRob3JpdHk6IGF1dGhvcml0eSxcclxuICAgICAgICAgICAgdW5pcXVlSWQ6IHVpZCxcclxuICAgICAgICAgICAgdGVuYW50SWQ6IHRpZCxcclxuICAgICAgICAgICAgc2NvcGVzOiByZXNwb25zZVNjb3Blcy5hc0FycmF5KCksXHJcbiAgICAgICAgICAgIGFjY291bnQ6IGFjY291bnRJbmZvLFxyXG4gICAgICAgICAgICBpZFRva2VuOiByZXNwb25zZS5pZF90b2tlbixcclxuICAgICAgICAgICAgaWRUb2tlbkNsYWltczogaWRUb2tlbkNsYWltcyxcclxuICAgICAgICAgICAgYWNjZXNzVG9rZW46IHJlc3BvbnNlQWNjZXNzVG9rZW4sXHJcbiAgICAgICAgICAgIGZyb21DYWNoZTogbWF0cyA/IHRoaXMuaXNSZXNwb25zZUZyb21DYWNoZShtYXRzKSA6IGZhbHNlLFxyXG4gICAgICAgICAgICBleHBpcmVzT246IG5ldyBEYXRlKE51bWJlcihyZXFUaW1lc3RhbXAgKyByZXNwb25zZS5leHBpcmVzX2luKSAqIDEwMDApLFxyXG4gICAgICAgICAgICB0b2tlblR5cGU6IHRva2VuVHlwZSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogdGhpcy5jb3JyZWxhdGlvbklkLFxyXG4gICAgICAgICAgICBzdGF0ZTogcmVzcG9uc2Uuc3RhdGUsXHJcbiAgICAgICAgICAgIGZyb21OYXRpdmVCcm9rZXI6IHRydWUsXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBjYWNoZSB0aGUgYWNjb3VudCBlbnRpdHkgaW4gYnJvd3NlciBzdG9yYWdlXHJcbiAgICAgKiBAcGFyYW0gYWNjb3VudEVudGl0eVxyXG4gICAgICovXHJcbiAgICBjYWNoZUFjY291bnQoYWNjb3VudEVudGl0eSkge1xyXG4gICAgICAgIC8vIFN0b3JlIHRoZSBhY2NvdW50IGluZm8gYW5kIGhlbmNlIGBuYXRpdmVBY2NvdW50SWRgIGluIGJyb3dzZXIgY2FjaGVcclxuICAgICAgICB0aGlzLmJyb3dzZXJTdG9yYWdlLnNldEFjY291bnQoYWNjb3VudEVudGl0eSk7XHJcbiAgICAgICAgLy8gUmVtb3ZlIGFueSBleGlzdGluZyBjYWNoZWQgdG9rZW5zIGZvciB0aGlzIGFjY291bnQgaW4gYnJvd3NlciBzdG9yYWdlXHJcbiAgICAgICAgdGhpcy5icm93c2VyU3RvcmFnZS5yZW1vdmVBY2NvdW50Q29udGV4dChhY2NvdW50RW50aXR5KS5jYXRjaCgoZSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcihgRXJyb3Igb2NjdXJyZWQgd2hpbGUgcmVtb3ZpbmcgYWNjb3VudCBjb250ZXh0IGZyb20gYnJvd3NlciBzdG9yYWdlLiAke2V9YCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFN0b3JlcyB0aGUgYWNjZXNzX3Rva2VuIGFuZCBpZF90b2tlbiBpbiBpbm1lbW9yeSBzdG9yYWdlXHJcbiAgICAgKiBAcGFyYW0gcmVzcG9uc2VcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gaG9tZUFjY291bnRJZGVudGlmaWVyXHJcbiAgICAgKiBAcGFyYW0gaWRUb2tlbk9ialxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlQWNjZXNzVG9rZW5cclxuICAgICAqIEBwYXJhbSB0ZW5hbnRJZFxyXG4gICAgICogQHBhcmFtIHJlcVRpbWVzdGFtcFxyXG4gICAgICovXHJcbiAgICBjYWNoZU5hdGl2ZVRva2VucyhyZXNwb25zZSwgcmVxdWVzdCwgaG9tZUFjY291bnRJZGVudGlmaWVyLCBpZFRva2VuQ2xhaW1zLCByZXNwb25zZUFjY2Vzc1Rva2VuLCB0ZW5hbnRJZCwgcmVxVGltZXN0YW1wKSB7XHJcbiAgICAgICAgY29uc3QgY2FjaGVkSWRUb2tlbiA9IENhY2hlSGVscGVycy5jcmVhdGVJZFRva2VuRW50aXR5KGhvbWVBY2NvdW50SWRlbnRpZmllciwgcmVxdWVzdC5hdXRob3JpdHksIHJlc3BvbnNlLmlkX3Rva2VuIHx8IFwiXCIsIHJlcXVlc3QuY2xpZW50SWQsIGlkVG9rZW5DbGFpbXMudGlkIHx8IFwiXCIpO1xyXG4gICAgICAgIC8vIGNhY2hlIGFjY2Vzc1Rva2VuIGluIGlubWVtb3J5IHN0b3JhZ2VcclxuICAgICAgICBjb25zdCBleHBpcmVzSW4gPSByZXF1ZXN0LnRva2VuVHlwZSA9PT0gQXV0aGVudGljYXRpb25TY2hlbWUuUE9QXHJcbiAgICAgICAgICAgID8gQ29uc3RhbnRzLlNIUl9OT05DRV9WQUxJRElUWVxyXG4gICAgICAgICAgICA6ICh0eXBlb2YgcmVzcG9uc2UuZXhwaXJlc19pbiA9PT0gXCJzdHJpbmdcIlxyXG4gICAgICAgICAgICAgICAgPyBwYXJzZUludChyZXNwb25zZS5leHBpcmVzX2luLCAxMClcclxuICAgICAgICAgICAgICAgIDogcmVzcG9uc2UuZXhwaXJlc19pbikgfHwgMDtcclxuICAgICAgICBjb25zdCB0b2tlbkV4cGlyYXRpb25TZWNvbmRzID0gcmVxVGltZXN0YW1wICsgZXhwaXJlc0luO1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlU2NvcGVzID0gdGhpcy5nZW5lcmF0ZVNjb3BlcyhyZXNwb25zZSwgcmVxdWVzdCk7XHJcbiAgICAgICAgY29uc3QgY2FjaGVkQWNjZXNzVG9rZW4gPSBDYWNoZUhlbHBlcnMuY3JlYXRlQWNjZXNzVG9rZW5FbnRpdHkoaG9tZUFjY291bnRJZGVudGlmaWVyLCByZXF1ZXN0LmF1dGhvcml0eSwgcmVzcG9uc2VBY2Nlc3NUb2tlbiwgcmVxdWVzdC5jbGllbnRJZCwgaWRUb2tlbkNsYWltcy50aWQgfHwgdGVuYW50SWQsIHJlc3BvbnNlU2NvcGVzLnByaW50U2NvcGVzKCksIHRva2VuRXhwaXJhdGlvblNlY29uZHMsIDAsIGJhc2U2NERlY29kZSwgdW5kZWZpbmVkLCByZXF1ZXN0LnRva2VuVHlwZSwgdW5kZWZpbmVkLCByZXF1ZXN0LmtleUlkKTtcclxuICAgICAgICBjb25zdCBuYXRpdmVDYWNoZVJlY29yZCA9IHtcclxuICAgICAgICAgICAgaWRUb2tlbjogY2FjaGVkSWRUb2tlbixcclxuICAgICAgICAgICAgYWNjZXNzVG9rZW46IGNhY2hlZEFjY2Vzc1Rva2VuLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdm9pZCB0aGlzLm5hdGl2ZVN0b3JhZ2VNYW5hZ2VyLnNhdmVDYWNoZVJlY29yZChuYXRpdmVDYWNoZVJlY29yZCwgcmVxdWVzdC5zdG9yZUluQ2FjaGUpO1xyXG4gICAgfVxyXG4gICAgYWRkVGVsZW1ldHJ5RnJvbU5hdGl2ZVJlc3BvbnNlKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgY29uc3QgbWF0cyA9IHRoaXMuZ2V0TUFUU0Zyb21SZXNwb25zZShyZXNwb25zZSk7XHJcbiAgICAgICAgaWYgKCFtYXRzKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZEZpZWxkcyh7XHJcbiAgICAgICAgICAgIGV4dGVuc2lvbklkOiB0aGlzLm5hdGl2ZU1lc3NhZ2VIYW5kbGVyLmdldEV4dGVuc2lvbklkKCksXHJcbiAgICAgICAgICAgIGV4dGVuc2lvblZlcnNpb246IHRoaXMubmF0aXZlTWVzc2FnZUhhbmRsZXIuZ2V0RXh0ZW5zaW9uVmVyc2lvbigpLFxyXG4gICAgICAgICAgICBtYXRzQnJva2VyVmVyc2lvbjogbWF0cy5icm9rZXJfdmVyc2lvbixcclxuICAgICAgICAgICAgbWF0c0FjY291bnRKb2luT25TdGFydDogbWF0cy5hY2NvdW50X2pvaW5fb25fc3RhcnQsXHJcbiAgICAgICAgICAgIG1hdHNBY2NvdW50Sm9pbk9uRW5kOiBtYXRzLmFjY291bnRfam9pbl9vbl9lbmQsXHJcbiAgICAgICAgICAgIG1hdHNEZXZpY2VKb2luOiBtYXRzLmRldmljZV9qb2luLFxyXG4gICAgICAgICAgICBtYXRzUHJvbXB0QmVoYXZpb3I6IG1hdHMucHJvbXB0X2JlaGF2aW9yLFxyXG4gICAgICAgICAgICBtYXRzQXBpRXJyb3JDb2RlOiBtYXRzLmFwaV9lcnJvcl9jb2RlLFxyXG4gICAgICAgICAgICBtYXRzVWlWaXNpYmxlOiBtYXRzLnVpX3Zpc2libGUsXHJcbiAgICAgICAgICAgIG1hdHNTaWxlbnRDb2RlOiBtYXRzLnNpbGVudF9jb2RlLFxyXG4gICAgICAgICAgICBtYXRzU2lsZW50QmlTdWJDb2RlOiBtYXRzLnNpbGVudF9iaV9zdWJfY29kZSxcclxuICAgICAgICAgICAgbWF0c1NpbGVudE1lc3NhZ2U6IG1hdHMuc2lsZW50X21lc3NhZ2UsXHJcbiAgICAgICAgICAgIG1hdHNTaWxlbnRTdGF0dXM6IG1hdHMuc2lsZW50X3N0YXR1cyxcclxuICAgICAgICAgICAgbWF0c0h0dHBTdGF0dXM6IG1hdHMuaHR0cF9zdGF0dXMsXHJcbiAgICAgICAgICAgIG1hdHNIdHRwRXZlbnRDb3VudDogbWF0cy5odHRwX2V2ZW50X2NvdW50LFxyXG4gICAgICAgIH0sIHRoaXMuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgcmV0dXJuIG1hdHM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFZhbGlkYXRlcyBuYXRpdmUgcGxhdGZvcm0gcmVzcG9uc2UgYmVmb3JlIHByb2Nlc3NpbmdcclxuICAgICAqIEBwYXJhbSByZXNwb25zZVxyXG4gICAgICovXHJcbiAgICB2YWxpZGF0ZU5hdGl2ZVJlc3BvbnNlKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiYWNjZXNzX3Rva2VuXCIpICYmXHJcbiAgICAgICAgICAgIHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiaWRfdG9rZW5cIikgJiZcclxuICAgICAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJjbGllbnRfaW5mb1wiKSAmJlxyXG4gICAgICAgICAgICByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcImFjY291bnRcIikgJiZcclxuICAgICAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJzY29wZVwiKSAmJlxyXG4gICAgICAgICAgICByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcImV4cGlyZXNfaW5cIikpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQXV0aEVycm9yKEF1dGhFcnJvckNvZGVzLnVuZXhwZWN0ZWRFcnJvciwgXCJSZXNwb25zZSBtaXNzaW5nIGV4cGVjdGVkIHByb3BlcnRpZXMuXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyBNQVRTIHRlbGVtZXRyeSBmcm9tIG5hdGl2ZSByZXNwb25zZVxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBnZXRNQVRTRnJvbVJlc3BvbnNlKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnByb3BlcnRpZXMuTUFUUykge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UocmVzcG9uc2UucHJvcGVydGllcy5NQVRTKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIEVycm9yIHBhcnNpbmcgTUFUUyB0ZWxlbWV0cnksIHJldHVybmluZyBudWxsIGluc3RlYWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgd2hldGhlciBvciBub3QgcmVzcG9uc2UgY2FtZSBmcm9tIG5hdGl2ZSBjYWNoZVxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBpc1Jlc3BvbnNlRnJvbUNhY2hlKG1hdHMpIHtcclxuICAgICAgICBpZiAodHlwZW9mIG1hdHMuaXNfY2FjaGVkID09PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIE1BVFMgdGVsZW1ldHJ5IGRvZXMgbm90IGNvbnRhaW4gZmllbGQgaW5kaWNhdGluZyBpZiByZXNwb25zZSB3YXMgc2VydmVkIGZyb20gY2FjaGUuIFJldHVybmluZyBmYWxzZS5cIik7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuICEhbWF0cy5pc19jYWNoZWQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRyYW5zbGF0ZXMgZGV2ZWxvcGVyIHByb3ZpZGVkIHJlcXVlc3Qgb2JqZWN0IGludG8gTmF0aXZlUmVxdWVzdCBvYmplY3RcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGluaXRpYWxpemVOYXRpdmVSZXF1ZXN0KHJlcXVlc3QpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcIk5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IC0gaW5pdGlhbGl6ZU5hdGl2ZVJlcXVlc3QgY2FsbGVkXCIpO1xyXG4gICAgICAgIGNvbnN0IHJlcXVlc3RBdXRob3JpdHkgPSByZXF1ZXN0LmF1dGhvcml0eSB8fCB0aGlzLmNvbmZpZy5hdXRoLmF1dGhvcml0eTtcclxuICAgICAgICBpZiAocmVxdWVzdC5hY2NvdW50KSB7XHJcbiAgICAgICAgICAgIC8vIHZhbGlkYXRlIGF1dGhvcml0eVxyXG4gICAgICAgICAgICBhd2FpdCB0aGlzLmdldERpc2NvdmVyZWRBdXRob3JpdHkoe1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdEF1dGhvcml0eSxcclxuICAgICAgICAgICAgICAgIHJlcXVlc3RBenVyZUNsb3VkT3B0aW9uczogcmVxdWVzdC5henVyZUNsb3VkT3B0aW9ucyxcclxuICAgICAgICAgICAgICAgIGFjY291bnQ6IHJlcXVlc3QuYWNjb3VudCxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGNhbm9uaWNhbEF1dGhvcml0eSA9IG5ldyBVcmxTdHJpbmcocmVxdWVzdEF1dGhvcml0eSk7XHJcbiAgICAgICAgY2Fub25pY2FsQXV0aG9yaXR5LnZhbGlkYXRlQXNVcmkoKTtcclxuICAgICAgICAvLyBzY29wZXMgYXJlIGV4cGVjdGVkIHRvIGJlIHJlY2VpdmVkIGJ5IHRoZSBuYXRpdmUgYnJva2VyIGFzIFwic2NvcGVcIiBhbmQgd2lsbCBiZSBhZGRlZCB0byB0aGUgcmVxdWVzdCBiZWxvdy4gT3RoZXIgcHJvcGVydGllcyB0aGF0IHNob3VsZCBiZSBkcm9wcGVkIGZyb20gdGhlIHJlcXVlc3QgdG8gdGhlIG5hdGl2ZSBicm9rZXIgY2FuIGJlIGluY2x1ZGVkIGluIHRoZSBvYmplY3QgZGVzdHJ1Y3R1cmluZyBoZXJlLlxyXG4gICAgICAgIGNvbnN0IHsgc2NvcGVzLCAuLi5yZW1haW5pbmdQcm9wZXJ0aWVzIH0gPSByZXF1ZXN0O1xyXG4gICAgICAgIGNvbnN0IHNjb3BlU2V0ID0gbmV3IFNjb3BlU2V0KHNjb3BlcyB8fCBbXSk7XHJcbiAgICAgICAgc2NvcGVTZXQuYXBwZW5kU2NvcGVzKE9JRENfREVGQVVMVF9TQ09QRVMpO1xyXG4gICAgICAgIGNvbnN0IGdldFByb21wdCA9ICgpID0+IHtcclxuICAgICAgICAgICAgLy8gSWYgcmVxdWVzdCBpcyBzaWxlbnQsIHByb21wdCBpcyBhbHdheXMgbm9uZVxyXG4gICAgICAgICAgICBzd2l0Y2ggKHRoaXMuYXBpSWQpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgQXBpSWQuc3NvU2lsZW50OlxyXG4gICAgICAgICAgICAgICAgY2FzZSBBcGlJZC5hY3F1aXJlVG9rZW5TaWxlbnRfc2lsZW50RmxvdzpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcImluaXRpYWxpemVOYXRpdmVSZXF1ZXN0OiBzaWxlbnQgcmVxdWVzdCBzZXRzIHByb21wdCB0byBub25lXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9tcHRWYWx1ZS5OT05FO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIFByb21wdCBub3QgcHJvdmlkZWQsIHJlcXVlc3QgbWF5IHByb2NlZWQgYW5kIG5hdGl2ZSBicm9rZXIgZGVjaWRlcyBpZiBpdCBuZWVkcyB0byBwcm9tcHRcclxuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0LnByb21wdCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoXCJpbml0aWFsaXplTmF0aXZlUmVxdWVzdDogcHJvbXB0IHdhcyBub3QgcHJvdmlkZWRcIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIElmIHJlcXVlc3QgaXMgaW50ZXJhY3RpdmUsIGNoZWNrIGlmIHByb21wdCBwcm92aWRlZCBpcyBhbGxvd2VkIHRvIGdvIGRpcmVjdGx5IHRvIG5hdGl2ZSBicm9rZXJcclxuICAgICAgICAgICAgc3dpdGNoIChyZXF1ZXN0LnByb21wdCkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQcm9tcHRWYWx1ZS5OT05FOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBQcm9tcHRWYWx1ZS5DT05TRU5UOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBQcm9tcHRWYWx1ZS5MT0dJTjpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcImluaXRpYWxpemVOYXRpdmVSZXF1ZXN0OiBwcm9tcHQgaXMgY29tcGF0aWJsZSB3aXRoIG5hdGl2ZSBmbG93XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0LnByb21wdDtcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoYGluaXRpYWxpemVOYXRpdmVSZXF1ZXN0OiBwcm9tcHQgPSAke3JlcXVlc3QucHJvbXB0fSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIG5hdGl2ZSBmbG93YCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcihuYXRpdmVQcm9tcHROb3RTdXBwb3J0ZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCB2YWxpZGF0ZWRSZXF1ZXN0ID0ge1xyXG4gICAgICAgICAgICAuLi5yZW1haW5pbmdQcm9wZXJ0aWVzLFxyXG4gICAgICAgICAgICBhY2NvdW50SWQ6IHRoaXMuYWNjb3VudElkLFxyXG4gICAgICAgICAgICBjbGllbnRJZDogdGhpcy5jb25maWcuYXV0aC5jbGllbnRJZCxcclxuICAgICAgICAgICAgYXV0aG9yaXR5OiBjYW5vbmljYWxBdXRob3JpdHkudXJsU3RyaW5nLFxyXG4gICAgICAgICAgICBzY29wZTogc2NvcGVTZXQucHJpbnRTY29wZXMoKSxcclxuICAgICAgICAgICAgcmVkaXJlY3RVcmk6IHRoaXMuZ2V0UmVkaXJlY3RVcmkocmVxdWVzdC5yZWRpcmVjdFVyaSksXHJcbiAgICAgICAgICAgIHByb21wdDogZ2V0UHJvbXB0KCksXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IHRoaXMuY29ycmVsYXRpb25JZCxcclxuICAgICAgICAgICAgdG9rZW5UeXBlOiByZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lLFxyXG4gICAgICAgICAgICB3aW5kb3dUaXRsZVN1YnN0cmluZzogZG9jdW1lbnQudGl0bGUsXHJcbiAgICAgICAgICAgIGV4dHJhUGFyYW1ldGVyczoge1xyXG4gICAgICAgICAgICAgICAgLi4ucmVxdWVzdC5leHRyYVF1ZXJ5UGFyYW1ldGVycyxcclxuICAgICAgICAgICAgICAgIC4uLnJlcXVlc3QudG9rZW5RdWVyeVBhcmFtZXRlcnMsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGV4dGVuZGVkRXhwaXJ5VG9rZW46IGZhbHNlLFxyXG4gICAgICAgICAgICBrZXlJZDogcmVxdWVzdC5wb3BLaWQsXHJcbiAgICAgICAgfTtcclxuICAgICAgICAvLyBDaGVjayBmb3IgUG9QIHRva2VuIHJlcXVlc3RzOiBzaWduUG9wVG9rZW4gc2hvdWxkIG9ubHkgYmUgc2V0IHRvIHRydWUgaWYgcG9wS2lkIGlzIG5vdCBzZXRcclxuICAgICAgICBpZiAodmFsaWRhdGVkUmVxdWVzdC5zaWduUG9wVG9rZW4gJiYgISFyZXF1ZXN0LnBvcEtpZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGludmFsaWRQb3BUb2tlblJlcXVlc3QpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmhhbmRsZUV4dHJhQnJva2VyUGFyYW1zKHZhbGlkYXRlZFJlcXVlc3QpO1xyXG4gICAgICAgIHZhbGlkYXRlZFJlcXVlc3QuZXh0cmFQYXJhbWV0ZXJzID1cclxuICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5leHRyYVBhcmFtZXRlcnMgfHwge307XHJcbiAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5leHRyYVBhcmFtZXRlcnMudGVsZW1ldHJ5ID1cclxuICAgICAgICAgICAgTmF0aXZlQ29uc3RhbnRzLk1BVFNfVEVMRU1FVFJZO1xyXG4gICAgICAgIGlmIChyZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lID09PSBBdXRoZW50aWNhdGlvblNjaGVtZS5QT1ApIHtcclxuICAgICAgICAgICAgLy8gYWRkIFBPUCByZXF1ZXN0IHR5cGVcclxuICAgICAgICAgICAgY29uc3Qgc2hyUGFyYW1ldGVycyA9IHtcclxuICAgICAgICAgICAgICAgIHJlc291cmNlUmVxdWVzdFVyaTogcmVxdWVzdC5yZXNvdXJjZVJlcXVlc3RVcmksXHJcbiAgICAgICAgICAgICAgICByZXNvdXJjZVJlcXVlc3RNZXRob2Q6IHJlcXVlc3QucmVzb3VyY2VSZXF1ZXN0TWV0aG9kLFxyXG4gICAgICAgICAgICAgICAgc2hyQ2xhaW1zOiByZXF1ZXN0LnNockNsYWltcyxcclxuICAgICAgICAgICAgICAgIHNock5vbmNlOiByZXF1ZXN0LnNock5vbmNlLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBjb25zdCBwb3BUb2tlbkdlbmVyYXRvciA9IG5ldyBQb3BUb2tlbkdlbmVyYXRvcih0aGlzLmJyb3dzZXJDcnlwdG8pO1xyXG4gICAgICAgICAgICAvLyBnZW5lcmF0ZSByZXFDbmYgaWYgbm90IHByb3ZpZGVkIGluIHRoZSByZXF1ZXN0XHJcbiAgICAgICAgICAgIGxldCByZXFDbmZEYXRhO1xyXG4gICAgICAgICAgICBpZiAoIXZhbGlkYXRlZFJlcXVlc3Qua2V5SWQpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGdlbmVyYXRlZFJlcUNuZkRhdGEgPSBhd2FpdCBpbnZva2VBc3luYyhwb3BUb2tlbkdlbmVyYXRvci5nZW5lcmF0ZUNuZi5iaW5kKHBvcFRva2VuR2VuZXJhdG9yKSwgUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUNuZiwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHJlcXVlc3QuY29ycmVsYXRpb25JZCkoc2hyUGFyYW1ldGVycywgdGhpcy5sb2dnZXIpO1xyXG4gICAgICAgICAgICAgICAgcmVxQ25mRGF0YSA9IGdlbmVyYXRlZFJlcUNuZkRhdGEucmVxQ25mU3RyaW5nO1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5rZXlJZCA9IGdlbmVyYXRlZFJlcUNuZkRhdGEua2lkO1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5zaWduUG9wVG9rZW4gPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmVxQ25mRGF0YSA9IHRoaXMuYnJvd3NlckNyeXB0by5iYXNlNjRVcmxFbmNvZGUoSlNPTi5zdHJpbmdpZnkoeyBraWQ6IHZhbGlkYXRlZFJlcXVlc3Qua2V5SWQgfSkpO1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5zaWduUG9wVG9rZW4gPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBTUEFzIHJlcXVpcmUgd2hvbGUgc3RyaW5nIHRvIGJlIHBhc3NlZCB0byBicm9rZXJcclxuICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5yZXFDbmYgPSByZXFDbmZEYXRhO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFkZFJlcXVlc3RTS1VzKHZhbGlkYXRlZFJlcXVlc3QpO1xyXG4gICAgICAgIHJldHVybiB2YWxpZGF0ZWRSZXF1ZXN0O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGVzIGV4dHJhIGJyb2tlciByZXF1ZXN0IHBhcmFtZXRlcnNcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0IHtOYXRpdmVUb2tlblJlcXVlc3R9XHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICovXHJcbiAgICBoYW5kbGVFeHRyYUJyb2tlclBhcmFtcyhyZXF1ZXN0KSB7XHJcbiAgICAgICAgY29uc3QgaGFzRXh0cmFCcm9rZXJQYXJhbXMgPSByZXF1ZXN0LmV4dHJhUGFyYW1ldGVycyAmJlxyXG4gICAgICAgICAgICByZXF1ZXN0LmV4dHJhUGFyYW1ldGVycy5oYXNPd25Qcm9wZXJ0eShBQURTZXJ2ZXJQYXJhbUtleXMuQlJPS0VSX0NMSUVOVF9JRCkgJiZcclxuICAgICAgICAgICAgcmVxdWVzdC5leHRyYVBhcmFtZXRlcnMuaGFzT3duUHJvcGVydHkoQUFEU2VydmVyUGFyYW1LZXlzLkJST0tFUl9SRURJUkVDVF9VUkkpICYmXHJcbiAgICAgICAgICAgIHJlcXVlc3QuZXh0cmFQYXJhbWV0ZXJzLmhhc093blByb3BlcnR5KEFBRFNlcnZlclBhcmFtS2V5cy5DTElFTlRfSUQpO1xyXG4gICAgICAgIGlmICghcmVxdWVzdC5lbWJlZGRlZENsaWVudElkICYmICFoYXNFeHRyYUJyb2tlclBhcmFtcykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBjaGlsZF9jbGllbnRfaWQgPSBcIlwiO1xyXG4gICAgICAgIGNvbnN0IGNoaWxkX3JlZGlyZWN0X3VyaSA9IHJlcXVlc3QucmVkaXJlY3RVcmk7XHJcbiAgICAgICAgaWYgKHJlcXVlc3QuZW1iZWRkZWRDbGllbnRJZCkge1xyXG4gICAgICAgICAgICByZXF1ZXN0LnJlZGlyZWN0VXJpID0gdGhpcy5jb25maWcuYXV0aC5yZWRpcmVjdFVyaTtcclxuICAgICAgICAgICAgY2hpbGRfY2xpZW50X2lkID0gcmVxdWVzdC5lbWJlZGRlZENsaWVudElkO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChyZXF1ZXN0LmV4dHJhUGFyYW1ldGVycykge1xyXG4gICAgICAgICAgICByZXF1ZXN0LnJlZGlyZWN0VXJpID1cclxuICAgICAgICAgICAgICAgIHJlcXVlc3QuZXh0cmFQYXJhbWV0ZXJzW0FBRFNlcnZlclBhcmFtS2V5cy5CUk9LRVJfUkVESVJFQ1RfVVJJXTtcclxuICAgICAgICAgICAgY2hpbGRfY2xpZW50X2lkID1cclxuICAgICAgICAgICAgICAgIHJlcXVlc3QuZXh0cmFQYXJhbWV0ZXJzW0FBRFNlcnZlclBhcmFtS2V5cy5DTElFTlRfSURdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXF1ZXN0LmV4dHJhUGFyYW1ldGVycyA9IHtcclxuICAgICAgICAgICAgY2hpbGRfY2xpZW50X2lkLFxyXG4gICAgICAgICAgICBjaGlsZF9yZWRpcmVjdF91cmksXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50Py5hZGRGaWVsZHMoe1xyXG4gICAgICAgICAgICBlbWJlZGRlZENsaWVudElkOiBjaGlsZF9jbGllbnRfaWQsXHJcbiAgICAgICAgICAgIGVtYmVkZGVkUmVkaXJlY3RVcmk6IGNoaWxkX3JlZGlyZWN0X3VyaSxcclxuICAgICAgICB9LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IE5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1OYXRpdmVJbnRlcmFjdGlvbkNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PopupClient: function() { return /* binding */ PopupClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../event/EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./NativeInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interaction_handler/InteractionHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass PopupClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        // Properly sets this reference for the unload event.\r\n        this.unloadWindow = this.unloadWindow.bind(this);\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n    /**\r\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n     * @param request\r\n     */\r\n    acquireToken(request) {\r\n        try {\r\n            const popupName = this.generatePopupName(request.scopes || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\r\n            const popupParams = {\r\n                popupName,\r\n                popupWindowAttributes: request.popupWindowAttributes || {},\r\n                popupWindowParent: request.popupWindowParent ?? window,\r\n            };\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.acquireTokenPopupAsync(request, popupParams);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\r\n                popupParams.popup = this.openSizedPopup(\"about:blank\", popupParams);\r\n                return this.acquireTokenPopupAsync(request, popupParams);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logout(logoutRequest) {\r\n        try {\r\n            this.logger.verbose(\"logoutPopup called\");\r\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n            const popupParams = {\r\n                popupName: this.generateLogoutPopupName(validLogoutRequest),\r\n                popupWindowAttributes: logoutRequest?.popupWindowAttributes || {},\r\n                popupWindowParent: logoutRequest?.popupWindowParent ?? window,\r\n            };\r\n            const authority = logoutRequest && logoutRequest.authority;\r\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.logoutPopupAsync(validLogoutRequest, popupParams, authority, mainWindowRedirectUri);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before logging out.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\r\n                popupParams.popup = this.openSizedPopup(\"about:blank\", popupParams);\r\n                return this.logoutPopupAsync(validLogoutRequest, popupParams, authority, mainWindowRedirectUri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Since this function is synchronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    /**\r\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param popup\r\n     * @param popupWindowAttributes\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenPopupAsync(request, popupParams) {\r\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenPopup);\r\n        const validRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, this.correlationId)(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.preconnect)(validRequest.authority);\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.initializeAuthorizationCodeRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, this.correlationId)(validRequest);\r\n            // Initialize the client\r\n            const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: validRequest.authority,\r\n                requestAzureCloudOptions: validRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: validRequest.extraQueryParameters,\r\n                account: validRequest.account,\r\n            });\r\n            const isNativeBroker = _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_4__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\r\n            // Start measurement for server calls with native brokering enabled\r\n            let fetchNativeAccountIdMeasurement;\r\n            if (isNativeBroker) {\r\n                fetchNativeAccountIdMeasurement =\r\n                    this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\r\n            }\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl({\r\n                ...validRequest,\r\n                nativeBroker: isNativeBroker,\r\n            });\r\n            // Create popup interaction handler.\r\n            const interactionHandler = new _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n            // Show the UI once the url has been created. Get the window handle for the popup.\r\n            const popupWindow = this.initiateAuthRequest(navigateUrl, popupParams);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.POPUP_OPENED, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, { popupWindow }, null);\r\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n            const responseString = await this.monitorPopupForHash(popupWindow, popupParams.popupWindowParent);\r\n            const serverParams = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invoke)(_response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_7__.deserializeResponse, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.DeserializeResponse, this.logger, this.performanceClient, this.correlationId)(responseString, this.config.auth.OIDCOptions.serverResponseType, this.logger);\r\n            // Remove throttle if it exists\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\r\n            if (serverParams.accountId) {\r\n                this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n                // end measurement for server call with native brokering enabled\r\n                if (fetchNativeAccountIdMeasurement) {\r\n                    fetchNativeAccountIdMeasurement.end({\r\n                        success: true,\r\n                        isNativeBroker: true,\r\n                    });\r\n                }\r\n                if (!this.nativeMessageHandler) {\r\n                    throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.nativeConnectionNotEstablished);\r\n                }\r\n                const nativeInteractionClient = new _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\r\n                const { userRequestState } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ProtocolUtils.parseRequestState(this.browserCrypto, validRequest.state);\r\n                return await nativeInteractionClient.acquireToken({\r\n                    ...validRequest,\r\n                    state: userRequestState,\r\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\r\n                });\r\n            }\r\n            // Handle response from hash string.\r\n            const result = await interactionHandler.handleCodeResponse(serverParams, validRequest);\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n            popupParams.popup?.close();\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param requestAuthority\r\n     * @param popup\r\n     * @param mainWindowRedirectUri\r\n     * @param popupWindowAttributes\r\n     */\r\n    async logoutPopupAsync(validRequest, popupParams, requestAuthority, mainWindowRedirectUri) {\r\n        this.logger.verbose(\"logoutPopupAsync called\");\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGOUT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logoutPopup);\r\n        try {\r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validRequest.account);\r\n            // Initialize the client\r\n            const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: requestAuthority,\r\n                account: validRequest.account || undefined,\r\n            });\r\n            try {\r\n                authClient.authority.endSessionEndpoint;\r\n            }\r\n            catch {\r\n                if (validRequest.account?.homeAccountId &&\r\n                    validRequest.postLogoutRedirectUri &&\r\n                    authClient.authority.protocolMode === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ProtocolMode.OIDC) {\r\n                    void this.browserStorage.removeAccount(validRequest.account?.homeAccountId);\r\n                    this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest);\r\n                    if (mainWindowRedirectUri) {\r\n                        const navigationOptions = {\r\n                            apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logoutPopup,\r\n                            timeout: this.config.system.redirectNavigationTimeout,\r\n                            noHistory: false,\r\n                        };\r\n                        const absoluteUrl = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(mainWindowRedirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.getCurrentUri)());\r\n                        await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n                    }\r\n                    popupParams.popup?.close();\r\n                    return;\r\n                }\r\n            }\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri = authClient.getLogoutUri(validRequest);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest);\r\n            // Open the popup window to requestUrl.\r\n            const popupWindow = this.openPopup(logoutUri, popupParams);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.POPUP_OPENED, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, { popupWindow }, null);\r\n            await this.monitorPopupForHash(popupWindow, popupParams.popupWindowParent).catch(() => {\r\n                // Swallow any errors related to monitoring the window. Server logout is best effort\r\n            });\r\n            if (mainWindowRedirectUri) {\r\n                const navigationOptions = {\r\n                    apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logoutPopup,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: false,\r\n                };\r\n                const absoluteUrl = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(mainWindowRedirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.getCurrentUri)());\r\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\r\n                this.logger.verbosePii(`Redirecting main window to: ${absoluteUrl}`);\r\n                await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n            }\r\n            else {\r\n                this.logger.verbose(\"No main window navigation requested\");\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n            popupParams.popup?.close();\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGOUT_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, null, e);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\r\n            throw e;\r\n        }\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_6__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\r\n    }\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    initiateAuthRequest(requestUrl, params) {\r\n        // Check that request url is not empty.\r\n        if (requestUrl) {\r\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, params);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.logger.error(\"Navigate url is empty\");\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.emptyNavigateUri);\r\n        }\r\n    }\r\n    /**\r\n     * Monitors a window until it loads a url with the same origin.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - timeout for processing hash once popup is redirected back to application\r\n     */\r\n    monitorPopupForHash(popupWindow, popupWindowParent) {\r\n        return new Promise((resolve, reject) => {\r\n            this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\r\n            const intervalId = setInterval(() => {\r\n                // Window is closed\r\n                if (popupWindow.closed) {\r\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\r\n                    clearInterval(intervalId);\r\n                    reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.userCancelled));\r\n                    return;\r\n                }\r\n                let href = \"\";\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                clearInterval(intervalId);\r\n                let responseString = \"\";\r\n                const responseType = this.config.auth.OIDCOptions.serverResponseType;\r\n                if (popupWindow) {\r\n                    if (responseType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ServerResponseType.QUERY) {\r\n                        responseString = popupWindow.location.search;\r\n                    }\r\n                    else {\r\n                        responseString = popupWindow.location.hash;\r\n                    }\r\n                }\r\n                this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\r\n                resolve(responseString);\r\n            }, this.config.system.pollIntervalMilliseconds);\r\n        }).finally(() => {\r\n            this.cleanPopup(popupWindow, popupWindowParent);\r\n        });\r\n    }\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @param popupWindowAttributes\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    openPopup(urlNavigate, popupParams) {\r\n        try {\r\n            let popupWindow;\r\n            // Popup window passed in, setting url to navigate to\r\n            if (popupParams.popup) {\r\n                popupWindow = popupParams.popup;\r\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\r\n                popupWindow.location.assign(urlNavigate);\r\n            }\r\n            else if (typeof popupParams.popup === \"undefined\") {\r\n                // Popup will be undefined if it was not passed in\r\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\r\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams);\r\n            }\r\n            // Popup will be null if popups are blocked\r\n            if (!popupWindow) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.emptyWindowError);\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            popupParams.popupWindowParent.addEventListener(\"beforeunload\", this.unloadWindow);\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.popupWindowError);\r\n        }\r\n    }\r\n    /**\r\n     * Helper function to set popup window dimensions and position\r\n     * @param urlNavigate\r\n     * @param popupName\r\n     * @param popupWindowAttributes\r\n     * @returns\r\n     */\r\n    openSizedPopup(urlNavigate, { popupName, popupWindowAttributes, popupWindowParent }) {\r\n        /**\r\n         * adding winLeft and winTop to account for dual monitor\r\n         * using screenLeft and screenTop for IE8 and earlier\r\n         */\r\n        const winLeft = popupWindowParent.screenLeft\r\n            ? popupWindowParent.screenLeft\r\n            : popupWindowParent.screenX;\r\n        const winTop = popupWindowParent.screenTop\r\n            ? popupWindowParent.screenTop\r\n            : popupWindowParent.screenY;\r\n        /**\r\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n         * using document.documentElement.clientWidth for IE8 and earlier\r\n         */\r\n        const winWidth = popupWindowParent.innerWidth ||\r\n            document.documentElement.clientWidth ||\r\n            document.body.clientWidth;\r\n        const winHeight = popupWindowParent.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.body.clientHeight;\r\n        let width = popupWindowAttributes.popupSize?.width;\r\n        let height = popupWindowAttributes.popupSize?.height;\r\n        let top = popupWindowAttributes.popupPosition?.top;\r\n        let left = popupWindowAttributes.popupPosition?.left;\r\n        if (!width || width < 0 || width > winWidth) {\r\n            this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\r\n            width = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_WIDTH;\r\n        }\r\n        if (!height || height < 0 || height > winHeight) {\r\n            this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\r\n            height = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_HEIGHT;\r\n        }\r\n        if (!top || top < 0 || top > winHeight) {\r\n            this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\r\n            top = Math.max(0, winHeight / 2 - _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_HEIGHT / 2 + winTop);\r\n        }\r\n        if (!left || left < 0 || left > winWidth) {\r\n            this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\r\n            left = Math.max(0, winWidth / 2 - _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_WIDTH / 2 + winLeft);\r\n        }\r\n        return popupWindowParent.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\r\n    }\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    unloadWindow(e) {\r\n        this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\r\n        if (this.currentWindow) {\r\n            this.currentWindow.close();\r\n        }\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        e.preventDefault();\r\n    }\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    cleanPopup(popupWindow, popupWindowParent) {\r\n        // Close window.\r\n        popupWindow.close();\r\n        // Remove window unload function\r\n        popupWindowParent.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n    }\r\n    /**\r\n     * Generates the name for the popup based on the client id and request\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    generatePopupName(scopes, authority) {\r\n        return `${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\r\n    }\r\n    /**\r\n     * Generates the name for the popup based on the client id and request for logouts\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    generateLogoutPopupName(request) {\r\n        const homeAccountId = request.account && request.account.homeAccountId;\r\n        return `${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\r\n    }\r\n}\n\n\n//# sourceMappingURL=PopupClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectClient: function() { return /* binding */ RedirectClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../interaction_handler/RedirectHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../event/EventType.mjs */ \"./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./NativeInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction getNavigationType() {\r\n    if (typeof window === \"undefined\" ||\r\n        typeof window.performance === \"undefined\" ||\r\n        typeof window.performance.getEntriesByType !== \"function\") {\r\n        return undefined;\r\n    }\r\n    const navigationEntries = window.performance.getEntriesByType(\"navigation\");\r\n    const navigation = navigationEntries.length\r\n        ? navigationEntries[0]\r\n        : undefined;\r\n    return navigation?.type;\r\n}\r\nclass RedirectClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n    /**\r\n     * Redirects the page to the /authorize endpoint of the IDP\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        const validRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, this.correlationId)(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\r\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || \"\", validRequest.account || null);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenRedirect);\r\n        const handleBackButton = (event) => {\r\n            // Clear temporary cache if the back button is clicked during the redirect flow.\r\n            if (event.persisted) {\r\n                this.logger.verbose(\"Page was restored from back/forward cache. Clearing temporary cache.\");\r\n                this.browserStorage.cleanRequestByState(validRequest.state);\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.RESTORE_FROM_BFCACHE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\r\n            }\r\n        };\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.initializeAuthorizationCodeRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, this.correlationId)(validRequest);\r\n            // Initialize the client\r\n            const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: validRequest.authority,\r\n                requestAzureCloudOptions: validRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: validRequest.extraQueryParameters,\r\n                account: validRequest.account,\r\n            });\r\n            // Create redirect interaction handler.\r\n            const interactionHandler = new _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_4__.RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl({\r\n                ...validRequest,\r\n                nativeBroker: _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme),\r\n            });\r\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\r\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\r\n            // Clear temporary cache if the back button is clicked during the redirect flow.\r\n            window.addEventListener(\"pageshow\", handleBackButton);\r\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\r\n                navigationClient: this.navigationClient,\r\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\r\n                redirectStartPage: redirectStartPage,\r\n                onRedirectNavigate: request.onRedirectNavigate ||\r\n                    this.config.auth.onRedirectNavigate,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            window.removeEventListener(\"pageshow\", handleBackButton);\r\n            this.browserStorage.cleanRequestByState(validRequest.state);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     * @param hash {string} url hash\r\n     * @param parentMeasurement {InProgressPerformanceEvent} parent measurement\r\n     */\r\n    async handleRedirectPromise(hash = \"\", parentMeasurement) {\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.handleRedirectPromise);\r\n        try {\r\n            if (!this.browserStorage.isInteractionInProgress(true)) {\r\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\r\n                return null;\r\n            }\r\n            const [serverParams, responseString] = this.getRedirectResponse(hash || \"\");\r\n            if (!serverParams) {\r\n                // Not a recognized server response hash or hash not associated with a redirect request\r\n                this.logger.info(\"handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache.\");\r\n                this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\r\n                // Do not instrument \"no_server_response\" if user clicked back button\r\n                if (getNavigationType() !== \"back_forward\") {\r\n                    parentMeasurement.event.errorCode = \"no_server_response\";\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"Back navigation event detected. Muting no_server_response error\");\r\n                }\r\n                return null;\r\n            }\r\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\r\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.ORIGIN_URI, true) || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n            const loginRequestUrlNormalized = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlString.removeHashFromUrl(loginRequestUrl);\r\n            const currentUrlNormalized = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlString.removeHashFromUrl(window.location.href);\r\n            if (loginRequestUrlNormalized === currentUrlNormalized &&\r\n                this.config.auth.navigateToLoginRequestUrl) {\r\n                // We are on the page we need to navigate to - handle hash\r\n                this.logger.verbose(\"Current page is loginRequestUrl, handling response\");\r\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\r\n                    // Replace current hash with non-msal hash, if present\r\n                    (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.replaceHash)(loginRequestUrl);\r\n                }\r\n                const handleHashResult = await this.handleResponse(serverParams, serverTelemetryManager);\r\n                return handleHashResult;\r\n            }\r\n            else if (!this.config.auth.navigateToLoginRequestUrl) {\r\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling response\");\r\n                return await this.handleResponse(serverParams, serverTelemetryManager);\r\n            }\r\n            else if (!(0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.isInIframe)() ||\r\n                this.config.system.allowRedirectInIframe) {\r\n                /*\r\n                 * Returned from authority using redirect - need to perform navigation before processing response\r\n                 * Cache the hash to be retrieved after the next redirect\r\n                 */\r\n                this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.URL_HASH, responseString, true);\r\n                const navigationOptions = {\r\n                    apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.handleRedirectPromise,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: true,\r\n                };\r\n                /**\r\n                 * Default behavior is to redirect to the start page and not process the hash now.\r\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\r\n                 */\r\n                let processHashOnRedirect = true;\r\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                    // Redirect to home page if login request url is null (real null or the string null)\r\n                    const homepage = (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.getHomepage)();\r\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\r\n                    this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.ORIGIN_URI, homepage, true);\r\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                    processHashOnRedirect =\r\n                        await this.navigationClient.navigateInternal(homepage, navigationOptions);\r\n                }\r\n                else {\r\n                    // Navigate to page that initiated the redirect request\r\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\r\n                    processHashOnRedirect =\r\n                        await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\r\n                }\r\n                // If navigateInternal implementation returns false, handle the hash now\r\n                if (!processHashOnRedirect) {\r\n                    return await this.handleResponse(serverParams, serverTelemetryManager);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the response hash for a redirect request\r\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\r\n     * @param hash\r\n     */\r\n    getRedirectResponse(userProvidedResponse) {\r\n        this.logger.verbose(\"getRedirectResponseHash called\");\r\n        // Get current location hash from window or cache.\r\n        let responseString = userProvidedResponse;\r\n        if (!responseString) {\r\n            if (this.config.auth.OIDCOptions.serverResponseType ===\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ServerResponseType.QUERY) {\r\n                responseString = window.location.search;\r\n            }\r\n            else {\r\n                responseString = window.location.hash;\r\n            }\r\n        }\r\n        let response = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlUtils.getDeserializedResponse(responseString);\r\n        if (response) {\r\n            try {\r\n                (0,_response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_7__.validateInteractionType)(response, this.browserCrypto, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\r\n            }\r\n            catch (e) {\r\n                if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                    this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`);\r\n                }\r\n                return [null, \"\"];\r\n            }\r\n            (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.clearHash)(window);\r\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\r\n            return [response, responseString];\r\n        }\r\n        const cachedHash = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.URL_HASH, true);\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.URL_HASH));\r\n        if (cachedHash) {\r\n            response = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlUtils.getDeserializedResponse(cachedHash);\r\n            if (response) {\r\n                this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\r\n                return [response, cachedHash];\r\n            }\r\n        }\r\n        return [null, \"\"];\r\n    }\r\n    /**\r\n     * Checks if hash exists and handles in window.\r\n     * @param hash\r\n     * @param state\r\n     */\r\n    async handleResponse(serverParams, serverTelemetryManager) {\r\n        const state = serverParams.state;\r\n        if (!state) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.noStateInHash);\r\n        }\r\n        const cachedRequest = this.browserStorage.getCachedRequest(state);\r\n        this.logger.verbose(\"handleResponse called, retrieved cached request\");\r\n        if (serverParams.accountId) {\r\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n            if (!this.nativeMessageHandler) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.nativeConnectionNotEstablished);\r\n            }\r\n            const nativeInteractionClient = new _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, cachedRequest.correlationId);\r\n            const { userRequestState } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ProtocolUtils.parseRequestState(this.browserCrypto, state);\r\n            return nativeInteractionClient\r\n                .acquireToken({\r\n                ...cachedRequest,\r\n                state: userRequestState,\r\n                prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\r\n            })\r\n                .finally(() => {\r\n                this.browserStorage.cleanRequestByState(state);\r\n            });\r\n        }\r\n        // Hash contains known properties - handle and return in callback\r\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\r\n        if (!currentAuthority) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.noCachedAuthorityError);\r\n        }\r\n        const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({ serverTelemetryManager, requestAuthority: currentAuthority });\r\n        _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, cachedRequest);\r\n        const interactionHandler = new _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_4__.RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.performanceClient);\r\n        return interactionHandler.handleCodeResponse(serverParams, state);\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logout(logoutRequest) {\r\n        this.logger.verbose(\"logoutRedirect called\");\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logout);\r\n        try {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect, logoutRequest);\r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validLogoutRequest.account);\r\n            const navigationOptions = {\r\n                apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logout,\r\n                timeout: this.config.system.redirectNavigationTimeout,\r\n                noHistory: false,\r\n            };\r\n            const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: logoutRequest && logoutRequest.authority,\r\n                requestExtraQueryParameters: logoutRequest?.extraQueryParameters,\r\n                account: (logoutRequest && logoutRequest.account) || undefined,\r\n            });\r\n            if (authClient.authority.protocolMode === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ProtocolMode.OIDC) {\r\n                try {\r\n                    authClient.authority.endSessionEndpoint;\r\n                }\r\n                catch {\r\n                    if (validLogoutRequest.account?.homeAccountId) {\r\n                        void this.browserStorage.removeAccount(validLogoutRequest.account?.homeAccountId);\r\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect, validLogoutRequest);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri = authClient.getLogoutUri(validLogoutRequest);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect, validLogoutRequest);\r\n            // Check if onRedirectNavigate is implemented, and invoke it if so\r\n            if (logoutRequest &&\r\n                typeof logoutRequest.onRedirectNavigate === \"function\") {\r\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\r\n                if (navigate !== false) {\r\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\r\n                    // Ensure interaction is in progress\r\n                    if (!this.browserStorage.getInteractionInProgress()) {\r\n                        this.browserStorage.setInteractionInProgress(true);\r\n                    }\r\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\r\n                    return;\r\n                }\r\n                else {\r\n                    // Ensure interaction is not in progress\r\n                    this.browserStorage.setInteractionInProgress(false);\r\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\r\n                }\r\n            }\r\n            else {\r\n                // Ensure interaction is in progress\r\n                if (!this.browserStorage.getInteractionInProgress()) {\r\n                    this.browserStorage.setInteractionInProgress(true);\r\n                }\r\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\r\n                return;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect, null, e);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\r\n            throw e;\r\n        }\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_3__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Redirect);\r\n    }\r\n    /**\r\n     * Use to get the redirectStartPage either from request or use current window\r\n     * @param requestStartPage\r\n     */\r\n    getRedirectStartPage(requestStartPage) {\r\n        const redirectStartPage = requestStartPage || window.location.href;\r\n        return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(redirectStartPage, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.getCurrentUri)());\r\n    }\r\n}\n\n\n//# sourceMappingURL=RedirectClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentAuthCodeClient: function() { return /* binding */ SilentAuthCodeClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _HybridSpaAuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./HybridSpaAuthorizationCodeClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs\");\n/* harmony import */ var _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../interaction_handler/InteractionHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentAuthCodeClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        this.apiId = apiId;\r\n    }\r\n    /**\r\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        // Auth code payload is required\r\n        if (!request.code) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.authCodeRequired);\r\n        }\r\n        // Create silent request\r\n        const silentRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n        try {\r\n            // Create auth code request (PKCE not needed)\r\n            const authCodeRequest = {\r\n                ...silentRequest,\r\n                code: request.code,\r\n            };\r\n            // Initialize the client\r\n            const clientConfig = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.getClientConfiguration.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, request.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: silentRequest.authority,\r\n                requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: silentRequest.extraQueryParameters,\r\n                account: silentRequest.account,\r\n            });\r\n            const authClient = new _HybridSpaAuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_5__.HybridSpaAuthorizationCodeClient(clientConfig);\r\n            this.logger.verbose(\"Auth code client created\");\r\n            // Create silent handler\r\n            const interactionHandler = new _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n            // Handle auth code parameters from request\r\n            return await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(interactionHandler.handleCodeResponseFromServer.bind(interactionHandler), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, request.correlationId)({\r\n                code: request.code,\r\n                msgraph_host: request.msGraphHost,\r\n                cloud_graph_host_name: request.cloudGraphHostName,\r\n                cloud_instance_host_name: request.cloudInstanceHostName,\r\n            }, silentRequest, false);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout() {\r\n        // Synchronous so we must reject\r\n        return Promise.reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.silentLogoutUnsupported));\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentAuthCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRBdXRoQ29kZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQzBFO0FBQ1g7QUFDTDtBQUNQO0FBQzBCO0FBQ1A7QUFDWTs7QUFFL0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMscUZBQXlCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUZBQXNCLENBQUMsOEVBQWdCO0FBQ3pEO0FBQ0E7QUFDQSxvQ0FBb0MsdUVBQVcsaURBQWlELHlFQUFpQiwrSEFBK0gsd0VBQWU7QUFDL1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyx1RUFBVyx5Q0FBeUMseUVBQWlCO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsbUNBQW1DLG1HQUFnQztBQUNuRTtBQUNBO0FBQ0EsMkNBQTJDLDJGQUFrQjtBQUM3RDtBQUNBLHlCQUF5Qix1RUFBVywyRUFBMkUseUVBQWlCO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSw2QkFBNkIsaUVBQVM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixtRkFBc0IsQ0FBQyxxRkFBdUI7QUFDNUU7QUFDQTs7QUFFZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9pbnRlcmFjdGlvbl9jbGllbnQvU2lsZW50QXV0aENvZGVDbGllbnQubWpzPzViMmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBpbnZva2VBc3luYywgUGVyZm9ybWFuY2VFdmVudHMsIEF1dGhFcnJvciB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcbmltcG9ydCB7IFN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQgfSBmcm9tICcuL1N0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQubWpzJztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBJbnRlcmFjdGlvblR5cGUgfSBmcm9tICcuLi91dGlscy9Ccm93c2VyQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBIeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudCB9IGZyb20gJy4vSHlicmlkU3BhQXV0aG9yaXphdGlvbkNvZGVDbGllbnQubWpzJztcbmltcG9ydCB7IEludGVyYWN0aW9uSGFuZGxlciB9IGZyb20gJy4uL2ludGVyYWN0aW9uX2hhbmRsZXIvSW50ZXJhY3Rpb25IYW5kbGVyLm1qcyc7XG5pbXBvcnQgeyBhdXRoQ29kZVJlcXVpcmVkLCBzaWxlbnRMb2dvdXRVbnN1cHBvcnRlZCB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY2xhc3MgU2lsZW50QXV0aENvZGVDbGllbnQgZXh0ZW5kcyBTdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZywgc3RvcmFnZUltcGwsIGJyb3dzZXJDcnlwdG8sIGxvZ2dlciwgZXZlbnRIYW5kbGVyLCBuYXZpZ2F0aW9uQ2xpZW50LCBhcGlJZCwgcGVyZm9ybWFuY2VDbGllbnQsIG5hdGl2ZU1lc3NhZ2VIYW5kbGVyLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgc3VwZXIoY29uZmlnLCBzdG9yYWdlSW1wbCwgYnJvd3NlckNyeXB0bywgbG9nZ2VyLCBldmVudEhhbmRsZXIsIG5hdmlnYXRpb25DbGllbnQsIHBlcmZvcm1hbmNlQ2xpZW50LCBuYXRpdmVNZXNzYWdlSGFuZGxlciwgY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgdGhpcy5hcGlJZCA9IGFwaUlkO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBY3F1aXJlcyBhIHRva2VuIHNpbGVudGx5IGJ5IHJlZGVlbWluZyBhbiBhdXRob3JpemF0aW9uIGNvZGUgYWdhaW5zdCB0aGUgL3Rva2VuIGVuZHBvaW50XHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICovXHJcbiAgICBhc3luYyBhY3F1aXJlVG9rZW4ocmVxdWVzdCkge1xyXG4gICAgICAgIC8vIEF1dGggY29kZSBwYXlsb2FkIGlzIHJlcXVpcmVkXHJcbiAgICAgICAgaWYgKCFyZXF1ZXN0LmNvZGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcihhdXRoQ29kZVJlcXVpcmVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQ3JlYXRlIHNpbGVudCByZXF1ZXN0XHJcbiAgICAgICAgY29uc3Qgc2lsZW50UmVxdWVzdCA9IGF3YWl0IGludm9rZUFzeW5jKHRoaXMuaW5pdGlhbGl6ZUF1dGhvcml6YXRpb25SZXF1ZXN0LmJpbmQodGhpcyksIFBlcmZvcm1hbmNlRXZlbnRzLlN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnRJbml0aWFsaXplQXV0aG9yaXphdGlvblJlcXVlc3QsIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpKHJlcXVlc3QsIEludGVyYWN0aW9uVHlwZS5TaWxlbnQpO1xyXG4gICAgICAgIGNvbnN0IHNlcnZlclRlbGVtZXRyeU1hbmFnZXIgPSB0aGlzLmluaXRpYWxpemVTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyKHRoaXMuYXBpSWQpO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIENyZWF0ZSBhdXRoIGNvZGUgcmVxdWVzdCAoUEtDRSBub3QgbmVlZGVkKVxyXG4gICAgICAgICAgICBjb25zdCBhdXRoQ29kZVJlcXVlc3QgPSB7XHJcbiAgICAgICAgICAgICAgICAuLi5zaWxlbnRSZXF1ZXN0LFxyXG4gICAgICAgICAgICAgICAgY29kZTogcmVxdWVzdC5jb2RlLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAvLyBJbml0aWFsaXplIHRoZSBjbGllbnRcclxuICAgICAgICAgICAgY29uc3QgY2xpZW50Q29uZmlnID0gYXdhaXQgaW52b2tlQXN5bmModGhpcy5nZXRDbGllbnRDb25maWd1cmF0aW9uLmJpbmQodGhpcyksIFBlcmZvcm1hbmNlRXZlbnRzLlN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnRHZXRDbGllbnRDb25maWd1cmF0aW9uLCB0aGlzLmxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKSh7XHJcbiAgICAgICAgICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLFxyXG4gICAgICAgICAgICAgICAgcmVxdWVzdEF1dGhvcml0eTogc2lsZW50UmVxdWVzdC5hdXRob3JpdHksXHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0QXp1cmVDbG91ZE9wdGlvbnM6IHNpbGVudFJlcXVlc3QuYXp1cmVDbG91ZE9wdGlvbnMsXHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0RXh0cmFRdWVyeVBhcmFtZXRlcnM6IHNpbGVudFJlcXVlc3QuZXh0cmFRdWVyeVBhcmFtZXRlcnMsXHJcbiAgICAgICAgICAgICAgICBhY2NvdW50OiBzaWxlbnRSZXF1ZXN0LmFjY291bnQsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBjb25zdCBhdXRoQ2xpZW50ID0gbmV3IEh5YnJpZFNwYUF1dGhvcml6YXRpb25Db2RlQ2xpZW50KGNsaWVudENvbmZpZyk7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJBdXRoIGNvZGUgY2xpZW50IGNyZWF0ZWRcIik7XHJcbiAgICAgICAgICAgIC8vIENyZWF0ZSBzaWxlbnQgaGFuZGxlclxyXG4gICAgICAgICAgICBjb25zdCBpbnRlcmFjdGlvbkhhbmRsZXIgPSBuZXcgSW50ZXJhY3Rpb25IYW5kbGVyKGF1dGhDbGllbnQsIHRoaXMuYnJvd3NlclN0b3JhZ2UsIGF1dGhDb2RlUmVxdWVzdCwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQpO1xyXG4gICAgICAgICAgICAvLyBIYW5kbGUgYXV0aCBjb2RlIHBhcmFtZXRlcnMgZnJvbSByZXF1ZXN0XHJcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBpbnZva2VBc3luYyhpbnRlcmFjdGlvbkhhbmRsZXIuaGFuZGxlQ29kZVJlc3BvbnNlRnJvbVNlcnZlci5iaW5kKGludGVyYWN0aW9uSGFuZGxlciksIFBlcmZvcm1hbmNlRXZlbnRzLkhhbmRsZUNvZGVSZXNwb25zZUZyb21TZXJ2ZXIsIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpKHtcclxuICAgICAgICAgICAgICAgIGNvZGU6IHJlcXVlc3QuY29kZSxcclxuICAgICAgICAgICAgICAgIG1zZ3JhcGhfaG9zdDogcmVxdWVzdC5tc0dyYXBoSG9zdCxcclxuICAgICAgICAgICAgICAgIGNsb3VkX2dyYXBoX2hvc3RfbmFtZTogcmVxdWVzdC5jbG91ZEdyYXBoSG9zdE5hbWUsXHJcbiAgICAgICAgICAgICAgICBjbG91ZF9pbnN0YW5jZV9ob3N0X25hbWU6IHJlcXVlc3QuY2xvdWRJbnN0YW5jZUhvc3ROYW1lLFxyXG4gICAgICAgICAgICB9LCBzaWxlbnRSZXF1ZXN0LCBmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgQXV0aEVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBlLnNldENvcnJlbGF0aW9uSWQodGhpcy5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICAgICAgICAgIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIuY2FjaGVGYWlsZWRSZXF1ZXN0KGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRocm93IGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDdXJyZW50bHkgVW5zdXBwb3J0ZWRcclxuICAgICAqL1xyXG4gICAgbG9nb3V0KCkge1xyXG4gICAgICAgIC8vIFN5bmNocm9ub3VzIHNvIHdlIG11c3QgcmVqZWN0XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3Ioc2lsZW50TG9nb3V0VW5zdXBwb3J0ZWQpKTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBTaWxlbnRBdXRoQ29kZUNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2lsZW50QXV0aENvZGVDbGllbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentCacheClient: function() { return /* binding */ SilentCacheClient; }\n/* harmony export */ });\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentCacheClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    /**\r\n     * Returns unexpired tokens from the cache, if available\r\n     * @param silentRequest\r\n     */\r\n    async acquireToken(silentRequest) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentCacheClientAcquireToken, silentRequest.correlationId);\r\n        // Telemetry manager only used to increment cacheHits here\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenSilent_silentFlow);\r\n        const clientConfig = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getClientConfiguration.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)({\r\n            serverTelemetryManager,\r\n            requestAuthority: silentRequest.authority,\r\n            requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n            account: silentRequest.account,\r\n        });\r\n        const silentAuthClient = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.SilentFlowClient(clientConfig, this.performanceClient);\r\n        this.logger.verbose(\"Silent auth client created\");\r\n        try {\r\n            const response = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(silentAuthClient.acquireCachedToken.bind(silentAuthClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentFlowClientAcquireCachedToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\r\n            const authResponse = response[0];\r\n            this.performanceClient.addFields({\r\n                fromCache: true,\r\n            }, silentRequest.correlationId);\r\n            return authResponse;\r\n        }\r\n        catch (error) {\r\n            if (error instanceof _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserAuthError &&\r\n                error.errorCode === _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.cryptoKeyNotFound) {\r\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * API to silenty clear the browser cache.\r\n     * @param logoutRequest\r\n     */\r\n    logout(logoutRequest) {\r\n        this.logger.verbose(\"logoutRedirect called\");\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentCacheClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRDYWNoZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUMrRDtBQUNrQjtBQUN4QztBQUNXO0FBQ007O0FBRXZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHFGQUF5QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlFQUFpQjtBQUNwRTtBQUNBLDZFQUE2RSw4REFBSztBQUNsRixtQ0FBbUMsdUVBQVcseUNBQXlDLHlFQUFpQjtBQUN4RztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxxQ0FBcUMsd0VBQWdCO0FBQ3JEO0FBQ0E7QUFDQSxtQ0FBbUMsdUVBQVcsNkRBQTZELHlFQUFpQjtBQUM1SDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHlFQUFnQjtBQUNqRCxvQ0FBb0MsK0VBQWlCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9pbnRlcmFjdGlvbl9jbGllbnQvU2lsZW50Q2FjaGVDbGllbnQubWpzPzVlZDciXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBTdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50IH0gZnJvbSAnLi9TdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50Lm1qcyc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50cywgaW52b2tlQXN5bmMsIFNpbGVudEZsb3dDbGllbnQgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBBcGlJZCB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJDb25zdGFudHMubWpzJztcbmltcG9ydCB7IEJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBjcnlwdG9LZXlOb3RGb3VuZCB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY2xhc3MgU2lsZW50Q2FjaGVDbGllbnQgZXh0ZW5kcyBTdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50IHtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB1bmV4cGlyZWQgdG9rZW5zIGZyb20gdGhlIGNhY2hlLCBpZiBhdmFpbGFibGVcclxuICAgICAqIEBwYXJhbSBzaWxlbnRSZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGFjcXVpcmVUb2tlbihzaWxlbnRSZXF1ZXN0KSB7XHJcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLlNpbGVudENhY2hlQ2xpZW50QWNxdWlyZVRva2VuLCBzaWxlbnRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIC8vIFRlbGVtZXRyeSBtYW5hZ2VyIG9ubHkgdXNlZCB0byBpbmNyZW1lbnQgY2FjaGVIaXRzIGhlcmVcclxuICAgICAgICBjb25zdCBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyID0gdGhpcy5pbml0aWFsaXplU2VydmVyVGVsZW1ldHJ5TWFuYWdlcihBcGlJZC5hY3F1aXJlVG9rZW5TaWxlbnRfc2lsZW50Rmxvdyk7XHJcbiAgICAgICAgY29uc3QgY2xpZW50Q29uZmlnID0gYXdhaXQgaW52b2tlQXN5bmModGhpcy5nZXRDbGllbnRDb25maWd1cmF0aW9uLmJpbmQodGhpcyksIFBlcmZvcm1hbmNlRXZlbnRzLlN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnRHZXRDbGllbnRDb25maWd1cmF0aW9uLCB0aGlzLmxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgdGhpcy5jb3JyZWxhdGlvbklkKSh7XHJcbiAgICAgICAgICAgIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsXHJcbiAgICAgICAgICAgIHJlcXVlc3RBdXRob3JpdHk6IHNpbGVudFJlcXVlc3QuYXV0aG9yaXR5LFxyXG4gICAgICAgICAgICByZXF1ZXN0QXp1cmVDbG91ZE9wdGlvbnM6IHNpbGVudFJlcXVlc3QuYXp1cmVDbG91ZE9wdGlvbnMsXHJcbiAgICAgICAgICAgIGFjY291bnQ6IHNpbGVudFJlcXVlc3QuYWNjb3VudCxcclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCBzaWxlbnRBdXRoQ2xpZW50ID0gbmV3IFNpbGVudEZsb3dDbGllbnQoY2xpZW50Q29uZmlnLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50KTtcclxuICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiU2lsZW50IGF1dGggY2xpZW50IGNyZWF0ZWRcIik7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBpbnZva2VBc3luYyhzaWxlbnRBdXRoQ2xpZW50LmFjcXVpcmVDYWNoZWRUb2tlbi5iaW5kKHNpbGVudEF1dGhDbGllbnQpLCBQZXJmb3JtYW5jZUV2ZW50cy5TaWxlbnRGbG93Q2xpZW50QWNxdWlyZUNhY2hlZFRva2VuLCB0aGlzLmxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgc2lsZW50UmVxdWVzdC5jb3JyZWxhdGlvbklkKShzaWxlbnRSZXF1ZXN0KTtcclxuICAgICAgICAgICAgY29uc3QgYXV0aFJlc3BvbnNlID0gcmVzcG9uc2VbMF07XHJcbiAgICAgICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQuYWRkRmllbGRzKHtcclxuICAgICAgICAgICAgICAgIGZyb21DYWNoZTogdHJ1ZSxcclxuICAgICAgICAgICAgfSwgc2lsZW50UmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICAgICAgcmV0dXJuIGF1dGhSZXNwb25zZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEJyb3dzZXJBdXRoRXJyb3IgJiZcclxuICAgICAgICAgICAgICAgIGVycm9yLmVycm9yQ29kZSA9PT0gY3J5cHRvS2V5Tm90Rm91bmQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJTaWduaW5nIGtleXBhaXIgZm9yIGJvdW5kIGFjY2VzcyB0b2tlbiBub3QgZm91bmQuIFJlZnJlc2hpbmcgYm91bmQgYWNjZXNzIHRva2VuIGFuZCBnZW5lcmF0aW5nIGEgbmV3IGNyeXB0byBrZXlwYWlyLlwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFQSSB0byBzaWxlbnR5IGNsZWFyIHRoZSBicm93c2VyIGNhY2hlLlxyXG4gICAgICogQHBhcmFtIGxvZ291dFJlcXVlc3RcclxuICAgICAqL1xyXG4gICAgbG9nb3V0KGxvZ291dFJlcXVlc3QpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwibG9nb3V0UmVkaXJlY3QgY2FsbGVkXCIpO1xyXG4gICAgICAgIGNvbnN0IHZhbGlkTG9nb3V0UmVxdWVzdCA9IHRoaXMuaW5pdGlhbGl6ZUxvZ291dFJlcXVlc3QobG9nb3V0UmVxdWVzdCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2xlYXJDYWNoZU9uTG9nb3V0KHZhbGlkTG9nb3V0UmVxdWVzdD8uYWNjb3VudCk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgU2lsZW50Q2FjaGVDbGllbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpbGVudENhY2hlQ2xpZW50Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentIframeClient: function() { return /* binding */ SilentIframeClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../interaction_handler/SilentHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./NativeInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../interaction_handler/InteractionHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentIframeClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        this.apiId = apiId;\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n    /**\r\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\r\n        // Check that we have some SSO data\r\n        if (!request.loginHint &&\r\n            !request.sid &&\r\n            (!request.account || !request.account.username)) {\r\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\r\n        }\r\n        // Check the prompt value\r\n        const inputRequest = { ...request };\r\n        if (inputRequest.prompt) {\r\n            if (inputRequest.prompt !== _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NONE &&\r\n                inputRequest.prompt !== _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NO_SESSION) {\r\n                this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${inputRequest.prompt} with ${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NONE}`);\r\n                inputRequest.prompt = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NONE;\r\n            }\r\n        }\r\n        else {\r\n            inputRequest.prompt = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NONE;\r\n        }\r\n        // Create silent request\r\n        const silentRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(inputRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Silent);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.preconnect)(silentRequest.authority);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n        let authClient;\r\n        try {\r\n            // Initialize the client\r\n            authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, request.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: silentRequest.authority,\r\n                requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: silentRequest.extraQueryParameters,\r\n                account: silentRequest.account,\r\n            });\r\n            return await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.silentTokenHelper.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientTokenHelper, this.logger, this.performanceClient, request.correlationId)(authClient, silentRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            if (!authClient ||\r\n                !(e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError) ||\r\n                e.errorCode !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.INVALID_GRANT_ERROR) {\r\n                throw e;\r\n            }\r\n            this.performanceClient.addFields({\r\n                retryError: e.errorCode,\r\n            }, this.correlationId);\r\n            const retrySilentRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(inputRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Silent);\r\n            return await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.silentTokenHelper.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientTokenHelper, this.logger, this.performanceClient, this.correlationId)(authClient, retrySilentRequest);\r\n        }\r\n    }\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout() {\r\n        // Synchronous so we must reject\r\n        return Promise.reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.silentLogoutUnsupported));\r\n    }\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    async silentTokenHelper(authClient, silentRequest) {\r\n        const correlationId = silentRequest.correlationId;\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientTokenHelper, correlationId);\r\n        // Create auth code request and generate PKCE params\r\n        const authCodeRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.initializeAuthorizationCodeRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, correlationId)(silentRequest);\r\n        // Create authorize request url\r\n        const navigateUrl = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(authClient.getAuthCodeUrl.bind(authClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.GetAuthCodeUrl, this.logger, this.performanceClient, correlationId)({\r\n            ...silentRequest,\r\n            nativeBroker: _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_6__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme),\r\n        });\r\n        // Create silent handler\r\n        const interactionHandler = new _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n        // Get the frame handle for the silent request\r\n        const msalFrame = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(_interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.initiateAuthRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerInitiateAuthRequest, this.logger, this.performanceClient, correlationId)(navigateUrl, this.performanceClient, this.logger, correlationId, this.config.system.navigateFrameWait);\r\n        const responseType = this.config.auth.OIDCOptions.serverResponseType;\r\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n        const responseString = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(_interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.monitorIframeForHash, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerMonitorIframeForHash, this.logger, this.performanceClient, correlationId)(msalFrame, this.config.system.iframeHashTimeout, this.config.system.pollIntervalMilliseconds, this.performanceClient, this.logger, correlationId, responseType);\r\n        const serverParams = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invoke)(_response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_9__.deserializeResponse, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.DeserializeResponse, this.logger, this.performanceClient, this.correlationId)(responseString, responseType, this.logger);\r\n        if (serverParams.accountId) {\r\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n            if (!this.nativeMessageHandler) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.nativeConnectionNotEstablished);\r\n            }\r\n            const nativeInteractionClient = new _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, correlationId);\r\n            const { userRequestState } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ProtocolUtils.parseRequestState(this.browserCrypto, silentRequest.state);\r\n            return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(nativeInteractionClient.acquireToken.bind(nativeInteractionClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.NativeInteractionClientAcquireToken, this.logger, this.performanceClient, correlationId)({\r\n                ...silentRequest,\r\n                state: userRequestState,\r\n                prompt: silentRequest.prompt || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PromptValue.NONE,\r\n            });\r\n        }\r\n        // Handle response from hash string\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(interactionHandler.handleCodeResponse.bind(interactionHandler), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleCodeResponse, this.logger, this.performanceClient, correlationId)(serverParams, silentRequest);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentIframeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentRefreshClient: function() { return /* binding */ SilentRefreshClient; }\n/* harmony export */ });\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../request/RequestHelpers.mjs */ \"./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentRefreshClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    /**\r\n     * Exchanges the refresh token for new tokens\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\r\n        const baseRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(_request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_2__.initializeBaseRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, request.correlationId)(request, this.config, this.performanceClient, this.logger);\r\n        const silentRequest = {\r\n            ...request,\r\n            ...baseRequest,\r\n        };\r\n        if (request.redirectUri) {\r\n            // Make sure any passed redirectUri is converted to an absolute URL - redirectUri is not a required parameter for refresh token redemption so only include if explicitly provided\r\n            silentRequest.redirectUri = this.getRedirectUri(request.redirectUri);\r\n        }\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.acquireTokenSilent_silentFlow);\r\n        const refreshTokenClient = await this.createRefreshTokenClient({\r\n            serverTelemetryManager,\r\n            authorityUrl: silentRequest.authority,\r\n            azureCloudOptions: silentRequest.azureCloudOptions,\r\n            account: silentRequest.account,\r\n        });\r\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(refreshTokenClient.acquireTokenByRefreshToken.bind(refreshTokenClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, this.logger, this.performanceClient, request.correlationId)(silentRequest).catch((e) => {\r\n            e.setCorrelationId(this.correlationId);\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        });\r\n    }\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout() {\r\n        // Synchronous so we must reject\r\n        return Promise.reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.silentLogoutUnsupported));\r\n    }\r\n    /**\r\n     * Creates a Refresh Client with the given authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         authorityUrl?: string;\r\n     *         azureCloudOptions?: AzureCloudOptions;\r\n     *         extraQueryParams?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async createRefreshTokenClient(params) {\r\n        // Create auth module.\r\n        const clientConfig = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getClientConfiguration.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)({\r\n            serverTelemetryManager: params.serverTelemetryManager,\r\n            requestAuthority: params.authorityUrl,\r\n            requestAzureCloudOptions: params.azureCloudOptions,\r\n            requestExtraQueryParameters: params.extraQueryParameters,\r\n            account: params.account,\r\n        });\r\n        return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.RefreshTokenClient(clientConfig, this.performanceClient);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentRefreshClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRSZWZyZXNoQ2xpZW50Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUMrRDtBQUNvQjtBQUMxQztBQUNpQjtBQUNEO0FBQ087O0FBRTdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHFGQUF5QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlFQUFpQjtBQUNwRSxrQ0FBa0MsdUVBQVcsQ0FBQyw4RUFBcUIsRUFBRSx5RUFBaUI7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSw4REFBSztBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsZUFBZSx1RUFBVyx5RUFBeUUseUVBQWlCO0FBQ3BIO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsbUZBQXNCLENBQUMscUZBQXVCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHVFQUFXLHlDQUF5Qyx5RUFBaUI7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxtQkFBbUIsMEVBQWtCO0FBQ3JDO0FBQ0E7O0FBRStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvaW50ZXJhY3Rpb25fY2xpZW50L1NpbGVudFJlZnJlc2hDbGllbnQubWpzP2FhY2EiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBTdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50IH0gZnJvbSAnLi9TdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50Lm1qcyc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50cywgaW52b2tlQXN5bmMsIFJlZnJlc2hUb2tlbkNsaWVudCB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcbmltcG9ydCB7IEFwaUlkIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3NlckF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IGluaXRpYWxpemVCYXNlUmVxdWVzdCB9IGZyb20gJy4uL3JlcXVlc3QvUmVxdWVzdEhlbHBlcnMubWpzJztcbmltcG9ydCB7IHNpbGVudExvZ291dFVuc3VwcG9ydGVkIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBTaWxlbnRSZWZyZXNoQ2xpZW50IGV4dGVuZHMgU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudCB7XHJcbiAgICAvKipcclxuICAgICAqIEV4Y2hhbmdlcyB0aGUgcmVmcmVzaCB0b2tlbiBmb3IgbmV3IHRva2Vuc1xyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqL1xyXG4gICAgYXN5bmMgYWNxdWlyZVRva2VuKHJlcXVlc3QpIHtcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuU2lsZW50UmVmcmVzaENsaWVudEFjcXVpcmVUb2tlbiwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBjb25zdCBiYXNlUmVxdWVzdCA9IGF3YWl0IGludm9rZUFzeW5jKGluaXRpYWxpemVCYXNlUmVxdWVzdCwgUGVyZm9ybWFuY2VFdmVudHMuSW5pdGlhbGl6ZUJhc2VSZXF1ZXN0LCB0aGlzLmxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKShyZXF1ZXN0LCB0aGlzLmNvbmZpZywgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgdGhpcy5sb2dnZXIpO1xyXG4gICAgICAgIGNvbnN0IHNpbGVudFJlcXVlc3QgPSB7XHJcbiAgICAgICAgICAgIC4uLnJlcXVlc3QsXHJcbiAgICAgICAgICAgIC4uLmJhc2VSZXF1ZXN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKHJlcXVlc3QucmVkaXJlY3RVcmkpIHtcclxuICAgICAgICAgICAgLy8gTWFrZSBzdXJlIGFueSBwYXNzZWQgcmVkaXJlY3RVcmkgaXMgY29udmVydGVkIHRvIGFuIGFic29sdXRlIFVSTCAtIHJlZGlyZWN0VXJpIGlzIG5vdCBhIHJlcXVpcmVkIHBhcmFtZXRlciBmb3IgcmVmcmVzaCB0b2tlbiByZWRlbXB0aW9uIHNvIG9ubHkgaW5jbHVkZSBpZiBleHBsaWNpdGx5IHByb3ZpZGVkXHJcbiAgICAgICAgICAgIHNpbGVudFJlcXVlc3QucmVkaXJlY3RVcmkgPSB0aGlzLmdldFJlZGlyZWN0VXJpKHJlcXVlc3QucmVkaXJlY3RVcmkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyID0gdGhpcy5pbml0aWFsaXplU2VydmVyVGVsZW1ldHJ5TWFuYWdlcihBcGlJZC5hY3F1aXJlVG9rZW5TaWxlbnRfc2lsZW50Rmxvdyk7XHJcbiAgICAgICAgY29uc3QgcmVmcmVzaFRva2VuQ2xpZW50ID0gYXdhaXQgdGhpcy5jcmVhdGVSZWZyZXNoVG9rZW5DbGllbnQoe1xyXG4gICAgICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLFxyXG4gICAgICAgICAgICBhdXRob3JpdHlVcmw6IHNpbGVudFJlcXVlc3QuYXV0aG9yaXR5LFxyXG4gICAgICAgICAgICBhenVyZUNsb3VkT3B0aW9uczogc2lsZW50UmVxdWVzdC5henVyZUNsb3VkT3B0aW9ucyxcclxuICAgICAgICAgICAgYWNjb3VudDogc2lsZW50UmVxdWVzdC5hY2NvdW50LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIFNlbmQgcmVxdWVzdCB0byByZW5ldyB0b2tlbi4gQXV0aCBtb2R1bGUgd2lsbCB0aHJvdyBlcnJvcnMgaWYgdG9rZW4gY2Fubm90IGJlIHJlbmV3ZWQuXHJcbiAgICAgICAgcmV0dXJuIGludm9rZUFzeW5jKHJlZnJlc2hUb2tlbkNsaWVudC5hY3F1aXJlVG9rZW5CeVJlZnJlc2hUb2tlbi5iaW5kKHJlZnJlc2hUb2tlbkNsaWVudCksIFBlcmZvcm1hbmNlRXZlbnRzLlJlZnJlc2hUb2tlbkNsaWVudEFjcXVpcmVUb2tlbkJ5UmVmcmVzaFRva2VuLCB0aGlzLmxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKShzaWxlbnRSZXF1ZXN0KS5jYXRjaCgoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLnNldENvcnJlbGF0aW9uSWQodGhpcy5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICAgICAgc2VydmVyVGVsZW1ldHJ5TWFuYWdlci5jYWNoZUZhaWxlZFJlcXVlc3QoZSk7XHJcbiAgICAgICAgICAgIHRocm93IGU7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEN1cnJlbnRseSBVbnN1cHBvcnRlZFxyXG4gICAgICovXHJcbiAgICBsb2dvdXQoKSB7XHJcbiAgICAgICAgLy8gU3luY2hyb25vdXMgc28gd2UgbXVzdCByZWplY3RcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoY3JlYXRlQnJvd3NlckF1dGhFcnJvcihzaWxlbnRMb2dvdXRVbnN1cHBvcnRlZCkpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgUmVmcmVzaCBDbGllbnQgd2l0aCB0aGUgZ2l2ZW4gYXV0aG9yaXR5LCBvciB0aGUgZGVmYXVsdCBhdXRob3JpdHkuXHJcbiAgICAgKiBAcGFyYW0gcGFyYW1zIHtcclxuICAgICAqICAgICAgICAgc2VydmVyVGVsZW1ldHJ5TWFuYWdlcjogU2VydmVyVGVsZW1ldHJ5TWFuYWdlcjtcclxuICAgICAqICAgICAgICAgYXV0aG9yaXR5VXJsPzogc3RyaW5nO1xyXG4gICAgICogICAgICAgICBhenVyZUNsb3VkT3B0aW9ucz86IEF6dXJlQ2xvdWRPcHRpb25zO1xyXG4gICAgICogICAgICAgICBleHRyYVF1ZXJ5UGFyYW1zPzogU3RyaW5nRGljdDtcclxuICAgICAqICAgICAgICAgYWNjb3VudD86IEFjY291bnRJbmZvO1xyXG4gICAgICogICAgICAgIH1cclxuICAgICAqL1xyXG4gICAgYXN5bmMgY3JlYXRlUmVmcmVzaFRva2VuQ2xpZW50KHBhcmFtcykge1xyXG4gICAgICAgIC8vIENyZWF0ZSBhdXRoIG1vZHVsZS5cclxuICAgICAgICBjb25zdCBjbGllbnRDb25maWcgPSBhd2FpdCBpbnZva2VBc3luYyh0aGlzLmdldENsaWVudENvbmZpZ3VyYXRpb24uYmluZCh0aGlzKSwgUGVyZm9ybWFuY2VFdmVudHMuU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudEdldENsaWVudENvbmZpZ3VyYXRpb24sIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCB0aGlzLmNvcnJlbGF0aW9uSWQpKHtcclxuICAgICAgICAgICAgc2VydmVyVGVsZW1ldHJ5TWFuYWdlcjogcGFyYW1zLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIsXHJcbiAgICAgICAgICAgIHJlcXVlc3RBdXRob3JpdHk6IHBhcmFtcy5hdXRob3JpdHlVcmwsXHJcbiAgICAgICAgICAgIHJlcXVlc3RBenVyZUNsb3VkT3B0aW9uczogcGFyYW1zLmF6dXJlQ2xvdWRPcHRpb25zLFxyXG4gICAgICAgICAgICByZXF1ZXN0RXh0cmFRdWVyeVBhcmFtZXRlcnM6IHBhcmFtcy5leHRyYVF1ZXJ5UGFyYW1ldGVycyxcclxuICAgICAgICAgICAgYWNjb3VudDogcGFyYW1zLmFjY291bnQsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBSZWZyZXNoVG9rZW5DbGllbnQoY2xpZW50Q29uZmlnLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50KTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBTaWxlbnRSZWZyZXNoQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TaWxlbnRSZWZyZXNoQ2xpZW50Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardInteractionClient: function() { return /* binding */ StandardInteractionClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseInteractionClient.mjs */ \"./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _crypto_PkceGenerator_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../crypto/PkceGenerator.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../request/RequestHelpers.mjs */ \"./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\r\n */\r\nclass StandardInteractionClient extends _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseInteractionClient {\r\n    /**\r\n     * Generates an auth code request tied to the url request.\r\n     * @param request\r\n     */\r\n    async initializeAuthorizationCodeRequest(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.correlationId);\r\n        const generatedPkceParams = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(_crypto_PkceGenerator_mjs__WEBPACK_IMPORTED_MODULE_2__.generatePkceCodes, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.GeneratePkceCodes, this.logger, this.performanceClient, this.correlationId)(this.performanceClient, this.logger, this.correlationId);\r\n        const authCodeRequest = {\r\n            ...request,\r\n            redirectUri: request.redirectUri,\r\n            code: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\r\n            codeVerifier: generatedPkceParams.verifier,\r\n        };\r\n        request.codeChallenge = generatedPkceParams.challenge;\r\n        request.codeChallengeMethod = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.Constants.S256_CODE_CHALLENGE_METHOD;\r\n        return authCodeRequest;\r\n    }\r\n    /**\r\n     * Initializer for the logout request.\r\n     * @param logoutRequest\r\n     */\r\n    initializeLogoutRequest(logoutRequest) {\r\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\r\n        const validLogoutRequest = {\r\n            correlationId: this.correlationId || (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_3__.createNewGuid)(),\r\n            ...logoutRequest,\r\n        };\r\n        /**\r\n         * Set logout_hint to be login_hint from ID Token Claims if present\r\n         * and logoutHint attribute wasn't manually set in logout request\r\n         */\r\n        if (logoutRequest) {\r\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\r\n            if (!logoutRequest.logoutHint) {\r\n                if (logoutRequest.account) {\r\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(logoutRequest.account);\r\n                    if (logoutHint) {\r\n                        this.logger.verbose(\"Setting logoutHint to login_hint ID Token Claim value for the account provided\");\r\n                        validLogoutRequest.logoutHint = logoutHint;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.verbose(\"logoutHint has already been set in logoutRequest\");\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"logoutHint will not be set since no logout request was configured\");\r\n        }\r\n        /*\r\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\r\n         * Otherwise, use passed uri, config, or current page.\r\n         */\r\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\r\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getCurrentUri)());\r\n            }\r\n            else if (this.config.auth.postLogoutRedirectUri === null) {\r\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\r\n            }\r\n            else if (this.config.auth.postLogoutRedirectUri) {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getCurrentUri)());\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.UrlString.getAbsoluteUrl((0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getCurrentUri)(), (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getCurrentUri)());\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\r\n        }\r\n        return validLogoutRequest;\r\n    }\r\n    /**\r\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\r\n     * logout_hint in end session request.\r\n     * @param account\r\n     */\r\n    getLogoutHintFromIdTokenClaims(account) {\r\n        const idTokenClaims = account.idTokenClaims;\r\n        if (idTokenClaims) {\r\n            if (idTokenClaims.login_hint) {\r\n                return idTokenClaims.login_hint;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\");\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Creates an Authorization Code Client with the given authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         authorityUrl?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async createAuthCodeClient(params) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.correlationId);\r\n        // Create auth module.\r\n        const clientConfig = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getClientConfiguration.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)(params);\r\n        return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthorizationCodeClient(clientConfig, this.performanceClient);\r\n    }\r\n    /**\r\n     * Creates a Client Configuration object with the given request authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         requestAuthority?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: boolean;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async getClientConfiguration(params) {\r\n        const { serverTelemetryManager, requestAuthority, requestAzureCloudOptions, requestExtraQueryParameters, account, } = params;\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\r\n        const discoveredAuthority = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getDiscoveredAuthority.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.logger, this.performanceClient, this.correlationId)({\r\n            requestAuthority,\r\n            requestAzureCloudOptions,\r\n            requestExtraQueryParameters,\r\n            account,\r\n        });\r\n        const logger = this.config.system.loggerOptions;\r\n        return {\r\n            authOptions: {\r\n                clientId: this.config.auth.clientId,\r\n                authority: discoveredAuthority,\r\n                clientCapabilities: this.config.auth.clientCapabilities,\r\n                redirectUri: this.config.auth.redirectUri,\r\n            },\r\n            systemOptions: {\r\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\r\n                preventCorsPreflight: true,\r\n            },\r\n            loggerOptions: {\r\n                loggerCallback: logger.loggerCallback,\r\n                piiLoggingEnabled: logger.piiLoggingEnabled,\r\n                logLevel: logger.logLevel,\r\n                correlationId: this.correlationId,\r\n            },\r\n            cacheOptions: {\r\n                claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled,\r\n            },\r\n            cryptoInterface: this.browserCrypto,\r\n            networkInterface: this.networkClient,\r\n            storageInterface: this.browserStorage,\r\n            serverTelemetryManager: serverTelemetryManager,\r\n            libraryInfo: {\r\n                sku: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserConstants.MSAL_SKU,\r\n                version: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_6__.version,\r\n                cpu: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\r\n                os: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\r\n            },\r\n            telemetry: this.config.telemetry,\r\n        };\r\n    }\r\n    /**\r\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n     * @param request\r\n     * @param interactionType\r\n     */\r\n    async initializeAuthorizationRequest(request, interactionType) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.correlationId);\r\n        const redirectUri = this.getRedirectUri(request.redirectUri);\r\n        const browserState = {\r\n            interactionType: interactionType,\r\n        };\r\n        const state = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ProtocolUtils.setRequestState(this.browserCrypto, (request && request.state) || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING, browserState);\r\n        const baseRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(_request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_7__.initializeBaseRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, this.correlationId)({ ...request, correlationId: this.correlationId }, this.config, this.performanceClient, this.logger);\r\n        const validatedRequest = {\r\n            ...baseRequest,\r\n            redirectUri: redirectUri,\r\n            state: state,\r\n            nonce: request.nonce || (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_3__.createNewGuid)(),\r\n            responseMode: this.config.auth.OIDCOptions\r\n                .serverResponseType,\r\n        };\r\n        // Skip active account lookup if either login hint or session id is set\r\n        if (request.loginHint || request.sid) {\r\n            return validatedRequest;\r\n        }\r\n        const account = request.account || this.browserStorage.getActiveAccount();\r\n        if (account) {\r\n            this.logger.verbose(\"Setting validated request account\", this.correlationId);\r\n            this.logger.verbosePii(`Setting validated request account: ${account.homeAccountId}`, this.correlationId);\r\n            validatedRequest.account = account;\r\n        }\r\n        // Check for ADAL/MSAL v1 SSO\r\n        if (!validatedRequest.loginHint && !account) {\r\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\r\n            if (legacyLoginHint) {\r\n                validatedRequest.loginHint = legacyLoginHint;\r\n            }\r\n        }\r\n        return validatedRequest;\r\n    }\r\n}\n\n\n//# sourceMappingURL=StandardInteractionClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractionHandler: function() { return /* binding */ InteractionHandler; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nclass InteractionHandler {\r\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n        this.authCodeRequest = authCodeRequest;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    async handleCodeResponse(response, request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.HandleCodeResponse, request.correlationId);\r\n        let authCodeResponse;\r\n        try {\r\n            authCodeResponse = this.authModule.handleFragmentResponse(response, request.state);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ServerError &&\r\n                e.subError === _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.userCancelled) {\r\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.userCancelled);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invokeAsync)(this.handleCodeResponseFromServer.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, request.correlationId)(authCodeResponse, request);\r\n    }\r\n    /**\r\n     * Process auth code response from AAD\r\n     * @param authCodeResponse\r\n     * @param state\r\n     * @param authority\r\n     * @param networkModule\r\n     * @returns\r\n     */\r\n    async handleCodeResponseFromServer(authCodeResponse, request, validateNonce = true) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.HandleCodeResponseFromServer, request.correlationId);\r\n        this.logger.trace(\"InteractionHandler.handleCodeResponseFromServer called\");\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invokeAsync)(this.authModule.updateAuthority.bind(this.authModule), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.UpdateTokenEndpointAuthority, this.logger, this.performanceClient, request.correlationId)(authCodeResponse.cloud_instance_host_name, request.correlationId);\r\n        }\r\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\r\n        if (validateNonce) {\r\n            // TODO: Assigning \"response nonce\" to \"request nonce\" is confusing. Refactor the function doing validation to accept request nonce directly\r\n            authCodeResponse.nonce = request.nonce || undefined;\r\n        }\r\n        authCodeResponse.state = request.state;\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        }\r\n        else {\r\n            const ccsCred = this.createCcsCredentials(request);\r\n            if (ccsCred) {\r\n                this.authCodeRequest.ccsCredential = ccsCred;\r\n            }\r\n        }\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = (await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invokeAsync)(this.authModule.acquireToken.bind(this.authModule), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(this.authCodeRequest, authCodeResponse));\r\n        return tokenResponse;\r\n    }\r\n    /**\r\n     * Build ccs creds if available\r\n     */\r\n    createCcsCredentials(request) {\r\n        if (request.account) {\r\n            return {\r\n                credential: request.account.homeAccountId,\r\n                type: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n            };\r\n        }\r\n        else if (request.loginHint) {\r\n            return {\r\n                credential: request.loginHint,\r\n                type: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CcsCredentialType.UPN,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=InteractionHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2hhbmRsZXIvSW50ZXJhY3Rpb25IYW5kbGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUMrRjtBQUNyQztBQUNKOztBQUVuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlFQUFpQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG1FQUFXO0FBQ3hDLCtCQUErQiwyRUFBYTtBQUM1QztBQUNBLHNCQUFzQixtRkFBc0IsQ0FBQywyRUFBYTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx1RUFBVywrQ0FBK0MseUVBQWlCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlFQUFpQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVFQUFXLHdEQUF3RCx5RUFBaUI7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHVFQUFXLHFEQUFxRCx5RUFBaUI7QUFDdEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlFQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlFQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2hhbmRsZXIvSW50ZXJhY3Rpb25IYW5kbGVyLm1qcz9lZTY1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgUGVyZm9ybWFuY2VFdmVudHMsIFNlcnZlckVycm9yLCBpbnZva2VBc3luYywgQ2NzQ3JlZGVudGlhbFR5cGUgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgdXNlckNhbmNlbGxlZCB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEFic3RyYWN0IGNsYXNzIHdoaWNoIGRlZmluZXMgb3BlcmF0aW9ucyBmb3IgYSBicm93c2VyIGludGVyYWN0aW9uIGhhbmRsaW5nIGNsYXNzLlxyXG4gKi9cclxuY2xhc3MgSW50ZXJhY3Rpb25IYW5kbGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKGF1dGhDb2RlTW9kdWxlLCBzdG9yYWdlSW1wbCwgYXV0aENvZGVSZXF1ZXN0LCBsb2dnZXIsIHBlcmZvcm1hbmNlQ2xpZW50KSB7XHJcbiAgICAgICAgdGhpcy5hdXRoTW9kdWxlID0gYXV0aENvZGVNb2R1bGU7XHJcbiAgICAgICAgdGhpcy5icm93c2VyU3RvcmFnZSA9IHN0b3JhZ2VJbXBsO1xyXG4gICAgICAgIHRoaXMuYXV0aENvZGVSZXF1ZXN0ID0gYXV0aENvZGVSZXF1ZXN0O1xyXG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xyXG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQgPSBwZXJmb3JtYW5jZUNsaWVudDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRnVuY3Rpb24gdG8gaGFuZGxlIHJlc3BvbnNlIHBhcmFtZXRlcnMgZnJvbSBoYXNoLlxyXG4gICAgICogQHBhcmFtIGxvY2F0aW9uSGFzaFxyXG4gICAgICovXHJcbiAgICBhc3luYyBoYW5kbGVDb2RlUmVzcG9uc2UocmVzcG9uc2UsIHJlcXVlc3QpIHtcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuSGFuZGxlQ29kZVJlc3BvbnNlLCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIGxldCBhdXRoQ29kZVJlc3BvbnNlO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGF1dGhDb2RlUmVzcG9uc2UgPSB0aGlzLmF1dGhNb2R1bGUuaGFuZGxlRnJhZ21lbnRSZXNwb25zZShyZXNwb25zZSwgcmVxdWVzdC5zdGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgU2VydmVyRXJyb3IgJiZcclxuICAgICAgICAgICAgICAgIGUuc3ViRXJyb3IgPT09IHVzZXJDYW5jZWxsZWQpIHtcclxuICAgICAgICAgICAgICAgIC8vIFRyYW5zbGF0ZSBzZXJ2ZXIgZXJyb3IgY2F1c2VkIGJ5IHVzZXIgY2xvc2luZyBuYXRpdmUgcHJvbXB0IHRvIGNvcnJlc3BvbmRpbmcgZmlyc3QgY2xhc3MgTVNBTCBlcnJvclxyXG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcih1c2VyQ2FuY2VsbGVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRocm93IGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGludm9rZUFzeW5jKHRoaXMuaGFuZGxlQ29kZVJlc3BvbnNlRnJvbVNlcnZlci5iaW5kKHRoaXMpLCBQZXJmb3JtYW5jZUV2ZW50cy5IYW5kbGVDb2RlUmVzcG9uc2VGcm9tU2VydmVyLCB0aGlzLmxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKShhdXRoQ29kZVJlc3BvbnNlLCByZXF1ZXN0KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUHJvY2VzcyBhdXRoIGNvZGUgcmVzcG9uc2UgZnJvbSBBQURcclxuICAgICAqIEBwYXJhbSBhdXRoQ29kZVJlc3BvbnNlXHJcbiAgICAgKiBAcGFyYW0gc3RhdGVcclxuICAgICAqIEBwYXJhbSBhdXRob3JpdHlcclxuICAgICAqIEBwYXJhbSBuZXR3b3JrTW9kdWxlXHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBhc3luYyBoYW5kbGVDb2RlUmVzcG9uc2VGcm9tU2VydmVyKGF1dGhDb2RlUmVzcG9uc2UsIHJlcXVlc3QsIHZhbGlkYXRlTm9uY2UgPSB0cnVlKSB7XHJcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLkhhbmRsZUNvZGVSZXNwb25zZUZyb21TZXJ2ZXIsIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoXCJJbnRlcmFjdGlvbkhhbmRsZXIuaGFuZGxlQ29kZVJlc3BvbnNlRnJvbVNlcnZlciBjYWxsZWRcIik7XHJcbiAgICAgICAgLy8gQXNzaWduIGNvZGUgdG8gcmVxdWVzdFxyXG4gICAgICAgIHRoaXMuYXV0aENvZGVSZXF1ZXN0LmNvZGUgPSBhdXRoQ29kZVJlc3BvbnNlLmNvZGU7XHJcbiAgICAgICAgLy8gQ2hlY2sgZm9yIG5ldyBjbG91ZCBpbnN0YW5jZVxyXG4gICAgICAgIGlmIChhdXRoQ29kZVJlc3BvbnNlLmNsb3VkX2luc3RhbmNlX2hvc3RfbmFtZSkge1xyXG4gICAgICAgICAgICBhd2FpdCBpbnZva2VBc3luYyh0aGlzLmF1dGhNb2R1bGUudXBkYXRlQXV0aG9yaXR5LmJpbmQodGhpcy5hdXRoTW9kdWxlKSwgUGVyZm9ybWFuY2VFdmVudHMuVXBkYXRlVG9rZW5FbmRwb2ludEF1dGhvcml0eSwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHJlcXVlc3QuY29ycmVsYXRpb25JZCkoYXV0aENvZGVSZXNwb25zZS5jbG91ZF9pbnN0YW5jZV9ob3N0X25hbWUsIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIE5vbmNlIHZhbGlkYXRpb24gbm90IG5lZWRlZCB3aGVuIHJlZGlyZWN0IG5vdCBpbnZvbHZlZCAoZS5nLiBoeWJyaWQgc3BhLCByZW5ld2luZyB0b2tlbiB2aWEgcnQpXHJcbiAgICAgICAgaWYgKHZhbGlkYXRlTm9uY2UpIHtcclxuICAgICAgICAgICAgLy8gVE9ETzogQXNzaWduaW5nIFwicmVzcG9uc2Ugbm9uY2VcIiB0byBcInJlcXVlc3Qgbm9uY2VcIiBpcyBjb25mdXNpbmcuIFJlZmFjdG9yIHRoZSBmdW5jdGlvbiBkb2luZyB2YWxpZGF0aW9uIHRvIGFjY2VwdCByZXF1ZXN0IG5vbmNlIGRpcmVjdGx5XHJcbiAgICAgICAgICAgIGF1dGhDb2RlUmVzcG9uc2Uubm9uY2UgPSByZXF1ZXN0Lm5vbmNlIHx8IHVuZGVmaW5lZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgYXV0aENvZGVSZXNwb25zZS5zdGF0ZSA9IHJlcXVlc3Quc3RhdGU7XHJcbiAgICAgICAgLy8gQWRkIENDUyBwYXJhbWV0ZXJzIGlmIGF2YWlsYWJsZVxyXG4gICAgICAgIGlmIChhdXRoQ29kZVJlc3BvbnNlLmNsaWVudF9pbmZvKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXV0aENvZGVSZXF1ZXN0LmNsaWVudEluZm8gPSBhdXRoQ29kZVJlc3BvbnNlLmNsaWVudF9pbmZvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3QgY2NzQ3JlZCA9IHRoaXMuY3JlYXRlQ2NzQ3JlZGVudGlhbHMocmVxdWVzdCk7XHJcbiAgICAgICAgICAgIGlmIChjY3NDcmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmF1dGhDb2RlUmVxdWVzdC5jY3NDcmVkZW50aWFsID0gY2NzQ3JlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBBY3F1aXJlIHRva2VuIHdpdGggcmV0cmlldmVkIGNvZGUuXHJcbiAgICAgICAgY29uc3QgdG9rZW5SZXNwb25zZSA9IChhd2FpdCBpbnZva2VBc3luYyh0aGlzLmF1dGhNb2R1bGUuYWNxdWlyZVRva2VuLmJpbmQodGhpcy5hdXRoTW9kdWxlKSwgUGVyZm9ybWFuY2VFdmVudHMuQXV0aENsaWVudEFjcXVpcmVUb2tlbiwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHJlcXVlc3QuY29ycmVsYXRpb25JZCkodGhpcy5hdXRoQ29kZVJlcXVlc3QsIGF1dGhDb2RlUmVzcG9uc2UpKTtcclxuICAgICAgICByZXR1cm4gdG9rZW5SZXNwb25zZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQnVpbGQgY2NzIGNyZWRzIGlmIGF2YWlsYWJsZVxyXG4gICAgICovXHJcbiAgICBjcmVhdGVDY3NDcmVkZW50aWFscyhyZXF1ZXN0KSB7XHJcbiAgICAgICAgaWYgKHJlcXVlc3QuYWNjb3VudCkge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgY3JlZGVudGlhbDogcmVxdWVzdC5hY2NvdW50LmhvbWVBY2NvdW50SWQsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBDY3NDcmVkZW50aWFsVHlwZS5IT01FX0FDQ09VTlRfSUQsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHJlcXVlc3QubG9naW5IaW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBjcmVkZW50aWFsOiByZXF1ZXN0LmxvZ2luSGludCxcclxuICAgICAgICAgICAgICAgIHR5cGU6IENjc0NyZWRlbnRpYWxUeXBlLlVQTixcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgSW50ZXJhY3Rpb25IYW5kbGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbnRlcmFjdGlvbkhhbmRsZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectHandler: function() { return /* binding */ RedirectHandler; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass RedirectHandler {\r\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n        this.authCodeRequest = authCodeRequest;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    async initiateAuthRequest(requestUrl, params) {\r\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\r\n        // Navigate if valid URL\r\n        if (requestUrl) {\r\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n            if (params.redirectStartPage) {\r\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\r\n                this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\r\n            }\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\r\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest);\r\n            this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\r\n            const navigationOptions = {\r\n                apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.ApiId.acquireTokenRedirect,\r\n                timeout: params.redirectTimeout,\r\n                noHistory: false,\r\n            };\r\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\r\n            if (typeof params.onRedirectNavigate === \"function\") {\r\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\r\n                const navigate = params.onRedirectNavigate(requestUrl);\r\n                // Returning false from onRedirectNavigate will stop navigation\r\n                if (navigate !== false) {\r\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\r\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\r\n                    return;\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                // Navigate window to request URL\r\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\r\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.emptyNavigateUri);\r\n        }\r\n    }\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    async handleCodeResponse(response, state) {\r\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n        // Handle code response.\r\n        const stateKey = this.browserStorage.generateStateKey(state);\r\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\r\n        if (!requestState) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientAuthErrorCodes.stateNotFound, \"Cached State\");\r\n        }\r\n        let authCodeResponse;\r\n        try {\r\n            authCodeResponse = this.authModule.handleFragmentResponse(response, requestState);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ServerError &&\r\n                e.subError === _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.userCancelled) {\r\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.userCancelled);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        // Get cached items\r\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.authModule.updateAuthority.bind(this.authModule), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.PerformanceEvents.UpdateTokenEndpointAuthority, this.logger, this.performanceClient, this.authCodeRequest.correlationId)(authCodeResponse.cloud_instance_host_name, this.authCodeRequest.correlationId);\r\n        }\r\n        authCodeResponse.nonce = cachedNonce || undefined;\r\n        authCodeResponse.state = requestState;\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        }\r\n        else {\r\n            const cachedCcsCred = this.checkCcsCredentials();\r\n            if (cachedCcsCred) {\r\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\r\n            }\r\n        }\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = (await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse));\r\n        this.browserStorage.cleanRequestByState(state);\r\n        return tokenResponse;\r\n    }\r\n    /**\r\n     * Looks up ccs creds in the cache\r\n     */\r\n    checkCcsCredentials() {\r\n        // Look up ccs credential in temp cache\r\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.TemporaryCacheKeys.CCS_CREDENTIAL, true);\r\n        if (cachedCcsCred) {\r\n            try {\r\n                return JSON.parse(cachedCcsCred);\r\n            }\r\n            catch (e) {\r\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\r\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=RedirectHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2hhbmRsZXIvUmVkaXJlY3RIYW5kbGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDeUg7QUFDL0Q7QUFDRztBQUNXOztBQUVyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELDJFQUFrQjtBQUN4RTtBQUNBO0FBQ0Esa0RBQWtELDJFQUFrQjtBQUNwRTtBQUNBLHFGQUFxRixXQUFXO0FBQ2hHO0FBQ0EsdUJBQXVCLDhEQUFLO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1GQUFzQixDQUFDLDhFQUFnQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLDRFQUFvQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsbUVBQVc7QUFDeEMsK0JBQStCLDJFQUFhO0FBQzVDO0FBQ0Esc0JBQXNCLG1GQUFzQixDQUFDLDJFQUFhO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1RUFBVyx3REFBd0QseUVBQWlCO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRUFBb0UsMkVBQWtCO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlGQUF5RixjQUFjO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvaW50ZXJhY3Rpb25faGFuZGxlci9SZWRpcmVjdEhhbmRsZXIubWpzPzgwMDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IsIENsaWVudEF1dGhFcnJvckNvZGVzLCBTZXJ2ZXJFcnJvciwgaW52b2tlQXN5bmMsIFBlcmZvcm1hbmNlRXZlbnRzIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3NlckF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IFRlbXBvcmFyeUNhY2hlS2V5cywgQXBpSWQgfSBmcm9tICcuLi91dGlscy9Ccm93c2VyQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBlbXB0eU5hdmlnYXRlVXJpLCB1c2VyQ2FuY2VsbGVkIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBSZWRpcmVjdEhhbmRsZXIge1xyXG4gICAgY29uc3RydWN0b3IoYXV0aENvZGVNb2R1bGUsIHN0b3JhZ2VJbXBsLCBhdXRoQ29kZVJlcXVlc3QsIGxvZ2dlciwgcGVyZm9ybWFuY2VDbGllbnQpIHtcclxuICAgICAgICB0aGlzLmF1dGhNb2R1bGUgPSBhdXRoQ29kZU1vZHVsZTtcclxuICAgICAgICB0aGlzLmJyb3dzZXJTdG9yYWdlID0gc3RvcmFnZUltcGw7XHJcbiAgICAgICAgdGhpcy5hdXRoQ29kZVJlcXVlc3QgPSBhdXRoQ29kZVJlcXVlc3Q7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIgPSBsb2dnZXI7XHJcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCA9IHBlcmZvcm1hbmNlQ2xpZW50O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWRpcmVjdHMgd2luZG93IHRvIGdpdmVuIFVSTC5cclxuICAgICAqIEBwYXJhbSB1cmxOYXZpZ2F0ZVxyXG4gICAgICovXHJcbiAgICBhc3luYyBpbml0aWF0ZUF1dGhSZXF1ZXN0KHJlcXVlc3RVcmwsIHBhcmFtcykge1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJSZWRpcmVjdEhhbmRsZXIuaW5pdGlhdGVBdXRoUmVxdWVzdCBjYWxsZWRcIik7XHJcbiAgICAgICAgLy8gTmF2aWdhdGUgaWYgdmFsaWQgVVJMXHJcbiAgICAgICAgaWYgKHJlcXVlc3RVcmwpIHtcclxuICAgICAgICAgICAgLy8gQ2FjaGUgc3RhcnQgcGFnZSwgcmV0dXJucyB0byB0aGlzIHBhZ2UgYWZ0ZXIgcmVkaXJlY3RVcmkgaWYgbmF2aWdhdGVUb0xvZ2luUmVxdWVzdFVybCBpcyB0cnVlXHJcbiAgICAgICAgICAgIGlmIChwYXJhbXMucmVkaXJlY3RTdGFydFBhZ2UpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJSZWRpcmVjdEhhbmRsZXIuaW5pdGlhdGVBdXRoUmVxdWVzdDogcmVkaXJlY3RTdGFydFBhZ2Ugc2V0LCBjYWNoaW5nIHN0YXJ0IHBhZ2VcIik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJyb3dzZXJTdG9yYWdlLnNldFRlbXBvcmFyeUNhY2hlKFRlbXBvcmFyeUNhY2hlS2V5cy5PUklHSU5fVVJJLCBwYXJhbXMucmVkaXJlY3RTdGFydFBhZ2UsIHRydWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIFNldCBpbnRlcmFjdGlvbiBzdGF0dXMgaW4gdGhlIGxpYnJhcnkuXHJcbiAgICAgICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2Uuc2V0VGVtcG9yYXJ5Q2FjaGUoVGVtcG9yYXJ5Q2FjaGVLZXlzLkNPUlJFTEFUSU9OX0lELCB0aGlzLmF1dGhDb2RlUmVxdWVzdC5jb3JyZWxhdGlvbklkLCB0cnVlKTtcclxuICAgICAgICAgICAgdGhpcy5icm93c2VyU3RvcmFnZS5jYWNoZUNvZGVSZXF1ZXN0KHRoaXMuYXV0aENvZGVSZXF1ZXN0KTtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mb1BpaShgUmVkaXJlY3RIYW5kbGVyLmluaXRpYXRlQXV0aFJlcXVlc3Q6IE5hdmlnYXRlIHRvOiAke3JlcXVlc3RVcmx9YCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG5hdmlnYXRpb25PcHRpb25zID0ge1xyXG4gICAgICAgICAgICAgICAgYXBpSWQ6IEFwaUlkLmFjcXVpcmVUb2tlblJlZGlyZWN0LFxyXG4gICAgICAgICAgICAgICAgdGltZW91dDogcGFyYW1zLnJlZGlyZWN0VGltZW91dCxcclxuICAgICAgICAgICAgICAgIG5vSGlzdG9yeTogZmFsc2UsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIC8vIElmIG9uUmVkaXJlY3ROYXZpZ2F0ZSBpcyBpbXBsZW1lbnRlZCwgaW52b2tlIGl0IGFuZCBwcm92aWRlIHJlcXVlc3RVcmxcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBwYXJhbXMub25SZWRpcmVjdE5hdmlnYXRlID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJSZWRpcmVjdEhhbmRsZXIuaW5pdGlhdGVBdXRoUmVxdWVzdDogSW52b2tpbmcgb25SZWRpcmVjdE5hdmlnYXRlIGNhbGxiYWNrXCIpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbmF2aWdhdGUgPSBwYXJhbXMub25SZWRpcmVjdE5hdmlnYXRlKHJlcXVlc3RVcmwpO1xyXG4gICAgICAgICAgICAgICAgLy8gUmV0dXJuaW5nIGZhbHNlIGZyb20gb25SZWRpcmVjdE5hdmlnYXRlIHdpbGwgc3RvcCBuYXZpZ2F0aW9uXHJcbiAgICAgICAgICAgICAgICBpZiAobmF2aWdhdGUgIT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIlJlZGlyZWN0SGFuZGxlci5pbml0aWF0ZUF1dGhSZXF1ZXN0OiBvblJlZGlyZWN0TmF2aWdhdGUgZGlkIG5vdCByZXR1cm4gZmFsc2UsIG5hdmlnYXRpbmdcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgcGFyYW1zLm5hdmlnYXRpb25DbGllbnQubmF2aWdhdGVFeHRlcm5hbChyZXF1ZXN0VXJsLCBuYXZpZ2F0aW9uT3B0aW9ucyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIlJlZGlyZWN0SGFuZGxlci5pbml0aWF0ZUF1dGhSZXF1ZXN0OiBvblJlZGlyZWN0TmF2aWdhdGUgcmV0dXJuZWQgZmFsc2UsIHN0b3BwaW5nIG5hdmlnYXRpb25cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gTmF2aWdhdGUgd2luZG93IHRvIHJlcXVlc3QgVVJMXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiUmVkaXJlY3RIYW5kbGVyLmluaXRpYXRlQXV0aFJlcXVlc3Q6IE5hdmlnYXRpbmcgd2luZG93IHRvIG5hdmlnYXRlIHVybFwiKTtcclxuICAgICAgICAgICAgICAgIGF3YWl0IHBhcmFtcy5uYXZpZ2F0aW9uQ2xpZW50Lm5hdmlnYXRlRXh0ZXJuYWwocmVxdWVzdFVybCwgbmF2aWdhdGlvbk9wdGlvbnMpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBUaHJvdyBlcnJvciBpZiByZXF1ZXN0IFVSTCBpcyBlbXB0eS5cclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcIlJlZGlyZWN0SGFuZGxlci5pbml0aWF0ZUF1dGhSZXF1ZXN0OiBOYXZpZ2F0ZSB1cmwgaXMgZW1wdHlcIik7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IoZW1wdHlOYXZpZ2F0ZVVyaSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGUgYXV0aG9yaXphdGlvbiBjb2RlIHJlc3BvbnNlIGluIHRoZSB3aW5kb3cuXHJcbiAgICAgKiBAcGFyYW0gaGFzaFxyXG4gICAgICovXHJcbiAgICBhc3luYyBoYW5kbGVDb2RlUmVzcG9uc2UocmVzcG9uc2UsIHN0YXRlKSB7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIlJlZGlyZWN0SGFuZGxlci5oYW5kbGVDb2RlUmVzcG9uc2UgY2FsbGVkXCIpO1xyXG4gICAgICAgIC8vIEludGVyYWN0aW9uIGlzIGNvbXBsZXRlZCAtIHJlbW92ZSBpbnRlcmFjdGlvbiBzdGF0dXMuXHJcbiAgICAgICAgdGhpcy5icm93c2VyU3RvcmFnZS5zZXRJbnRlcmFjdGlvbkluUHJvZ3Jlc3MoZmFsc2UpO1xyXG4gICAgICAgIC8vIEhhbmRsZSBjb2RlIHJlc3BvbnNlLlxyXG4gICAgICAgIGNvbnN0IHN0YXRlS2V5ID0gdGhpcy5icm93c2VyU3RvcmFnZS5nZW5lcmF0ZVN0YXRlS2V5KHN0YXRlKTtcclxuICAgICAgICBjb25zdCByZXF1ZXN0U3RhdGUgPSB0aGlzLmJyb3dzZXJTdG9yYWdlLmdldFRlbXBvcmFyeUNhY2hlKHN0YXRlS2V5KTtcclxuICAgICAgICBpZiAoIXJlcXVlc3RTdGF0ZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yQ29kZXMuc3RhdGVOb3RGb3VuZCwgXCJDYWNoZWQgU3RhdGVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBhdXRoQ29kZVJlc3BvbnNlO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGF1dGhDb2RlUmVzcG9uc2UgPSB0aGlzLmF1dGhNb2R1bGUuaGFuZGxlRnJhZ21lbnRSZXNwb25zZShyZXNwb25zZSwgcmVxdWVzdFN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBTZXJ2ZXJFcnJvciAmJlxyXG4gICAgICAgICAgICAgICAgZS5zdWJFcnJvciA9PT0gdXNlckNhbmNlbGxlZCkge1xyXG4gICAgICAgICAgICAgICAgLy8gVHJhbnNsYXRlIHNlcnZlciBlcnJvciBjYXVzZWQgYnkgdXNlciBjbG9zaW5nIG5hdGl2ZSBwcm9tcHQgdG8gY29ycmVzcG9uZGluZyBmaXJzdCBjbGFzcyBNU0FMIGVycm9yXHJcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKHVzZXJDYW5jZWxsZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBHZXQgY2FjaGVkIGl0ZW1zXHJcbiAgICAgICAgY29uc3Qgbm9uY2VLZXkgPSB0aGlzLmJyb3dzZXJTdG9yYWdlLmdlbmVyYXRlTm9uY2VLZXkocmVxdWVzdFN0YXRlKTtcclxuICAgICAgICBjb25zdCBjYWNoZWROb25jZSA9IHRoaXMuYnJvd3NlclN0b3JhZ2UuZ2V0VGVtcG9yYXJ5Q2FjaGUobm9uY2VLZXkpO1xyXG4gICAgICAgIC8vIEFzc2lnbiBjb2RlIHRvIHJlcXVlc3RcclxuICAgICAgICB0aGlzLmF1dGhDb2RlUmVxdWVzdC5jb2RlID0gYXV0aENvZGVSZXNwb25zZS5jb2RlO1xyXG4gICAgICAgIC8vIENoZWNrIGZvciBuZXcgY2xvdWQgaW5zdGFuY2VcclxuICAgICAgICBpZiAoYXV0aENvZGVSZXNwb25zZS5jbG91ZF9pbnN0YW5jZV9ob3N0X25hbWUpIHtcclxuICAgICAgICAgICAgYXdhaXQgaW52b2tlQXN5bmModGhpcy5hdXRoTW9kdWxlLnVwZGF0ZUF1dGhvcml0eS5iaW5kKHRoaXMuYXV0aE1vZHVsZSksIFBlcmZvcm1hbmNlRXZlbnRzLlVwZGF0ZVRva2VuRW5kcG9pbnRBdXRob3JpdHksIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCB0aGlzLmF1dGhDb2RlUmVxdWVzdC5jb3JyZWxhdGlvbklkKShhdXRoQ29kZVJlc3BvbnNlLmNsb3VkX2luc3RhbmNlX2hvc3RfbmFtZSwgdGhpcy5hdXRoQ29kZVJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGF1dGhDb2RlUmVzcG9uc2Uubm9uY2UgPSBjYWNoZWROb25jZSB8fCB1bmRlZmluZWQ7XHJcbiAgICAgICAgYXV0aENvZGVSZXNwb25zZS5zdGF0ZSA9IHJlcXVlc3RTdGF0ZTtcclxuICAgICAgICAvLyBBZGQgQ0NTIHBhcmFtZXRlcnMgaWYgYXZhaWxhYmxlXHJcbiAgICAgICAgaWYgKGF1dGhDb2RlUmVzcG9uc2UuY2xpZW50X2luZm8pIHtcclxuICAgICAgICAgICAgdGhpcy5hdXRoQ29kZVJlcXVlc3QuY2xpZW50SW5mbyA9IGF1dGhDb2RlUmVzcG9uc2UuY2xpZW50X2luZm87XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBjYWNoZWRDY3NDcmVkID0gdGhpcy5jaGVja0Njc0NyZWRlbnRpYWxzKCk7XHJcbiAgICAgICAgICAgIGlmIChjYWNoZWRDY3NDcmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmF1dGhDb2RlUmVxdWVzdC5jY3NDcmVkZW50aWFsID0gY2FjaGVkQ2NzQ3JlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBBY3F1aXJlIHRva2VuIHdpdGggcmV0cmlldmVkIGNvZGUuXHJcbiAgICAgICAgY29uc3QgdG9rZW5SZXNwb25zZSA9IChhd2FpdCB0aGlzLmF1dGhNb2R1bGUuYWNxdWlyZVRva2VuKHRoaXMuYXV0aENvZGVSZXF1ZXN0LCBhdXRoQ29kZVJlc3BvbnNlKSk7XHJcbiAgICAgICAgdGhpcy5icm93c2VyU3RvcmFnZS5jbGVhblJlcXVlc3RCeVN0YXRlKHN0YXRlKTtcclxuICAgICAgICByZXR1cm4gdG9rZW5SZXNwb25zZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogTG9va3MgdXAgY2NzIGNyZWRzIGluIHRoZSBjYWNoZVxyXG4gICAgICovXHJcbiAgICBjaGVja0Njc0NyZWRlbnRpYWxzKCkge1xyXG4gICAgICAgIC8vIExvb2sgdXAgY2NzIGNyZWRlbnRpYWwgaW4gdGVtcCBjYWNoZVxyXG4gICAgICAgIGNvbnN0IGNhY2hlZENjc0NyZWQgPSB0aGlzLmJyb3dzZXJTdG9yYWdlLmdldFRlbXBvcmFyeUNhY2hlKFRlbXBvcmFyeUNhY2hlS2V5cy5DQ1NfQ1JFREVOVElBTCwgdHJ1ZSk7XHJcbiAgICAgICAgaWYgKGNhY2hlZENjc0NyZWQpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKGNhY2hlZENjc0NyZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmF1dGhNb2R1bGUubG9nZ2VyLmVycm9yKFwiQ2FjaGUgY3JlZGVudGlhbCBjb3VsZCBub3QgYmUgcGFyc2VkXCIpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hdXRoTW9kdWxlLmxvZ2dlci5lcnJvclBpaShgQ2FjaGUgY3JlZGVudGlhbCBjb3VsZCBub3QgYmUgcGFyc2VkOiAke2NhY2hlZENjc0NyZWR9YCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgUmVkaXJlY3RIYW5kbGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWRpcmVjdEhhbmRsZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initiateAuthRequest: function() { return /* binding */ initiateAuthRequest; },\n/* harmony export */   monitorIframeForHash: function() { return /* binding */ monitorIframeForHash; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config/Configuration.mjs */ \"./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n * @param urlNavigate\r\n * @param userRequestScopes\r\n */\r\nasync function initiateAuthRequest(requestUrl, performanceClient, logger, correlationId, navigateFrameWait) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerInitiateAuthRequest, correlationId);\r\n    if (!requestUrl) {\r\n        // Throw error if request URL is empty.\r\n        logger.info(\"Navigate url is empty\");\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.emptyNavigateUri);\r\n    }\r\n    if (navigateFrameWait) {\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invokeAsync)(loadFrame, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerLoadFrame, logger, performanceClient, correlationId)(requestUrl, navigateFrameWait, performanceClient, correlationId);\r\n    }\r\n    return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invoke)(loadFrameSync, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerLoadFrameSync, logger, performanceClient, correlationId)(requestUrl);\r\n}\r\n/**\r\n * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n * @param iframe\r\n * @param timeout\r\n */\r\nasync function monitorIframeForHash(iframe, timeout, pollIntervalMilliseconds, performanceClient, logger, correlationId, responseType) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerMonitorIframeForHash, correlationId);\r\n    return new Promise((resolve, reject) => {\r\n        if (timeout < _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_IFRAME_TIMEOUT_MS) {\r\n            logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${_config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\r\n        }\r\n        /*\r\n         * Polling for iframes can be purely timing based,\r\n         * since we don't need to account for interaction.\r\n         */\r\n        const timeoutId = window.setTimeout(() => {\r\n            window.clearInterval(intervalId);\r\n            reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.monitorWindowTimeout));\r\n        }, timeout);\r\n        const intervalId = window.setInterval(() => {\r\n            let href = \"\";\r\n            const contentWindow = iframe.contentWindow;\r\n            try {\r\n                /*\r\n                 * Will throw if cross origin,\r\n                 * which should be caught and ignored\r\n                 * since we need the interval to keep running while on STS UI.\r\n                 */\r\n                href = contentWindow ? contentWindow.location.href : \"\";\r\n            }\r\n            catch (e) { }\r\n            if (!href || href === \"about:blank\") {\r\n                return;\r\n            }\r\n            let responseString = \"\";\r\n            if (contentWindow) {\r\n                if (responseType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ServerResponseType.QUERY) {\r\n                    responseString = contentWindow.location.search;\r\n                }\r\n                else {\r\n                    responseString = contentWindow.location.hash;\r\n                }\r\n            }\r\n            window.clearTimeout(timeoutId);\r\n            window.clearInterval(intervalId);\r\n            resolve(responseString);\r\n        }, pollIntervalMilliseconds);\r\n    }).finally(() => {\r\n        (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invoke)(removeHiddenIframe, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RemoveHiddenIframe, logger, performanceClient, correlationId)(iframe);\r\n    });\r\n}\r\n/**\r\n * @hidden\r\n * Loads iframe with authorization endpoint URL\r\n * @ignore\r\n * @deprecated\r\n */\r\nfunction loadFrame(urlNavigate, navigateFrameWait, performanceClient, correlationId) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerLoadFrame, correlationId);\r\n    /*\r\n     * This trick overcomes iframe navigation in IE\r\n     * IE does not load the page consistently in iframe\r\n     */\r\n    return new Promise((resolve, reject) => {\r\n        const frameHandle = createHiddenIframe();\r\n        window.setTimeout(() => {\r\n            if (!frameHandle) {\r\n                reject(\"Unable to load iframe\");\r\n                return;\r\n            }\r\n            frameHandle.src = urlNavigate;\r\n            resolve(frameHandle);\r\n        }, navigateFrameWait);\r\n    });\r\n}\r\n/**\r\n * @hidden\r\n * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n * @param urlNavigate\r\n * @param frameName\r\n * @param logger\r\n */\r\nfunction loadFrameSync(urlNavigate) {\r\n    const frameHandle = createHiddenIframe();\r\n    frameHandle.src = urlNavigate;\r\n    return frameHandle;\r\n}\r\n/**\r\n * @hidden\r\n * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n * @ignore\r\n */\r\nfunction createHiddenIframe() {\r\n    const authFrame = document.createElement(\"iframe\");\r\n    authFrame.className = \"msalSilentIframe\";\r\n    authFrame.style.visibility = \"hidden\";\r\n    authFrame.style.position = \"absolute\";\r\n    authFrame.style.width = authFrame.style.height = \"0\";\r\n    authFrame.style.border = \"0\";\r\n    authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n    document.body.appendChild(authFrame);\r\n    return authFrame;\r\n}\r\n/**\r\n * @hidden\r\n * Removes a hidden iframe from the page.\r\n * @ignore\r\n */\r\nfunction removeHiddenIframe(iframe) {\r\n    if (document.body === iframe.parentNode) {\r\n        document.body.removeChild(iframe);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBridgeError: function() { return /* binding */ isBridgeError; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isBridgeError(error) {\r\n    return error.status !== undefined;\r\n}\n\n\n//# sourceMappingURL=BridgeError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25hYS9CcmlkZ2VFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9uYWEvQnJpZGdlRXJyb3IubWpzPzkyOTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNCcmlkZ2VFcnJvcihlcnJvcikge1xyXG4gICAgcmV0dXJuIGVycm9yLnN0YXR1cyAhPT0gdW5kZWZpbmVkO1xyXG59XG5cbmV4cG9ydCB7IGlzQnJpZGdlRXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJyaWRnZUVycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/naa/BridgeProxy.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/naa/BridgeProxy.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BridgeProxy: function() { return /* binding */ BridgeProxy; },\n/* harmony export */   \"default\": function() { return /* binding */ BridgeProxy; }\n/* harmony export */ });\n/* harmony import */ var _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BridgeStatusCode.mjs */ \"./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * BridgeProxy\r\n * Provides a proxy for accessing a bridge to a host app and/or\r\n * platform broker\r\n */\r\nclass BridgeProxy {\r\n    /**\r\n     * initializeNestedAppAuthBridge - Initializes the bridge to the host app\r\n     * @returns a promise that resolves to an InitializeBridgeResponse or rejects with an Error\r\n     * @remarks This method will be called by the create factory method\r\n     * @remarks If the bridge is not available, this method will throw an error\r\n     */\r\n    static async initializeNestedAppAuthBridge() {\r\n        if (window === undefined) {\r\n            throw new Error(\"window is undefined\");\r\n        }\r\n        if (window.nestedAppAuthBridge === undefined) {\r\n            throw new Error(\"window.nestedAppAuthBridge is undefined\");\r\n        }\r\n        try {\r\n            window.nestedAppAuthBridge.addEventListener(\"message\", (response) => {\r\n                const responsePayload = typeof response === \"string\" ? response : response.data;\r\n                const responseEnvelope = JSON.parse(responsePayload);\r\n                const request = BridgeProxy.bridgeRequests.find((element) => element.requestId === responseEnvelope.requestId);\r\n                if (request !== undefined) {\r\n                    BridgeProxy.bridgeRequests.splice(BridgeProxy.bridgeRequests.indexOf(request), 1);\r\n                    if (responseEnvelope.success) {\r\n                        request.resolve(responseEnvelope);\r\n                    }\r\n                    else {\r\n                        request.reject(responseEnvelope.error);\r\n                    }\r\n                }\r\n            });\r\n            const bridgeResponse = await new Promise((resolve, reject) => {\r\n                const message = BridgeProxy.buildRequest(\"GetInitContext\");\r\n                const request = {\r\n                    requestId: message.requestId,\r\n                    method: message.method,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                };\r\n                BridgeProxy.bridgeRequests.push(request);\r\n                window.nestedAppAuthBridge.postMessage(JSON.stringify(message));\r\n            });\r\n            return BridgeProxy.validateBridgeResultOrThrow(bridgeResponse.initContext);\r\n        }\r\n        catch (error) {\r\n            window.console.log(error);\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * getTokenInteractive - Attempts to get a token interactively from the bridge\r\n     * @param request A token request\r\n     * @returns a promise that resolves to an auth result or rejects with a BridgeError\r\n     */\r\n    getTokenInteractive(request) {\r\n        return this.getToken(\"GetTokenPopup\", request);\r\n    }\r\n    /**\r\n     * getTokenSilent Attempts to get a token silently from the bridge\r\n     * @param request A token request\r\n     * @returns a promise that resolves to an auth result or rejects with a BridgeError\r\n     */\r\n    getTokenSilent(request) {\r\n        return this.getToken(\"GetToken\", request);\r\n    }\r\n    async getToken(requestType, request) {\r\n        const result = await this.sendRequest(requestType, {\r\n            tokenParams: request,\r\n        });\r\n        return {\r\n            token: BridgeProxy.validateBridgeResultOrThrow(result.token),\r\n            account: BridgeProxy.validateBridgeResultOrThrow(result.account),\r\n        };\r\n    }\r\n    getHostCapabilities() {\r\n        return this.capabilities ?? null;\r\n    }\r\n    getAccountContext() {\r\n        return this.accountContext ? this.accountContext : null;\r\n    }\r\n    static buildRequest(method, requestParams) {\r\n        return {\r\n            messageType: \"NestedAppAuthRequest\",\r\n            method: method,\r\n            requestId: (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.createNewGuid)(),\r\n            sendTime: Date.now(),\r\n            clientLibrary: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConstants.MSAL_SKU,\r\n            clientLibraryVersion: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version,\r\n            ...requestParams,\r\n        };\r\n    }\r\n    /**\r\n     * A method used to send a request to the bridge\r\n     * @param request A token request\r\n     * @returns a promise that resolves to a response of provided type or rejects with a BridgeError\r\n     */\r\n    sendRequest(method, requestParams) {\r\n        const message = BridgeProxy.buildRequest(method, requestParams);\r\n        const promise = new Promise((resolve, reject) => {\r\n            const request = {\r\n                requestId: message.requestId,\r\n                method: message.method,\r\n                resolve: resolve,\r\n                reject: reject,\r\n            };\r\n            BridgeProxy.bridgeRequests.push(request);\r\n            window.nestedAppAuthBridge.postMessage(JSON.stringify(message));\r\n        });\r\n        return promise;\r\n    }\r\n    static validateBridgeResultOrThrow(input) {\r\n        if (input === undefined) {\r\n            const bridgeError = {\r\n                status: _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_3__.BridgeStatusCode.NestedAppAuthUnavailable,\r\n            };\r\n            throw bridgeError;\r\n        }\r\n        return input;\r\n    }\r\n    /**\r\n     * Private constructor for BridgeProxy\r\n     * @param sdkName The name of the SDK being used to make requests on behalf of the app\r\n     * @param sdkVersion The version of the SDK being used to make requests on behalf of the app\r\n     * @param capabilities The capabilities of the bridge / SDK / platform broker\r\n     */\r\n    constructor(sdkName, sdkVersion, accountContext, capabilities) {\r\n        this.sdkName = sdkName;\r\n        this.sdkVersion = sdkVersion;\r\n        this.accountContext = accountContext;\r\n        this.capabilities = capabilities;\r\n    }\r\n    /**\r\n     * Factory method for creating an implementation of IBridgeProxy\r\n     * @returns A promise that resolves to a BridgeProxy implementation\r\n     */\r\n    static async create() {\r\n        const response = await BridgeProxy.initializeNestedAppAuthBridge();\r\n        return new BridgeProxy(response.sdkName, response.sdkVersion, response.accountContext, response.capabilities);\r\n    }\r\n}\r\nBridgeProxy.bridgeRequests = [];\n\n\n//# sourceMappingURL=BridgeProxy.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/naa/BridgeProxy.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BridgeStatusCode: function() { return /* binding */ BridgeStatusCode; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst BridgeStatusCode = {\r\n    UserInteractionRequired: \"USER_INTERACTION_REQUIRED\",\r\n    UserCancel: \"USER_CANCEL\",\r\n    NoNetwork: \"NO_NETWORK\",\r\n    TransientError: \"TRANSIENT_ERROR\",\r\n    PersistentError: \"PERSISTENT_ERROR\",\r\n    Disabled: \"DISABLED\",\r\n    AccountUnavailable: \"ACCOUNT_UNAVAILABLE\",\r\n    NestedAppAuthUnavailable: \"NESTED_APP_AUTH_UNAVAILABLE\", // NAA is unavailable in the current context, can retry with standard browser based auth\r\n};\n\n\n//# sourceMappingURL=BridgeStatusCode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25hYS9CcmlkZ2VTdGF0dXNDb2RlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvbmFhL0JyaWRnZVN0YXR1c0NvZGUubWpzPzdkNGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgQnJpZGdlU3RhdHVzQ29kZSA9IHtcclxuICAgIFVzZXJJbnRlcmFjdGlvblJlcXVpcmVkOiBcIlVTRVJfSU5URVJBQ1RJT05fUkVRVUlSRURcIixcclxuICAgIFVzZXJDYW5jZWw6IFwiVVNFUl9DQU5DRUxcIixcclxuICAgIE5vTmV0d29yazogXCJOT19ORVRXT1JLXCIsXHJcbiAgICBUcmFuc2llbnRFcnJvcjogXCJUUkFOU0lFTlRfRVJST1JcIixcclxuICAgIFBlcnNpc3RlbnRFcnJvcjogXCJQRVJTSVNURU5UX0VSUk9SXCIsXHJcbiAgICBEaXNhYmxlZDogXCJESVNBQkxFRFwiLFxyXG4gICAgQWNjb3VudFVuYXZhaWxhYmxlOiBcIkFDQ09VTlRfVU5BVkFJTEFCTEVcIixcclxuICAgIE5lc3RlZEFwcEF1dGhVbmF2YWlsYWJsZTogXCJORVNURURfQVBQX0FVVEhfVU5BVkFJTEFCTEVcIiwgLy8gTkFBIGlzIHVuYXZhaWxhYmxlIGluIHRoZSBjdXJyZW50IGNvbnRleHQsIGNhbiByZXRyeSB3aXRoIHN0YW5kYXJkIGJyb3dzZXIgYmFzZWQgYXV0aFxyXG59O1xuXG5leHBvcnQgeyBCcmlkZ2VTdGF0dXNDb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CcmlkZ2VTdGF0dXNDb2RlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedAppAuthAdapter: function() { return /* binding */ NestedAppAuthAdapter; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _BridgeError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../BridgeError.mjs */ \"./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs\");\n/* harmony import */ var _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../BridgeStatusCode.mjs */ \"./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NestedAppAuthAdapter {\r\n    constructor(clientId, clientCapabilities, crypto, logger) {\r\n        this.clientId = clientId;\r\n        this.clientCapabilities = clientCapabilities;\r\n        this.crypto = crypto;\r\n        this.logger = logger;\r\n    }\r\n    toNaaTokenRequest(request) {\r\n        let extraParams;\r\n        if (request.extraQueryParameters === undefined) {\r\n            extraParams = new Map();\r\n        }\r\n        else {\r\n            extraParams = new Map(Object.entries(request.extraQueryParameters));\r\n        }\r\n        const correlationId = request.correlationId || this.crypto.createNewGuid();\r\n        const requestBuilder = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.RequestParameterBuilder(correlationId);\r\n        const claims = requestBuilder.addClientCapabilitiesToClaims(request.claims, this.clientCapabilities);\r\n        const scopes = request.scopes || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.OIDC_DEFAULT_SCOPES;\r\n        const tokenRequest = {\r\n            platformBrokerId: request.account?.homeAccountId,\r\n            clientId: this.clientId,\r\n            authority: request.authority,\r\n            scope: scopes.join(\" \"),\r\n            correlationId,\r\n            claims: !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmptyObj(claims) ? claims : undefined,\r\n            state: request.state,\r\n            authenticationScheme: request.authenticationScheme || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER,\r\n            extraParameters: extraParams,\r\n        };\r\n        return tokenRequest;\r\n    }\r\n    fromNaaTokenResponse(request, response, reqTimestamp) {\r\n        if (!response.token.id_token || !response.token.access_token) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.nullOrEmptyToken);\r\n        }\r\n        const expiresOn = new Date((reqTimestamp + (response.token.expires_in || 0)) * 1000);\r\n        const idTokenClaims = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthToken.extractTokenClaims(response.token.id_token, this.crypto.base64Decode);\r\n        const account = this.fromNaaAccountInfo(response.account, response.token.id_token, idTokenClaims);\r\n        const scopes = response.token.scope || request.scope;\r\n        const authenticationResult = {\r\n            authority: response.token.authority || account.environment,\r\n            uniqueId: account.localAccountId,\r\n            tenantId: account.tenantId,\r\n            scopes: scopes.split(\" \"),\r\n            account,\r\n            idToken: response.token.id_token,\r\n            idTokenClaims,\r\n            accessToken: response.token.access_token,\r\n            fromCache: false,\r\n            expiresOn: expiresOn,\r\n            tokenType: request.authenticationScheme || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER,\r\n            correlationId: request.correlationId,\r\n            extExpiresOn: expiresOn,\r\n            state: request.state,\r\n        };\r\n        return authenticationResult;\r\n    }\r\n    /*\r\n     *  export type AccountInfo = {\r\n     *     homeAccountId: string;\r\n     *     environment: string;\r\n     *     tenantId: string;\r\n     *     username: string;\r\n     *     localAccountId: string;\r\n     *     name?: string;\r\n     *     idToken?: string;\r\n     *     idTokenClaims?: TokenClaims & {\r\n     *         [key: string]:\r\n     *             | string\r\n     *             | number\r\n     *             | string[]\r\n     *             | object\r\n     *             | undefined\r\n     *             | unknown;\r\n     *     };\r\n     *     nativeAccountId?: string;\r\n     *     authorityType?: string;\r\n     * };\r\n     */\r\n    fromNaaAccountInfo(fromAccount, idToken, idTokenClaims) {\r\n        const effectiveIdTokenClaims = idTokenClaims || fromAccount.idTokenClaims;\r\n        const localAccountId = fromAccount.localAccountId ||\r\n            effectiveIdTokenClaims?.oid ||\r\n            effectiveIdTokenClaims?.sub ||\r\n            \"\";\r\n        const tenantId = fromAccount.tenantId || effectiveIdTokenClaims?.tid || \"\";\r\n        const homeAccountId = fromAccount.homeAccountId || `${localAccountId}.${tenantId}`;\r\n        const username = fromAccount.username ||\r\n            effectiveIdTokenClaims?.preferred_username ||\r\n            \"\";\r\n        const name = fromAccount.name || effectiveIdTokenClaims?.name;\r\n        const tenantProfiles = new Map();\r\n        const tenantProfile = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.buildTenantProfile)(homeAccountId, localAccountId, tenantId, effectiveIdTokenClaims);\r\n        tenantProfiles.set(tenantId, tenantProfile);\r\n        const account = {\r\n            homeAccountId,\r\n            environment: fromAccount.environment,\r\n            tenantId,\r\n            username,\r\n            localAccountId,\r\n            name,\r\n            idToken: idToken,\r\n            idTokenClaims: effectiveIdTokenClaims,\r\n            tenantProfiles,\r\n        };\r\n        return account;\r\n    }\r\n    /**\r\n     *\r\n     * @param error BridgeError\r\n     * @returns AuthError, ClientAuthError, ClientConfigurationError, ServerError, InteractionRequiredError\r\n     */\r\n    fromBridgeError(error) {\r\n        if ((0,_BridgeError_mjs__WEBPACK_IMPORTED_MODULE_1__.isBridgeError)(error)) {\r\n            switch (error.status) {\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__.BridgeStatusCode.UserCancel:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.userCanceled);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__.BridgeStatusCode.NoNetwork:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.noNetworkConnectivity);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__.BridgeStatusCode.AccountUnavailable:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.noAccountFound);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__.BridgeStatusCode.Disabled:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.nestedAppAuthBridgeDisabled);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__.BridgeStatusCode.NestedAppAuthUnavailable:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthError(error.code ||\r\n                        _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.nestedAppAuthBridgeDisabled, error.description);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__.BridgeStatusCode.TransientError:\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__.BridgeStatusCode.PersistentError:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ServerError(error.code, error.description);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__.BridgeStatusCode.UserInteractionRequired:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.InteractionRequiredAuthError(error.code, error.description);\r\n                default:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthError(error.code, error.description);\r\n            }\r\n        }\r\n        else {\r\n            return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"unknown_error\", \"An unknown error occurred\");\r\n        }\r\n    }\r\n    /**\r\n     * Returns an AuthenticationResult from the given cache items\r\n     *\r\n     * @param account\r\n     * @param idToken\r\n     * @param accessToken\r\n     * @param reqTimestamp\r\n     * @returns\r\n     */\r\n    toAuthenticationResultFromCache(account, idToken, accessToken, request, correlationId) {\r\n        if (!idToken || !accessToken) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.nullOrEmptyToken);\r\n        }\r\n        const idTokenClaims = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthToken.extractTokenClaims(idToken.secret, this.crypto.base64Decode);\r\n        const scopes = accessToken.target || request.scopes.join(\" \");\r\n        const authenticationResult = {\r\n            authority: accessToken.environment || account.environment,\r\n            uniqueId: account.localAccountId,\r\n            tenantId: account.tenantId,\r\n            scopes: scopes.split(\" \"),\r\n            account,\r\n            idToken: idToken.secret,\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken.secret,\r\n            fromCache: true,\r\n            expiresOn: new Date(Number(accessToken.expiresOn) * 1000),\r\n            tokenType: request.authenticationScheme || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER,\r\n            correlationId,\r\n            extExpiresOn: new Date(Number(accessToken.extendedExpiresOn) * 1000),\r\n            state: request.state,\r\n        };\r\n        return authenticationResult;\r\n    }\r\n}\n\n\n//# sourceMappingURL=NestedAppAuthAdapter.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NavigationClient: function() { return /* binding */ NavigationClient; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NavigationClient {\r\n    /**\r\n     * Navigates to other pages within the same web application\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateInternal(url, options) {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n    /**\r\n     * Navigates to other pages outside the web application i.e. the Identity Provider\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateExternal(url, options) {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n    /**\r\n     * Default navigation implementation invoked by the internal and external functions\r\n     * @param url\r\n     * @param options\r\n     */\r\n    static defaultNavigateWindow(url, options) {\r\n        if (options.noHistory) {\r\n            window.location.replace(url);\r\n        }\r\n        else {\r\n            window.location.assign(url);\r\n        }\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, options.timeout);\r\n        });\r\n    }\r\n}\n\n\n//# sourceMappingURL=NavigationClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25hdmlnYXRpb24vTmF2aWdhdGlvbkNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvbmF2aWdhdGlvbi9OYXZpZ2F0aW9uQ2xpZW50Lm1qcz9lYjRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIE5hdmlnYXRpb25DbGllbnQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBOYXZpZ2F0ZXMgdG8gb3RoZXIgcGFnZXMgd2l0aGluIHRoZSBzYW1lIHdlYiBhcHBsaWNhdGlvblxyXG4gICAgICogQHBhcmFtIHVybFxyXG4gICAgICogQHBhcmFtIG9wdGlvbnNcclxuICAgICAqL1xyXG4gICAgbmF2aWdhdGVJbnRlcm5hbCh1cmwsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gTmF2aWdhdGlvbkNsaWVudC5kZWZhdWx0TmF2aWdhdGVXaW5kb3codXJsLCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogTmF2aWdhdGVzIHRvIG90aGVyIHBhZ2VzIG91dHNpZGUgdGhlIHdlYiBhcHBsaWNhdGlvbiBpLmUuIHRoZSBJZGVudGl0eSBQcm92aWRlclxyXG4gICAgICogQHBhcmFtIHVybFxyXG4gICAgICogQHBhcmFtIG9wdGlvbnNcclxuICAgICAqL1xyXG4gICAgbmF2aWdhdGVFeHRlcm5hbCh1cmwsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gTmF2aWdhdGlvbkNsaWVudC5kZWZhdWx0TmF2aWdhdGVXaW5kb3codXJsLCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRGVmYXVsdCBuYXZpZ2F0aW9uIGltcGxlbWVudGF0aW9uIGludm9rZWQgYnkgdGhlIGludGVybmFsIGFuZCBleHRlcm5hbCBmdW5jdGlvbnNcclxuICAgICAqIEBwYXJhbSB1cmxcclxuICAgICAqIEBwYXJhbSBvcHRpb25zXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBkZWZhdWx0TmF2aWdhdGVXaW5kb3codXJsLCBvcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMubm9IaXN0b3J5KSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHVybCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHVybCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XHJcbiAgICAgICAgICAgIH0sIG9wdGlvbnMudGltZW91dCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgTmF2aWdhdGlvbkNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmF2aWdhdGlvbkNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchClient: function() { return /* binding */ FetchClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nclass FetchClient {\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    async sendGetRequestAsync(url, options) {\r\n        let response;\r\n        let responseHeaders = {};\r\n        let responseStatus = 0;\r\n        const reqHeaders = getFetchHeaders(options);\r\n        try {\r\n            response = await fetch(url, {\r\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.GET,\r\n                headers: reqHeaders,\r\n            });\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(window.navigator.onLine\r\n                ? _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.getRequestFailed\r\n                : _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noNetworkConnectivity);\r\n        }\r\n        responseHeaders = getHeaderDict(response.headers);\r\n        try {\r\n            responseStatus = response.status;\r\n            return {\r\n                headers: responseHeaders,\r\n                body: (await response.json()),\r\n                status: responseStatus,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createNetworkError)((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.failedToParseResponse), responseStatus, responseHeaders);\r\n        }\r\n    }\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    async sendPostRequestAsync(url, options) {\r\n        const reqBody = (options && options.body) || \"\";\r\n        const reqHeaders = getFetchHeaders(options);\r\n        let response;\r\n        let responseStatus = 0;\r\n        let responseHeaders = {};\r\n        try {\r\n            response = await fetch(url, {\r\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.POST,\r\n                headers: reqHeaders,\r\n                body: reqBody,\r\n            });\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(window.navigator.onLine\r\n                ? _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.postRequestFailed\r\n                : _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noNetworkConnectivity);\r\n        }\r\n        responseHeaders = getHeaderDict(response.headers);\r\n        try {\r\n            responseStatus = response.status;\r\n            return {\r\n                headers: responseHeaders,\r\n                body: (await response.json()),\r\n                status: responseStatus,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createNetworkError)((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.failedToParseResponse), responseStatus, responseHeaders);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Get Fetch API Headers object from string map\r\n * @param inputHeaders\r\n */\r\nfunction getFetchHeaders(options) {\r\n    try {\r\n        const headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        const optionsHeaders = options.headers;\r\n        Object.entries(optionsHeaders).forEach(([key, value]) => {\r\n            headers.append(key, value);\r\n        });\r\n        return headers;\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.failedToBuildHeaders);\r\n    }\r\n}\r\n/**\r\n * Returns object representing response headers\r\n * @param headers\r\n * @returns\r\n */\r\nfunction getHeaderDict(headers) {\r\n    try {\r\n        const headerDict = {};\r\n        headers.forEach((value, key) => {\r\n            headerDict[key] = value;\r\n        });\r\n        return headerDict;\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.failedToParseHeaders);\r\n    }\r\n}\n\n\n//# sourceMappingURL=FetchClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25ldHdvcmsvRmV0Y2hDbGllbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNtRDtBQUNPO0FBQ0w7QUFDaUg7O0FBRW5MO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwRUFBaUI7QUFDekM7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGtCQUFrQixtRkFBc0I7QUFDeEMsa0JBQWtCLDhFQUFnQjtBQUNsQyxrQkFBa0IsbUZBQXFCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsOEVBQWtCLENBQUMsbUZBQXNCLENBQUMsbUZBQXFCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBFQUFpQjtBQUN6QztBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxrQkFBa0IsbUZBQXNCO0FBQ3hDLGtCQUFrQiwrRUFBaUI7QUFDbkMsa0JBQWtCLG1GQUFxQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDhFQUFrQixDQUFDLG1GQUFzQixDQUFDLG1GQUFxQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1GQUFzQixDQUFDLGtGQUFvQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtRkFBc0IsQ0FBQyxrRkFBb0I7QUFDekQ7QUFDQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9uZXR3b3JrL0ZldGNoQ2xpZW50Lm1qcz9mZjY1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgY3JlYXRlTmV0d29ya0Vycm9yIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3NlckF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IEhUVFBfUkVRVUVTVF9UWVBFIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgZ2V0UmVxdWVzdEZhaWxlZCwgbm9OZXR3b3JrQ29ubmVjdGl2aXR5LCBmYWlsZWRUb1BhcnNlUmVzcG9uc2UsIHBvc3RSZXF1ZXN0RmFpbGVkLCBmYWlsZWRUb0J1aWxkSGVhZGVycywgZmFpbGVkVG9QYXJzZUhlYWRlcnMgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBUaGlzIGNsYXNzIGltcGxlbWVudHMgdGhlIEZldGNoIEFQSSBmb3IgR0VUIGFuZCBQT1NUIHJlcXVlc3RzLiBTZWUgbW9yZSBoZXJlOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRmV0Y2hfQVBJXHJcbiAqL1xyXG5jbGFzcyBGZXRjaENsaWVudCB7XHJcbiAgICAvKipcclxuICAgICAqIEZldGNoIENsaWVudCBmb3IgUkVTVCBlbmRwb2ludHMgLSBHZXQgcmVxdWVzdFxyXG4gICAgICogQHBhcmFtIHVybFxyXG4gICAgICogQHBhcmFtIGhlYWRlcnNcclxuICAgICAqIEBwYXJhbSBib2R5XHJcbiAgICAgKi9cclxuICAgIGFzeW5jIHNlbmRHZXRSZXF1ZXN0QXN5bmModXJsLCBvcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xyXG4gICAgICAgIGxldCByZXNwb25zZUhlYWRlcnMgPSB7fTtcclxuICAgICAgICBsZXQgcmVzcG9uc2VTdGF0dXMgPSAwO1xyXG4gICAgICAgIGNvbnN0IHJlcUhlYWRlcnMgPSBnZXRGZXRjaEhlYWRlcnMob3B0aW9ucyk7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogSFRUUF9SRVFVRVNUX1RZUEUuR0VULFxyXG4gICAgICAgICAgICAgICAgaGVhZGVyczogcmVxSGVhZGVycyxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3Iod2luZG93Lm5hdmlnYXRvci5vbkxpbmVcclxuICAgICAgICAgICAgICAgID8gZ2V0UmVxdWVzdEZhaWxlZFxyXG4gICAgICAgICAgICAgICAgOiBub05ldHdvcmtDb25uZWN0aXZpdHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXNwb25zZUhlYWRlcnMgPSBnZXRIZWFkZXJEaWN0KHJlc3BvbnNlLmhlYWRlcnMpO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHJlc3BvbnNlU3RhdHVzID0gcmVzcG9uc2Uuc3RhdHVzO1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgaGVhZGVyczogcmVzcG9uc2VIZWFkZXJzLFxyXG4gICAgICAgICAgICAgICAgYm9keTogKGF3YWl0IHJlc3BvbnNlLmpzb24oKSksXHJcbiAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlU3RhdHVzLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVOZXR3b3JrRXJyb3IoY3JlYXRlQnJvd3NlckF1dGhFcnJvcihmYWlsZWRUb1BhcnNlUmVzcG9uc2UpLCByZXNwb25zZVN0YXR1cywgcmVzcG9uc2VIZWFkZXJzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEZldGNoIENsaWVudCBmb3IgUkVTVCBlbmRwb2ludHMgLSBQb3N0IHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSB1cmxcclxuICAgICAqIEBwYXJhbSBoZWFkZXJzXHJcbiAgICAgKiBAcGFyYW0gYm9keVxyXG4gICAgICovXHJcbiAgICBhc3luYyBzZW5kUG9zdFJlcXVlc3RBc3luYyh1cmwsIG9wdGlvbnMpIHtcclxuICAgICAgICBjb25zdCByZXFCb2R5ID0gKG9wdGlvbnMgJiYgb3B0aW9ucy5ib2R5KSB8fCBcIlwiO1xyXG4gICAgICAgIGNvbnN0IHJlcUhlYWRlcnMgPSBnZXRGZXRjaEhlYWRlcnMob3B0aW9ucyk7XHJcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xyXG4gICAgICAgIGxldCByZXNwb25zZVN0YXR1cyA9IDA7XHJcbiAgICAgICAgbGV0IHJlc3BvbnNlSGVhZGVycyA9IHt9O1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6IEhUVFBfUkVRVUVTVF9UWVBFLlBPU1QsXHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXFIZWFkZXJzLFxyXG4gICAgICAgICAgICAgICAgYm9keTogcmVxQm9keSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3Iod2luZG93Lm5hdmlnYXRvci5vbkxpbmVcclxuICAgICAgICAgICAgICAgID8gcG9zdFJlcXVlc3RGYWlsZWRcclxuICAgICAgICAgICAgICAgIDogbm9OZXR3b3JrQ29ubmVjdGl2aXR5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVzcG9uc2VIZWFkZXJzID0gZ2V0SGVhZGVyRGljdChyZXNwb25zZS5oZWFkZXJzKTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICByZXNwb25zZVN0YXR1cyA9IHJlc3BvbnNlLnN0YXR1cztcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcclxuICAgICAgICAgICAgICAgIGJvZHk6IChhd2FpdCByZXNwb25zZS5qc29uKCkpLFxyXG4gICAgICAgICAgICAgICAgc3RhdHVzOiByZXNwb25zZVN0YXR1cyxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlTmV0d29ya0Vycm9yKGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IoZmFpbGVkVG9QYXJzZVJlc3BvbnNlKSwgcmVzcG9uc2VTdGF0dXMsIHJlc3BvbnNlSGVhZGVycyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBHZXQgRmV0Y2ggQVBJIEhlYWRlcnMgb2JqZWN0IGZyb20gc3RyaW5nIG1hcFxyXG4gKiBAcGFyYW0gaW5wdXRIZWFkZXJzXHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRGZXRjaEhlYWRlcnMob3B0aW9ucykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcclxuICAgICAgICBpZiAoIShvcHRpb25zICYmIG9wdGlvbnMuaGVhZGVycykpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGhlYWRlcnM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IG9wdGlvbnNIZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzO1xyXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKG9wdGlvbnNIZWFkZXJzKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcclxuICAgICAgICAgICAgaGVhZGVycy5hcHBlbmQoa2V5LCB2YWx1ZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IoZmFpbGVkVG9CdWlsZEhlYWRlcnMpO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIG9iamVjdCByZXByZXNlbnRpbmcgcmVzcG9uc2UgaGVhZGVyc1xyXG4gKiBAcGFyYW0gaGVhZGVyc1xyXG4gKiBAcmV0dXJuc1xyXG4gKi9cclxuZnVuY3Rpb24gZ2V0SGVhZGVyRGljdChoZWFkZXJzKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGhlYWRlckRpY3QgPSB7fTtcclxuICAgICAgICBoZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcclxuICAgICAgICAgICAgaGVhZGVyRGljdFtrZXldID0gdmFsdWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGhlYWRlckRpY3Q7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IoZmFpbGVkVG9QYXJzZUhlYWRlcnMpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IEZldGNoQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1GZXRjaENsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseOperatingContext: function() { return /* binding */ BaseOperatingContext; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/Configuration.mjs */ \"./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base class for operating context\r\n * Operating contexts are contexts in which MSAL.js is being run\r\n * More than one operating context may be available at a time\r\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\r\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\r\n */\r\nclass BaseOperatingContext {\r\n    static loggerCallback(level, message) {\r\n        switch (level) {\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Error:\r\n                // eslint-disable-next-line no-console\r\n                console.error(message);\r\n                return;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Info:\r\n                // eslint-disable-next-line no-console\r\n                console.info(message);\r\n                return;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Verbose:\r\n                // eslint-disable-next-line no-console\r\n                console.debug(message);\r\n                return;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Warning:\r\n                // eslint-disable-next-line no-console\r\n                console.warn(message);\r\n                return;\r\n            default:\r\n                // eslint-disable-next-line no-console\r\n                console.log(message);\r\n                return;\r\n        }\r\n    }\r\n    constructor(config) {\r\n        /*\r\n         * If loaded in an environment where window is not available,\r\n         * set internal flag to false so that further requests fail.\r\n         * This is to support server-side rendering environments.\r\n         */\r\n        this.browserEnvironment = typeof window !== \"undefined\";\r\n        this.config = (0,_config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_1__.buildConfiguration)(config, this.browserEnvironment);\r\n        let sessionStorage;\r\n        try {\r\n            sessionStorage = window[_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage];\r\n            // Mute errors if it's a non-browser environment or cookies are blocked.\r\n        }\r\n        catch (e) { }\r\n        const logLevelKey = sessionStorage?.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.LOG_LEVEL_CACHE_KEY);\r\n        const piiLoggingKey = sessionStorage\r\n            ?.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.LOG_PII_CACHE_KEY)\r\n            ?.toLowerCase();\r\n        const piiLoggingEnabled = piiLoggingKey === \"true\"\r\n            ? true\r\n            : piiLoggingKey === \"false\"\r\n                ? false\r\n                : undefined;\r\n        const loggerOptions = { ...this.config.system.loggerOptions };\r\n        const logLevel = logLevelKey && Object.keys(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel).includes(logLevelKey)\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel[logLevelKey]\r\n            : undefined;\r\n        if (logLevel) {\r\n            loggerOptions.loggerCallback = BaseOperatingContext.loggerCallback;\r\n            loggerOptions.logLevel = logLevel;\r\n        }\r\n        if (piiLoggingEnabled !== undefined) {\r\n            loggerOptions.piiLoggingEnabled = piiLoggingEnabled;\r\n        }\r\n        this.logger = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Logger(loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_3__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_3__.version);\r\n        this.available = false;\r\n    }\r\n    /**\r\n     * Return the MSAL config\r\n     * @returns BrowserConfiguration\r\n     */\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n    /**\r\n     * Returns the MSAL Logger\r\n     * @returns Logger\r\n     */\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    isAvailable() {\r\n        return this.available;\r\n    }\r\n    isBrowserEnvironment() {\r\n        return this.browserEnvironment;\r\n    }\r\n}\n\n\n//# sourceMappingURL=BaseOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvQmFzZU9wZXJhdGluZ0NvbnRleHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNpRDtBQUNHO0FBQ1Y7QUFDc0Q7O0FBRTdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0VBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdFQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixnRUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0VBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNkVBQWtCO0FBQ3hDO0FBQ0E7QUFDQSxvQ0FBb0MsNkVBQW9CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCw0RUFBbUI7QUFDdkU7QUFDQSxzQkFBc0IsMEVBQWlCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyxvREFBb0QsZ0VBQVE7QUFDNUQsY0FBYyxnRUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhEQUFNLGdCQUFnQixzREFBSSxFQUFFLHlEQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3Qvb3BlcmF0aW5nY29udGV4dC9CYXNlT3BlcmF0aW5nQ29udGV4dC5tanM/N2NiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IExvZ0xldmVsLCBMb2dnZXIgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBidWlsZENvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi9jb25maWcvQ29uZmlndXJhdGlvbi5tanMnO1xuaW1wb3J0IHsgbmFtZSwgdmVyc2lvbiB9IGZyb20gJy4uL3BhY2thZ2VNZXRhZGF0YS5tanMnO1xuaW1wb3J0IHsgQnJvd3NlckNhY2hlTG9jYXRpb24sIExPR19MRVZFTF9DQUNIRV9LRVksIExPR19QSUlfQ0FDSEVfS0VZIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEJhc2UgY2xhc3MgZm9yIG9wZXJhdGluZyBjb250ZXh0XHJcbiAqIE9wZXJhdGluZyBjb250ZXh0cyBhcmUgY29udGV4dHMgaW4gd2hpY2ggTVNBTC5qcyBpcyBiZWluZyBydW5cclxuICogTW9yZSB0aGFuIG9uZSBvcGVyYXRpbmcgY29udGV4dCBtYXkgYmUgYXZhaWxhYmxlIGF0IGEgdGltZVxyXG4gKiBJdCdzIGltcG9ydGFudCBmcm9tIGEgbG9nZ2luZyBhbmQgdGVsZW1ldHJ5IHBvaW50IG9mIHZpZXcgZm9yIHVzIHRvIGJlIGFibGUgdG8gaWRlbnRpZnkgdGhlIG9wZXJhdGluZyBjb250ZXh0LlxyXG4gKiBGb3IgZXhhbXBsZTogU29tZSBvcGVyYXRpbmcgY29udGV4dHMgd2lsbCBwcmUtY2FjaGUgdG9rZW5zIGltcGFjdGluZyBwZXJmb3JtYW5jZSB0ZWxlbWV0cnlcclxuICovXHJcbmNsYXNzIEJhc2VPcGVyYXRpbmdDb250ZXh0IHtcclxuICAgIHN0YXRpYyBsb2dnZXJDYWxsYmFjayhsZXZlbCwgbWVzc2FnZSkge1xyXG4gICAgICAgIHN3aXRjaCAobGV2ZWwpIHtcclxuICAgICAgICAgICAgY2FzZSBMb2dMZXZlbC5FcnJvcjpcclxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICBjYXNlIExvZ0xldmVsLkluZm86XHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5pbmZvKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICBjYXNlIExvZ0xldmVsLlZlcmJvc2U6XHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgY2FzZSBMb2dMZXZlbC5XYXJuaW5nOlxyXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcclxuICAgICAgICAvKlxyXG4gICAgICAgICAqIElmIGxvYWRlZCBpbiBhbiBlbnZpcm9ubWVudCB3aGVyZSB3aW5kb3cgaXMgbm90IGF2YWlsYWJsZSxcclxuICAgICAgICAgKiBzZXQgaW50ZXJuYWwgZmxhZyB0byBmYWxzZSBzbyB0aGF0IGZ1cnRoZXIgcmVxdWVzdHMgZmFpbC5cclxuICAgICAgICAgKiBUaGlzIGlzIHRvIHN1cHBvcnQgc2VydmVyLXNpZGUgcmVuZGVyaW5nIGVudmlyb25tZW50cy5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmJyb3dzZXJFbnZpcm9ubWVudCA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCI7XHJcbiAgICAgICAgdGhpcy5jb25maWcgPSBidWlsZENvbmZpZ3VyYXRpb24oY29uZmlnLCB0aGlzLmJyb3dzZXJFbnZpcm9ubWVudCk7XHJcbiAgICAgICAgbGV0IHNlc3Npb25TdG9yYWdlO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlID0gd2luZG93W0Jyb3dzZXJDYWNoZUxvY2F0aW9uLlNlc3Npb25TdG9yYWdlXTtcclxuICAgICAgICAgICAgLy8gTXV0ZSBlcnJvcnMgaWYgaXQncyBhIG5vbi1icm93c2VyIGVudmlyb25tZW50IG9yIGNvb2tpZXMgYXJlIGJsb2NrZWQuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7IH1cclxuICAgICAgICBjb25zdCBsb2dMZXZlbEtleSA9IHNlc3Npb25TdG9yYWdlPy5nZXRJdGVtKExPR19MRVZFTF9DQUNIRV9LRVkpO1xyXG4gICAgICAgIGNvbnN0IHBpaUxvZ2dpbmdLZXkgPSBzZXNzaW9uU3RvcmFnZVxyXG4gICAgICAgICAgICA/LmdldEl0ZW0oTE9HX1BJSV9DQUNIRV9LRVkpXHJcbiAgICAgICAgICAgID8udG9Mb3dlckNhc2UoKTtcclxuICAgICAgICBjb25zdCBwaWlMb2dnaW5nRW5hYmxlZCA9IHBpaUxvZ2dpbmdLZXkgPT09IFwidHJ1ZVwiXHJcbiAgICAgICAgICAgID8gdHJ1ZVxyXG4gICAgICAgICAgICA6IHBpaUxvZ2dpbmdLZXkgPT09IFwiZmFsc2VcIlxyXG4gICAgICAgICAgICAgICAgPyBmYWxzZVxyXG4gICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgY29uc3QgbG9nZ2VyT3B0aW9ucyA9IHsgLi4udGhpcy5jb25maWcuc3lzdGVtLmxvZ2dlck9wdGlvbnMgfTtcclxuICAgICAgICBjb25zdCBsb2dMZXZlbCA9IGxvZ0xldmVsS2V5ICYmIE9iamVjdC5rZXlzKExvZ0xldmVsKS5pbmNsdWRlcyhsb2dMZXZlbEtleSlcclxuICAgICAgICAgICAgPyBMb2dMZXZlbFtsb2dMZXZlbEtleV1cclxuICAgICAgICAgICAgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgaWYgKGxvZ0xldmVsKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlck9wdGlvbnMubG9nZ2VyQ2FsbGJhY2sgPSBCYXNlT3BlcmF0aW5nQ29udGV4dC5sb2dnZXJDYWxsYmFjaztcclxuICAgICAgICAgICAgbG9nZ2VyT3B0aW9ucy5sb2dMZXZlbCA9IGxvZ0xldmVsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocGlpTG9nZ2luZ0VuYWJsZWQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBsb2dnZXJPcHRpb25zLnBpaUxvZ2dpbmdFbmFibGVkID0gcGlpTG9nZ2luZ0VuYWJsZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcihsb2dnZXJPcHRpb25zLCBuYW1lLCB2ZXJzaW9uKTtcclxuICAgICAgICB0aGlzLmF2YWlsYWJsZSA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm4gdGhlIE1TQUwgY29uZmlnXHJcbiAgICAgKiBAcmV0dXJucyBCcm93c2VyQ29uZmlndXJhdGlvblxyXG4gICAgICovXHJcbiAgICBnZXRDb25maWcoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlnO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBNU0FMIExvZ2dlclxyXG4gICAgICogQHJldHVybnMgTG9nZ2VyXHJcbiAgICAgKi9cclxuICAgIGdldExvZ2dlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5sb2dnZXI7XHJcbiAgICB9XHJcbiAgICBpc0F2YWlsYWJsZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hdmFpbGFibGU7XHJcbiAgICB9XHJcbiAgICBpc0Jyb3dzZXJFbnZpcm9ubWVudCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5icm93c2VyRW52aXJvbm1lbnQ7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgQmFzZU9wZXJhdGluZ0NvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2VPcGVyYXRpbmdDb250ZXh0Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedAppOperatingContext: function() { return /* binding */ NestedAppOperatingContext; }\n/* harmony export */ });\n/* harmony import */ var _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\");\n/* harmony import */ var _naa_BridgeProxy_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../naa/BridgeProxy.mjs */ \"./node_modules/@azure/msal-browser/dist/naa/BridgeProxy.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NestedAppOperatingContext extends _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseOperatingContext {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.bridgeProxy = undefined;\r\n        this.accountContext = null;\r\n    }\r\n    /**\r\n     * Return the module name.  Intended for use with import() to enable dynamic import\r\n     * of the implementation associated with this operating context\r\n     * @returns\r\n     */\r\n    getModuleName() {\r\n        return NestedAppOperatingContext.MODULE_NAME;\r\n    }\r\n    /**\r\n     * Returns the unique identifier for this operating context\r\n     * @returns string\r\n     */\r\n    getId() {\r\n        return NestedAppOperatingContext.ID;\r\n    }\r\n    /**\r\n     * Returns the current BridgeProxy\r\n     * @returns IBridgeProxy | undefined\r\n     */\r\n    getBridgeProxy() {\r\n        return this.bridgeProxy;\r\n    }\r\n    /**\r\n     * Checks whether the operating context is available.\r\n     * Confirms that the code is running a browser rather.  This is required.\r\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\r\n     */\r\n    async initialize() {\r\n        try {\r\n            if (typeof window !== \"undefined\") {\r\n                if (typeof window.__initializeNestedAppAuth === \"function\") {\r\n                    await window.__initializeNestedAppAuth();\r\n                }\r\n                const bridgeProxy = await _naa_BridgeProxy_mjs__WEBPACK_IMPORTED_MODULE_1__.BridgeProxy.create();\r\n                /*\r\n                 * Because we want single sign on we expect the host app to provide the account context\r\n                 * with a min set of params that can be used to identify the account\r\n                 * this.account = nestedApp.getAccountByFilter(bridgeProxy.getAccountContext());\r\n                 */\r\n                this.accountContext = bridgeProxy.getAccountContext();\r\n                this.bridgeProxy = bridgeProxy;\r\n                this.available = bridgeProxy !== undefined;\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.logger.infoPii(`Could not initialize Nested App Auth bridge (${ex})`);\r\n        }\r\n        this.logger.info(`Nested App Auth Bridge available: ${this.available}`);\r\n        return this.available;\r\n    }\r\n}\r\n/*\r\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\r\n * containing the implementation for this operating context\r\n */\r\nNestedAppOperatingContext.MODULE_NAME = \"\";\r\n/**\r\n * Unique identifier for the operating context\r\n */\r\nNestedAppOperatingContext.ID = \"NestedAppOperatingContext\";\n\n\n//# sourceMappingURL=NestedAppOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNxRDtBQUNiOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QywyRUFBb0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyw2REFBVztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGLEdBQUc7QUFDbkY7QUFDQSw4REFBOEQsZUFBZTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3Qvb3BlcmF0aW5nY29udGV4dC9OZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0Lm1qcz80YjYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQmFzZU9wZXJhdGluZ0NvbnRleHQgfSBmcm9tICcuL0Jhc2VPcGVyYXRpbmdDb250ZXh0Lm1qcyc7XG5pbXBvcnQgeyBCcmlkZ2VQcm94eSB9IGZyb20gJy4uL25hYS9CcmlkZ2VQcm94eS5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY2xhc3MgTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dCBleHRlbmRzIEJhc2VPcGVyYXRpbmdDb250ZXh0IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICAgICAgdGhpcy5icmlkZ2VQcm94eSA9IHVuZGVmaW5lZDtcclxuICAgICAgICB0aGlzLmFjY291bnRDb250ZXh0ID0gbnVsbDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIHRoZSBtb2R1bGUgbmFtZS4gIEludGVuZGVkIGZvciB1c2Ugd2l0aCBpbXBvcnQoKSB0byBlbmFibGUgZHluYW1pYyBpbXBvcnRcclxuICAgICAqIG9mIHRoZSBpbXBsZW1lbnRhdGlvbiBhc3NvY2lhdGVkIHdpdGggdGhpcyBvcGVyYXRpbmcgY29udGV4dFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgZ2V0TW9kdWxlTmFtZSgpIHtcclxuICAgICAgICByZXR1cm4gTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dC5NT0RVTEVfTkFNRTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgb3BlcmF0aW5nIGNvbnRleHRcclxuICAgICAqIEByZXR1cm5zIHN0cmluZ1xyXG4gICAgICovXHJcbiAgICBnZXRJZCgpIHtcclxuICAgICAgICByZXR1cm4gTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dC5JRDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgY3VycmVudCBCcmlkZ2VQcm94eVxyXG4gICAgICogQHJldHVybnMgSUJyaWRnZVByb3h5IHwgdW5kZWZpbmVkXHJcbiAgICAgKi9cclxuICAgIGdldEJyaWRnZVByb3h5KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmJyaWRnZVByb3h5O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgb3BlcmF0aW5nIGNvbnRleHQgaXMgYXZhaWxhYmxlLlxyXG4gICAgICogQ29uZmlybXMgdGhhdCB0aGUgY29kZSBpcyBydW5uaW5nIGEgYnJvd3NlciByYXRoZXIuICBUaGlzIGlzIHJlcXVpcmVkLlxyXG4gICAgICogQHJldHVybnMgUHJvbWlzZTxib29sZWFuPiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhpcyBvcGVyYXRpbmcgY29udGV4dCBpcyBjdXJyZW50bHkgYXZhaWxhYmxlLlxyXG4gICAgICovXHJcbiAgICBhc3luYyBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdy5fX2luaXRpYWxpemVOZXN0ZWRBcHBBdXRoID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBhd2FpdCB3aW5kb3cuX19pbml0aWFsaXplTmVzdGVkQXBwQXV0aCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc3QgYnJpZGdlUHJveHkgPSBhd2FpdCBCcmlkZ2VQcm94eS5jcmVhdGUoKTtcclxuICAgICAgICAgICAgICAgIC8qXHJcbiAgICAgICAgICAgICAgICAgKiBCZWNhdXNlIHdlIHdhbnQgc2luZ2xlIHNpZ24gb24gd2UgZXhwZWN0IHRoZSBob3N0IGFwcCB0byBwcm92aWRlIHRoZSBhY2NvdW50IGNvbnRleHRcclxuICAgICAgICAgICAgICAgICAqIHdpdGggYSBtaW4gc2V0IG9mIHBhcmFtcyB0aGF0IGNhbiBiZSB1c2VkIHRvIGlkZW50aWZ5IHRoZSBhY2NvdW50XHJcbiAgICAgICAgICAgICAgICAgKiB0aGlzLmFjY291bnQgPSBuZXN0ZWRBcHAuZ2V0QWNjb3VudEJ5RmlsdGVyKGJyaWRnZVByb3h5LmdldEFjY291bnRDb250ZXh0KCkpO1xyXG4gICAgICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgICAgICB0aGlzLmFjY291bnRDb250ZXh0ID0gYnJpZGdlUHJveHkuZ2V0QWNjb3VudENvbnRleHQoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnJpZGdlUHJveHkgPSBicmlkZ2VQcm94eTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXZhaWxhYmxlID0gYnJpZGdlUHJveHkgIT09IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXgpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mb1BpaShgQ291bGQgbm90IGluaXRpYWxpemUgTmVzdGVkIEFwcCBBdXRoIGJyaWRnZSAoJHtleH0pYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubG9nZ2VyLmluZm8oYE5lc3RlZCBBcHAgQXV0aCBCcmlkZ2UgYXZhaWxhYmxlOiAke3RoaXMuYXZhaWxhYmxlfWApO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmF2YWlsYWJsZTtcclxuICAgIH1cclxufVxyXG4vKlxyXG4gKiBUT0RPOiBPbmNlIHdlIGhhdmUgZGV0ZXJtaW5lIHRoZSBidW5kbGluZyBjb2RlIHJldHVybiBoZXJlIHRvIHNwZWNpZnkgdGhlIG5hbWUgb2YgdGhlIGJ1bmRsZVxyXG4gKiBjb250YWluaW5nIHRoZSBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBvcGVyYXRpbmcgY29udGV4dFxyXG4gKi9cclxuTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dC5NT0RVTEVfTkFNRSA9IFwiXCI7XHJcbi8qKlxyXG4gKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG9wZXJhdGluZyBjb250ZXh0XHJcbiAqL1xyXG5OZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0LklEID0gXCJOZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0XCI7XG5cbmV4cG9ydCB7IE5lc3RlZEFwcE9wZXJhdGluZ0NvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5lc3RlZEFwcE9wZXJhdGluZ0NvbnRleHQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardOperatingContext: function() { return /* binding */ StandardOperatingContext; }\n/* harmony export */ });\n/* harmony import */ var _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass StandardOperatingContext extends _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseOperatingContext {\r\n    /**\r\n     * Return the module name.  Intended for use with import() to enable dynamic import\r\n     * of the implementation associated with this operating context\r\n     * @returns\r\n     */\r\n    getModuleName() {\r\n        return StandardOperatingContext.MODULE_NAME;\r\n    }\r\n    /**\r\n     * Returns the unique identifier for this operating context\r\n     * @returns string\r\n     */\r\n    getId() {\r\n        return StandardOperatingContext.ID;\r\n    }\r\n    /**\r\n     * Checks whether the operating context is available.\r\n     * Confirms that the code is running a browser rather.  This is required.\r\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\r\n     */\r\n    async initialize() {\r\n        this.available = typeof window !== \"undefined\";\r\n        return this.available;\r\n        /*\r\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\r\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\r\n         */\r\n    }\r\n}\r\n/*\r\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\r\n * containing the implementation for this operating context\r\n */\r\nStandardOperatingContext.MODULE_NAME = \"\";\r\n/**\r\n * Unique identifier for the operating context\r\n */\r\nStandardOperatingContext.ID = \"StandardOperatingContext\";\n\n\n//# sourceMappingURL=StandardOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDcUQ7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDJFQUFvQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQztBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0Lm1qcz8wNGZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQmFzZU9wZXJhdGluZ0NvbnRleHQgfSBmcm9tICcuL0Jhc2VPcGVyYXRpbmdDb250ZXh0Lm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQgZXh0ZW5kcyBCYXNlT3BlcmF0aW5nQ29udGV4dCB7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybiB0aGUgbW9kdWxlIG5hbWUuICBJbnRlbmRlZCBmb3IgdXNlIHdpdGggaW1wb3J0KCkgdG8gZW5hYmxlIGR5bmFtaWMgaW1wb3J0XHJcbiAgICAgKiBvZiB0aGUgaW1wbGVtZW50YXRpb24gYXNzb2NpYXRlZCB3aXRoIHRoaXMgb3BlcmF0aW5nIGNvbnRleHRcclxuICAgICAqIEByZXR1cm5zXHJcbiAgICAgKi9cclxuICAgIGdldE1vZHVsZU5hbWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIFN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5NT0RVTEVfTkFNRTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgb3BlcmF0aW5nIGNvbnRleHRcclxuICAgICAqIEByZXR1cm5zIHN0cmluZ1xyXG4gICAgICovXHJcbiAgICBnZXRJZCgpIHtcclxuICAgICAgICByZXR1cm4gU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0LklEO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgb3BlcmF0aW5nIGNvbnRleHQgaXMgYXZhaWxhYmxlLlxyXG4gICAgICogQ29uZmlybXMgdGhhdCB0aGUgY29kZSBpcyBydW5uaW5nIGEgYnJvd3NlciByYXRoZXIuICBUaGlzIGlzIHJlcXVpcmVkLlxyXG4gICAgICogQHJldHVybnMgUHJvbWlzZTxib29sZWFuPiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhpcyBvcGVyYXRpbmcgY29udGV4dCBpcyBjdXJyZW50bHkgYXZhaWxhYmxlLlxyXG4gICAgICovXHJcbiAgICBhc3luYyBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIHRoaXMuYXZhaWxhYmxlID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIjtcclxuICAgICAgICByZXR1cm4gdGhpcy5hdmFpbGFibGU7XHJcbiAgICAgICAgLypcclxuICAgICAgICAgKiBOT1RFOiBUaGUgc3RhbmRhcmQgY29udGV4dCBpcyBhdmFpbGFibGUgYXMgbG9uZyBhcyB0aGVyZSBpcyBhIHdpbmRvdy4gIElmL3doZW4gd2Ugc3BsaXQgb3V0IFdBTSBmcm9tIEJyb3dzZXJcclxuICAgICAgICAgKiBXZSBjYW4gbW92ZSB0aGUgY3VycmVudCBjb250ZW50cyBvZiB0aGUgaW5pdGlhbGl6ZSBtZXRob2QgdG8gaGVyZSBhbmQgdmVyaWZ5IHRoYXQgdGhlIFdBTSBleHRlbnNpb24gaXMgYXZhaWxhYmxlXHJcbiAgICAgICAgICovXHJcbiAgICB9XHJcbn1cclxuLypcclxuICogVE9ETzogT25jZSB3ZSBoYXZlIGRldGVybWluZSB0aGUgYnVuZGxpbmcgY29kZSByZXR1cm4gaGVyZSB0byBzcGVjaWZ5IHRoZSBuYW1lIG9mIHRoZSBidW5kbGVcclxuICogY29udGFpbmluZyB0aGUgaW1wbGVtZW50YXRpb24gZm9yIHRoaXMgb3BlcmF0aW5nIGNvbnRleHRcclxuICovXHJcblN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5NT0RVTEVfTkFNRSA9IFwiXCI7XHJcbi8qKlxyXG4gKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG9wZXJhdGluZyBjb250ZXh0XHJcbiAqL1xyXG5TdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQuSUQgPSBcIlN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dFwiO1xuXG5leHBvcnQgeyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/operatingcontext/UnknownOperatingContext.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/UnknownOperatingContext.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnknownOperatingContext: function() { return /* binding */ UnknownOperatingContext; }\n/* harmony export */ });\n/* harmony import */ var _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseOperatingContext.mjs */ \"./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass UnknownOperatingContext extends _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseOperatingContext {\r\n    /**\r\n     * Returns the unique identifier for this operating context\r\n     * @returns string\r\n     */\r\n    getId() {\r\n        return UnknownOperatingContext.ID;\r\n    }\r\n    /**\r\n     * Return the module name.  Intended for use with import() to enable dynamic import\r\n     * of the implementation associated with this operating context\r\n     * @returns\r\n     */\r\n    getModuleName() {\r\n        return UnknownOperatingContext.MODULE_NAME;\r\n    }\r\n    /**\r\n     * Checks whether the operating context is available.\r\n     * Confirms that the code is running a browser rather.  This is required.\r\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\r\n     */\r\n    async initialize() {\r\n        /**\r\n         * This operating context is in use when we have not checked for what the operating context is.\r\n         * The context is unknown until we check it.\r\n         */\r\n        return true;\r\n    }\r\n}\r\n/*\r\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\r\n * containing the implementation for this operating context\r\n */\r\nUnknownOperatingContext.MODULE_NAME = \"\";\r\n/**\r\n * Unique identifier for the operating context\r\n */\r\nUnknownOperatingContext.ID = \"UnknownOperatingContext\";\n\n\n//# sourceMappingURL=UnknownOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvVW5rbm93bk9wZXJhdGluZ0NvbnRleHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNxRDs7QUFFbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsMkVBQW9CO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvVW5rbm93bk9wZXJhdGluZ0NvbnRleHQubWpzPzRjOTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBCYXNlT3BlcmF0aW5nQ29udGV4dCB9IGZyb20gJy4vQmFzZU9wZXJhdGluZ0NvbnRleHQubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIFVua25vd25PcGVyYXRpbmdDb250ZXh0IGV4dGVuZHMgQmFzZU9wZXJhdGluZ0NvbnRleHQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBvcGVyYXRpbmcgY29udGV4dFxyXG4gICAgICogQHJldHVybnMgc3RyaW5nXHJcbiAgICAgKi9cclxuICAgIGdldElkKCkge1xyXG4gICAgICAgIHJldHVybiBVbmtub3duT3BlcmF0aW5nQ29udGV4dC5JRDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIHRoZSBtb2R1bGUgbmFtZS4gIEludGVuZGVkIGZvciB1c2Ugd2l0aCBpbXBvcnQoKSB0byBlbmFibGUgZHluYW1pYyBpbXBvcnRcclxuICAgICAqIG9mIHRoZSBpbXBsZW1lbnRhdGlvbiBhc3NvY2lhdGVkIHdpdGggdGhpcyBvcGVyYXRpbmcgY29udGV4dFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgZ2V0TW9kdWxlTmFtZSgpIHtcclxuICAgICAgICByZXR1cm4gVW5rbm93bk9wZXJhdGluZ0NvbnRleHQuTU9EVUxFX05BTUU7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBvcGVyYXRpbmcgY29udGV4dCBpcyBhdmFpbGFibGUuXHJcbiAgICAgKiBDb25maXJtcyB0aGF0IHRoZSBjb2RlIGlzIHJ1bm5pbmcgYSBicm93c2VyIHJhdGhlci4gIFRoaXMgaXMgcmVxdWlyZWQuXHJcbiAgICAgKiBAcmV0dXJucyBQcm9taXNlPGJvb2xlYW4+IGluZGljYXRpbmcgd2hldGhlciB0aGlzIG9wZXJhdGluZyBjb250ZXh0IGlzIGN1cnJlbnRseSBhdmFpbGFibGUuXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGluaXRpYWxpemUoKSB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhpcyBvcGVyYXRpbmcgY29udGV4dCBpcyBpbiB1c2Ugd2hlbiB3ZSBoYXZlIG5vdCBjaGVja2VkIGZvciB3aGF0IHRoZSBvcGVyYXRpbmcgY29udGV4dCBpcy5cclxuICAgICAgICAgKiBUaGUgY29udGV4dCBpcyB1bmtub3duIHVudGlsIHdlIGNoZWNrIGl0LlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG59XHJcbi8qXHJcbiAqIFRPRE86IE9uY2Ugd2UgaGF2ZSBkZXRlcm1pbmUgdGhlIGJ1bmRsaW5nIGNvZGUgcmV0dXJuIGhlcmUgdG8gc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgYnVuZGxlXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIG9wZXJhdGluZyBjb250ZXh0XHJcbiAqL1xyXG5Vbmtub3duT3BlcmF0aW5nQ29udGV4dC5NT0RVTEVfTkFNRSA9IFwiXCI7XHJcbi8qKlxyXG4gKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG9wZXJhdGluZyBjb250ZXh0XHJcbiAqL1xyXG5Vbmtub3duT3BlcmF0aW5nQ29udGV4dC5JRCA9IFwiVW5rbm93bk9wZXJhdGluZ0NvbnRleHRcIjtcblxuZXhwb3J0IHsgVW5rbm93bk9wZXJhdGluZ0NvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVua25vd25PcGVyYXRpbmdDb250ZXh0Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/operatingcontext/UnknownOperatingContext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/packageMetadata.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/packageMetadata.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: function() { return /* binding */ name; },\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/* eslint-disable header/header */\r\nconst name = \"@azure/msal-browser\";\r\nconst version = \"3.28.1\";\n\n\n//# sourceMappingURL=packageMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3BhY2thZ2VNZXRhZGF0YS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3BhY2thZ2VNZXRhZGF0YS5tanM/MjA1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIGhlYWRlci9oZWFkZXIgKi9cclxuY29uc3QgbmFtZSA9IFwiQGF6dXJlL21zYWwtYnJvd3NlclwiO1xyXG5jb25zdCB2ZXJzaW9uID0gXCIzLjI4LjFcIjtcblxuZXhwb3J0IHsgbmFtZSwgdmVyc2lvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFja2FnZU1ldGFkYXRhLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeBaseRequest: function() { return /* binding */ initializeBaseRequest; },\n/* harmony export */   initializeSilentRequest: function() { return /* binding */ initializeSilentRequest; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Initializer function for all request APIs\r\n * @param request\r\n */\r\nasync function initializeBaseRequest(request, config, performanceClient, logger) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.InitializeBaseRequest, request.correlationId);\r\n    const authority = request.authority || config.auth.authority;\r\n    const scopes = [...((request && request.scopes) || [])];\r\n    const validatedRequest = {\r\n        ...request,\r\n        correlationId: request.correlationId,\r\n        authority,\r\n        scopes,\r\n    };\r\n    // Set authenticationScheme to BEARER if not explicitly set in the request\r\n    if (!validatedRequest.authenticationScheme) {\r\n        validatedRequest.authenticationScheme = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER;\r\n        logger.verbose('Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request');\r\n    }\r\n    else {\r\n        if (validatedRequest.authenticationScheme === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.SSH) {\r\n            if (!request.sshJwk) {\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientConfigurationErrorCodes.missingSshJwk);\r\n            }\r\n            if (!request.sshKid) {\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientConfigurationErrorCodes.missingSshKid);\r\n            }\r\n        }\r\n        logger.verbose(`Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`);\r\n    }\r\n    // Set requested claims hash if claims-based caching is enabled and claims were requested\r\n    if (config.cache.claimsBasedCachingEnabled &&\r\n        request.claims &&\r\n        // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\r\n        !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isEmptyObj(request.claims)) {\r\n        validatedRequest.requestedClaimsHash = await (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_1__.hashString)(request.claims);\r\n    }\r\n    return validatedRequest;\r\n}\r\nasync function initializeSilentRequest(request, account, config, performanceClient, logger) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.InitializeSilentRequest, request.correlationId);\r\n    const baseRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invokeAsync)(initializeBaseRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.InitializeBaseRequest, logger, performanceClient, request.correlationId)(request, config, performanceClient, logger);\r\n    return {\r\n        ...request,\r\n        ...baseRequest,\r\n        account: account,\r\n        forceRefresh: request.forceRefresh || false,\r\n    };\r\n}\n\n\n//# sourceMappingURL=RequestHelpers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3JlcXVlc3QvUmVxdWVzdEhlbHBlcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2lLO0FBQ3JIOztBQUV6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMseUVBQWlCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELDRFQUFvQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsNEVBQW9CO0FBQzFFO0FBQ0Esc0JBQXNCLDBGQUE4QixDQUFDLHFGQUE2QjtBQUNsRjtBQUNBO0FBQ0Esc0JBQXNCLDBGQUE4QixDQUFDLHFGQUE2QjtBQUNsRjtBQUNBO0FBQ0Esd0RBQXdELHNDQUFzQztBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRCxTQUFTLG1FQUFXO0FBQ3BCLHFEQUFxRCxxRUFBVTtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyx5RUFBaUI7QUFDM0QsOEJBQThCLHVFQUFXLHdCQUF3Qix5RUFBaUI7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBEO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvcmVxdWVzdC9SZXF1ZXN0SGVscGVycy5tanM/ZGY5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFBlcmZvcm1hbmNlRXZlbnRzLCBpbnZva2VBc3luYywgQXV0aGVudGljYXRpb25TY2hlbWUsIGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvciwgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMsIFN0cmluZ1V0aWxzIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuaW1wb3J0IHsgaGFzaFN0cmluZyB9IGZyb20gJy4uL2NyeXB0by9Ccm93c2VyQ3J5cHRvLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogSW5pdGlhbGl6ZXIgZnVuY3Rpb24gZm9yIGFsbCByZXF1ZXN0IEFQSXNcclxuICogQHBhcmFtIHJlcXVlc3RcclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGluaXRpYWxpemVCYXNlUmVxdWVzdChyZXF1ZXN0LCBjb25maWcsIHBlcmZvcm1hbmNlQ2xpZW50LCBsb2dnZXIpIHtcclxuICAgIHBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuSW5pdGlhbGl6ZUJhc2VSZXF1ZXN0LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgY29uc3QgYXV0aG9yaXR5ID0gcmVxdWVzdC5hdXRob3JpdHkgfHwgY29uZmlnLmF1dGguYXV0aG9yaXR5O1xyXG4gICAgY29uc3Qgc2NvcGVzID0gWy4uLigocmVxdWVzdCAmJiByZXF1ZXN0LnNjb3BlcykgfHwgW10pXTtcclxuICAgIGNvbnN0IHZhbGlkYXRlZFJlcXVlc3QgPSB7XHJcbiAgICAgICAgLi4ucmVxdWVzdCxcclxuICAgICAgICBjb3JyZWxhdGlvbklkOiByZXF1ZXN0LmNvcnJlbGF0aW9uSWQsXHJcbiAgICAgICAgYXV0aG9yaXR5LFxyXG4gICAgICAgIHNjb3BlcyxcclxuICAgIH07XHJcbiAgICAvLyBTZXQgYXV0aGVudGljYXRpb25TY2hlbWUgdG8gQkVBUkVSIGlmIG5vdCBleHBsaWNpdGx5IHNldCBpbiB0aGUgcmVxdWVzdFxyXG4gICAgaWYgKCF2YWxpZGF0ZWRSZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lKSB7XHJcbiAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5hdXRoZW50aWNhdGlvblNjaGVtZSA9IEF1dGhlbnRpY2F0aW9uU2NoZW1lLkJFQVJFUjtcclxuICAgICAgICBsb2dnZXIudmVyYm9zZSgnQXV0aGVudGljYXRpb24gU2NoZW1lIHdhc25cXCd0IGV4cGxpY2l0bHkgc2V0IGluIHJlcXVlc3QsIGRlZmF1bHRpbmcgdG8gXCJCZWFyZXJcIiByZXF1ZXN0Jyk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBpZiAodmFsaWRhdGVkUmVxdWVzdC5hdXRoZW50aWNhdGlvblNjaGVtZSA9PT0gQXV0aGVudGljYXRpb25TY2hlbWUuU1NIKSB7XHJcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5zc2hKd2spIHtcclxuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvcihDbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2Rlcy5taXNzaW5nU3NoSndrKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIXJlcXVlc3Quc3NoS2lkKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMubWlzc2luZ1NzaEtpZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbG9nZ2VyLnZlcmJvc2UoYEF1dGhlbnRpY2F0aW9uIFNjaGVtZSBzZXQgdG8gXCIke3ZhbGlkYXRlZFJlcXVlc3QuYXV0aGVudGljYXRpb25TY2hlbWV9XCIgYXMgY29uZmlndXJlZCBpbiBBdXRoIHJlcXVlc3RgKTtcclxuICAgIH1cclxuICAgIC8vIFNldCByZXF1ZXN0ZWQgY2xhaW1zIGhhc2ggaWYgY2xhaW1zLWJhc2VkIGNhY2hpbmcgaXMgZW5hYmxlZCBhbmQgY2xhaW1zIHdlcmUgcmVxdWVzdGVkXHJcbiAgICBpZiAoY29uZmlnLmNhY2hlLmNsYWltc0Jhc2VkQ2FjaGluZ0VuYWJsZWQgJiZcclxuICAgICAgICByZXF1ZXN0LmNsYWltcyAmJlxyXG4gICAgICAgIC8vIENoZWNrcyBmb3IgZW1wdHkgc3RyaW5naWZpZWQgb2JqZWN0IFwie31cIiB3aGljaCBkb2Vzbid0IHF1YWxpZnkgYXMgcmVxdWVzdGVkIGNsYWltc1xyXG4gICAgICAgICFTdHJpbmdVdGlscy5pc0VtcHR5T2JqKHJlcXVlc3QuY2xhaW1zKSkge1xyXG4gICAgICAgIHZhbGlkYXRlZFJlcXVlc3QucmVxdWVzdGVkQ2xhaW1zSGFzaCA9IGF3YWl0IGhhc2hTdHJpbmcocmVxdWVzdC5jbGFpbXMpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHZhbGlkYXRlZFJlcXVlc3Q7XHJcbn1cclxuYXN5bmMgZnVuY3Rpb24gaW5pdGlhbGl6ZVNpbGVudFJlcXVlc3QocmVxdWVzdCwgYWNjb3VudCwgY29uZmlnLCBwZXJmb3JtYW5jZUNsaWVudCwgbG9nZ2VyKSB7XHJcbiAgICBwZXJmb3JtYW5jZUNsaWVudC5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLkluaXRpYWxpemVTaWxlbnRSZXF1ZXN0LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgY29uc3QgYmFzZVJlcXVlc3QgPSBhd2FpdCBpbnZva2VBc3luYyhpbml0aWFsaXplQmFzZVJlcXVlc3QsIFBlcmZvcm1hbmNlRXZlbnRzLkluaXRpYWxpemVCYXNlUmVxdWVzdCwgbG9nZ2VyLCBwZXJmb3JtYW5jZUNsaWVudCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKShyZXF1ZXN0LCBjb25maWcsIHBlcmZvcm1hbmNlQ2xpZW50LCBsb2dnZXIpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICAuLi5yZXF1ZXN0LFxyXG4gICAgICAgIC4uLmJhc2VSZXF1ZXN0LFxyXG4gICAgICAgIGFjY291bnQ6IGFjY291bnQsXHJcbiAgICAgICAgZm9yY2VSZWZyZXNoOiByZXF1ZXN0LmZvcmNlUmVmcmVzaCB8fCBmYWxzZSxcclxuICAgIH07XHJcbn1cblxuZXhwb3J0IHsgaW5pdGlhbGl6ZUJhc2VSZXF1ZXN0LCBpbml0aWFsaXplU2lsZW50UmVxdWVzdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVxdWVzdEhlbHBlcnMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializeResponse: function() { return /* binding */ deserializeResponse; },\n/* harmony export */   validateInteractionType: function() { return /* binding */ validateInteractionType; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserProtocolUtils.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction deserializeResponse(responseString, responseLocation, logger) {\r\n    // Deserialize hash fragment response parameters.\r\n    const serverParams = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.UrlUtils.getDeserializedResponse(responseString);\r\n    if (!serverParams) {\r\n        if (!_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.UrlUtils.stripLeadingHashOrQuery(responseString)) {\r\n            // Hash or Query string is empty\r\n            logger.error(`The request has returned to the redirectUri but a ${responseLocation} is not present. It's likely that the ${responseLocation} has been removed or the page has been redirected by code running on the redirectUri page.`);\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.hashEmptyError);\r\n        }\r\n        else {\r\n            logger.error(`A ${responseLocation} is present in the iframe but it does not contain known properties. It's likely that the ${responseLocation} has been replaced by code running on the redirectUri page.`);\r\n            logger.errorPii(`The ${responseLocation} detected is: ${responseString}`);\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.hashDoesNotContainKnownProperties);\r\n        }\r\n    }\r\n    return serverParams;\r\n}\r\n/**\r\n * Returns the interaction type that the response object belongs to\r\n */\r\nfunction validateInteractionType(response, browserCrypto, interactionType) {\r\n    if (!response.state) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noStateInHash);\r\n    }\r\n    const platformStateObj = (0,_utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.extractBrowserRequestState)(browserCrypto, response.state);\r\n    if (!platformStateObj) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.unableToParseState);\r\n    }\r\n    if (platformStateObj.interactionType !== interactionType) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.stateInteractionTypeMismatch);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ResponseHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3Jlc3BvbnNlL1Jlc3BvbnNlSGFuZGxlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUN5QztBQUNpQjtBQUNRO0FBQ3lGOztBQUV4SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0VBQVE7QUFDakM7QUFDQSxhQUFhLGdFQUFRO0FBQ3JCO0FBQ0EsOEVBQThFLGtCQUFrQix1Q0FBdUMsa0JBQWtCO0FBQ3pKLGtCQUFrQixtRkFBc0IsQ0FBQyw0RUFBYztBQUN2RDtBQUNBO0FBQ0EsOEJBQThCLGtCQUFrQiwwRkFBMEYsa0JBQWtCO0FBQzVKLG1DQUFtQyxrQkFBa0IsZUFBZSxlQUFlO0FBQ25GLGtCQUFrQixtRkFBc0IsQ0FBQywrRkFBaUM7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtRkFBc0IsQ0FBQywyRUFBYTtBQUNsRDtBQUNBLDZCQUE2QiwyRkFBMEI7QUFDdkQ7QUFDQSxjQUFjLG1GQUFzQixDQUFDLGdGQUFrQjtBQUN2RDtBQUNBO0FBQ0EsY0FBYyxtRkFBc0IsQ0FBQywwRkFBNEI7QUFDakU7QUFDQTs7QUFFd0Q7QUFDeEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9yZXNwb25zZS9SZXNwb25zZUhhbmRsZXIubWpzP2FkMjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjguMSAyMDI1LTAxLTE0ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBVcmxVdGlscyB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBleHRyYWN0QnJvd3NlclJlcXVlc3RTdGF0ZSB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJQcm90b2NvbFV0aWxzLm1qcyc7XG5pbXBvcnQgeyBoYXNoRW1wdHlFcnJvciwgaGFzaERvZXNOb3RDb250YWluS25vd25Qcm9wZXJ0aWVzLCBub1N0YXRlSW5IYXNoLCB1bmFibGVUb1BhcnNlU3RhdGUsIHN0YXRlSW50ZXJhY3Rpb25UeXBlTWlzbWF0Y2ggfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmZ1bmN0aW9uIGRlc2VyaWFsaXplUmVzcG9uc2UocmVzcG9uc2VTdHJpbmcsIHJlc3BvbnNlTG9jYXRpb24sIGxvZ2dlcikge1xyXG4gICAgLy8gRGVzZXJpYWxpemUgaGFzaCBmcmFnbWVudCByZXNwb25zZSBwYXJhbWV0ZXJzLlxyXG4gICAgY29uc3Qgc2VydmVyUGFyYW1zID0gVXJsVXRpbHMuZ2V0RGVzZXJpYWxpemVkUmVzcG9uc2UocmVzcG9uc2VTdHJpbmcpO1xyXG4gICAgaWYgKCFzZXJ2ZXJQYXJhbXMpIHtcclxuICAgICAgICBpZiAoIVVybFV0aWxzLnN0cmlwTGVhZGluZ0hhc2hPclF1ZXJ5KHJlc3BvbnNlU3RyaW5nKSkge1xyXG4gICAgICAgICAgICAvLyBIYXNoIG9yIFF1ZXJ5IHN0cmluZyBpcyBlbXB0eVxyXG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IoYFRoZSByZXF1ZXN0IGhhcyByZXR1cm5lZCB0byB0aGUgcmVkaXJlY3RVcmkgYnV0IGEgJHtyZXNwb25zZUxvY2F0aW9ufSBpcyBub3QgcHJlc2VudC4gSXQncyBsaWtlbHkgdGhhdCB0aGUgJHtyZXNwb25zZUxvY2F0aW9ufSBoYXMgYmVlbiByZW1vdmVkIG9yIHRoZSBwYWdlIGhhcyBiZWVuIHJlZGlyZWN0ZWQgYnkgY29kZSBydW5uaW5nIG9uIHRoZSByZWRpcmVjdFVyaSBwYWdlLmApO1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGhhc2hFbXB0eUVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci5lcnJvcihgQSAke3Jlc3BvbnNlTG9jYXRpb259IGlzIHByZXNlbnQgaW4gdGhlIGlmcmFtZSBidXQgaXQgZG9lcyBub3QgY29udGFpbiBrbm93biBwcm9wZXJ0aWVzLiBJdCdzIGxpa2VseSB0aGF0IHRoZSAke3Jlc3BvbnNlTG9jYXRpb259IGhhcyBiZWVuIHJlcGxhY2VkIGJ5IGNvZGUgcnVubmluZyBvbiB0aGUgcmVkaXJlY3RVcmkgcGFnZS5gKTtcclxuICAgICAgICAgICAgbG9nZ2VyLmVycm9yUGlpKGBUaGUgJHtyZXNwb25zZUxvY2F0aW9ufSBkZXRlY3RlZCBpczogJHtyZXNwb25zZVN0cmluZ31gKTtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcihoYXNoRG9lc05vdENvbnRhaW5Lbm93blByb3BlcnRpZXMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBzZXJ2ZXJQYXJhbXM7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgdGhlIGludGVyYWN0aW9uIHR5cGUgdGhhdCB0aGUgcmVzcG9uc2Ugb2JqZWN0IGJlbG9uZ3MgdG9cclxuICovXHJcbmZ1bmN0aW9uIHZhbGlkYXRlSW50ZXJhY3Rpb25UeXBlKHJlc3BvbnNlLCBicm93c2VyQ3J5cHRvLCBpbnRlcmFjdGlvblR5cGUpIHtcclxuICAgIGlmICghcmVzcG9uc2Uuc3RhdGUpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKG5vU3RhdGVJbkhhc2gpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgcGxhdGZvcm1TdGF0ZU9iaiA9IGV4dHJhY3RCcm93c2VyUmVxdWVzdFN0YXRlKGJyb3dzZXJDcnlwdG8sIHJlc3BvbnNlLnN0YXRlKTtcclxuICAgIGlmICghcGxhdGZvcm1TdGF0ZU9iaikge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IodW5hYmxlVG9QYXJzZVN0YXRlKTtcclxuICAgIH1cclxuICAgIGlmIChwbGF0Zm9ybVN0YXRlT2JqLmludGVyYWN0aW9uVHlwZSAhPT0gaW50ZXJhY3Rpb25UeXBlKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcihzdGF0ZUludGVyYWN0aW9uVHlwZU1pc21hdGNoKTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBkZXNlcmlhbGl6ZVJlc3BvbnNlLCB2YWxpZGF0ZUludGVyYWN0aW9uVHlwZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVzcG9uc2VIYW5kbGVyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceClient.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceClient.mjs ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserPerformanceClient: function() { return /* binding */ BrowserPerformanceClient; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns browser performance measurement module if session flag is enabled. Returns undefined otherwise.\r\n */\r\nfunction getPerfMeasurementModule() {\r\n    let sessionStorage;\r\n    try {\r\n        sessionStorage = window[_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserCacheLocation.SessionStorage];\r\n        const perfEnabled = sessionStorage?.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.BROWSER_PERF_ENABLED_KEY);\r\n        if (Number(perfEnabled) === 1) {\r\n            return Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./BrowserPerformanceMeasurement.mjs */ \"./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs\"));\r\n        }\r\n        // Mute errors if it's a non-browser environment or cookies are blocked.\r\n    }\r\n    catch (e) { }\r\n    return undefined;\r\n}\r\n/**\r\n * Returns boolean, indicating whether browser supports window.performance.now() function.\r\n */\r\nfunction supportsBrowserPerformanceNow() {\r\n    return (typeof window !== \"undefined\" &&\r\n        typeof window.performance !== \"undefined\" &&\r\n        typeof window.performance.now === \"function\");\r\n}\r\n/**\r\n * Returns event duration in milliseconds using window performance API if available. Returns undefined otherwise.\r\n * @param startTime {DOMHighResTimeStamp | undefined}\r\n * @returns {number | undefined}\r\n */\r\nfunction getPerfDurationMs(startTime) {\r\n    if (!startTime || !supportsBrowserPerformanceNow()) {\r\n        return undefined;\r\n    }\r\n    return Math.round(window.performance.now() - startTime);\r\n}\r\nclass BrowserPerformanceClient extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceClient {\r\n    constructor(configuration, intFields, abbreviations) {\r\n        super(configuration.auth.clientId, configuration.auth.authority || `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_AUTHORITY}`, new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.Logger(configuration.system?.loggerOptions || {}, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version), _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version, configuration.telemetry?.application || {\r\n            appName: \"\",\r\n            appVersion: \"\",\r\n        }, intFields, abbreviations);\r\n    }\r\n    generateId() {\r\n        return (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_3__.createNewGuid)();\r\n    }\r\n    getPageVisibility() {\r\n        return document.visibilityState?.toString() || null;\r\n    }\r\n    deleteIncompleteSubMeasurements(inProgressEvent) {\r\n        void getPerfMeasurementModule()?.then((module) => {\r\n            const rootEvent = this.eventsByCorrelationId.get(inProgressEvent.event.correlationId);\r\n            const isRootEvent = rootEvent &&\r\n                rootEvent.eventId === inProgressEvent.event.eventId;\r\n            const incompleteMeasurements = [];\r\n            if (isRootEvent && rootEvent?.incompleteSubMeasurements) {\r\n                rootEvent.incompleteSubMeasurements.forEach((subMeasurement) => {\r\n                    incompleteMeasurements.push({ ...subMeasurement });\r\n                });\r\n            }\r\n            // Clean up remaining marks for incomplete sub-measurements\r\n            module.BrowserPerformanceMeasurement.flushMeasurements(inProgressEvent.event.correlationId, incompleteMeasurements);\r\n        });\r\n    }\r\n    /**\r\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\r\n     * Also captures browser page visibilityState.\r\n     *\r\n     * @param {PerformanceEvents} measureName\r\n     * @param {?string} [correlationId]\r\n     * @returns {((event?: Partial<PerformanceEvent>) => PerformanceEvent| null)}\r\n     */\r\n    startMeasurement(measureName, correlationId) {\r\n        // Capture page visibilityState and then invoke start/end measurement\r\n        const startPageVisibility = this.getPageVisibility();\r\n        const inProgressEvent = super.startMeasurement(measureName, correlationId);\r\n        const startTime = supportsBrowserPerformanceNow()\r\n            ? window.performance.now()\r\n            : undefined;\r\n        const browserMeasurement = getPerfMeasurementModule()?.then((module) => {\r\n            return new module.BrowserPerformanceMeasurement(measureName, inProgressEvent.event.correlationId);\r\n        });\r\n        void browserMeasurement?.then((measurement) => measurement.startMeasurement());\r\n        return {\r\n            ...inProgressEvent,\r\n            end: (event, error) => {\r\n                const res = inProgressEvent.end({\r\n                    ...event,\r\n                    startPageVisibility,\r\n                    endPageVisibility: this.getPageVisibility(),\r\n                    durationMs: getPerfDurationMs(startTime),\r\n                }, error);\r\n                void browserMeasurement?.then((measurement) => measurement.endMeasurement());\r\n                this.deleteIncompleteSubMeasurements(inProgressEvent);\r\n                return res;\r\n            },\r\n            discard: () => {\r\n                inProgressEvent.discard();\r\n                void browserMeasurement?.then((measurement) => measurement.flushMeasurement());\r\n                this.deleteIncompleteSubMeasurements(inProgressEvent);\r\n            },\r\n        };\r\n    }\r\n    /**\r\n     * Adds pre-queue time to preQueueTimeByCorrelationId map.\r\n     * @param {PerformanceEvents} eventName\r\n     * @param {?string} correlationId\r\n     * @returns\r\n     */\r\n    setPreQueueTime(eventName, correlationId) {\r\n        if (!supportsBrowserPerformanceNow()) {\r\n            this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to set telemetry queue time for ${eventName}`);\r\n            return;\r\n        }\r\n        if (!correlationId) {\r\n            this.logger.trace(`BrowserPerformanceClient: correlationId for ${eventName} not provided, unable to set telemetry queue time`);\r\n            return;\r\n        }\r\n        const preQueueEvent = this.preQueueTimeByCorrelationId.get(correlationId);\r\n        /**\r\n         * Manually complete queue measurement if there is an incomplete pre-queue event.\r\n         * Incomplete pre-queue events are instrumentation bugs that should be fixed.\r\n         */\r\n        if (preQueueEvent) {\r\n            this.logger.trace(`BrowserPerformanceClient: Incomplete pre-queue ${preQueueEvent.name} found`, correlationId);\r\n            this.addQueueMeasurement(preQueueEvent.name, correlationId, undefined, true);\r\n        }\r\n        this.preQueueTimeByCorrelationId.set(correlationId, {\r\n            name: eventName,\r\n            time: window.performance.now(),\r\n        });\r\n    }\r\n    /**\r\n     * Calculates and adds queue time measurement for given performance event.\r\n     *\r\n     * @param {PerformanceEvents} eventName\r\n     * @param {?string} correlationId\r\n     * @param {?number} queueTime\r\n     * @param {?boolean} manuallyCompleted - indicator for manually completed queue measurements\r\n     * @returns\r\n     */\r\n    addQueueMeasurement(eventName, correlationId, queueTime, manuallyCompleted) {\r\n        if (!supportsBrowserPerformanceNow()) {\r\n            this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to add queue measurement for ${eventName}`);\r\n            return;\r\n        }\r\n        if (!correlationId) {\r\n            this.logger.trace(`BrowserPerformanceClient: correlationId for ${eventName} not provided, unable to add queue measurement`);\r\n            return;\r\n        }\r\n        const preQueueTime = super.getPreQueueTime(eventName, correlationId);\r\n        if (!preQueueTime) {\r\n            return;\r\n        }\r\n        const currentTime = window.performance.now();\r\n        const resQueueTime = queueTime || super.calculateQueuedTime(preQueueTime, currentTime);\r\n        return super.addQueueMeasurement(eventName, correlationId, resQueueTime, manuallyCompleted);\r\n    }\r\n}\n\n\n//# sourceMappingURL=BrowserPerformanceClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserPerformanceMeasurement: function() { return /* binding */ BrowserPerformanceMeasurement; }\n/* harmony export */ });\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass BrowserPerformanceMeasurement {\r\n    constructor(name, correlationId) {\r\n        this.correlationId = correlationId;\r\n        this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\r\n        this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\r\n        this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\r\n    }\r\n    static makeMeasureName(name, correlationId) {\r\n        return `msal.measure.${name}.${correlationId}`;\r\n    }\r\n    static makeStartMark(name, correlationId) {\r\n        return `msal.start.${name}.${correlationId}`;\r\n    }\r\n    static makeEndMark(name, correlationId) {\r\n        return `msal.end.${name}.${correlationId}`;\r\n    }\r\n    static supportsBrowserPerformance() {\r\n        return (typeof window !== \"undefined\" &&\r\n            typeof window.performance !== \"undefined\" &&\r\n            typeof window.performance.mark === \"function\" &&\r\n            typeof window.performance.measure === \"function\" &&\r\n            typeof window.performance.clearMarks === \"function\" &&\r\n            typeof window.performance.clearMeasures === \"function\" &&\r\n            typeof window.performance.getEntriesByName === \"function\");\r\n    }\r\n    /**\r\n     * Flush browser marks and measurements.\r\n     * @param {string} correlationId\r\n     * @param {SubMeasurement} measurements\r\n     */\r\n    static flushMeasurements(correlationId, measurements) {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                measurements.forEach((measurement) => {\r\n                    const measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\r\n                    const entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\r\n                    if (entriesForMeasurement.length > 0) {\r\n                        window.performance.clearMeasures(measureName);\r\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\r\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n    }\r\n    startMeasurement() {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.startMark);\r\n            }\r\n            catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    }\r\n    endMeasurement() {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.endMark);\r\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\r\n            }\r\n            catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    }\r\n    flushMeasurement() {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                const entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\r\n                if (entriesForMeasurement.length > 0) {\r\n                    const durationMs = entriesForMeasurement[0].duration;\r\n                    window.performance.clearMeasures(this.measureName);\r\n                    window.performance.clearMarks(this.startMark);\r\n                    window.performance.clearMarks(this.endMark);\r\n                    return durationMs;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=BrowserPerformanceMeasurement.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3RlbGVtZXRyeS9Ccm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsS0FBSyxHQUFHLGNBQWM7QUFDckQ7QUFDQTtBQUNBLDZCQUE2QixLQUFLLEdBQUcsY0FBYztBQUNuRDtBQUNBO0FBQ0EsMkJBQTJCLEtBQUssR0FBRyxjQUFjO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvdGVsZW1ldHJ5L0Jyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50Lm1qcz8xYWQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIEJyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICB0aGlzLmNvcnJlbGF0aW9uSWQgPSBjb3JyZWxhdGlvbklkO1xyXG4gICAgICAgIHRoaXMubWVhc3VyZU5hbWUgPSBCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5tYWtlTWVhc3VyZU5hbWUobmFtZSwgY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgdGhpcy5zdGFydE1hcmsgPSBCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5tYWtlU3RhcnRNYXJrKG5hbWUsIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIHRoaXMuZW5kTWFyayA9IEJyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50Lm1ha2VFbmRNYXJrKG5hbWUsIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIG1ha2VNZWFzdXJlTmFtZShuYW1lLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgcmV0dXJuIGBtc2FsLm1lYXN1cmUuJHtuYW1lfS4ke2NvcnJlbGF0aW9uSWR9YDtcclxuICAgIH1cclxuICAgIHN0YXRpYyBtYWtlU3RhcnRNYXJrKG5hbWUsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICByZXR1cm4gYG1zYWwuc3RhcnQuJHtuYW1lfS4ke2NvcnJlbGF0aW9uSWR9YDtcclxuICAgIH1cclxuICAgIHN0YXRpYyBtYWtlRW5kTWFyayhuYW1lLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgcmV0dXJuIGBtc2FsLmVuZC4ke25hbWV9LiR7Y29ycmVsYXRpb25JZH1gO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIHN1cHBvcnRzQnJvd3NlclBlcmZvcm1hbmNlKCkge1xyXG4gICAgICAgIHJldHVybiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxyXG4gICAgICAgICAgICB0eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlICE9PSBcInVuZGVmaW5lZFwiICYmXHJcbiAgICAgICAgICAgIHR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UubWFyayA9PT0gXCJmdW5jdGlvblwiICYmXHJcbiAgICAgICAgICAgIHR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UubWVhc3VyZSA9PT0gXCJmdW5jdGlvblwiICYmXHJcbiAgICAgICAgICAgIHR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UuY2xlYXJNYXJrcyA9PT0gXCJmdW5jdGlvblwiICYmXHJcbiAgICAgICAgICAgIHR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UuY2xlYXJNZWFzdXJlcyA9PT0gXCJmdW5jdGlvblwiICYmXHJcbiAgICAgICAgICAgIHR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5TmFtZSA9PT0gXCJmdW5jdGlvblwiKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRmx1c2ggYnJvd3NlciBtYXJrcyBhbmQgbWVhc3VyZW1lbnRzLlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvcnJlbGF0aW9uSWRcclxuICAgICAqIEBwYXJhbSB7U3ViTWVhc3VyZW1lbnR9IG1lYXN1cmVtZW50c1xyXG4gICAgICovXHJcbiAgICBzdGF0aWMgZmx1c2hNZWFzdXJlbWVudHMoY29ycmVsYXRpb25JZCwgbWVhc3VyZW1lbnRzKSB7XHJcbiAgICAgICAgaWYgKEJyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50LnN1cHBvcnRzQnJvd3NlclBlcmZvcm1hbmNlKCkpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIG1lYXN1cmVtZW50cy5mb3JFYWNoKChtZWFzdXJlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lYXN1cmVOYW1lID0gQnJvd3NlclBlcmZvcm1hbmNlTWVhc3VyZW1lbnQubWFrZU1lYXN1cmVOYW1lKG1lYXN1cmVtZW50Lm5hbWUsIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVudHJpZXNGb3JNZWFzdXJlbWVudCA9IHdpbmRvdy5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lKG1lYXN1cmVOYW1lLCBcIm1lYXN1cmVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVudHJpZXNGb3JNZWFzdXJlbWVudC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5wZXJmb3JtYW5jZS5jbGVhck1lYXN1cmVzKG1lYXN1cmVOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnBlcmZvcm1hbmNlLmNsZWFyTWFya3MoQnJvd3NlclBlcmZvcm1hbmNlTWVhc3VyZW1lbnQubWFrZVN0YXJ0TWFyayhtZWFzdXJlTmFtZSwgY29ycmVsYXRpb25JZCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cucGVyZm9ybWFuY2UuY2xlYXJNYXJrcyhCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5tYWtlRW5kTWFyayhtZWFzdXJlTmFtZSwgY29ycmVsYXRpb25JZCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBTaWxlbnRseSBjYXRjaCBhbmQgcmV0dXJuIG51bGxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHN0YXJ0TWVhc3VyZW1lbnQoKSB7XHJcbiAgICAgICAgaWYgKEJyb3dzZXJQZXJmb3JtYW5jZU1lYXN1cmVtZW50LnN1cHBvcnRzQnJvd3NlclBlcmZvcm1hbmNlKCkpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5wZXJmb3JtYW5jZS5tYXJrKHRoaXMuc3RhcnRNYXJrKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgLy8gU2lsZW50bHkgY2F0Y2hcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGVuZE1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIGlmIChCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5zdXBwb3J0c0Jyb3dzZXJQZXJmb3JtYW5jZSgpKSB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cucGVyZm9ybWFuY2UubWFyayh0aGlzLmVuZE1hcmspO1xyXG4gICAgICAgICAgICAgICAgd2luZG93LnBlcmZvcm1hbmNlLm1lYXN1cmUodGhpcy5tZWFzdXJlTmFtZSwgdGhpcy5zdGFydE1hcmssIHRoaXMuZW5kTWFyayk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgIC8vIFNpbGVudGx5IGNhdGNoXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmbHVzaE1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIGlmIChCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudC5zdXBwb3J0c0Jyb3dzZXJQZXJmb3JtYW5jZSgpKSB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBlbnRyaWVzRm9yTWVhc3VyZW1lbnQgPSB3aW5kb3cucGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5TmFtZSh0aGlzLm1lYXN1cmVOYW1lLCBcIm1lYXN1cmVcIik7XHJcbiAgICAgICAgICAgICAgICBpZiAoZW50cmllc0Zvck1lYXN1cmVtZW50Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBkdXJhdGlvbk1zID0gZW50cmllc0Zvck1lYXN1cmVtZW50WzBdLmR1cmF0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5wZXJmb3JtYW5jZS5jbGVhck1lYXN1cmVzKHRoaXMubWVhc3VyZU5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5wZXJmb3JtYW5jZS5jbGVhck1hcmtzKHRoaXMuc3RhcnRNYXJrKTtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cucGVyZm9ybWFuY2UuY2xlYXJNYXJrcyh0aGlzLmVuZE1hcmspO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkdXJhdGlvbk1zO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBTaWxlbnRseSBjYXRjaCBhbmQgcmV0dXJuIG51bGxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBCcm93c2VyUGVyZm9ybWFuY2VNZWFzdXJlbWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnJvd3NlclBlcmZvcm1hbmNlTWVhc3VyZW1lbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiId: function() { return /* binding */ ApiId; },\n/* harmony export */   BROWSER_PERF_ENABLED_KEY: function() { return /* binding */ BROWSER_PERF_ENABLED_KEY; },\n/* harmony export */   BrowserCacheLocation: function() { return /* binding */ BrowserCacheLocation; },\n/* harmony export */   BrowserConstants: function() { return /* binding */ BrowserConstants; },\n/* harmony export */   CacheLookupPolicy: function() { return /* binding */ CacheLookupPolicy; },\n/* harmony export */   DB_NAME: function() { return /* binding */ DB_NAME; },\n/* harmony export */   DB_TABLE_NAME: function() { return /* binding */ DB_TABLE_NAME; },\n/* harmony export */   DB_VERSION: function() { return /* binding */ DB_VERSION; },\n/* harmony export */   DEFAULT_REQUEST: function() { return /* binding */ DEFAULT_REQUEST; },\n/* harmony export */   HTTP_REQUEST_TYPE: function() { return /* binding */ HTTP_REQUEST_TYPE; },\n/* harmony export */   InMemoryCacheKeys: function() { return /* binding */ InMemoryCacheKeys; },\n/* harmony export */   InteractionStatus: function() { return /* binding */ InteractionStatus; },\n/* harmony export */   InteractionType: function() { return /* binding */ InteractionType; },\n/* harmony export */   KEY_FORMAT_JWK: function() { return /* binding */ KEY_FORMAT_JWK; },\n/* harmony export */   LOG_LEVEL_CACHE_KEY: function() { return /* binding */ LOG_LEVEL_CACHE_KEY; },\n/* harmony export */   LOG_PII_CACHE_KEY: function() { return /* binding */ LOG_PII_CACHE_KEY; },\n/* harmony export */   NativeConstants: function() { return /* binding */ NativeConstants; },\n/* harmony export */   NativeExtensionMethod: function() { return /* binding */ NativeExtensionMethod; },\n/* harmony export */   StaticCacheKeys: function() { return /* binding */ StaticCacheKeys; },\n/* harmony export */   TemporaryCacheKeys: function() { return /* binding */ TemporaryCacheKeys; },\n/* harmony export */   WrapperSKU: function() { return /* binding */ WrapperSKU; },\n/* harmony export */   iFrameRenewalPolicies: function() { return /* binding */ iFrameRenewalPolicies; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Constants\r\n */\r\nconst BrowserConstants = {\r\n    /**\r\n     * Interaction in progress cache value\r\n     */\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    /**\r\n     * Invalid grant error code\r\n     */\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    /**\r\n     * Default popup window width\r\n     */\r\n    POPUP_WIDTH: 483,\r\n    /**\r\n     * Default popup window height\r\n     */\r\n    POPUP_HEIGHT: 600,\r\n    /**\r\n     * Name of the popup window starts with\r\n     */\r\n    POPUP_NAME_PREFIX: \"msal\",\r\n    /**\r\n     * Default popup monitor poll interval in milliseconds\r\n     */\r\n    DEFAULT_POLL_INTERVAL_MS: 30,\r\n    /**\r\n     * Msal-browser SKU\r\n     */\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\nconst NativeConstants = {\r\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\r\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\r\n    MATS_TELEMETRY: \"MATS\",\r\n};\r\nconst NativeExtensionMethod = {\r\n    HandshakeRequest: \"Handshake\",\r\n    HandshakeResponse: \"HandshakeResponse\",\r\n    GetToken: \"GetToken\",\r\n    Response: \"Response\",\r\n};\r\nconst BrowserCacheLocation = {\r\n    LocalStorage: \"localStorage\",\r\n    SessionStorage: \"sessionStorage\",\r\n    MemoryStorage: \"memoryStorage\",\r\n};\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nconst HTTP_REQUEST_TYPE = {\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n};\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nconst TemporaryCacheKeys = {\r\n    AUTHORITY: \"authority\",\r\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\r\n    SESSION_STATE: \"session.state\",\r\n    REQUEST_STATE: \"request.state\",\r\n    NONCE_IDTOKEN: \"nonce.id_token\",\r\n    ORIGIN_URI: \"request.origin\",\r\n    RENEW_STATUS: \"token.renew.status\",\r\n    URL_HASH: \"urlHash\",\r\n    REQUEST_PARAMS: \"request.params\",\r\n    SCOPES: \"scopes\",\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    CCS_CREDENTIAL: \"ccs.credential\",\r\n    CORRELATION_ID: \"request.correlationId\",\r\n    NATIVE_REQUEST: \"request.native\",\r\n    REDIRECT_CONTEXT: \"request.redirect.context\",\r\n};\r\nconst StaticCacheKeys = {\r\n    ACCOUNT_KEYS: \"msal.account.keys\",\r\n    TOKEN_KEYS: \"msal.token.keys\",\r\n};\r\n/**\r\n * Cache keys stored in-memory\r\n */\r\nconst InMemoryCacheKeys = {\r\n    WRAPPER_SKU: \"wrapper.sku\",\r\n    WRAPPER_VER: \"wrapper.version\",\r\n};\r\n/**\r\n * API Codes for Telemetry purposes.\r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 800-899 Auth Code Flow\r\n */\r\nconst ApiId = {\r\n    acquireTokenRedirect: 861,\r\n    acquireTokenPopup: 862,\r\n    ssoSilent: 863,\r\n    acquireTokenSilent_authCode: 864,\r\n    handleRedirectPromise: 865,\r\n    acquireTokenByCode: 866,\r\n    acquireTokenSilent_silentFlow: 61,\r\n    logout: 961,\r\n    logoutPopup: 962,\r\n};\r\n/*\r\n * Interaction type of the API - used for state and telemetry\r\n */\r\nvar InteractionType;\r\n(function (InteractionType) {\r\n    InteractionType[\"Redirect\"] = \"redirect\";\r\n    InteractionType[\"Popup\"] = \"popup\";\r\n    InteractionType[\"Silent\"] = \"silent\";\r\n    InteractionType[\"None\"] = \"none\";\r\n})(InteractionType || (InteractionType = {}));\r\n/**\r\n * Types of interaction currently in progress.\r\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\r\n */\r\nconst InteractionStatus = {\r\n    /**\r\n     * Initial status before interaction occurs\r\n     */\r\n    Startup: \"startup\",\r\n    /**\r\n     * Status set when all login calls occuring\r\n     */\r\n    Login: \"login\",\r\n    /**\r\n     * Status set when logout call occuring\r\n     */\r\n    Logout: \"logout\",\r\n    /**\r\n     * Status set for acquireToken calls\r\n     */\r\n    AcquireToken: \"acquireToken\",\r\n    /**\r\n     * Status set for ssoSilent calls\r\n     */\r\n    SsoSilent: \"ssoSilent\",\r\n    /**\r\n     * Status set when handleRedirect in progress\r\n     */\r\n    HandleRedirect: \"handleRedirect\",\r\n    /**\r\n     * Status set when interaction is complete\r\n     */\r\n    None: \"none\",\r\n};\r\nconst DEFAULT_REQUEST = {\r\n    scopes: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.OIDC_DEFAULT_SCOPES,\r\n};\r\n/**\r\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\r\n */\r\nconst KEY_FORMAT_JWK = \"jwk\";\r\n// Supported wrapper SKUs\r\nconst WrapperSKU = {\r\n    React: \"@azure/msal-react\",\r\n    Angular: \"@azure/msal-angular\",\r\n};\r\n// DatabaseStorage Constants\r\nconst DB_NAME = \"msal.db\";\r\nconst DB_VERSION = 1;\r\nconst DB_TABLE_NAME = `${DB_NAME}.keys`;\r\nconst CacheLookupPolicy = {\r\n    /*\r\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\r\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\r\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\r\n     */\r\n    Default: 0,\r\n    /*\r\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\r\n     * refresh tokens.\r\n     */\r\n    AccessToken: 1,\r\n    /*\r\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\r\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\r\n     * will not be renewed and acquireTokenSilent will fail.\r\n     */\r\n    AccessTokenAndRefreshToken: 2,\r\n    /*\r\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\r\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\r\n     * renewed and acquireTokenSilent will fail.\r\n     */\r\n    RefreshToken: 3,\r\n    /*\r\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\r\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\r\n     * setting \"forceRefresh: true\".\r\n     */\r\n    RefreshTokenAndNetwork: 4,\r\n    /*\r\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\r\n     * always fail if 3rd party cookies are blocked by the browser.\r\n     */\r\n    Skip: 5,\r\n};\r\nconst iFrameRenewalPolicies = [\r\n    CacheLookupPolicy.Default,\r\n    CacheLookupPolicy.Skip,\r\n    CacheLookupPolicy.RefreshTokenAndNetwork,\r\n];\r\nconst LOG_LEVEL_CACHE_KEY = \"msal.browser.log.level\";\r\nconst LOG_PII_CACHE_KEY = \"msal.browser.log.pii\";\r\nconst BROWSER_PERF_ENABLED_KEY = \"msal.browser.performance.enabled\";\n\n\n//# sourceMappingURL=BrowserConstants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3V0aWxzL0Jyb3dzZXJDb25zdGFudHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNvRDs7QUFFakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQ0FBMEM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkVBQW1CO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFFBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNlk7QUFDN1kiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC91dGlscy9Ccm93c2VyQ29uc3RhbnRzLm1qcz83ZTQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI4LjEgMjAyNS0wMS0xNCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgT0lEQ19ERUZBVUxUX1NDT1BFUyB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBDb25zdGFudHNcclxuICovXHJcbmNvbnN0IEJyb3dzZXJDb25zdGFudHMgPSB7XHJcbiAgICAvKipcclxuICAgICAqIEludGVyYWN0aW9uIGluIHByb2dyZXNzIGNhY2hlIHZhbHVlXHJcbiAgICAgKi9cclxuICAgIElOVEVSQUNUSU9OX0lOX1BST0dSRVNTX1ZBTFVFOiBcImludGVyYWN0aW9uX2luX3Byb2dyZXNzXCIsXHJcbiAgICAvKipcclxuICAgICAqIEludmFsaWQgZ3JhbnQgZXJyb3IgY29kZVxyXG4gICAgICovXHJcbiAgICBJTlZBTElEX0dSQU5UX0VSUk9SOiBcImludmFsaWRfZ3JhbnRcIixcclxuICAgIC8qKlxyXG4gICAgICogRGVmYXVsdCBwb3B1cCB3aW5kb3cgd2lkdGhcclxuICAgICAqL1xyXG4gICAgUE9QVVBfV0lEVEg6IDQ4MyxcclxuICAgIC8qKlxyXG4gICAgICogRGVmYXVsdCBwb3B1cCB3aW5kb3cgaGVpZ2h0XHJcbiAgICAgKi9cclxuICAgIFBPUFVQX0hFSUdIVDogNjAwLFxyXG4gICAgLyoqXHJcbiAgICAgKiBOYW1lIG9mIHRoZSBwb3B1cCB3aW5kb3cgc3RhcnRzIHdpdGhcclxuICAgICAqL1xyXG4gICAgUE9QVVBfTkFNRV9QUkVGSVg6IFwibXNhbFwiLFxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWZhdWx0IHBvcHVwIG1vbml0b3IgcG9sbCBpbnRlcnZhbCBpbiBtaWxsaXNlY29uZHNcclxuICAgICAqL1xyXG4gICAgREVGQVVMVF9QT0xMX0lOVEVSVkFMX01TOiAzMCxcclxuICAgIC8qKlxyXG4gICAgICogTXNhbC1icm93c2VyIFNLVVxyXG4gICAgICovXHJcbiAgICBNU0FMX1NLVTogXCJtc2FsLmpzLmJyb3dzZXJcIixcclxufTtcclxuY29uc3QgTmF0aXZlQ29uc3RhbnRzID0ge1xyXG4gICAgQ0hBTk5FTF9JRDogXCI1M2VlMjg0ZC05MjBhLTRiNTktOWQzMC1hNjAzMTViMjY4MzZcIixcclxuICAgIFBSRUZFUlJFRF9FWFRFTlNJT05fSUQ6IFwicHBuYm5wZW9sZ2tpY2dlZ2tia2JqbWhsaWRlb3BpamlcIixcclxuICAgIE1BVFNfVEVMRU1FVFJZOiBcIk1BVFNcIixcclxufTtcclxuY29uc3QgTmF0aXZlRXh0ZW5zaW9uTWV0aG9kID0ge1xyXG4gICAgSGFuZHNoYWtlUmVxdWVzdDogXCJIYW5kc2hha2VcIixcclxuICAgIEhhbmRzaGFrZVJlc3BvbnNlOiBcIkhhbmRzaGFrZVJlc3BvbnNlXCIsXHJcbiAgICBHZXRUb2tlbjogXCJHZXRUb2tlblwiLFxyXG4gICAgUmVzcG9uc2U6IFwiUmVzcG9uc2VcIixcclxufTtcclxuY29uc3QgQnJvd3NlckNhY2hlTG9jYXRpb24gPSB7XHJcbiAgICBMb2NhbFN0b3JhZ2U6IFwibG9jYWxTdG9yYWdlXCIsXHJcbiAgICBTZXNzaW9uU3RvcmFnZTogXCJzZXNzaW9uU3RvcmFnZVwiLFxyXG4gICAgTWVtb3J5U3RvcmFnZTogXCJtZW1vcnlTdG9yYWdlXCIsXHJcbn07XHJcbi8qKlxyXG4gKiBIVFRQIFJlcXVlc3QgdHlwZXMgc3VwcG9ydGVkIGJ5IE1TQUwuXHJcbiAqL1xyXG5jb25zdCBIVFRQX1JFUVVFU1RfVFlQRSA9IHtcclxuICAgIEdFVDogXCJHRVRcIixcclxuICAgIFBPU1Q6IFwiUE9TVFwiLFxyXG59O1xyXG4vKipcclxuICogVGVtcG9yYXJ5IGNhY2hlIGtleXMgZm9yIE1TQUwsIGRlbGV0ZWQgYWZ0ZXIgYW55IHJlcXVlc3QuXHJcbiAqL1xyXG5jb25zdCBUZW1wb3JhcnlDYWNoZUtleXMgPSB7XHJcbiAgICBBVVRIT1JJVFk6IFwiYXV0aG9yaXR5XCIsXHJcbiAgICBBQ1FVSVJFX1RPS0VOX0FDQ09VTlQ6IFwiYWNxdWlyZVRva2VuLmFjY291bnRcIixcclxuICAgIFNFU1NJT05fU1RBVEU6IFwic2Vzc2lvbi5zdGF0ZVwiLFxyXG4gICAgUkVRVUVTVF9TVEFURTogXCJyZXF1ZXN0LnN0YXRlXCIsXHJcbiAgICBOT05DRV9JRFRPS0VOOiBcIm5vbmNlLmlkX3Rva2VuXCIsXHJcbiAgICBPUklHSU5fVVJJOiBcInJlcXVlc3Qub3JpZ2luXCIsXHJcbiAgICBSRU5FV19TVEFUVVM6IFwidG9rZW4ucmVuZXcuc3RhdHVzXCIsXHJcbiAgICBVUkxfSEFTSDogXCJ1cmxIYXNoXCIsXHJcbiAgICBSRVFVRVNUX1BBUkFNUzogXCJyZXF1ZXN0LnBhcmFtc1wiLFxyXG4gICAgU0NPUEVTOiBcInNjb3Blc1wiLFxyXG4gICAgSU5URVJBQ1RJT05fU1RBVFVTX0tFWTogXCJpbnRlcmFjdGlvbi5zdGF0dXNcIixcclxuICAgIENDU19DUkVERU5USUFMOiBcImNjcy5jcmVkZW50aWFsXCIsXHJcbiAgICBDT1JSRUxBVElPTl9JRDogXCJyZXF1ZXN0LmNvcnJlbGF0aW9uSWRcIixcclxuICAgIE5BVElWRV9SRVFVRVNUOiBcInJlcXVlc3QubmF0aXZlXCIsXHJcbiAgICBSRURJUkVDVF9DT05URVhUOiBcInJlcXVlc3QucmVkaXJlY3QuY29udGV4dFwiLFxyXG59O1xyXG5jb25zdCBTdGF0aWNDYWNoZUtleXMgPSB7XHJcbiAgICBBQ0NPVU5UX0tFWVM6IFwibXNhbC5hY2NvdW50LmtleXNcIixcclxuICAgIFRPS0VOX0tFWVM6IFwibXNhbC50b2tlbi5rZXlzXCIsXHJcbn07XHJcbi8qKlxyXG4gKiBDYWNoZSBrZXlzIHN0b3JlZCBpbi1tZW1vcnlcclxuICovXHJcbmNvbnN0IEluTWVtb3J5Q2FjaGVLZXlzID0ge1xyXG4gICAgV1JBUFBFUl9TS1U6IFwid3JhcHBlci5za3VcIixcclxuICAgIFdSQVBQRVJfVkVSOiBcIndyYXBwZXIudmVyc2lvblwiLFxyXG59O1xyXG4vKipcclxuICogQVBJIENvZGVzIGZvciBUZWxlbWV0cnkgcHVycG9zZXMuXHJcbiAqIEJlZm9yZSBhZGRpbmcgYSBuZXcgY29kZSB5b3UgbXVzdCBjbGFpbSBpdCBpbiB0aGUgTVNBTCBUZWxlbWV0cnkgdHJhY2tlciBhcyB0aGVzZSBudW1iZXIgc3BhY2VzIGFyZSBzaGFyZWQgYWNyb3NzIGFsbCBNU0FMc1xyXG4gKiAwLTk5IFNpbGVudCBGbG93XHJcbiAqIDgwMC04OTkgQXV0aCBDb2RlIEZsb3dcclxuICovXHJcbmNvbnN0IEFwaUlkID0ge1xyXG4gICAgYWNxdWlyZVRva2VuUmVkaXJlY3Q6IDg2MSxcclxuICAgIGFjcXVpcmVUb2tlblBvcHVwOiA4NjIsXHJcbiAgICBzc29TaWxlbnQ6IDg2MyxcclxuICAgIGFjcXVpcmVUb2tlblNpbGVudF9hdXRoQ29kZTogODY0LFxyXG4gICAgaGFuZGxlUmVkaXJlY3RQcm9taXNlOiA4NjUsXHJcbiAgICBhY3F1aXJlVG9rZW5CeUNvZGU6IDg2NixcclxuICAgIGFjcXVpcmVUb2tlblNpbGVudF9zaWxlbnRGbG93OiA2MSxcclxuICAgIGxvZ291dDogOTYxLFxyXG4gICAgbG9nb3V0UG9wdXA6IDk2MixcclxufTtcclxuLypcclxuICogSW50ZXJhY3Rpb24gdHlwZSBvZiB0aGUgQVBJIC0gdXNlZCBmb3Igc3RhdGUgYW5kIHRlbGVtZXRyeVxyXG4gKi9cclxudmFyIEludGVyYWN0aW9uVHlwZTtcclxuKGZ1bmN0aW9uIChJbnRlcmFjdGlvblR5cGUpIHtcclxuICAgIEludGVyYWN0aW9uVHlwZVtcIlJlZGlyZWN0XCJdID0gXCJyZWRpcmVjdFwiO1xyXG4gICAgSW50ZXJhY3Rpb25UeXBlW1wiUG9wdXBcIl0gPSBcInBvcHVwXCI7XHJcbiAgICBJbnRlcmFjdGlvblR5cGVbXCJTaWxlbnRcIl0gPSBcInNpbGVudFwiO1xyXG4gICAgSW50ZXJhY3Rpb25UeXBlW1wiTm9uZVwiXSA9IFwibm9uZVwiO1xyXG59KShJbnRlcmFjdGlvblR5cGUgfHwgKEludGVyYWN0aW9uVHlwZSA9IHt9KSk7XHJcbi8qKlxyXG4gKiBUeXBlcyBvZiBpbnRlcmFjdGlvbiBjdXJyZW50bHkgaW4gcHJvZ3Jlc3MuXHJcbiAqIFVzZWQgaW4gZXZlbnRzIGluIHdyYXBwZXIgbGlicmFyaWVzIHRvIGludm9rZSBmdW5jdGlvbnMgd2hlbiBjZXJ0YWluIGludGVyYWN0aW9uIGlzIGluIHByb2dyZXNzIG9yIGFsbCBpbnRlcmFjdGlvbnMgYXJlIGNvbXBsZXRlLlxyXG4gKi9cclxuY29uc3QgSW50ZXJhY3Rpb25TdGF0dXMgPSB7XHJcbiAgICAvKipcclxuICAgICAqIEluaXRpYWwgc3RhdHVzIGJlZm9yZSBpbnRlcmFjdGlvbiBvY2N1cnNcclxuICAgICAqL1xyXG4gICAgU3RhcnR1cDogXCJzdGFydHVwXCIsXHJcbiAgICAvKipcclxuICAgICAqIFN0YXR1cyBzZXQgd2hlbiBhbGwgbG9naW4gY2FsbHMgb2NjdXJpbmdcclxuICAgICAqL1xyXG4gICAgTG9naW46IFwibG9naW5cIixcclxuICAgIC8qKlxyXG4gICAgICogU3RhdHVzIHNldCB3aGVuIGxvZ291dCBjYWxsIG9jY3VyaW5nXHJcbiAgICAgKi9cclxuICAgIExvZ291dDogXCJsb2dvdXRcIixcclxuICAgIC8qKlxyXG4gICAgICogU3RhdHVzIHNldCBmb3IgYWNxdWlyZVRva2VuIGNhbGxzXHJcbiAgICAgKi9cclxuICAgIEFjcXVpcmVUb2tlbjogXCJhY3F1aXJlVG9rZW5cIixcclxuICAgIC8qKlxyXG4gICAgICogU3RhdHVzIHNldCBmb3Igc3NvU2lsZW50IGNhbGxzXHJcbiAgICAgKi9cclxuICAgIFNzb1NpbGVudDogXCJzc29TaWxlbnRcIixcclxuICAgIC8qKlxyXG4gICAgICogU3RhdHVzIHNldCB3aGVuIGhhbmRsZVJlZGlyZWN0IGluIHByb2dyZXNzXHJcbiAgICAgKi9cclxuICAgIEhhbmRsZVJlZGlyZWN0OiBcImhhbmRsZVJlZGlyZWN0XCIsXHJcbiAgICAvKipcclxuICAgICAqIFN0YXR1cyBzZXQgd2hlbiBpbnRlcmFjdGlvbiBpcyBjb21wbGV0ZVxyXG4gICAgICovXHJcbiAgICBOb25lOiBcIm5vbmVcIixcclxufTtcclxuY29uc3QgREVGQVVMVF9SRVFVRVNUID0ge1xyXG4gICAgc2NvcGVzOiBPSURDX0RFRkFVTFRfU0NPUEVTLFxyXG59O1xyXG4vKipcclxuICogSldLIEtleSBGb3JtYXQgc3RyaW5nIChUeXBlIE1VU1QgYmUgZGVmaW5lZCBmb3Igd2luZG93IGNyeXB0byBBUElzKVxyXG4gKi9cclxuY29uc3QgS0VZX0ZPUk1BVF9KV0sgPSBcImp3a1wiO1xyXG4vLyBTdXBwb3J0ZWQgd3JhcHBlciBTS1VzXHJcbmNvbnN0IFdyYXBwZXJTS1UgPSB7XHJcbiAgICBSZWFjdDogXCJAYXp1cmUvbXNhbC1yZWFjdFwiLFxyXG4gICAgQW5ndWxhcjogXCJAYXp1cmUvbXNhbC1hbmd1bGFyXCIsXHJcbn07XHJcbi8vIERhdGFiYXNlU3RvcmFnZSBDb25zdGFudHNcclxuY29uc3QgREJfTkFNRSA9IFwibXNhbC5kYlwiO1xyXG5jb25zdCBEQl9WRVJTSU9OID0gMTtcclxuY29uc3QgREJfVEFCTEVfTkFNRSA9IGAke0RCX05BTUV9LmtleXNgO1xyXG5jb25zdCBDYWNoZUxvb2t1cFBvbGljeSA9IHtcclxuICAgIC8qXHJcbiAgICAgKiBhY3F1aXJlVG9rZW5TaWxlbnQgd2lsbCBhdHRlbXB0IHRvIHJldHJpZXZlIGFuIGFjY2VzcyB0b2tlbiBmcm9tIHRoZSBjYWNoZS4gSWYgdGhlIGFjY2VzcyB0b2tlbiBpcyBleHBpcmVkXHJcbiAgICAgKiBvciBjYW5ub3QgYmUgZm91bmQgdGhlIHJlZnJlc2ggdG9rZW4gd2lsbCBiZSB1c2VkIHRvIGFjcXVpcmUgYSBuZXcgb25lLiBGaW5hbGx5LCBpZiB0aGUgcmVmcmVzaCB0b2tlblxyXG4gICAgICogaXMgZXhwaXJlZCBhY3F1aXJlVG9rZW5TaWxlbnQgd2lsbCBhdHRlbXB0IHRvIGFjcXVpcmUgbmV3IGFjY2VzcyBhbmQgcmVmcmVzaCB0b2tlbnMuXHJcbiAgICAgKi9cclxuICAgIERlZmF1bHQ6IDAsXHJcbiAgICAvKlxyXG4gICAgICogYWNxdWlyZVRva2VuU2lsZW50IHdpbGwgb25seSBsb29rIGZvciBhY2Nlc3MgdG9rZW5zIGluIHRoZSBjYWNoZS4gSXQgd2lsbCBub3QgYXR0ZW1wdCB0byByZW5ldyBhY2Nlc3Mgb3JcclxuICAgICAqIHJlZnJlc2ggdG9rZW5zLlxyXG4gICAgICovXHJcbiAgICBBY2Nlc3NUb2tlbjogMSxcclxuICAgIC8qXHJcbiAgICAgKiBhY3F1aXJlVG9rZW5TaWxlbnQgd2lsbCBhdHRlbXB0IHRvIHJldHJpZXZlIGFuIGFjY2VzcyB0b2tlbiBmcm9tIHRoZSBjYWNoZS4gSWYgdGhlIGFjY2VzcyB0b2tlbiBpcyBleHBpcmVkIG9yXHJcbiAgICAgKiBjYW5ub3QgYmUgZm91bmQsIHRoZSByZWZyZXNoIHRva2VuIHdpbGwgYmUgdXNlZCB0byBhY3F1aXJlIGEgbmV3IG9uZS4gSWYgdGhlIHJlZnJlc2ggdG9rZW4gaXMgZXhwaXJlZCwgaXRcclxuICAgICAqIHdpbGwgbm90IGJlIHJlbmV3ZWQgYW5kIGFjcXVpcmVUb2tlblNpbGVudCB3aWxsIGZhaWwuXHJcbiAgICAgKi9cclxuICAgIEFjY2Vzc1Rva2VuQW5kUmVmcmVzaFRva2VuOiAyLFxyXG4gICAgLypcclxuICAgICAqIGFjcXVpcmVUb2tlblNpbGVudCB3aWxsIG5vdCBhdHRlbXB0IHRvIHJldHJpZXZlIGFjY2VzcyB0b2tlbnMgZnJvbSB0aGUgY2FjaGUgYW5kIHdpbGwgaW5zdGVhZCBhdHRlbXB0IHRvXHJcbiAgICAgKiBleGNoYW5nZSB0aGUgY2FjaGVkIHJlZnJlc2ggdG9rZW4gZm9yIGEgbmV3IGFjY2VzcyB0b2tlbi4gSWYgdGhlIHJlZnJlc2ggdG9rZW4gaXMgZXhwaXJlZCwgaXQgd2lsbCBub3QgYmVcclxuICAgICAqIHJlbmV3ZWQgYW5kIGFjcXVpcmVUb2tlblNpbGVudCB3aWxsIGZhaWwuXHJcbiAgICAgKi9cclxuICAgIFJlZnJlc2hUb2tlbjogMyxcclxuICAgIC8qXHJcbiAgICAgKiBhY3F1aXJlVG9rZW5TaWxlbnQgd2lsbCBub3QgbG9vayBpbiB0aGUgY2FjaGUgZm9yIHRoZSBhY2Nlc3MgdG9rZW4uIEl0IHdpbGwgZ28gZGlyZWN0bHkgdG8gbmV0d29yayB3aXRoIHRoZVxyXG4gICAgICogY2FjaGVkIHJlZnJlc2ggdG9rZW4uIElmIHRoZSByZWZyZXNoIHRva2VuIGlzIGV4cGlyZWQgYW4gYXR0ZW1wdCB3aWxsIGJlIG1hZGUgdG8gcmVuZXcgaXQuIFRoaXMgaXMgZXF1aXZhbGVudCB0b1xyXG4gICAgICogc2V0dGluZyBcImZvcmNlUmVmcmVzaDogdHJ1ZVwiLlxyXG4gICAgICovXHJcbiAgICBSZWZyZXNoVG9rZW5BbmROZXR3b3JrOiA0LFxyXG4gICAgLypcclxuICAgICAqIGFjcXVpcmVUb2tlblNpbGVudCB3aWxsIGF0dGVtcHQgdG8gcmVuZXcgYm90aCBhY2Nlc3MgYW5kIHJlZnJlc2ggdG9rZW5zLiBJdCB3aWxsIG5vdCBsb29rIGluIHRoZSBjYWNoZS4gVGhpcyB3aWxsXHJcbiAgICAgKiBhbHdheXMgZmFpbCBpZiAzcmQgcGFydHkgY29va2llcyBhcmUgYmxvY2tlZCBieSB0aGUgYnJvd3Nlci5cclxuICAgICAqL1xyXG4gICAgU2tpcDogNSxcclxufTtcclxuY29uc3QgaUZyYW1lUmVuZXdhbFBvbGljaWVzID0gW1xyXG4gICAgQ2FjaGVMb29rdXBQb2xpY3kuRGVmYXVsdCxcclxuICAgIENhY2hlTG9va3VwUG9saWN5LlNraXAsXHJcbiAgICBDYWNoZUxvb2t1cFBvbGljeS5SZWZyZXNoVG9rZW5BbmROZXR3b3JrLFxyXG5dO1xyXG5jb25zdCBMT0dfTEVWRUxfQ0FDSEVfS0VZID0gXCJtc2FsLmJyb3dzZXIubG9nLmxldmVsXCI7XHJcbmNvbnN0IExPR19QSUlfQ0FDSEVfS0VZID0gXCJtc2FsLmJyb3dzZXIubG9nLnBpaVwiO1xyXG5jb25zdCBCUk9XU0VSX1BFUkZfRU5BQkxFRF9LRVkgPSBcIm1zYWwuYnJvd3Nlci5wZXJmb3JtYW5jZS5lbmFibGVkXCI7XG5cbmV4cG9ydCB7IEFwaUlkLCBCUk9XU0VSX1BFUkZfRU5BQkxFRF9LRVksIEJyb3dzZXJDYWNoZUxvY2F0aW9uLCBCcm93c2VyQ29uc3RhbnRzLCBDYWNoZUxvb2t1cFBvbGljeSwgREJfTkFNRSwgREJfVEFCTEVfTkFNRSwgREJfVkVSU0lPTiwgREVGQVVMVF9SRVFVRVNULCBIVFRQX1JFUVVFU1RfVFlQRSwgSW5NZW1vcnlDYWNoZUtleXMsIEludGVyYWN0aW9uU3RhdHVzLCBJbnRlcmFjdGlvblR5cGUsIEtFWV9GT1JNQVRfSldLLCBMT0dfTEVWRUxfQ0FDSEVfS0VZLCBMT0dfUElJX0NBQ0hFX0tFWSwgTmF0aXZlQ29uc3RhbnRzLCBOYXRpdmVFeHRlbnNpb25NZXRob2QsIFN0YXRpY0NhY2hlS2V5cywgVGVtcG9yYXJ5Q2FjaGVLZXlzLCBXcmFwcGVyU0tVLCBpRnJhbWVSZW5ld2FsUG9saWNpZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJyb3dzZXJDb25zdGFudHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractBrowserRequestState: function() { return /* binding */ extractBrowserRequestState; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Extracts the BrowserStateObject from the state string.\r\n * @param browserCrypto\r\n * @param state\r\n */\r\nfunction extractBrowserRequestState(browserCrypto, state) {\r\n    if (!state) {\r\n        return null;\r\n    }\r\n    try {\r\n        const requestStateObj = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ProtocolUtils.parseRequestState(browserCrypto, state);\r\n        return requestStateObj.libraryState.meta;\r\n    }\r\n    catch (e) {\r\n        throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ClientAuthErrorCodes.invalidState);\r\n    }\r\n}\n\n\n//# sourceMappingURL=BrowserProtocolUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3V0aWxzL0Jyb3dzZXJQcm90b2NvbFV0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDMkY7O0FBRXhHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MscUVBQWE7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyw0RUFBb0I7QUFDeEQ7QUFDQTs7QUFFc0M7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC91dGlscy9Ccm93c2VyUHJvdG9jb2xVdGlscy5tanM/NzU4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yOC4xIDIwMjUtMDEtMTQgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFByb3RvY29sVXRpbHMsIGNyZWF0ZUNsaWVudEF1dGhFcnJvciwgQ2xpZW50QXV0aEVycm9yQ29kZXMgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogRXh0cmFjdHMgdGhlIEJyb3dzZXJTdGF0ZU9iamVjdCBmcm9tIHRoZSBzdGF0ZSBzdHJpbmcuXHJcbiAqIEBwYXJhbSBicm93c2VyQ3J5cHRvXHJcbiAqIEBwYXJhbSBzdGF0ZVxyXG4gKi9cclxuZnVuY3Rpb24gZXh0cmFjdEJyb3dzZXJSZXF1ZXN0U3RhdGUoYnJvd3NlckNyeXB0bywgc3RhdGUpIHtcclxuICAgIGlmICghc3RhdGUpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVxdWVzdFN0YXRlT2JqID0gUHJvdG9jb2xVdGlscy5wYXJzZVJlcXVlc3RTdGF0ZShicm93c2VyQ3J5cHRvLCBzdGF0ZSk7XHJcbiAgICAgICAgcmV0dXJuIHJlcXVlc3RTdGF0ZU9iai5saWJyYXJ5U3RhdGUubWV0YTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvckNvZGVzLmludmFsaWRTdGF0ZSk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgZXh0cmFjdEJyb3dzZXJSZXF1ZXN0U3RhdGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJyb3dzZXJQcm90b2NvbFV0aWxzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blockAPICallsBeforeInitialize: function() { return /* binding */ blockAPICallsBeforeInitialize; },\n/* harmony export */   blockAcquireTokenInPopups: function() { return /* binding */ blockAcquireTokenInPopups; },\n/* harmony export */   blockNonBrowserEnvironment: function() { return /* binding */ blockNonBrowserEnvironment; },\n/* harmony export */   blockRedirectInIframe: function() { return /* binding */ blockRedirectInIframe; },\n/* harmony export */   blockReloadInHiddenIframes: function() { return /* binding */ blockReloadInHiddenIframes; },\n/* harmony export */   clearHash: function() { return /* binding */ clearHash; },\n/* harmony export */   createGuid: function() { return /* binding */ createGuid; },\n/* harmony export */   getCurrentUri: function() { return /* binding */ getCurrentUri; },\n/* harmony export */   getHomepage: function() { return /* binding */ getHomepage; },\n/* harmony export */   invoke: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invoke; },\n/* harmony export */   invokeAsync: function() { return /* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invokeAsync; },\n/* harmony export */   isInIframe: function() { return /* binding */ isInIframe; },\n/* harmony export */   isInPopup: function() { return /* binding */ isInPopup; },\n/* harmony export */   preconnect: function() { return /* binding */ preconnect; },\n/* harmony export */   preflightCheck: function() { return /* binding */ preflightCheck; },\n/* harmony export */   redirectPreflightCheck: function() { return /* binding */ redirectPreflightCheck; },\n/* harmony export */   replaceHash: function() { return /* binding */ replaceHash; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"./node_modules/@azure/msal-common/dist/index-browser.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BrowserConstants.mjs */ \"./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.28.1 2025-01-14 */\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Clears hash from window url.\r\n */\r\nfunction clearHash(contentWindow) {\r\n    // Office.js sets history.replaceState to null\r\n    contentWindow.location.hash = \"\";\r\n    if (typeof contentWindow.history.replaceState === \"function\") {\r\n        // Full removes \"#\" from url\r\n        contentWindow.history.replaceState(null, \"\", `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\r\n    }\r\n}\r\n/**\r\n * Replaces current hash with hash from provided url\r\n */\r\nfunction replaceHash(url) {\r\n    const urlParts = url.split(\"#\");\r\n    urlParts.shift(); // Remove part before the hash\r\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\r\n}\r\n/**\r\n * Returns boolean of whether the current window is in an iframe or not.\r\n */\r\nfunction isInIframe() {\r\n    return window.parent !== window;\r\n}\r\n/**\r\n * Returns boolean of whether or not the current window is a popup opened by msal\r\n */\r\nfunction isInPopup() {\r\n    return (typeof window !== \"undefined\" &&\r\n        !!window.opener &&\r\n        window.opener !== window &&\r\n        typeof window.name === \"string\" &&\r\n        window.name.indexOf(`${_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConstants.POPUP_NAME_PREFIX}.`) === 0);\r\n}\r\n// #endregion\r\n/**\r\n * Returns current window URL as redirect uri\r\n */\r\nfunction getCurrentUri() {\r\n    return typeof window !== \"undefined\" && window.location\r\n        ? window.location.href.split(\"?\")[0].split(\"#\")[0]\r\n        : \"\";\r\n}\r\n/**\r\n * Gets the homepage url for the current window location.\r\n */\r\nfunction getHomepage() {\r\n    const currentUrl = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.UrlString(window.location.href);\r\n    const urlComponents = currentUrl.getUrlComponents();\r\n    return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\r\n}\r\n/**\r\n * Throws error if we have completed an auth and are\r\n * attempting another auth request inside an iframe.\r\n */\r\nfunction blockReloadInHiddenIframes() {\r\n    const isResponseHash = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.UrlString.hashContainsKnownProperties(window.location.hash);\r\n    // return an error if called from the hidden iframe created by the msal js silent calls\r\n    if (isResponseHash && isInIframe()) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.blockIframeReload);\r\n    }\r\n}\r\n/**\r\n * Block redirect operations in iframes unless explicitly allowed\r\n * @param interactionType Interaction type for the request\r\n * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\r\n */\r\nfunction blockRedirectInIframe(allowRedirectInIframe) {\r\n    if (isInIframe() && !allowRedirectInIframe) {\r\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.redirectInIframe);\r\n    }\r\n}\r\n/**\r\n * Block redirectUri loaded in popup from calling AcquireToken APIs\r\n */\r\nfunction blockAcquireTokenInPopups() {\r\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\r\n    if (isInPopup()) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.blockNestedPopups);\r\n    }\r\n}\r\n/**\r\n * Throws error if token requests are made in non-browser environment\r\n * @param isBrowserEnvironment Flag indicating if environment is a browser.\r\n */\r\nfunction blockNonBrowserEnvironment() {\r\n    if (typeof window === \"undefined\") {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.nonBrowserEnvironment);\r\n    }\r\n}\r\n/**\r\n * Throws error if initialize hasn't been called\r\n * @param initialized\r\n */\r\nfunction blockAPICallsBeforeInitialize(initialized) {\r\n    if (!initialized) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.uninitializedPublicClientApplication);\r\n    }\r\n}\r\n/**\r\n * Helper to validate app environment before making an auth request\r\n * @param initialized\r\n */\r\nfunction preflightCheck(initialized) {\r\n    // Block request if not in browser environment\r\n    blockNonBrowserEnvironment();\r\n    // Block auth requests inside a hidden iframe\r\n    blockReloadInHiddenIframes();\r\n    // Block redirectUri opened in a popup from calling MSAL APIs\r\n    blockAcquireTokenInPopups();\r\n    // Block token acquisition before initialize has been called\r\n    blockAPICallsBeforeInitialize(initialized);\r\n}\r\n/**\r\n * Helper to validate app enviornment before making redirect request\r\n * @param initialized\r\n * @param config\r\n */\r\nfunction redirectPreflightCheck(initialized, config) {\r\n    preflightCheck(initialized);\r\n    blockRedirectInIframe(config.system.allowRedirectInIframe);\r\n    // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\r\n    if (config.cache.cacheLocation === _BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserCacheLocation.MemoryStorage &&\r\n        !config.cache.storeAuthStateInCookie) {\r\n        throw (0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.inMemRedirectUnavailable);\r\n    }\r\n}\r\n/**\r\n * Adds a preconnect link element to the header which begins DNS resolution and SSL connection in anticipation of the /token request\r\n * @param loginDomain Authority domain, including https protocol e.g. https://login.microsoftonline.com\r\n * @returns\r\n */\r\nfunction preconnect(authority) {\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"preconnect\";\r\n    link.href = new URL(authority).origin;\r\n    link.crossOrigin = \"anonymous\";\r\n    document.head.appendChild(link);\r\n    // The browser will close connection if not used within a few seconds, remove element from the header after 10s\r\n    window.setTimeout(() => {\r\n        try {\r\n            document.head.removeChild(link);\r\n        }\r\n        catch { }\r\n    }, 10000); // 10s Timeout\r\n}\r\n/**\r\n * Wrapper function that creates a UUID v7 from the current timestamp.\r\n * @returns {string}\r\n */\r\nfunction createGuid() {\r\n    return (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_6__.createNewGuid)();\r\n}\n\n\n//# sourceMappingURL=BrowserUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildTenantProfile: function() { return /* binding */ buildTenantProfile; },\n/* harmony export */   tenantIdMatchesHomeTenant: function() { return /* binding */ tenantIdMatchesHomeTenant; },\n/* harmony export */   updateAccountTenantProfileData: function() { return /* binding */ updateAccountTenantProfileData; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns true if tenantId matches the utid portion of homeAccountId\r\n * @param tenantId\r\n * @param homeAccountId\r\n * @returns\r\n */\r\nfunction tenantIdMatchesHomeTenant(tenantId, homeAccountId) {\r\n    return (!!tenantId &&\r\n        !!homeAccountId &&\r\n        tenantId === homeAccountId.split(\".\")[1]);\r\n}\r\n/**\r\n * Build tenant profile\r\n * @param homeAccountId - Home account identifier for this account object\r\n * @param localAccountId - Local account identifer for this account object\r\n * @param tenantId - Full tenant or organizational id that this account belongs to\r\n * @param idTokenClaims - Claims from the ID token\r\n * @returns\r\n */\r\nfunction buildTenantProfile(homeAccountId, localAccountId, tenantId, idTokenClaims) {\r\n    if (idTokenClaims) {\r\n        const { oid, sub, tid, name, tfp, acr } = idTokenClaims;\r\n        /**\r\n         * Since there is no way to determine if the authority is AAD or B2C, we exhaust all the possible claims that can serve as tenant ID with the following precedence:\r\n         * tid - TenantID claim that identifies the tenant that issued the token in AAD. Expected in all AAD ID tokens, not present in B2C ID Tokens.\r\n         * tfp - Trust Framework Policy claim that identifies the policy that was used to authenticate the user. Functions as tenant for B2C scenarios.\r\n         * acr - Authentication Context Class Reference claim used only with older B2C policies. Fallback in case tfp is not present, but likely won't be present anyway.\r\n         */\r\n        const tenantId = tid || tfp || acr || \"\";\r\n        return {\r\n            tenantId: tenantId,\r\n            localAccountId: oid || sub || \"\",\r\n            name: name,\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            tenantId,\r\n            localAccountId,\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    }\r\n}\r\n/**\r\n * Replaces account info that varies by tenant profile sourced from the ID token claims passed in with the tenant-specific account info\r\n * @param baseAccountInfo\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nfunction updateAccountTenantProfileData(baseAccountInfo, tenantProfile, idTokenClaims, idTokenSecret) {\r\n    let updatedAccountInfo = baseAccountInfo;\r\n    // Tenant Profile overrides passed in account info\r\n    if (tenantProfile) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;\r\n        updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };\r\n    }\r\n    // ID token claims override passed in account info and tenant profile\r\n    if (idTokenClaims) {\r\n        // Ignore isHomeTenant, loginHint, and sid which are part of tenant profile but not base account info\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...claimsSourcedTenantProfile } = buildTenantProfile(baseAccountInfo.homeAccountId, baseAccountInfo.localAccountId, baseAccountInfo.tenantId, idTokenClaims);\r\n        updatedAccountInfo = {\r\n            ...updatedAccountInfo,\r\n            ...claimsSourcedTenantProfile,\r\n            idTokenClaims: idTokenClaims,\r\n            idToken: idTokenSecret,\r\n        };\r\n        return updatedAccountInfo;\r\n    }\r\n    return updatedAccountInfo;\r\n}\n\n\n//# sourceMappingURL=AccountInfo.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9BY2NvdW50SW5mby5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdDQUFnQztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IseUNBQXlDO0FBQ3pELCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhDQUE4QztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUY7QUFDekYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2FjY291bnQvQWNjb3VudEluZm8ubWpzPzhhOWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybnMgdHJ1ZSBpZiB0ZW5hbnRJZCBtYXRjaGVzIHRoZSB1dGlkIHBvcnRpb24gb2YgaG9tZUFjY291bnRJZFxyXG4gKiBAcGFyYW0gdGVuYW50SWRcclxuICogQHBhcmFtIGhvbWVBY2NvdW50SWRcclxuICogQHJldHVybnNcclxuICovXHJcbmZ1bmN0aW9uIHRlbmFudElkTWF0Y2hlc0hvbWVUZW5hbnQodGVuYW50SWQsIGhvbWVBY2NvdW50SWQpIHtcclxuICAgIHJldHVybiAoISF0ZW5hbnRJZCAmJlxyXG4gICAgICAgICEhaG9tZUFjY291bnRJZCAmJlxyXG4gICAgICAgIHRlbmFudElkID09PSBob21lQWNjb3VudElkLnNwbGl0KFwiLlwiKVsxXSk7XHJcbn1cclxuLyoqXHJcbiAqIEJ1aWxkIHRlbmFudCBwcm9maWxlXHJcbiAqIEBwYXJhbSBob21lQWNjb3VudElkIC0gSG9tZSBhY2NvdW50IGlkZW50aWZpZXIgZm9yIHRoaXMgYWNjb3VudCBvYmplY3RcclxuICogQHBhcmFtIGxvY2FsQWNjb3VudElkIC0gTG9jYWwgYWNjb3VudCBpZGVudGlmZXIgZm9yIHRoaXMgYWNjb3VudCBvYmplY3RcclxuICogQHBhcmFtIHRlbmFudElkIC0gRnVsbCB0ZW5hbnQgb3Igb3JnYW5pemF0aW9uYWwgaWQgdGhhdCB0aGlzIGFjY291bnQgYmVsb25ncyB0b1xyXG4gKiBAcGFyYW0gaWRUb2tlbkNsYWltcyAtIENsYWltcyBmcm9tIHRoZSBJRCB0b2tlblxyXG4gKiBAcmV0dXJuc1xyXG4gKi9cclxuZnVuY3Rpb24gYnVpbGRUZW5hbnRQcm9maWxlKGhvbWVBY2NvdW50SWQsIGxvY2FsQWNjb3VudElkLCB0ZW5hbnRJZCwgaWRUb2tlbkNsYWltcykge1xyXG4gICAgaWYgKGlkVG9rZW5DbGFpbXMpIHtcclxuICAgICAgICBjb25zdCB7IG9pZCwgc3ViLCB0aWQsIG5hbWUsIHRmcCwgYWNyIH0gPSBpZFRva2VuQ2xhaW1zO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFNpbmNlIHRoZXJlIGlzIG5vIHdheSB0byBkZXRlcm1pbmUgaWYgdGhlIGF1dGhvcml0eSBpcyBBQUQgb3IgQjJDLCB3ZSBleGhhdXN0IGFsbCB0aGUgcG9zc2libGUgY2xhaW1zIHRoYXQgY2FuIHNlcnZlIGFzIHRlbmFudCBJRCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJlY2VkZW5jZTpcclxuICAgICAgICAgKiB0aWQgLSBUZW5hbnRJRCBjbGFpbSB0aGF0IGlkZW50aWZpZXMgdGhlIHRlbmFudCB0aGF0IGlzc3VlZCB0aGUgdG9rZW4gaW4gQUFELiBFeHBlY3RlZCBpbiBhbGwgQUFEIElEIHRva2Vucywgbm90IHByZXNlbnQgaW4gQjJDIElEIFRva2Vucy5cclxuICAgICAgICAgKiB0ZnAgLSBUcnVzdCBGcmFtZXdvcmsgUG9saWN5IGNsYWltIHRoYXQgaWRlbnRpZmllcyB0aGUgcG9saWN5IHRoYXQgd2FzIHVzZWQgdG8gYXV0aGVudGljYXRlIHRoZSB1c2VyLiBGdW5jdGlvbnMgYXMgdGVuYW50IGZvciBCMkMgc2NlbmFyaW9zLlxyXG4gICAgICAgICAqIGFjciAtIEF1dGhlbnRpY2F0aW9uIENvbnRleHQgQ2xhc3MgUmVmZXJlbmNlIGNsYWltIHVzZWQgb25seSB3aXRoIG9sZGVyIEIyQyBwb2xpY2llcy4gRmFsbGJhY2sgaW4gY2FzZSB0ZnAgaXMgbm90IHByZXNlbnQsIGJ1dCBsaWtlbHkgd29uJ3QgYmUgcHJlc2VudCBhbnl3YXkuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgY29uc3QgdGVuYW50SWQgPSB0aWQgfHwgdGZwIHx8IGFjciB8fCBcIlwiO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHRlbmFudElkOiB0ZW5hbnRJZCxcclxuICAgICAgICAgICAgbG9jYWxBY2NvdW50SWQ6IG9pZCB8fCBzdWIgfHwgXCJcIixcclxuICAgICAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICAgICAgaXNIb21lVGVuYW50OiB0ZW5hbnRJZE1hdGNoZXNIb21lVGVuYW50KHRlbmFudElkLCBob21lQWNjb3VudElkKSxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdGVuYW50SWQsXHJcbiAgICAgICAgICAgIGxvY2FsQWNjb3VudElkLFxyXG4gICAgICAgICAgICBpc0hvbWVUZW5hbnQ6IHRlbmFudElkTWF0Y2hlc0hvbWVUZW5hbnQodGVuYW50SWQsIGhvbWVBY2NvdW50SWQpLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIFJlcGxhY2VzIGFjY291bnQgaW5mbyB0aGF0IHZhcmllcyBieSB0ZW5hbnQgcHJvZmlsZSBzb3VyY2VkIGZyb20gdGhlIElEIHRva2VuIGNsYWltcyBwYXNzZWQgaW4gd2l0aCB0aGUgdGVuYW50LXNwZWNpZmljIGFjY291bnQgaW5mb1xyXG4gKiBAcGFyYW0gYmFzZUFjY291bnRJbmZvXHJcbiAqIEBwYXJhbSBpZFRva2VuQ2xhaW1zXHJcbiAqIEByZXR1cm5zXHJcbiAqL1xyXG5mdW5jdGlvbiB1cGRhdGVBY2NvdW50VGVuYW50UHJvZmlsZURhdGEoYmFzZUFjY291bnRJbmZvLCB0ZW5hbnRQcm9maWxlLCBpZFRva2VuQ2xhaW1zLCBpZFRva2VuU2VjcmV0KSB7XHJcbiAgICBsZXQgdXBkYXRlZEFjY291bnRJbmZvID0gYmFzZUFjY291bnRJbmZvO1xyXG4gICAgLy8gVGVuYW50IFByb2ZpbGUgb3ZlcnJpZGVzIHBhc3NlZCBpbiBhY2NvdW50IGluZm9cclxuICAgIGlmICh0ZW5hbnRQcm9maWxlKSB7XHJcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgICAgIGNvbnN0IHsgaXNIb21lVGVuYW50LCAuLi50ZW5hbnRQcm9maWxlT3ZlcnJpZGUgfSA9IHRlbmFudFByb2ZpbGU7XHJcbiAgICAgICAgdXBkYXRlZEFjY291bnRJbmZvID0geyAuLi5iYXNlQWNjb3VudEluZm8sIC4uLnRlbmFudFByb2ZpbGVPdmVycmlkZSB9O1xyXG4gICAgfVxyXG4gICAgLy8gSUQgdG9rZW4gY2xhaW1zIG92ZXJyaWRlIHBhc3NlZCBpbiBhY2NvdW50IGluZm8gYW5kIHRlbmFudCBwcm9maWxlXHJcbiAgICBpZiAoaWRUb2tlbkNsYWltcykge1xyXG4gICAgICAgIC8vIElnbm9yZSBpc0hvbWVUZW5hbnQsIGxvZ2luSGludCwgYW5kIHNpZCB3aGljaCBhcmUgcGFydCBvZiB0ZW5hbnQgcHJvZmlsZSBidXQgbm90IGJhc2UgYWNjb3VudCBpbmZvXHJcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgICAgIGNvbnN0IHsgaXNIb21lVGVuYW50LCAuLi5jbGFpbXNTb3VyY2VkVGVuYW50UHJvZmlsZSB9ID0gYnVpbGRUZW5hbnRQcm9maWxlKGJhc2VBY2NvdW50SW5mby5ob21lQWNjb3VudElkLCBiYXNlQWNjb3VudEluZm8ubG9jYWxBY2NvdW50SWQsIGJhc2VBY2NvdW50SW5mby50ZW5hbnRJZCwgaWRUb2tlbkNsYWltcyk7XHJcbiAgICAgICAgdXBkYXRlZEFjY291bnRJbmZvID0ge1xyXG4gICAgICAgICAgICAuLi51cGRhdGVkQWNjb3VudEluZm8sXHJcbiAgICAgICAgICAgIC4uLmNsYWltc1NvdXJjZWRUZW5hbnRQcm9maWxlLFxyXG4gICAgICAgICAgICBpZFRva2VuQ2xhaW1zOiBpZFRva2VuQ2xhaW1zLFxyXG4gICAgICAgICAgICBpZFRva2VuOiBpZFRva2VuU2VjcmV0LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHVwZGF0ZWRBY2NvdW50SW5mbztcclxuICAgIH1cclxuICAgIHJldHVybiB1cGRhdGVkQWNjb3VudEluZm87XHJcbn1cblxuZXhwb3J0IHsgYnVpbGRUZW5hbnRQcm9maWxlLCB0ZW5hbnRJZE1hdGNoZXNIb21lVGVuYW50LCB1cGRhdGVBY2NvdW50VGVuYW50UHJvZmlsZURhdGEgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFjY291bnRJbmZvLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/account/AuthToken.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/AuthToken.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkMaxAge: function() { return /* binding */ checkMaxAge; },\n/* harmony export */   extractTokenClaims: function() { return /* binding */ extractTokenClaims; },\n/* harmony export */   getJWSPayload: function() { return /* binding */ getJWSPayload; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Extract token by decoding the rawToken\r\n *\r\n * @param encodedToken\r\n */\r\nfunction extractTokenClaims(encodedToken, base64Decode) {\r\n    const jswPayload = getJWSPayload(encodedToken);\r\n    // token will be decoded to get the username\r\n    try {\r\n        // base64Decode() should throw an error if there is an issue\r\n        const base64Decoded = base64Decode(jswPayload);\r\n        return JSON.parse(base64Decoded);\r\n    }\r\n    catch (err) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.tokenParsingError);\r\n    }\r\n}\r\n/**\r\n * decode a JWT\r\n *\r\n * @param authToken\r\n */\r\nfunction getJWSPayload(authToken) {\r\n    if (!authToken) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.nullOrEmptyToken);\r\n    }\r\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n    const matches = tokenPartsRegex.exec(authToken);\r\n    if (!matches || matches.length < 4) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.tokenParsingError);\r\n    }\r\n    /**\r\n     * const crackedToken = {\r\n     *  header: matches[1],\r\n     *  JWSPayload: matches[2],\r\n     *  JWSSig: matches[3],\r\n     * };\r\n     */\r\n    return matches[2];\r\n}\r\n/**\r\n * Determine if the token's max_age has transpired\r\n */\r\nfunction checkMaxAge(authTime, maxAge) {\r\n    /*\r\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\r\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\r\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\r\n     */\r\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\r\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.maxAgeTranspired);\r\n    }\r\n}\n\n\n//# sourceMappingURL=AuthToken.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9BdXRoVG9rZW4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDYTtBQUN3RDtBQUNxQzs7QUFFMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyw4RUFBaUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyw2RUFBZ0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlGQUFxQixDQUFDLDhFQUFpQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBLGNBQWMsaUZBQXFCLENBQUMsNkVBQWdCO0FBQ3BEO0FBQ0E7O0FBRTBEO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hY2NvdW50L0F1dGhUb2tlbi5tanM/N2E5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgdG9rZW5QYXJzaW5nRXJyb3IsIG51bGxPckVtcHR5VG9rZW4sIG1heEFnZVRyYW5zcGlyZWQgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEV4dHJhY3QgdG9rZW4gYnkgZGVjb2RpbmcgdGhlIHJhd1Rva2VuXHJcbiAqXHJcbiAqIEBwYXJhbSBlbmNvZGVkVG9rZW5cclxuICovXHJcbmZ1bmN0aW9uIGV4dHJhY3RUb2tlbkNsYWltcyhlbmNvZGVkVG9rZW4sIGJhc2U2NERlY29kZSkge1xyXG4gICAgY29uc3QganN3UGF5bG9hZCA9IGdldEpXU1BheWxvYWQoZW5jb2RlZFRva2VuKTtcclxuICAgIC8vIHRva2VuIHdpbGwgYmUgZGVjb2RlZCB0byBnZXQgdGhlIHVzZXJuYW1lXHJcbiAgICB0cnkge1xyXG4gICAgICAgIC8vIGJhc2U2NERlY29kZSgpIHNob3VsZCB0aHJvdyBhbiBlcnJvciBpZiB0aGVyZSBpcyBhbiBpc3N1ZVxyXG4gICAgICAgIGNvbnN0IGJhc2U2NERlY29kZWQgPSBiYXNlNjREZWNvZGUoanN3UGF5bG9hZCk7XHJcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoYmFzZTY0RGVjb2RlZCk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKHRva2VuUGFyc2luZ0Vycm9yKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogZGVjb2RlIGEgSldUXHJcbiAqXHJcbiAqIEBwYXJhbSBhdXRoVG9rZW5cclxuICovXHJcbmZ1bmN0aW9uIGdldEpXU1BheWxvYWQoYXV0aFRva2VuKSB7XHJcbiAgICBpZiAoIWF1dGhUb2tlbikge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihudWxsT3JFbXB0eVRva2VuKTtcclxuICAgIH1cclxuICAgIGNvbnN0IHRva2VuUGFydHNSZWdleCA9IC9eKFteXFwuXFxzXSopXFwuKFteXFwuXFxzXSspXFwuKFteXFwuXFxzXSopJC87XHJcbiAgICBjb25zdCBtYXRjaGVzID0gdG9rZW5QYXJ0c1JlZ2V4LmV4ZWMoYXV0aFRva2VuKTtcclxuICAgIGlmICghbWF0Y2hlcyB8fCBtYXRjaGVzLmxlbmd0aCA8IDQpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IodG9rZW5QYXJzaW5nRXJyb3IpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBjb25zdCBjcmFja2VkVG9rZW4gPSB7XHJcbiAgICAgKiAgaGVhZGVyOiBtYXRjaGVzWzFdLFxyXG4gICAgICogIEpXU1BheWxvYWQ6IG1hdGNoZXNbMl0sXHJcbiAgICAgKiAgSldTU2lnOiBtYXRjaGVzWzNdLFxyXG4gICAgICogfTtcclxuICAgICAqL1xyXG4gICAgcmV0dXJuIG1hdGNoZXNbMl07XHJcbn1cclxuLyoqXHJcbiAqIERldGVybWluZSBpZiB0aGUgdG9rZW4ncyBtYXhfYWdlIGhhcyB0cmFuc3BpcmVkXHJcbiAqL1xyXG5mdW5jdGlvbiBjaGVja01heEFnZShhdXRoVGltZSwgbWF4QWdlKSB7XHJcbiAgICAvKlxyXG4gICAgICogcGVyIGh0dHBzOi8vb3BlbmlkLm5ldC9zcGVjcy9vcGVuaWQtY29ubmVjdC1jb3JlLTFfMC5odG1sI0F1dGhSZXF1ZXN0XHJcbiAgICAgKiBUbyBmb3JjZSBhbiBpbW1lZGlhdGUgcmUtYXV0aGVudGljYXRpb246IElmIGFuIGFwcCByZXF1aXJlcyB0aGF0IGEgdXNlciByZS1hdXRoZW50aWNhdGUgcHJpb3IgdG8gYWNjZXNzLFxyXG4gICAgICogcHJvdmlkZSBhIHZhbHVlIG9mIDAgZm9yIHRoZSBtYXhfYWdlIHBhcmFtZXRlciBhbmQgdGhlIEFTIHdpbGwgZm9yY2UgYSBmcmVzaCBsb2dpbi5cclxuICAgICAqL1xyXG4gICAgY29uc3QgZml2ZU1pbnV0ZVNrZXcgPSAzMDAwMDA7IC8vIGZpdmUgbWludXRlcyBpbiBtaWxsaXNlY29uZHNcclxuICAgIGlmIChtYXhBZ2UgPT09IDAgfHwgRGF0ZS5ub3coKSAtIGZpdmVNaW51dGVTa2V3ID4gYXV0aFRpbWUgKyBtYXhBZ2UpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWF4QWdlVHJhbnNwaXJlZCk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgY2hlY2tNYXhBZ2UsIGV4dHJhY3RUb2tlbkNsYWltcywgZ2V0SldTUGF5bG9hZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aFRva2VuLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CcsCredentialType: function() { return /* binding */ CcsCredentialType; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CcsCredentialType = {\r\n    HOME_ACCOUNT_ID: \"home_account_id\",\r\n    UPN: \"UPN\",\r\n};\n\n\n//# sourceMappingURL=CcsCredential.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DY3NDcmVkZW50aWFsLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hY2NvdW50L0Njc0NyZWRlbnRpYWwubWpzPzY4ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgQ2NzQ3JlZGVudGlhbFR5cGUgPSB7XHJcbiAgICBIT01FX0FDQ09VTlRfSUQ6IFwiaG9tZV9hY2NvdW50X2lkXCIsXHJcbiAgICBVUE46IFwiVVBOXCIsXHJcbn07XG5cbmV4cG9ydCB7IENjc0NyZWRlbnRpYWxUeXBlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DY3NDcmVkZW50aWFsLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClientInfo: function() { return /* binding */ buildClientInfo; },\n/* harmony export */   buildClientInfoFromHomeAccountId: function() { return /* binding */ buildClientInfoFromHomeAccountId; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object from server clientInfo string\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, base64Decode) {\r\n    if (!rawClientInfo) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.clientInfoEmptyError);\r\n    }\r\n    try {\r\n        const decodedClientInfo = base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.clientInfoDecodingError);\r\n    }\r\n}\r\n/**\r\n * Function to build a client info object from cached homeAccountId string\r\n * @param homeAccountId\r\n */\r\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\r\n    if (!homeAccountId) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.clientInfoDecodingError);\r\n    }\r\n    const clientInfoParts = homeAccountId.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Separators.CLIENT_INFO_SEPARATOR, 2);\r\n    return {\r\n        uid: clientInfoParts[0],\r\n        utid: clientInfoParts.length < 2\r\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING\r\n            : clientInfoParts[1],\r\n    };\r\n}\n\n\n//# sourceMappingURL=ClientInfo.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DbGllbnRJbmZvLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDd0Q7QUFDTjtBQUNtQzs7QUFFbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQXFCLENBQUMsaUZBQW9CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQXFCLENBQUMsb0ZBQXVCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlGQUFxQixDQUFDLG9GQUF1QjtBQUMzRDtBQUNBLGdEQUFnRCw0REFBVTtBQUMxRDtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFTO0FBQ3ZCO0FBQ0E7QUFDQTs7QUFFNkQ7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2FjY291bnQvQ2xpZW50SW5mby5tanM/ZmY0OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgU2VwYXJhdG9ycywgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBjbGllbnRJbmZvRW1wdHlFcnJvciwgY2xpZW50SW5mb0RlY29kaW5nRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEZ1bmN0aW9uIHRvIGJ1aWxkIGEgY2xpZW50IGluZm8gb2JqZWN0IGZyb20gc2VydmVyIGNsaWVudEluZm8gc3RyaW5nXHJcbiAqIEBwYXJhbSByYXdDbGllbnRJbmZvXHJcbiAqIEBwYXJhbSBjcnlwdG9cclxuICovXHJcbmZ1bmN0aW9uIGJ1aWxkQ2xpZW50SW5mbyhyYXdDbGllbnRJbmZvLCBiYXNlNjREZWNvZGUpIHtcclxuICAgIGlmICghcmF3Q2xpZW50SW5mbykge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihjbGllbnRJbmZvRW1wdHlFcnJvcik7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGRlY29kZWRDbGllbnRJbmZvID0gYmFzZTY0RGVjb2RlKHJhd0NsaWVudEluZm8pO1xyXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGRlY29kZWRDbGllbnRJbmZvKTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKGNsaWVudEluZm9EZWNvZGluZ0Vycm9yKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogRnVuY3Rpb24gdG8gYnVpbGQgYSBjbGllbnQgaW5mbyBvYmplY3QgZnJvbSBjYWNoZWQgaG9tZUFjY291bnRJZCBzdHJpbmdcclxuICogQHBhcmFtIGhvbWVBY2NvdW50SWRcclxuICovXHJcbmZ1bmN0aW9uIGJ1aWxkQ2xpZW50SW5mb0Zyb21Ib21lQWNjb3VudElkKGhvbWVBY2NvdW50SWQpIHtcclxuICAgIGlmICghaG9tZUFjY291bnRJZCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihjbGllbnRJbmZvRGVjb2RpbmdFcnJvcik7XHJcbiAgICB9XHJcbiAgICBjb25zdCBjbGllbnRJbmZvUGFydHMgPSBob21lQWNjb3VudElkLnNwbGl0KFNlcGFyYXRvcnMuQ0xJRU5UX0lORk9fU0VQQVJBVE9SLCAyKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgdWlkOiBjbGllbnRJbmZvUGFydHNbMF0sXHJcbiAgICAgICAgdXRpZDogY2xpZW50SW5mb1BhcnRzLmxlbmd0aCA8IDJcclxuICAgICAgICAgICAgPyBDb25zdGFudHMuRU1QVFlfU1RSSU5HXHJcbiAgICAgICAgICAgIDogY2xpZW50SW5mb1BhcnRzWzFdLFxyXG4gICAgfTtcclxufVxuXG5leHBvcnQgeyBidWlsZENsaWVudEluZm8sIGJ1aWxkQ2xpZW50SW5mb0Zyb21Ib21lQWNjb3VudElkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRJbmZvLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTenantIdFromIdTokenClaims: function() { return /* binding */ getTenantIdFromIdTokenClaims; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Gets tenantId from available ID token claims to set as credential realm with the following precedence:\r\n * 1. tid - if the token is acquired from an Azure AD tenant tid will be present\r\n * 2. tfp - if the token is acquired from a modern B2C tenant tfp should be present\r\n * 3. acr - if the token is acquired from a legacy B2C tenant acr should be present\r\n * Downcased to match the realm case-insensitive comparison requirements\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nfunction getTenantIdFromIdTokenClaims(idTokenClaims) {\r\n    if (idTokenClaims) {\r\n        const tenantId = idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;\r\n        return tenantId || null;\r\n    }\r\n    return null;\r\n}\n\n\n//# sourceMappingURL=TokenClaims.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9Ub2tlbkNsYWltcy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9Ub2tlbkNsYWltcy5tanM/NTQyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogR2V0cyB0ZW5hbnRJZCBmcm9tIGF2YWlsYWJsZSBJRCB0b2tlbiBjbGFpbXMgdG8gc2V0IGFzIGNyZWRlbnRpYWwgcmVhbG0gd2l0aCB0aGUgZm9sbG93aW5nIHByZWNlZGVuY2U6XHJcbiAqIDEuIHRpZCAtIGlmIHRoZSB0b2tlbiBpcyBhY3F1aXJlZCBmcm9tIGFuIEF6dXJlIEFEIHRlbmFudCB0aWQgd2lsbCBiZSBwcmVzZW50XHJcbiAqIDIuIHRmcCAtIGlmIHRoZSB0b2tlbiBpcyBhY3F1aXJlZCBmcm9tIGEgbW9kZXJuIEIyQyB0ZW5hbnQgdGZwIHNob3VsZCBiZSBwcmVzZW50XHJcbiAqIDMuIGFjciAtIGlmIHRoZSB0b2tlbiBpcyBhY3F1aXJlZCBmcm9tIGEgbGVnYWN5IEIyQyB0ZW5hbnQgYWNyIHNob3VsZCBiZSBwcmVzZW50XHJcbiAqIERvd25jYXNlZCB0byBtYXRjaCB0aGUgcmVhbG0gY2FzZS1pbnNlbnNpdGl2ZSBjb21wYXJpc29uIHJlcXVpcmVtZW50c1xyXG4gKiBAcGFyYW0gaWRUb2tlbkNsYWltc1xyXG4gKiBAcmV0dXJuc1xyXG4gKi9cclxuZnVuY3Rpb24gZ2V0VGVuYW50SWRGcm9tSWRUb2tlbkNsYWltcyhpZFRva2VuQ2xhaW1zKSB7XHJcbiAgICBpZiAoaWRUb2tlbkNsYWltcykge1xyXG4gICAgICAgIGNvbnN0IHRlbmFudElkID0gaWRUb2tlbkNsYWltcy50aWQgfHwgaWRUb2tlbkNsYWltcy50ZnAgfHwgaWRUb2tlbkNsYWltcy5hY3I7XHJcbiAgICAgICAgcmV0dXJuIHRlbmFudElkIHx8IG51bGw7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxufVxuXG5leHBvcnQgeyBnZXRUZW5hbnRJZEZyb21JZFRva2VuQ2xhaW1zIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ub2tlbkNsYWltcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/Authority.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/Authority.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Authority: function() { return /* binding */ Authority; },\n/* harmony export */   buildStaticAuthorityOptions: function() { return /* binding */ buildStaticAuthorityOptions; },\n/* harmony export */   formatAuthorityUri: function() { return /* binding */ formatAuthorityUri; },\n/* harmony export */   getTenantFromAuthorityString: function() { return /* binding */ getTenantFromAuthorityString; }\n/* harmony export */ });\n/* harmony import */ var _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthorityType.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _OpenIdConfigResponse_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./OpenIdConfigResponse.mjs */ \"./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./AuthorityMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ProtocolMode.mjs */ \"./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./AuthorityOptions.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _CloudInstanceDiscoveryResponse_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./CloudInstanceDiscoveryResponse.mjs */ \"./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs\");\n/* harmony import */ var _CloudInstanceDiscoveryErrorResponse_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./CloudInstanceDiscoveryErrorResponse.mjs */ \"./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs\");\n/* harmony import */ var _RegionDiscovery_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RegionDiscovery.mjs */ \"./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../cache/utils/CacheHelpers.mjs */ \"./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n * @internal\r\n */\r\nclass Authority {\r\n    constructor(authority, networkInterface, cacheManager, authorityOptions, logger, correlationId, performanceClient, managedIdentity) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n        this.cacheManager = cacheManager;\r\n        this.authorityOptions = authorityOptions;\r\n        this.regionDiscoveryMetadata = {\r\n            region_used: undefined,\r\n            region_source: undefined,\r\n            region_outcome: undefined,\r\n        };\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n        this.managedIdentity = managedIdentity || false;\r\n        this.regionDiscovery = new _RegionDiscovery_mjs__WEBPACK_IMPORTED_MODULE_0__.RegionDiscovery(networkInterface, this.logger, this.performanceClient, this.correlationId);\r\n    }\r\n    /**\r\n     * Get {@link AuthorityType}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    getAuthorityType(authorityUri) {\r\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\r\n        if (authorityUri.HostNameAndPort.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CIAM_AUTH_URL)) {\r\n            return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Ciam;\r\n        }\r\n        const pathSegments = authorityUri.PathSegments;\r\n        if (pathSegments.length) {\r\n            switch (pathSegments[0].toLowerCase()) {\r\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.ADFS:\r\n                    return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Adfs;\r\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DSTS:\r\n                    return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Dsts;\r\n            }\r\n        }\r\n        return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Default;\r\n    }\r\n    // See above for AuthorityType\r\n    get authorityType() {\r\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\r\n    }\r\n    /**\r\n     * ProtocolMode enum representing the way endpoints are constructed.\r\n     */\r\n    get protocolMode() {\r\n        return this.authorityOptions.protocolMode;\r\n    }\r\n    /**\r\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\r\n     */\r\n    get options() {\r\n        return this.authorityOptions;\r\n    }\r\n    /**\r\n     * A URL that is the authority set by the developer\r\n     */\r\n    get canonicalAuthority() {\r\n        return this._canonicalAuthority.urlString;\r\n    }\r\n    /**\r\n     * Sets canonical authority.\r\n     */\r\n    set canonicalAuthority(url) {\r\n        this._canonicalAuthority = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(url);\r\n        this._canonicalAuthority.validateAsUri();\r\n        this._canonicalAuthorityUrlComponents = null;\r\n    }\r\n    /**\r\n     * Get authority components.\r\n     */\r\n    get canonicalAuthorityUrlComponents() {\r\n        if (!this._canonicalAuthorityUrlComponents) {\r\n            this._canonicalAuthorityUrlComponents =\r\n                this._canonicalAuthority.getUrlComponents();\r\n        }\r\n        return this._canonicalAuthorityUrlComponents;\r\n    }\r\n    /**\r\n     * Get hostname and port i.e. login.microsoftonline.com\r\n     */\r\n    get hostnameAndPort() {\r\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\r\n    }\r\n    /**\r\n     * Get tenant for authority.\r\n     */\r\n    get tenant() {\r\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n    }\r\n    /**\r\n     * OAuth /authorize endpoint for requests\r\n     */\r\n    get authorizationEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.authorization_endpoint);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth /token endpoint for requests\r\n     */\r\n    get tokenEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.token_endpoint);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    get deviceCodeEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth logout endpoint for requests\r\n     */\r\n    get endSessionEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            // ROPC policies may not have end_session_endpoint set\r\n            if (!this.metadata.end_session_endpoint) {\r\n                throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endSessionEndpointNotSupported);\r\n            }\r\n            return this.replacePath(this.metadata.end_session_endpoint);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth issuer for requests\r\n     */\r\n    get selfSignedJwtAudience() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.issuer);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Jwks_uri for token signing keys\r\n     */\r\n    get jwksUri() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.jwks_uri);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    canReplaceTenant(authorityUri) {\r\n        return (authorityUri.PathSegments.length === 1 &&\r\n            !Authority.reservedTenantDomains.has(authorityUri.PathSegments[0]) &&\r\n            this.getAuthorityType(authorityUri) === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Default &&\r\n            this.protocolMode === _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_6__.ProtocolMode.AAD);\r\n    }\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    replaceTenant(urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    }\r\n    /**\r\n     * Replaces path such as tenant or policy with the current tenant or policy.\r\n     * @param urlString\r\n     */\r\n    replacePath(urlString) {\r\n        let endpoint = urlString;\r\n        const cachedAuthorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(this.metadata.canonical_authority);\r\n        const cachedAuthorityUrlComponents = cachedAuthorityUrl.getUrlComponents();\r\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\r\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\r\n        currentAuthorityParts.forEach((currentPart, index) => {\r\n            let cachedPart = cachedAuthorityParts[index];\r\n            if (index === 0 &&\r\n                this.canReplaceTenant(cachedAuthorityUrlComponents)) {\r\n                const tenantId = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];\r\n                /**\r\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\r\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\r\n                 * always resolved with tenant id by OIDC.\r\n                 */\r\n                if (cachedPart !== tenantId) {\r\n                    this.logger.verbose(`Replacing tenant domain name ${cachedPart} with id ${tenantId}`);\r\n                    cachedPart = tenantId;\r\n                }\r\n            }\r\n            if (currentPart !== cachedPart) {\r\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\r\n            }\r\n        });\r\n        return this.replaceTenant(endpoint);\r\n    }\r\n    /**\r\n     * The default open id configuration endpoint for any canonical authority.\r\n     */\r\n    get defaultOpenIdConfigurationEndpoint() {\r\n        const canonicalAuthorityHost = this.hostnameAndPort;\r\n        if (this.canonicalAuthority.endsWith(\"v2.0/\") ||\r\n            this.authorityType === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Adfs ||\r\n            (this.protocolMode !== _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_6__.ProtocolMode.AAD &&\r\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))) {\r\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\r\n        }\r\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\r\n    }\r\n    /**\r\n     * Boolean that returns whether or not tenant discovery has been completed.\r\n     */\r\n    discoveryComplete() {\r\n        return !!this.metadata;\r\n    }\r\n    /**\r\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\r\n     * and the /authorize, /token and logout endpoints.\r\n     */\r\n    async resolveEndpointsAsync() {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityResolveEndpointsAsync, this.correlationId);\r\n        const metadataEntity = this.getCurrentMetadataEntity();\r\n        const cloudDiscoverySource = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateCloudDiscoveryMetadata.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\r\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\r\n        const endpointSource = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateEndpointMetadata.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateEndpointMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\r\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\r\n            source: endpointSource,\r\n        });\r\n        this.performanceClient?.addFields({\r\n            cloudDiscoverySource: cloudDiscoverySource,\r\n            authorityEndpointSource: endpointSource,\r\n        }, this.correlationId);\r\n    }\r\n    /**\r\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\r\n     * from the configured canonical authority\r\n     * @returns\r\n     */\r\n    getCurrentMetadataEntity() {\r\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\r\n        if (!metadataEntity) {\r\n            metadataEntity = {\r\n                aliases: [],\r\n                preferred_cache: this.hostnameAndPort,\r\n                preferred_network: this.hostnameAndPort,\r\n                canonical_authority: this.canonicalAuthority,\r\n                authorization_endpoint: \"\",\r\n                token_endpoint: \"\",\r\n                end_session_endpoint: \"\",\r\n                issuer: \"\",\r\n                aliasesFromNetwork: false,\r\n                endpointsFromNetwork: false,\r\n                expiresAt: (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.generateAuthorityMetadataExpiresAt)(),\r\n                jwks_uri: \"\",\r\n            };\r\n        }\r\n        return metadataEntity;\r\n    }\r\n    /**\r\n     * Updates cached metadata based on metadata source and sets the instance's metadata\r\n     * property to the same value\r\n     * @param metadataEntity\r\n     * @param cloudDiscoverySource\r\n     * @param endpointMetadataResult\r\n     */\r\n    updateCachedMetadata(metadataEntity, cloudDiscoverySource, endpointMetadataResult) {\r\n        if (cloudDiscoverySource !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE &&\r\n            endpointMetadataResult?.source !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE) {\r\n            // Reset the expiration time unless both values came from a successful cache lookup\r\n            metadataEntity.expiresAt =\r\n                (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.generateAuthorityMetadataExpiresAt)();\r\n            metadataEntity.canonical_authority = this.canonicalAuthority;\r\n        }\r\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\r\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\r\n        this.metadata = metadataEntity;\r\n    }\r\n    /**\r\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\r\n     * @param metadataEntity\r\n     */\r\n    async updateEndpointMetadata(metadataEntity) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);\r\n        const localMetadata = this.updateEndpointMetadataFromLocalSources(metadataEntity);\r\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\r\n        if (localMetadata) {\r\n            if (localMetadata.source ===\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES) {\r\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n                if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\r\n                    if (localMetadata.metadata) {\r\n                        const hardcodedMetadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateMetadataWithRegionalInformation.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(localMetadata.metadata);\r\n                        (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, hardcodedMetadata, false);\r\n                        metadataEntity.canonical_authority =\r\n                            this.canonicalAuthority;\r\n                    }\r\n                }\r\n            }\r\n            return localMetadata.source;\r\n        }\r\n        // Get metadata from network if local sources aren't available\r\n        let metadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.getEndpointMetadataFromNetwork.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\r\n        if (metadata) {\r\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\r\n                metadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateMetadataWithRegionalInformation.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(metadata);\r\n            }\r\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, metadata, true);\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.NETWORK;\r\n        }\r\n        else {\r\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.openIdConfigError, this.defaultOpenIdConfigurationEndpoint);\r\n        }\r\n    }\r\n    /**\r\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\r\n     * response if the source is hardcoded metadata\r\n     * @param metadataEntity\r\n     * @returns\r\n     */\r\n    updateEndpointMetadataFromLocalSources(metadataEntity) {\r\n        this.logger.verbose(\"Attempting to get endpoint metadata from authority configuration\");\r\n        const configMetadata = this.getEndpointMetadataFromConfig();\r\n        if (configMetadata) {\r\n            this.logger.verbose(\"Found endpoint metadata in authority configuration\");\r\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, configMetadata, false);\r\n            return {\r\n                source: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG,\r\n            };\r\n        }\r\n        this.logger.verbose(\"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\");\r\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\r\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\");\r\n        }\r\n        else {\r\n            const hardcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\r\n            if (hardcodedMetadata) {\r\n                (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, hardcodedMetadata, false);\r\n                return {\r\n                    source: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES,\r\n                    metadata: hardcodedMetadata,\r\n                };\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\");\r\n            }\r\n        }\r\n        // Check cached metadata entity expiration status\r\n        const metadataEntityExpired = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.isAuthorityMetadataExpired)(metadataEntity);\r\n        if (this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.endpointsFromNetwork &&\r\n            !metadataEntityExpired) {\r\n            // No need to update\r\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\r\n            return { source: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE };\r\n        }\r\n        else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Compares the number of url components after the domain to determine if the cached\r\n     * authority metadata can be used for the requested authority. Protects against same domain different\r\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\r\n     * @param metadataEntity\r\n     */\r\n    isAuthoritySameType(metadataEntity) {\r\n        const cachedAuthorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(metadataEntity.canonical_authority);\r\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\r\n        return (cachedParts.length ===\r\n            this.canonicalAuthorityUrlComponents.PathSegments.length);\r\n    }\r\n    /**\r\n     * Parse authorityMetadata config option\r\n     */\r\n    getEndpointMetadataFromConfig() {\r\n        if (this.authorityOptions.authorityMetadata) {\r\n            try {\r\n                return JSON.parse(this.authorityOptions.authorityMetadata);\r\n            }\r\n            catch (e) {\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.invalidAuthorityMetadata);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    async getEndpointMetadataFromNetwork() {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\r\n        const options = {};\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n        const openIdConfigurationEndpoint = this.defaultOpenIdConfigurationEndpoint;\r\n        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`);\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint, options);\r\n            const isValidResponse = (0,_OpenIdConfigResponse_mjs__WEBPACK_IMPORTED_MODULE_12__.isOpenIdConfigResponse)(response.body);\r\n            if (isValidResponse) {\r\n                return response.body;\r\n            }\r\n            else {\r\n                this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`);\r\n                return null;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`);\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Get OAuth endpoints for common authorities.\r\n     */\r\n    getEndpointMetadataFromHardcodedValues() {\r\n        if (this.hostnameAndPort in _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.EndpointMetadata) {\r\n            return _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.EndpointMetadata[this.hostnameAndPort];\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Update the retrieved metadata with regional information.\r\n     * User selected Azure region will be used if configured.\r\n     */\r\n    async updateMetadataWithRegionalInformation(metadata) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\r\n        const userConfiguredAzureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion;\r\n        if (userConfiguredAzureRegion) {\r\n            if (userConfiguredAzureRegion !==\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    userConfiguredAzureRegion;\r\n                return Authority.replaceWithRegionalInformation(metadata, userConfiguredAzureRegion);\r\n            }\r\n            const autodetectedRegionName = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.regionDiscovery.detectRegion.bind(this.regionDiscovery), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.RegionDiscoveryDetectRegion, this.logger, this.performanceClient, this.correlationId)(this.authorityOptions.azureRegionConfiguration\r\n                ?.environmentRegion, this.regionDiscoveryMetadata);\r\n            if (autodetectedRegionName) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    autodetectedRegionName;\r\n                return Authority.replaceWithRegionalInformation(metadata, autodetectedRegionName);\r\n            }\r\n            this.regionDiscoveryMetadata.region_outcome =\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\r\n        }\r\n        return metadata;\r\n    }\r\n    /**\r\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\r\n     * and returns where the information was retrieved from\r\n     * @param metadataEntity\r\n     * @returns AuthorityMetadataSource\r\n     */\r\n    async updateCloudDiscoveryMetadata(metadataEntity) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);\r\n        const localMetadataSource = this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\r\n        if (localMetadataSource) {\r\n            return localMetadataSource;\r\n        }\r\n        // Fallback to network as metadata source\r\n        const metadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.getCloudDiscoveryMetadataFromNetwork.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\r\n        if (metadata) {\r\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateCloudDiscoveryMetadata)(metadataEntity, metadata, true);\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.NETWORK;\r\n        }\r\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n        throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.untrustedAuthority);\r\n    }\r\n    updateCloudDiscoveryMetadataFromLocalSources(metadataEntity) {\r\n        this.logger.verbose(\"Attempting to get cloud discovery metadata  from authority configuration\");\r\n        this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities ||\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\r\n        this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata ||\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\r\n        this.logger.verbosePii(`Canonical Authority: ${metadataEntity.canonical_authority || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\r\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\r\n        if (metadata) {\r\n            this.logger.verbose(\"Found cloud discovery metadata in authority configuration\");\r\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateCloudDiscoveryMetadata)(metadataEntity, metadata, false);\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG;\r\n        }\r\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\r\n        this.logger.verbose(\"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\");\r\n        if (this.options.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\");\r\n        }\r\n        else {\r\n            const hardcodedMetadata = (0,_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.getCloudDiscoveryMetadataFromHardcodedValues)(this.hostnameAndPort);\r\n            if (hardcodedMetadata) {\r\n                this.logger.verbose(\"Found cloud discovery metadata from hardcoded values.\");\r\n                (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateCloudDiscoveryMetadata)(metadataEntity, hardcodedMetadata, false);\r\n                return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES;\r\n            }\r\n            this.logger.verbose(\"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\");\r\n        }\r\n        const metadataEntityExpired = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.isAuthorityMetadataExpired)(metadataEntity);\r\n        if (this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.aliasesFromNetwork &&\r\n            !metadataEntityExpired) {\r\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\r\n            // No need to update\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE;\r\n        }\r\n        else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\r\n     */\r\n    getCloudDiscoveryMetadataFromConfig() {\r\n        // CIAM does not support cloud discovery metadata\r\n        if (this.authorityType === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Ciam) {\r\n            this.logger.verbose(\"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\");\r\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        // Check if network response was provided in config\r\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\r\n            this.logger.verbose(\"The cloud discovery metadata has been provided as a network response, in the config.\");\r\n            try {\r\n                this.logger.verbose(\"Attempting to parse the cloud discovery metadata.\");\r\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);\r\n                const metadata = (0,_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.getCloudDiscoveryMetadataFromNetworkResponse)(parsedResponse.metadata, this.hostnameAndPort);\r\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\r\n                if (metadata) {\r\n                    this.logger.verbose(\"There is returnable metadata attached to the parsed cloud discovery metadata.\");\r\n                    return metadata;\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"There is no metadata attached to the parsed cloud discovery metadata.\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\");\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.invalidCloudDiscoveryMetadata);\r\n            }\r\n        }\r\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\r\n        if (this.isInKnownAuthorities()) {\r\n            this.logger.verbose(\"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\");\r\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    async getCloudDiscoveryMetadataFromNetwork() {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);\r\n        const instanceDiscoveryEndpoint = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\r\n        const options = {};\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n        let match = null;\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint, options);\r\n            let typedResponseBody;\r\n            let metadata;\r\n            if ((0,_CloudInstanceDiscoveryResponse_mjs__WEBPACK_IMPORTED_MODULE_14__.isCloudInstanceDiscoveryResponse)(response.body)) {\r\n                typedResponseBody =\r\n                    response.body;\r\n                metadata = typedResponseBody.metadata;\r\n                this.logger.verbosePii(`tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`);\r\n            }\r\n            else if ((0,_CloudInstanceDiscoveryErrorResponse_mjs__WEBPACK_IMPORTED_MODULE_15__.isCloudInstanceDiscoveryErrorResponse)(response.body)) {\r\n                this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`);\r\n                typedResponseBody =\r\n                    response.body;\r\n                if (typedResponseBody.error === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.INVALID_INSTANCE) {\r\n                    this.logger.error(\"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\");\r\n                    return null;\r\n                }\r\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`);\r\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`);\r\n                this.logger.warning(\"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\");\r\n                metadata = [];\r\n            }\r\n            else {\r\n                this.logger.error(\"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\");\r\n                return null;\r\n            }\r\n            this.logger.verbose(\"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\");\r\n            match = (0,_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.getCloudDiscoveryMetadataFromNetworkResponse)(metadata, this.hostnameAndPort);\r\n        }\r\n        catch (error) {\r\n            if (error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_16__.AuthError) {\r\n                this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`);\r\n            }\r\n            else {\r\n                const typedError = error;\r\n                this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`);\r\n            }\r\n            return null;\r\n        }\r\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\r\n        if (!match) {\r\n            this.logger.warning(\"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\");\r\n            this.logger.verbose(\"Creating custom Authority for custom domain scenario.\");\r\n            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        return match;\r\n    }\r\n    /**\r\n     * Helper function to determine if this host is included in the knownAuthorities config option\r\n     */\r\n    isInKnownAuthorities() {\r\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\r\n            return (authority &&\r\n                _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.getDomainFromUrl(authority).toLowerCase() ===\r\n                    this.hostnameAndPort);\r\n        });\r\n        return matches.length > 0;\r\n    }\r\n    /**\r\n     * helper function to populate the authority based on azureCloudOptions\r\n     * @param authorityString\r\n     * @param azureCloudOptions\r\n     */\r\n    static generateAuthority(authorityString, azureCloudOptions) {\r\n        let authorityAzureCloudInstance;\r\n        if (azureCloudOptions &&\r\n            azureCloudOptions.azureCloudInstance !== _AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_17__.AzureCloudInstance.None) {\r\n            const tenant = azureCloudOptions.tenant\r\n                ? azureCloudOptions.tenant\r\n                : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_COMMON_TENANT;\r\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\r\n        }\r\n        return authorityAzureCloudInstance\r\n            ? authorityAzureCloudInstance\r\n            : authorityString;\r\n    }\r\n    /**\r\n     * Creates cloud discovery metadata object from a given host\r\n     * @param host\r\n     */\r\n    static createCloudDiscoveryMetadataFromHost(host) {\r\n        return {\r\n            preferred_network: host,\r\n            preferred_cache: host,\r\n            aliases: [host],\r\n        };\r\n    }\r\n    /**\r\n     * helper function to generate environment from authority object\r\n     */\r\n    getPreferredCache() {\r\n        if (this.managedIdentity) {\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_AUTHORITY_HOST;\r\n        }\r\n        else if (this.discoveryComplete()) {\r\n            return this.metadata.preferred_cache;\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether or not the provided host is an alias of this authority instance\r\n     * @param host\r\n     */\r\n    isAlias(host) {\r\n        return this.metadata.aliases.indexOf(host) > -1;\r\n    }\r\n    /**\r\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\r\n     * @param host\r\n     */\r\n    isAliasOfKnownMicrosoftAuthority(host) {\r\n        return _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.InstanceDiscoveryMetadataAliases.has(host);\r\n    }\r\n    /**\r\n     * Checks whether the provided host is that of a public cloud authority\r\n     *\r\n     * @param authority string\r\n     * @returns bool\r\n     */\r\n    static isPublicCloudAuthority(host) {\r\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\r\n    }\r\n    /**\r\n     * Rebuild the authority string with the region\r\n     *\r\n     * @param host string\r\n     * @param region string\r\n     */\r\n    static buildRegionalAuthorityString(host, region, queryString) {\r\n        // Create and validate a Url string object with the initial authority string\r\n        const authorityUrlInstance = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(host);\r\n        authorityUrlInstance.validateAsUri();\r\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\r\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\r\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\r\n            hostNameAndPort = `${region}.${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\r\n        }\r\n        // Include the query string portion of the url\r\n        const url = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.constructAuthorityUriFromObject({\r\n            ...authorityUrlInstance.getUrlComponents(),\r\n            HostNameAndPort: hostNameAndPort,\r\n        }).urlString;\r\n        // Add the query string if a query string was provided\r\n        if (queryString)\r\n            return `${url}?${queryString}`;\r\n        return url;\r\n    }\r\n    /**\r\n     * Replace the endpoints in the metadata object with their regional equivalents.\r\n     *\r\n     * @param metadata OpenIdConfigResponse\r\n     * @param azureRegion string\r\n     */\r\n    static replaceWithRegionalInformation(metadata, azureRegion) {\r\n        const regionalMetadata = { ...metadata };\r\n        regionalMetadata.authorization_endpoint =\r\n            Authority.buildRegionalAuthorityString(regionalMetadata.authorization_endpoint, azureRegion);\r\n        regionalMetadata.token_endpoint =\r\n            Authority.buildRegionalAuthorityString(regionalMetadata.token_endpoint, azureRegion);\r\n        if (regionalMetadata.end_session_endpoint) {\r\n            regionalMetadata.end_session_endpoint =\r\n                Authority.buildRegionalAuthorityString(regionalMetadata.end_session_endpoint, azureRegion);\r\n        }\r\n        return regionalMetadata;\r\n    }\r\n    /**\r\n     * Transform CIAM_AUTHORIY as per the below rules:\r\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\r\n     *\r\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\r\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\r\n     *\r\n     * @param authority\r\n     */\r\n    static transformCIAMAuthority(authority) {\r\n        let ciamAuthority = authority;\r\n        const authorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(authority);\r\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n        // check if transformation is needed\r\n        if (authorityUrlComponents.PathSegments.length === 0 &&\r\n            authorityUrlComponents.HostNameAndPort.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CIAM_AUTH_URL)) {\r\n            const tenantIdOrDomain = authorityUrlComponents.HostNameAndPort.split(\".\")[0];\r\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\r\n        }\r\n        return ciamAuthority;\r\n    }\r\n}\r\n// Reserved tenant domain names that will not be replaced with tenant id\r\nAuthority.reservedTenantDomains = new Set([\r\n    \"{tenant}\",\r\n    \"{tenantid}\",\r\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.COMMON,\r\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.CONSUMERS,\r\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.ORGANIZATIONS,\r\n]);\r\n/**\r\n * Extract tenantId from authority\r\n */\r\nfunction getTenantFromAuthorityString(authority) {\r\n    const authorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(authority);\r\n    const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n    /**\r\n     * For credential matching purposes, tenantId is the last path segment of the authority URL:\r\n     *  AAD Authority - domain/tenantId -> Credentials are cached with realm = tenantId\r\n     *  B2C Authority - domain/{tenantId}?/.../policy -> Credentials are cached with realm = policy\r\n     *  tenantId is downcased because B2C policies can have mixed case but tfp claim is downcased\r\n     *\r\n     * Note that we may not have any path segments in certain OIDC scenarios.\r\n     */\r\n    const tenantId = authorityUrlComponents.PathSegments.slice(-1)[0]?.toLowerCase();\r\n    switch (tenantId) {\r\n        case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.COMMON:\r\n        case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.ORGANIZATIONS:\r\n        case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.CONSUMERS:\r\n            return undefined;\r\n        default:\r\n            return tenantId;\r\n    }\r\n}\r\nfunction formatAuthorityUri(authorityUri) {\r\n    return authorityUri.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.FORWARD_SLASH)\r\n        ? authorityUri\r\n        : `${authorityUri}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.FORWARD_SLASH}`;\r\n}\r\nfunction buildStaticAuthorityOptions(authOptions) {\r\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\r\n    let cloudDiscoveryMetadata = undefined;\r\n    if (rawCloudDiscoveryMetadata) {\r\n        try {\r\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.invalidCloudDiscoveryMetadata);\r\n        }\r\n    }\r\n    return {\r\n        canonicalAuthority: authOptions.authority\r\n            ? formatAuthorityUri(authOptions.authority)\r\n            : undefined,\r\n        knownAuthorities: authOptions.knownAuthorities,\r\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\r\n    };\r\n}\n\n\n//# sourceMappingURL=Authority.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/Authority.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDiscoveredInstance: function() { return /* binding */ createDiscoveredInstance; }\n/* harmony export */ });\n/* harmony import */ var _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Authority.mjs */ \"./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Create an authority object of the correct type based on the url\r\n * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n *\r\n * Also performs endpoint discovery.\r\n *\r\n * @param authorityUri\r\n * @param networkClient\r\n * @param protocolMode\r\n * @internal\r\n */\r\nasync function createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient) {\r\n    performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);\r\n    const authorityUriFinal = _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.Authority.transformCIAMAuthority((0,_Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.formatAuthorityUri)(authorityUri));\r\n    // Initialize authority and perform discovery endpoint check.\r\n    const acquireTokenAuthority = new _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.Authority(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient);\r\n    try {\r\n        await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(acquireTokenAuthority.resolveEndpointsAsync.bind(acquireTokenAuthority), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthorityResolveEndpointsAsync, logger, performanceClient, correlationId)();\r\n        return acquireTokenAuthority;\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.endpointResolutionError);\r\n    }\r\n}\n\n\n//# sourceMappingURL=AuthorityFactory.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eUZhY3RvcnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDbUQ7QUFDSztBQUNhO0FBQ3RCO0FBQ2dCOztBQUU1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywwRkFBaUI7QUFDNUQsOEJBQThCLHFEQUFTLHdCQUF3QixrRUFBa0I7QUFDakY7QUFDQSxzQ0FBc0MscURBQVM7QUFDL0M7QUFDQSxjQUFjLHdFQUFXLDBFQUEwRSwwRkFBaUI7QUFDcEg7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxvRkFBdUI7QUFDM0Q7QUFDQTs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2F1dGhvcml0eS9BdXRob3JpdHlGYWN0b3J5Lm1qcz9lYjAyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQXV0aG9yaXR5LCBmb3JtYXRBdXRob3JpdHlVcmkgfSBmcm9tICcuL0F1dGhvcml0eS5tanMnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50QXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50cyB9IGZyb20gJy4uL3RlbGVtZXRyeS9wZXJmb3JtYW5jZS9QZXJmb3JtYW5jZUV2ZW50Lm1qcyc7XG5pbXBvcnQgeyBpbnZva2VBc3luYyB9IGZyb20gJy4uL3V0aWxzL0Z1bmN0aW9uV3JhcHBlcnMubWpzJztcbmltcG9ydCB7IGVuZHBvaW50UmVzb2x1dGlvbkVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBDcmVhdGUgYW4gYXV0aG9yaXR5IG9iamVjdCBvZiB0aGUgY29ycmVjdCB0eXBlIGJhc2VkIG9uIHRoZSB1cmxcclxuICogUGVyZm9ybXMgYmFzaWMgYXV0aG9yaXR5IHZhbGlkYXRpb24gLSBjaGVja3MgdG8gc2VlIGlmIHRoZSBhdXRob3JpdHkgaXMgb2YgYSB2YWxpZCB0eXBlIChpLmUuIGFhZCwgYjJjLCBhZGZzKVxyXG4gKlxyXG4gKiBBbHNvIHBlcmZvcm1zIGVuZHBvaW50IGRpc2NvdmVyeS5cclxuICpcclxuICogQHBhcmFtIGF1dGhvcml0eVVyaVxyXG4gKiBAcGFyYW0gbmV0d29ya0NsaWVudFxyXG4gKiBAcGFyYW0gcHJvdG9jb2xNb2RlXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlRGlzY292ZXJlZEluc3RhbmNlKGF1dGhvcml0eVVyaSwgbmV0d29ya0NsaWVudCwgY2FjaGVNYW5hZ2VyLCBhdXRob3JpdHlPcHRpb25zLCBsb2dnZXIsIGNvcnJlbGF0aW9uSWQsIHBlcmZvcm1hbmNlQ2xpZW50KSB7XHJcbiAgICBwZXJmb3JtYW5jZUNsaWVudD8uYWRkUXVldWVNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5BdXRob3JpdHlGYWN0b3J5Q3JlYXRlRGlzY292ZXJlZEluc3RhbmNlLCBjb3JyZWxhdGlvbklkKTtcclxuICAgIGNvbnN0IGF1dGhvcml0eVVyaUZpbmFsID0gQXV0aG9yaXR5LnRyYW5zZm9ybUNJQU1BdXRob3JpdHkoZm9ybWF0QXV0aG9yaXR5VXJpKGF1dGhvcml0eVVyaSkpO1xyXG4gICAgLy8gSW5pdGlhbGl6ZSBhdXRob3JpdHkgYW5kIHBlcmZvcm0gZGlzY292ZXJ5IGVuZHBvaW50IGNoZWNrLlxyXG4gICAgY29uc3QgYWNxdWlyZVRva2VuQXV0aG9yaXR5ID0gbmV3IEF1dGhvcml0eShhdXRob3JpdHlVcmlGaW5hbCwgbmV0d29ya0NsaWVudCwgY2FjaGVNYW5hZ2VyLCBhdXRob3JpdHlPcHRpb25zLCBsb2dnZXIsIGNvcnJlbGF0aW9uSWQsIHBlcmZvcm1hbmNlQ2xpZW50KTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgaW52b2tlQXN5bmMoYWNxdWlyZVRva2VuQXV0aG9yaXR5LnJlc29sdmVFbmRwb2ludHNBc3luYy5iaW5kKGFjcXVpcmVUb2tlbkF1dGhvcml0eSksIFBlcmZvcm1hbmNlRXZlbnRzLkF1dGhvcml0eVJlc29sdmVFbmRwb2ludHNBc3luYywgbG9nZ2VyLCBwZXJmb3JtYW5jZUNsaWVudCwgY29ycmVsYXRpb25JZCkoKTtcclxuICAgICAgICByZXR1cm4gYWNxdWlyZVRva2VuQXV0aG9yaXR5O1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoZW5kcG9pbnRSZXNvbHV0aW9uRXJyb3IpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IGNyZWF0ZURpc2NvdmVyZWRJbnN0YW5jZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aG9yaXR5RmFjdG9yeS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EndpointMetadata: function() { return /* binding */ EndpointMetadata; },\n/* harmony export */   InstanceDiscoveryMetadata: function() { return /* binding */ InstanceDiscoveryMetadata; },\n/* harmony export */   InstanceDiscoveryMetadataAliases: function() { return /* binding */ InstanceDiscoveryMetadataAliases; },\n/* harmony export */   getAliasesFromMetadata: function() { return /* binding */ getAliasesFromMetadata; },\n/* harmony export */   getAliasesFromStaticSources: function() { return /* binding */ getAliasesFromStaticSources; },\n/* harmony export */   getCloudDiscoveryMetadataFromHardcodedValues: function() { return /* binding */ getCloudDiscoveryMetadataFromHardcodedValues; },\n/* harmony export */   getCloudDiscoveryMetadataFromNetworkResponse: function() { return /* binding */ getCloudDiscoveryMetadataFromNetworkResponse; },\n/* harmony export */   rawMetdataJSON: function() { return /* binding */ rawMetdataJSON; }\n/* harmony export */ });\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst rawMetdataJSON = {\r\n    endpointMetadata: {\r\n        \"login.microsoftonline.com\": {\r\n            token_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.chinacloudapi.cn\": {\r\n            token_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.microsoftonline.us\": {\r\n            token_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n    },\r\n    instanceDiscoveryMetadata: {\r\n        tenant_discovery_endpoint: \"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration\",\r\n        metadata: [\r\n            {\r\n                preferred_network: \"login.microsoftonline.com\",\r\n                preferred_cache: \"login.windows.net\",\r\n                aliases: [\r\n                    \"login.microsoftonline.com\",\r\n                    \"login.windows.net\",\r\n                    \"login.microsoft.com\",\r\n                    \"sts.windows.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.partner.microsoftonline.cn\",\r\n                preferred_cache: \"login.partner.microsoftonline.cn\",\r\n                aliases: [\r\n                    \"login.partner.microsoftonline.cn\",\r\n                    \"login.chinacloudapi.cn\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.de\",\r\n                preferred_cache: \"login.microsoftonline.de\",\r\n                aliases: [\"login.microsoftonline.de\"],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.us\",\r\n                preferred_cache: \"login.microsoftonline.us\",\r\n                aliases: [\r\n                    \"login.microsoftonline.us\",\r\n                    \"login.usgovcloudapi.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login-us.microsoftonline.com\",\r\n                preferred_cache: \"login-us.microsoftonline.com\",\r\n                aliases: [\"login-us.microsoftonline.com\"],\r\n            },\r\n        ],\r\n    },\r\n};\r\nconst EndpointMetadata = rawMetdataJSON.endpointMetadata;\r\nconst InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\r\nconst InstanceDiscoveryMetadataAliases = new Set();\r\nInstanceDiscoveryMetadata.metadata.forEach((metadataEntry) => {\r\n    metadataEntry.aliases.forEach((alias) => {\r\n        InstanceDiscoveryMetadataAliases.add(alias);\r\n    });\r\n});\r\n/**\r\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\r\n * @param staticAuthorityOptions\r\n * @param logger\r\n * @returns\r\n */\r\nfunction getAliasesFromStaticSources(staticAuthorityOptions, logger) {\r\n    let staticAliases;\r\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\r\n    if (canonicalAuthority) {\r\n        const authorityHost = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_0__.UrlString(canonicalAuthority).getUrlComponents().HostNameAndPort;\r\n        staticAliases =\r\n            getAliasesFromMetadata(authorityHost, staticAuthorityOptions.cloudDiscoveryMetadata?.metadata, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG, logger) ||\r\n                getAliasesFromMetadata(authorityHost, InstanceDiscoveryMetadata.metadata, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES, logger) ||\r\n                staticAuthorityOptions.knownAuthorities;\r\n    }\r\n    return staticAliases || [];\r\n}\r\n/**\r\n * Returns aliases for from the raw cloud discovery metadata passed in\r\n * @param authorityHost\r\n * @param rawCloudDiscoveryMetadata\r\n * @returns\r\n */\r\nfunction getAliasesFromMetadata(authorityHost, cloudDiscoveryMetadata, source, logger) {\r\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\r\n    if (authorityHost && cloudDiscoveryMetadata) {\r\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(cloudDiscoveryMetadata, authorityHost);\r\n        if (metadata) {\r\n            logger?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`);\r\n            return metadata.aliases;\r\n        }\r\n        else {\r\n            logger?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get cloud discovery metadata for common authorities\r\n */\r\nfunction getCloudDiscoveryMetadataFromHardcodedValues(authorityHost) {\r\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(InstanceDiscoveryMetadata.metadata, authorityHost);\r\n    return metadata;\r\n}\r\n/**\r\n * Searches instance discovery network response for the entry that contains the host in the aliases list\r\n * @param response\r\n * @param authority\r\n */\r\nfunction getCloudDiscoveryMetadataFromNetworkResponse(response, authorityHost) {\r\n    for (let i = 0; i < response.length; i++) {\r\n        const metadata = response[i];\r\n        if (metadata.aliases.includes(authorityHost)) {\r\n            return metadata;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n\n//# sourceMappingURL=AuthorityMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureCloudInstance: function() { return /* binding */ AzureCloudInstance; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst AzureCloudInstance = {\r\n    // AzureCloudInstance is not specified.\r\n    None: \"none\",\r\n    // Microsoft Azure public cloud\r\n    AzurePublic: \"https://login.microsoftonline.com\",\r\n    // Microsoft PPE\r\n    AzurePpe: \"https://login.windows-ppe.net\",\r\n    // Microsoft Chinese national/regional cloud\r\n    AzureChina: \"https://login.chinacloudapi.cn\",\r\n    // Microsoft German national/regional cloud (\"Black Forest\")\r\n    AzureGermany: \"https://login.microsoftonline.de\",\r\n    // US Government cloud\r\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\r\n};\n\n\n//# sourceMappingURL=AuthorityOptions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eU9wdGlvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eU9wdGlvbnMubWpzPzgzODkiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgQXp1cmVDbG91ZEluc3RhbmNlID0ge1xyXG4gICAgLy8gQXp1cmVDbG91ZEluc3RhbmNlIGlzIG5vdCBzcGVjaWZpZWQuXHJcbiAgICBOb25lOiBcIm5vbmVcIixcclxuICAgIC8vIE1pY3Jvc29mdCBBenVyZSBwdWJsaWMgY2xvdWRcclxuICAgIEF6dXJlUHVibGljOiBcImh0dHBzOi8vbG9naW4ubWljcm9zb2Z0b25saW5lLmNvbVwiLFxyXG4gICAgLy8gTWljcm9zb2Z0IFBQRVxyXG4gICAgQXp1cmVQcGU6IFwiaHR0cHM6Ly9sb2dpbi53aW5kb3dzLXBwZS5uZXRcIixcclxuICAgIC8vIE1pY3Jvc29mdCBDaGluZXNlIG5hdGlvbmFsL3JlZ2lvbmFsIGNsb3VkXHJcbiAgICBBenVyZUNoaW5hOiBcImh0dHBzOi8vbG9naW4uY2hpbmFjbG91ZGFwaS5jblwiLFxyXG4gICAgLy8gTWljcm9zb2Z0IEdlcm1hbiBuYXRpb25hbC9yZWdpb25hbCBjbG91ZCAoXCJCbGFjayBGb3Jlc3RcIilcclxuICAgIEF6dXJlR2VybWFueTogXCJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5kZVwiLFxyXG4gICAgLy8gVVMgR292ZXJubWVudCBjbG91ZFxyXG4gICAgQXp1cmVVc0dvdmVybm1lbnQ6IFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUudXNcIixcclxufTtcblxuZXhwb3J0IHsgQXp1cmVDbG91ZEluc3RhbmNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRob3JpdHlPcHRpb25zLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorityType: function() { return /* binding */ AuthorityType; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nconst AuthorityType = {\r\n    Default: 0,\r\n    Adfs: 1,\r\n    Dsts: 2,\r\n    Ciam: 3,\r\n};\n\n\n//# sourceMappingURL=AuthorityType.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eVR5cGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hdXRob3JpdHkvQXV0aG9yaXR5VHlwZS5tanM/NDkyMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQXV0aG9yaXR5IHR5cGVzIHN1cHBvcnRlZCBieSBNU0FMLlxyXG4gKi9cclxuY29uc3QgQXV0aG9yaXR5VHlwZSA9IHtcclxuICAgIERlZmF1bHQ6IDAsXHJcbiAgICBBZGZzOiAxLFxyXG4gICAgRHN0czogMixcclxuICAgIENpYW06IDMsXHJcbn07XG5cbmV4cG9ydCB7IEF1dGhvcml0eVR5cGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhvcml0eVR5cGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCloudInstanceDiscoveryErrorResponse: function() { return /* binding */ isCloudInstanceDiscoveryErrorResponse; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isCloudInstanceDiscoveryErrorResponse(response) {\r\n    return (response.hasOwnProperty(\"error\") &&\r\n        response.hasOwnProperty(\"error_description\"));\r\n}\n\n\n//# sourceMappingURL=CloudInstanceDiscoveryErrorResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlFcnJvclJlc3BvbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlEO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hdXRob3JpdHkvQ2xvdWRJbnN0YW5jZURpc2NvdmVyeUVycm9yUmVzcG9uc2UubWpzPzM3NjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNDbG91ZEluc3RhbmNlRGlzY292ZXJ5RXJyb3JSZXNwb25zZShyZXNwb25zZSkge1xyXG4gICAgcmV0dXJuIChyZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcImVycm9yXCIpICYmXHJcbiAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJlcnJvcl9kZXNjcmlwdGlvblwiKSk7XHJcbn1cblxuZXhwb3J0IHsgaXNDbG91ZEluc3RhbmNlRGlzY292ZXJ5RXJyb3JSZXNwb25zZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xvdWRJbnN0YW5jZURpc2NvdmVyeUVycm9yUmVzcG9uc2UubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCloudInstanceDiscoveryResponse: function() { return /* binding */ isCloudInstanceDiscoveryResponse; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isCloudInstanceDiscoveryResponse(response) {\r\n    return (response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\r\n        response.hasOwnProperty(\"metadata\"));\r\n}\n\n\n//# sourceMappingURL=CloudInstanceDiscoveryResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZS5tanM/YmFhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5mdW5jdGlvbiBpc0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZShyZXNwb25zZSkge1xyXG4gICAgcmV0dXJuIChyZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcInRlbmFudF9kaXNjb3ZlcnlfZW5kcG9pbnRcIikgJiZcclxuICAgICAgICByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcIm1ldGFkYXRhXCIpKTtcclxufVxuXG5leHBvcnQgeyBpc0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xvdWRJbnN0YW5jZURpc2NvdmVyeVJlc3BvbnNlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isOpenIdConfigResponse: function() { return /* binding */ isOpenIdConfigResponse; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isOpenIdConfigResponse(response) {\r\n    return (response.hasOwnProperty(\"authorization_endpoint\") &&\r\n        response.hasOwnProperty(\"token_endpoint\") &&\r\n        response.hasOwnProperty(\"issuer\") &&\r\n        response.hasOwnProperty(\"jwks_uri\"));\r\n}\n\n\n//# sourceMappingURL=OpenIdConfigResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L09wZW5JZENvbmZpZ1Jlc3BvbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L09wZW5JZENvbmZpZ1Jlc3BvbnNlLm1qcz8zZWMxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmZ1bmN0aW9uIGlzT3BlbklkQ29uZmlnUmVzcG9uc2UocmVzcG9uc2UpIHtcclxuICAgIHJldHVybiAocmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJhdXRob3JpemF0aW9uX2VuZHBvaW50XCIpICYmXHJcbiAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJ0b2tlbl9lbmRwb2ludFwiKSAmJlxyXG4gICAgICAgIHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiaXNzdWVyXCIpICYmXHJcbiAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJqd2tzX3VyaVwiKSk7XHJcbn1cblxuZXhwb3J0IHsgaXNPcGVuSWRDb25maWdSZXNwb25zZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T3BlbklkQ29uZmlnUmVzcG9uc2UubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolMode: function() { return /* binding */ ProtocolMode; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Protocol modes supported by MSAL.\r\n */\r\nconst ProtocolMode = {\r\n    AAD: \"AAD\",\r\n    OIDC: \"OIDC\",\r\n};\n\n\n//# sourceMappingURL=ProtocolMode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanM/YjI2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogUHJvdG9jb2wgbW9kZXMgc3VwcG9ydGVkIGJ5IE1TQUwuXHJcbiAqL1xyXG5jb25zdCBQcm90b2NvbE1vZGUgPSB7XHJcbiAgICBBQUQ6IFwiQUFEXCIsXHJcbiAgICBPSURDOiBcIk9JRENcIixcclxufTtcblxuZXhwb3J0IHsgUHJvdG9jb2xNb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm90b2NvbE1vZGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RegionDiscovery: function() { return /* binding */ RegionDiscovery; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass RegionDiscovery {\r\n    constructor(networkInterface, logger, performanceClient, correlationId) {\r\n        this.networkInterface = networkInterface;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n    }\r\n    /**\r\n     * Detect the region from the application's environment.\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    async detectRegion(environmentRegion, regionDiscoveryMetadata) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);\r\n        // Initialize auto detected region with the region from the envrionment\r\n        let autodetectedRegionName = environmentRegion;\r\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\r\n        if (!autodetectedRegionName) {\r\n            const options = RegionDiscovery.IMDS_OPTIONS;\r\n            try {\r\n                const localIMDSVersionResponse = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getRegionFromIMDS.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_VERSION, options);\r\n                if (localIMDSVersionResponse.status ===\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpSuccess) {\r\n                    autodetectedRegionName = localIMDSVersionResponse.body;\r\n                    regionDiscoveryMetadata.region_source =\r\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.IMDS;\r\n                }\r\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\r\n                if (localIMDSVersionResponse.status ===\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpBadRequest) {\r\n                    const currentIMDSVersion = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getCurrentVersion.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.logger, this.performanceClient, this.correlationId)(options);\r\n                    if (!currentIMDSVersion) {\r\n                        regionDiscoveryMetadata.region_source =\r\n                            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                        return null;\r\n                    }\r\n                    const currentIMDSVersionResponse = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getRegionFromIMDS.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(currentIMDSVersion, options);\r\n                    if (currentIMDSVersionResponse.status ===\r\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpSuccess) {\r\n                        autodetectedRegionName =\r\n                            currentIMDSVersionResponse.body;\r\n                        regionDiscoveryMetadata.region_source =\r\n                            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.IMDS;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                regionDiscoveryMetadata.region_source =\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            regionDiscoveryMetadata.region_source =\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.ENVIRONMENT_VARIABLE;\r\n        }\r\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\r\n        if (!autodetectedRegionName) {\r\n            regionDiscoveryMetadata.region_source =\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n        }\r\n        return autodetectedRegionName || null;\r\n    }\r\n    /**\r\n     * Make the call to the IMDS endpoint\r\n     *\r\n     * @param imdsEndpointUrl\r\n     * @returns Promise<NetworkResponse<string>>\r\n     */\r\n    async getRegionFromIMDS(version, options) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\r\n        return this.networkInterface.sendGetRequestAsync(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_TIMEOUT);\r\n    }\r\n    /**\r\n     * Get the most recent version of the IMDS endpoint available\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    async getCurrentVersion(options) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_ENDPOINT}?format=json`, options);\r\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\r\n            if (response.status === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpBadRequest &&\r\n                response.body &&\r\n                response.body[\"newest-versions\"] &&\r\n                response.body[\"newest-versions\"].length > 0) {\r\n                return response.body[\"newest-versions\"][0];\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n// Options for the IMDS endpoint request\r\nRegionDiscovery.IMDS_OPTIONS = {\r\n    headers: {\r\n        Metadata: \"true\",\r\n    },\r\n};\n\n\n//# sourceMappingURL=RegionDiscovery.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheManager: function() { return /* binding */ CacheManager; },\n/* harmony export */   DefaultStorageClass: function() { return /* binding */ DefaultStorageClass; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/CacheHelpers.mjs */ \"./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../request/ScopeSet.mjs */ \"./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./entities/AccountEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../account/AccountInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _authority_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../authority/AuthorityMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\");\n/* harmony import */ var _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/CacheError.mjs */ \"./node_modules/@azure/msal-common/dist/error/CacheError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/CacheErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n * @internal\r\n */\r\nclass CacheManager {\r\n    constructor(clientId, cryptoImpl, logger, staticAuthorityOptions) {\r\n        this.clientId = clientId;\r\n        this.cryptoImpl = cryptoImpl;\r\n        this.commonLogger = logger.clone(_packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__.version);\r\n        this.staticAuthorityOptions = staticAuthorityOptions;\r\n    }\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return this.buildTenantProfiles(this.getAccountsFilteredBy(accountFilter || {}), accountFilter);\r\n    }\r\n    /**\r\n     * Gets first tenanted AccountInfo object found based on provided filters\r\n     */\r\n    getAccountInfoFilteredBy(accountFilter) {\r\n        const allAccounts = this.getAllAccounts(accountFilter);\r\n        if (allAccounts.length > 1) {\r\n            // If one or more accounts are found, prioritize accounts that have an ID token\r\n            const sortedAccounts = allAccounts.sort((account) => {\r\n                return account.idTokenClaims ? -1 : 1;\r\n            });\r\n            return sortedAccounts[0];\r\n        }\r\n        else if (allAccounts.length === 1) {\r\n            // If only one account is found, return it regardless of whether a matching ID token was found\r\n            return allAccounts[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a single matching\r\n     * @param accountFilter\r\n     * @returns\r\n     */\r\n    getBaseAccountInfo(accountFilter) {\r\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\r\n        if (accountEntities.length > 0) {\r\n            return accountEntities[0].getAccountInfo();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters\r\n     * and builds the account info objects from the matching ID token's claims\r\n     * @param cachedAccounts\r\n     * @param accountFilter\r\n     * @returns Array of AccountInfo objects that match account and tenant profile filters\r\n     */\r\n    buildTenantProfiles(cachedAccounts, accountFilter) {\r\n        return cachedAccounts.flatMap((accountEntity) => {\r\n            return this.getTenantProfilesFromAccountEntity(accountEntity, accountFilter?.tenantId, accountFilter);\r\n        });\r\n    }\r\n    getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter) {\r\n        let tenantedAccountInfo = null;\r\n        let idTokenClaims;\r\n        if (tenantProfileFilter) {\r\n            if (!this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter)) {\r\n                return null;\r\n            }\r\n        }\r\n        const idToken = this.getIdToken(accountInfo, tokenKeys, tenantProfile.tenantId);\r\n        if (idToken) {\r\n            idTokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_1__.extractTokenClaims)(idToken.secret, this.cryptoImpl.base64Decode);\r\n            if (!this.idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter)) {\r\n                // ID token sourced claims don't match so this tenant profile is not a match\r\n                return null;\r\n            }\r\n        }\r\n        // Expand tenant profile into account info based on matching tenant profile and if available matching ID token claims\r\n        tenantedAccountInfo = (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__.updateAccountTenantProfileData)(accountInfo, tenantProfile, idTokenClaims, idToken?.secret);\r\n        return tenantedAccountInfo;\r\n    }\r\n    getTenantProfilesFromAccountEntity(accountEntity, targetTenantId, tenantProfileFilter) {\r\n        const accountInfo = accountEntity.getAccountInfo();\r\n        let searchTenantProfiles = accountInfo.tenantProfiles || new Map();\r\n        const tokenKeys = this.getTokenKeys();\r\n        // If a tenant ID was provided, only return the tenant profile for that tenant ID if it exists\r\n        if (targetTenantId) {\r\n            const tenantProfile = searchTenantProfiles.get(targetTenantId);\r\n            if (tenantProfile) {\r\n                // Reduce search field to just this tenant profile\r\n                searchTenantProfiles = new Map([\r\n                    [targetTenantId, tenantProfile],\r\n                ]);\r\n            }\r\n            else {\r\n                // No tenant profile for search tenant ID, return empty array\r\n                return [];\r\n            }\r\n        }\r\n        const matchingTenantProfiles = [];\r\n        searchTenantProfiles.forEach((tenantProfile) => {\r\n            const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter);\r\n            if (tenantedAccountInfo) {\r\n                matchingTenantProfiles.push(tenantedAccountInfo);\r\n            }\r\n        });\r\n        return matchingTenantProfiles;\r\n    }\r\n    tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter) {\r\n        if (!!tenantProfileFilter.localAccountId &&\r\n            !this.matchLocalAccountIdFromTenantProfile(tenantProfile, tenantProfileFilter.localAccountId)) {\r\n            return false;\r\n        }\r\n        if (!!tenantProfileFilter.name &&\r\n            !(tenantProfile.name === tenantProfileFilter.name)) {\r\n            return false;\r\n        }\r\n        if (tenantProfileFilter.isHomeTenant !== undefined &&\r\n            !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter) {\r\n        // Tenant Profile filtering\r\n        if (tenantProfileFilter) {\r\n            if (!!tenantProfileFilter.localAccountId &&\r\n                !this.matchLocalAccountIdFromTokenClaims(idTokenClaims, tenantProfileFilter.localAccountId)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.loginHint &&\r\n                !this.matchLoginHintFromTokenClaims(idTokenClaims, tenantProfileFilter.loginHint)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.username &&\r\n                !this.matchUsername(idTokenClaims.preferred_username, tenantProfileFilter.username)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.name &&\r\n                !this.matchName(idTokenClaims, tenantProfileFilter.name)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.sid &&\r\n                !this.matchSid(idTokenClaims, tenantProfileFilter.sid)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord {CacheRecord}\r\n     * @param storeInCache {?StoreInCache}\r\n     * @param correlationId {?string} correlation id\r\n     */\r\n    async saveCacheRecord(cacheRecord, storeInCache, correlationId) {\r\n        if (!cacheRecord) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.invalidCacheRecord);\r\n        }\r\n        try {\r\n            if (!!cacheRecord.account) {\r\n                this.setAccount(cacheRecord.account);\r\n            }\r\n            if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\r\n                this.setIdTokenCredential(cacheRecord.idToken);\r\n            }\r\n            if (!!cacheRecord.accessToken &&\r\n                storeInCache?.accessToken !== false) {\r\n                await this.saveAccessToken(cacheRecord.accessToken);\r\n            }\r\n            if (!!cacheRecord.refreshToken &&\r\n                storeInCache?.refreshToken !== false) {\r\n                this.setRefreshTokenCredential(cacheRecord.refreshToken);\r\n            }\r\n            if (!!cacheRecord.appMetadata) {\r\n                this.setAppMetadata(cacheRecord.appMetadata);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.commonLogger?.error(`CacheManager.saveCacheRecord: failed`);\r\n            if (e instanceof Error) {\r\n                this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`, correlationId);\r\n                if (e.name === \"QuotaExceededError\" ||\r\n                    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\" ||\r\n                    e.message.includes(\"exceeded the quota\")) {\r\n                    this.commonLogger?.error(`CacheManager.saveCacheRecord: exceeded storage quota`, correlationId);\r\n                    throw new _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheError(_error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.cacheQuotaExceededErrorCode);\r\n                }\r\n                else {\r\n                    throw new _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheError(e.name, e.message);\r\n                }\r\n            }\r\n            else {\r\n                this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`, correlationId);\r\n                throw new _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheError(_error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.cacheUnknownErrorCode);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    async saveAccessToken(credential) {\r\n        const accessTokenFilter = {\r\n            clientId: credential.clientId,\r\n            credentialType: credential.credentialType,\r\n            environment: credential.environment,\r\n            homeAccountId: credential.homeAccountId,\r\n            realm: credential.realm,\r\n            tokenType: credential.tokenType,\r\n            requestedClaimsHash: credential.requestedClaimsHash,\r\n        };\r\n        const tokenKeys = this.getTokenKeys();\r\n        const currentScopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.fromString(credential.target);\r\n        const removedAccessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (!this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)) {\r\n                return;\r\n            }\r\n            const tokenEntity = this.getAccessTokenCredential(key);\r\n            if (tokenEntity &&\r\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)) {\r\n                const tokenScopeSet = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.fromString(tokenEntity.target);\r\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                    removedAccessTokens.push(this.removeAccessToken(key));\r\n                }\r\n            }\r\n        });\r\n        await Promise.all(removedAccessTokens);\r\n        this.setAccessTokenCredential(credential);\r\n    }\r\n    /**\r\n     * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache\r\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param accountFilter - An object containing Account properties to filter by\r\n     */\r\n    getAccountsFilteredBy(accountFilter) {\r\n        const allAccountKeys = this.getAccountKeys();\r\n        const matchingAccounts = [];\r\n        allAccountKeys.forEach((cacheKey) => {\r\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId)) {\r\n                // Don't parse value if the key doesn't match the account filters\r\n                return;\r\n            }\r\n            const entity = this.getAccount(cacheKey, this.commonLogger);\r\n            // Match base account fields\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.homeAccountId &&\r\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.username &&\r\n                !this.matchUsername(entity.username, accountFilter.username)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.environment &&\r\n                !this.matchEnvironment(entity, accountFilter.environment)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.realm &&\r\n                !this.matchRealm(entity, accountFilter.realm)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.nativeAccountId &&\r\n                !this.matchNativeAccountId(entity, accountFilter.nativeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.authorityType &&\r\n                !this.matchAuthorityType(entity, accountFilter.authorityType)) {\r\n                return;\r\n            }\r\n            // If at least one tenant profile matches the tenant profile filter, add the account to the list of matching accounts\r\n            const tenantProfileFilter = {\r\n                localAccountId: accountFilter?.localAccountId,\r\n                name: accountFilter?.name,\r\n            };\r\n            const matchingTenantProfiles = entity.tenantProfiles?.filter((tenantProfile) => {\r\n                return this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter);\r\n            });\r\n            if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {\r\n                // No tenant profile for this account matches filter, don't add to list of matching accounts\r\n                return;\r\n            }\r\n            matchingAccounts.push(entity);\r\n        });\r\n        return matchingAccounts;\r\n    }\r\n    /**\r\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\r\n     * @param key\r\n     * @param homeAccountId\r\n     * @param tenantId\r\n     * @returns\r\n     */\r\n    isAccountKey(key, homeAccountId, tenantId) {\r\n        if (key.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR).length < 3) {\r\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\r\n            return false;\r\n        }\r\n        if (homeAccountId &&\r\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())) {\r\n            return false;\r\n        }\r\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\r\n            return false;\r\n        }\r\n        // Do not check environment as aliasing can cause false negatives\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns true if the given key matches our credential key schema.\r\n     * @param key\r\n     */\r\n    isCredentialKey(key) {\r\n        if (key.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR).length < 6) {\r\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\r\n            return false;\r\n        }\r\n        const lowerCaseKey = key.toLowerCase();\r\n        // Credential keys must indicate what credential type they represent\r\n        if (lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ID_TOKEN.toLowerCase()) ===\r\n            -1 &&\r\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN.toLowerCase()) ===\r\n                -1 &&\r\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) === -1 &&\r\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN.toLowerCase()) ===\r\n                -1) {\r\n            return false;\r\n        }\r\n        if (lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN.toLowerCase()) >\r\n            -1) {\r\n            // Refresh tokens must contain the client id or family id\r\n            const clientIdValidation = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}${this.clientId}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}`;\r\n            const familyIdValidation = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.THE_FAMILY_ID}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}`;\r\n            if (lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\r\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\r\n            // Tokens must contain the clientId\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns whether or not the given credential entity matches the filter\r\n     * @param entity\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    credentialMatchesFilter(entity, filter) {\r\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\r\n            return false;\r\n        }\r\n        if (!!filter.userAssertionHash &&\r\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)) {\r\n            return false;\r\n        }\r\n        /*\r\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\r\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\r\n         */\r\n        if (typeof filter.homeAccountId === \"string\" &&\r\n            !this.matchHomeAccountId(entity, filter.homeAccountId)) {\r\n            return false;\r\n        }\r\n        if (!!filter.environment &&\r\n            !this.matchEnvironment(entity, filter.environment)) {\r\n            return false;\r\n        }\r\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\r\n            return false;\r\n        }\r\n        if (!!filter.credentialType &&\r\n            !this.matchCredentialType(entity, filter.credentialType)) {\r\n            return false;\r\n        }\r\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\r\n            return false;\r\n        }\r\n        /*\r\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\r\n         */\r\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\r\n            return false;\r\n        }\r\n        // If request OR cached entity has requested Claims Hash, check if they match\r\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\r\n            // Don't match if either is undefined or they are different\r\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\r\n                return false;\r\n            }\r\n        }\r\n        // Access Token with Auth Scheme specific matching\r\n        if (entity.credentialType ===\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\r\n            if (!!filter.tokenType &&\r\n                !this.matchTokenType(entity, filter.tokenType)) {\r\n                return false;\r\n            }\r\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\r\n            if (filter.tokenType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.SSH) {\r\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\r\n     * @param filter\r\n     */\r\n    getAppMetadataFilteredBy(filter) {\r\n        const allCacheKeys = this.getKeys();\r\n        const matchingAppMetadata = {};\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-appMetadata type cache entities\r\n            if (!this.isAppMetadata(cacheKey)) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            const entity = this.getAppMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!filter.environment &&\r\n                !this.matchEnvironment(entity, filter.environment)) {\r\n                return;\r\n            }\r\n            if (!!filter.clientId &&\r\n                !this.matchClientId(entity, filter.clientId)) {\r\n                return;\r\n            }\r\n            matchingAppMetadata[cacheKey] = entity;\r\n        });\r\n        return matchingAppMetadata;\r\n    }\r\n    /**\r\n     * retrieve authorityMetadata that contains a matching alias\r\n     * @param filter\r\n     */\r\n    getAuthorityMetadataByAlias(host) {\r\n        const allCacheKeys = this.getAuthorityMetadataKeys();\r\n        let matchedEntity = null;\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-authorityMetadata type cache entities\r\n            if (!this.isAuthorityMetadata(cacheKey) ||\r\n                cacheKey.indexOf(this.clientId) === -1) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            const entity = this.getAuthorityMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (entity.aliases.indexOf(host) === -1) {\r\n                return;\r\n            }\r\n            matchedEntity = entity;\r\n        });\r\n        return matchedEntity;\r\n    }\r\n    /**\r\n     * Removes all accounts and related tokens from cache.\r\n     */\r\n    async removeAllAccounts() {\r\n        const allAccountKeys = this.getAccountKeys();\r\n        const removedAccounts = [];\r\n        allAccountKeys.forEach((cacheKey) => {\r\n            removedAccounts.push(this.removeAccount(cacheKey));\r\n        });\r\n        await Promise.all(removedAccounts);\r\n    }\r\n    /**\r\n     * Removes the account and related tokens for a given account key\r\n     * @param account\r\n     */\r\n    async removeAccount(accountKey) {\r\n        const account = this.getAccount(accountKey, this.commonLogger);\r\n        if (!account) {\r\n            return;\r\n        }\r\n        await this.removeAccountContext(account);\r\n        this.removeItem(accountKey);\r\n    }\r\n    /**\r\n     * Removes credentials associated with the provided account\r\n     * @param account\r\n     */\r\n    async removeAccountContext(account) {\r\n        const allTokenKeys = this.getTokenKeys();\r\n        const accountId = account.generateAccountId();\r\n        const removedCredentials = [];\r\n        allTokenKeys.idToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                this.removeIdToken(key);\r\n            }\r\n        });\r\n        allTokenKeys.accessToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                removedCredentials.push(this.removeAccessToken(key));\r\n            }\r\n        });\r\n        allTokenKeys.refreshToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                this.removeRefreshToken(key);\r\n            }\r\n        });\r\n        await Promise.all(removedCredentials);\r\n    }\r\n    /**\r\n     * Migrates a single-tenant account and all it's associated alternate cross-tenant account objects in the\r\n     * cache into a condensed multi-tenant account object with tenant profiles.\r\n     * @param accountKey\r\n     * @param accountEntity\r\n     * @param logger\r\n     * @returns\r\n     */\r\n    updateOutdatedCachedAccount(accountKey, accountEntity, logger) {\r\n        // Only update if account entity is defined and has no tenantProfiles object (is outdated)\r\n        if (accountEntity && accountEntity.isSingleTenant()) {\r\n            this.commonLogger?.verbose(\"updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity\");\r\n            // Get keys of all accounts belonging to user\r\n            const matchingAccountKeys = this.getAccountKeys().filter((key) => {\r\n                return key.startsWith(accountEntity.homeAccountId);\r\n            });\r\n            // Get all account entities belonging to user\r\n            const accountsToMerge = [];\r\n            matchingAccountKeys.forEach((key) => {\r\n                const account = this.getCachedAccountEntity(key);\r\n                if (account) {\r\n                    accountsToMerge.push(account);\r\n                }\r\n            });\r\n            // Set base account to home account if available, any account if not\r\n            const baseAccount = accountsToMerge.find((account) => {\r\n                return (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__.tenantIdMatchesHomeTenant)(account.realm, account.homeAccountId);\r\n            }) || accountsToMerge[0];\r\n            // Populate tenant profiles built from each account entity belonging to the user\r\n            baseAccount.tenantProfiles = accountsToMerge.map((account) => {\r\n                return {\r\n                    tenantId: account.realm,\r\n                    localAccountId: account.localAccountId,\r\n                    name: account.name,\r\n                    isHomeTenant: (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__.tenantIdMatchesHomeTenant)(account.realm, account.homeAccountId),\r\n                };\r\n            });\r\n            const updatedAccount = CacheManager.toObject(new _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_9__.AccountEntity(), {\r\n                ...baseAccount,\r\n            });\r\n            const newAccountKey = updatedAccount.generateAccountKey();\r\n            // Clear cache of legacy account objects that have been collpsed into tenant profiles\r\n            matchingAccountKeys.forEach((key) => {\r\n                if (key !== newAccountKey) {\r\n                    this.removeOutdatedAccount(accountKey);\r\n                }\r\n            });\r\n            // Cache updated account object\r\n            this.setAccount(updatedAccount);\r\n            logger?.verbose(\"Updated an outdated account entity in the cache\");\r\n            return updatedAccount;\r\n        }\r\n        // No update is necessary\r\n        return accountEntity;\r\n    }\r\n    /**\r\n     * returns a boolean if the given credential is removed\r\n     * @param credential\r\n     */\r\n    async removeAccessToken(key) {\r\n        const credential = this.getAccessTokenCredential(key);\r\n        if (!credential) {\r\n            return;\r\n        }\r\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\r\n        if (credential.credentialType.toLowerCase() ===\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\r\n            if (credential.tokenType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.POP) {\r\n                const accessTokenWithAuthSchemeEntity = credential;\r\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\r\n                if (kid) {\r\n                    try {\r\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\r\n                    }\r\n                    catch (error) {\r\n                        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.bindingKeyNotRemoved);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.removeItem(key);\r\n    }\r\n    /**\r\n     * Removes all app metadata objects from cache.\r\n     */\r\n    removeAppMetadata() {\r\n        const allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            if (this.isAppMetadata(cacheKey)) {\r\n                this.removeItem(cacheKey);\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n    /**\r\n     * Retrieve AccountEntity from cache\r\n     * @param account\r\n     */\r\n    readAccountFromCache(account) {\r\n        const accountKey = _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_9__.AccountEntity.generateAccountCacheKey(account);\r\n        return this.getAccount(accountKey, this.commonLogger);\r\n    }\r\n    /**\r\n     * Retrieve IdTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param targetRealm {?string}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getIdToken(account, tokenKeys, targetRealm, performanceClient, correlationId) {\r\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\r\n        const idTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ID_TOKEN,\r\n            clientId: this.clientId,\r\n            realm: targetRealm,\r\n        };\r\n        const idTokenMap = this.getIdTokensByFilter(idTokenFilter, tokenKeys);\r\n        const numIdTokens = idTokenMap.size;\r\n        if (numIdTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\r\n            return null;\r\n        }\r\n        else if (numIdTokens > 1) {\r\n            let tokensToBeRemoved = idTokenMap;\r\n            // Multiple tenant profiles and no tenant specified, pick home account\r\n            if (!targetRealm) {\r\n                const homeIdTokenMap = new Map();\r\n                idTokenMap.forEach((idToken, key) => {\r\n                    if (idToken.realm === account.tenantId) {\r\n                        homeIdTokenMap.set(key, idToken);\r\n                    }\r\n                });\r\n                const numHomeIdTokens = homeIdTokenMap.size;\r\n                if (numHomeIdTokens < 1) {\r\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result\");\r\n                    return idTokenMap.values().next().value;\r\n                }\r\n                else if (numHomeIdTokens === 1) {\r\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile\");\r\n                    return homeIdTokenMap.values().next().value;\r\n                }\r\n                else {\r\n                    // Multiple ID tokens for home tenant profile, remove all and return null\r\n                    tokensToBeRemoved = homeIdTokenMap;\r\n                }\r\n            }\r\n            // Multiple tokens for a single tenant profile, remove all and return null\r\n            this.commonLogger.info(\"CacheManager:getIdToken - Multiple matching ID tokens found, clearing them\");\r\n            tokensToBeRemoved.forEach((idToken, key) => {\r\n                this.removeIdToken(key);\r\n            });\r\n            if (performanceClient && correlationId) {\r\n                performanceClient.addFields({ multiMatchedID: idTokenMap.size }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning ID token\");\r\n        return idTokenMap.values().next().value;\r\n    }\r\n    /**\r\n     * Gets all idTokens matching the given filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getIdTokensByFilter(filter, tokenKeys) {\r\n        const idTokenKeys = (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\r\n        const idTokens = new Map();\r\n        idTokenKeys.forEach((key) => {\r\n            if (!this.idTokenKeyMatchesFilter(key, {\r\n                clientId: this.clientId,\r\n                ...filter,\r\n            })) {\r\n                return;\r\n            }\r\n            const idToken = this.getIdTokenCredential(key);\r\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\r\n                idTokens.set(key, idToken);\r\n            }\r\n        });\r\n        return idTokens;\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    idTokenKeyMatchesFilter(inputKey, filter) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Removes idToken from the cache\r\n     * @param key\r\n     */\r\n    removeIdToken(key) {\r\n        this.removeItem(key);\r\n    }\r\n    /**\r\n     * Removes refresh token from the cache\r\n     * @param key\r\n     */\r\n    removeRefreshToken(key) {\r\n        this.removeItem(key);\r\n    }\r\n    /**\r\n     * Retrieve AccessTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param request {BaseAuthRequest}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getAccessToken(account, request, tokenKeys, targetRealm, performanceClient, correlationId) {\r\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\r\n        const scopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.createSearchScopes(request.scopes);\r\n        const authScheme = request.authenticationScheme || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.BEARER;\r\n        /*\r\n         * Distinguish between Bearer and PoP/SSH token cache types\r\n         * Cast to lowercase to handle \"bearer\" from ADFS\r\n         */\r\n        const credentialType = authScheme &&\r\n            authScheme.toLowerCase() !==\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.BEARER.toLowerCase()\r\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\r\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN;\r\n        const accessTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: credentialType,\r\n            clientId: this.clientId,\r\n            realm: targetRealm || account.tenantId,\r\n            target: scopes,\r\n            tokenType: authScheme,\r\n            keyId: request.sshKid,\r\n            requestedClaimsHash: request.requestedClaimsHash,\r\n        };\r\n        const accessTokenKeys = (tokenKeys && tokenKeys.accessToken) ||\r\n            this.getTokenKeys().accessToken;\r\n        const accessTokens = [];\r\n        accessTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)) {\r\n                const accessToken = this.getAccessTokenCredential(key);\r\n                // Validate value\r\n                if (accessToken &&\r\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)) {\r\n                    accessTokens.push(accessToken);\r\n                }\r\n            }\r\n        });\r\n        const numAccessTokens = accessTokens.length;\r\n        if (numAccessTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getAccessToken - No token found\");\r\n            return null;\r\n        }\r\n        else if (numAccessTokens > 1) {\r\n            this.commonLogger.info(\"CacheManager:getAccessToken - Multiple access tokens found, clearing them\");\r\n            accessTokens.forEach((accessToken) => {\r\n                void this.removeAccessToken((0,_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_10__.generateCredentialKey)(accessToken));\r\n            });\r\n            if (performanceClient && correlationId) {\r\n                performanceClient.addFields({ multiMatchedAT: accessTokens.length }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getAccessToken - Returning access token\");\r\n        return accessTokens[0];\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @param keyMustContainAllScopes\r\n     * @returns\r\n     */\r\n    accessTokenKeyMatchesFilter(inputKey, filter, keyMustContainAllScopes) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.requestedClaimsHash &&\r\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.target) {\r\n            const scopes = filter.target.asArray();\r\n            for (let i = 0; i < scopes.length; i++) {\r\n                if (keyMustContainAllScopes &&\r\n                    !key.includes(scopes[i].toLowerCase())) {\r\n                    // When performing a cache lookup a missing scope would be a cache miss\r\n                    return false;\r\n                }\r\n                else if (!keyMustContainAllScopes &&\r\n                    key.includes(scopes[i].toLowerCase())) {\r\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Gets all access tokens matching the filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getAccessTokensByFilter(filter) {\r\n        const tokenKeys = this.getTokenKeys();\r\n        const accessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\r\n                return;\r\n            }\r\n            const accessToken = this.getAccessTokenCredential(key);\r\n            if (accessToken &&\r\n                this.credentialMatchesFilter(accessToken, filter)) {\r\n                accessTokens.push(accessToken);\r\n            }\r\n        });\r\n        return accessTokens;\r\n    }\r\n    /**\r\n     * Helper to retrieve the appropriate refresh token from cache\r\n     * @param account {AccountInfo}\r\n     * @param familyRT {boolean}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getRefreshToken(account, familyRT, tokenKeys, performanceClient, correlationId) {\r\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\r\n        const id = familyRT ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.THE_FAMILY_ID : undefined;\r\n        const refreshTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN,\r\n            clientId: this.clientId,\r\n            familyId: id,\r\n        };\r\n        const refreshTokenKeys = (tokenKeys && tokenKeys.refreshToken) ||\r\n            this.getTokenKeys().refreshToken;\r\n        const refreshTokens = [];\r\n        refreshTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\r\n                const refreshToken = this.getRefreshTokenCredential(key);\r\n                // Validate value\r\n                if (refreshToken &&\r\n                    this.credentialMatchesFilter(refreshToken, refreshTokenFilter)) {\r\n                    refreshTokens.push(refreshToken);\r\n                }\r\n            }\r\n        });\r\n        const numRefreshTokens = refreshTokens.length;\r\n        if (numRefreshTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getRefreshToken - No refresh token found.\");\r\n            return null;\r\n        }\r\n        // address the else case after remove functions address environment aliases\r\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\r\n            performanceClient.addFields({ multiMatchedRT: numRefreshTokens }, correlationId);\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getRefreshToken - returning refresh token\");\r\n        return refreshTokens[0];\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     */\r\n    refreshTokenKeyMatchesFilter(inputKey, filter) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.familyId &&\r\n            key.indexOf(filter.familyId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        // If familyId is used, clientId is not in the key\r\n        if (!filter.familyId &&\r\n            filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Retrieve AppMetadataEntity from cache\r\n     */\r\n    readAppMetadataFromCache(environment) {\r\n        const appMetadataFilter = {\r\n            environment,\r\n            clientId: this.clientId,\r\n        };\r\n        const appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);\r\n        const appMetadataEntries = Object.keys(appMetadata).map((key) => appMetadata[key]);\r\n        const numAppMetadata = appMetadataEntries.length;\r\n        if (numAppMetadata < 1) {\r\n            return null;\r\n        }\r\n        else if (numAppMetadata > 1) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.multipleMatchingAppMetadata);\r\n        }\r\n        return appMetadataEntries[0];\r\n    }\r\n    /**\r\n     * Return the family_id value associated  with FOCI\r\n     * @param environment\r\n     * @param clientId\r\n     */\r\n    isAppMetadataFOCI(environment) {\r\n        const appMetadata = this.readAppMetadataFromCache(environment);\r\n        return !!(appMetadata && appMetadata.familyId === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.THE_FAMILY_ID);\r\n    }\r\n    /**\r\n     * helper to match account ids\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    matchHomeAccountId(entity, homeAccountId) {\r\n        return !!(typeof entity.homeAccountId === \"string\" &&\r\n            homeAccountId === entity.homeAccountId);\r\n    }\r\n    /**\r\n     * helper to match account ids\r\n     * @param entity\r\n     * @param localAccountId\r\n     * @returns\r\n     */\r\n    matchLocalAccountIdFromTokenClaims(tokenClaims, localAccountId) {\r\n        const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;\r\n        return localAccountId === idTokenLocalAccountId;\r\n    }\r\n    matchLocalAccountIdFromTenantProfile(tenantProfile, localAccountId) {\r\n        return tenantProfile.localAccountId === localAccountId;\r\n    }\r\n    /**\r\n     * helper to match names\r\n     * @param entity\r\n     * @param name\r\n     * @returns true if the downcased name properties are present and match in the filter and the entity\r\n     */\r\n    matchName(claims, name) {\r\n        return !!(name.toLowerCase() === claims.name?.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match usernames\r\n     * @param entity\r\n     * @param username\r\n     * @returns\r\n     */\r\n    matchUsername(cachedUsername, filterUsername) {\r\n        return !!(cachedUsername &&\r\n            typeof cachedUsername === \"string\" &&\r\n            filterUsername?.toLowerCase() === cachedUsername.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match assertion\r\n     * @param value\r\n     * @param oboAssertion\r\n     */\r\n    matchUserAssertionHash(entity, userAssertionHash) {\r\n        return !!(entity.userAssertionHash &&\r\n            userAssertionHash === entity.userAssertionHash);\r\n    }\r\n    /**\r\n     * helper to match environment\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    matchEnvironment(entity, environment) {\r\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\r\n        if (this.staticAuthorityOptions) {\r\n            const staticAliases = (0,_authority_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_11__.getAliasesFromStaticSources)(this.staticAuthorityOptions, this.commonLogger);\r\n            if (staticAliases.includes(environment) &&\r\n                staticAliases.includes(entity.environment)) {\r\n                return true;\r\n            }\r\n        }\r\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\r\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\r\n        if (cloudMetadata &&\r\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * helper to match credential type\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    matchCredentialType(entity, credentialType) {\r\n        return (entity.credentialType &&\r\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match client ids\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    matchClientId(entity, clientId) {\r\n        return !!(entity.clientId && clientId === entity.clientId);\r\n    }\r\n    /**\r\n     * helper to match family ids\r\n     * @param entity\r\n     * @param familyId\r\n     */\r\n    matchFamilyId(entity, familyId) {\r\n        return !!(entity.familyId && familyId === entity.familyId);\r\n    }\r\n    /**\r\n     * helper to match realm\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    matchRealm(entity, realm) {\r\n        return !!(entity.realm?.toLowerCase() === realm.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match nativeAccountId\r\n     * @param entity\r\n     * @param nativeAccountId\r\n     * @returns boolean indicating the match result\r\n     */\r\n    matchNativeAccountId(entity, nativeAccountId) {\r\n        return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);\r\n    }\r\n    /**\r\n     * helper to match loginHint which can be either:\r\n     * 1. login_hint ID token claim\r\n     * 2. username in cached account object\r\n     * 3. upn in ID token claims\r\n     * @param entity\r\n     * @param loginHint\r\n     * @returns\r\n     */\r\n    matchLoginHintFromTokenClaims(tokenClaims, loginHint) {\r\n        if (tokenClaims.login_hint === loginHint) {\r\n            return true;\r\n        }\r\n        if (tokenClaims.preferred_username === loginHint) {\r\n            return true;\r\n        }\r\n        if (tokenClaims.upn === loginHint) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Helper to match sid\r\n     * @param entity\r\n     * @param sid\r\n     * @returns true if the sid claim is present and matches the filter\r\n     */\r\n    matchSid(idTokenClaims, sid) {\r\n        return idTokenClaims.sid === sid;\r\n    }\r\n    matchAuthorityType(entity, authorityType) {\r\n        return !!(entity.authorityType &&\r\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase());\r\n    }\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    matchTarget(entity, target) {\r\n        const isNotAccessTokenCredential = entity.credentialType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN &&\r\n            entity.credentialType !==\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n        if (isNotAccessTokenCredential || !entity.target) {\r\n            return false;\r\n        }\r\n        const entityScopeSet = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.fromString(entity.target);\r\n        return entityScopeSet.containsScopeSet(target);\r\n    }\r\n    /**\r\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param tokenType\r\n     */\r\n    matchTokenType(entity, tokenType) {\r\n        return !!(entity.tokenType && entity.tokenType === tokenType);\r\n    }\r\n    /**\r\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param keyId\r\n     */\r\n    matchKeyId(entity, keyId) {\r\n        return !!(entity.keyId && entity.keyId === keyId);\r\n    }\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    isAppMetadata(key) {\r\n        return key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.APP_METADATA) !== -1;\r\n    }\r\n    /**\r\n     * returns if a given cache entity is of the type authoritymetadata\r\n     * @param key\r\n     */\r\n    isAuthorityMetadata(key) {\r\n        return key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\r\n    }\r\n    /**\r\n     * returns cache key used for cloud instance metadata\r\n     */\r\n    generateAuthorityMetadataCacheKey(authority) {\r\n        return `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\r\n    }\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    static toObject(obj, json) {\r\n        for (const propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    }\r\n}\r\n/** @internal */\r\nclass DefaultStorageClass extends CacheManager {\r\n    setAccount() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAccount() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getCachedAccountEntity() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setIdTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getIdTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setAccessTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAccessTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setRefreshTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getRefreshTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setAppMetadata() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAppMetadata() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setServerTelemetry() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getServerTelemetry() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setAuthorityMetadata() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAuthorityMetadata() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAuthorityMetadataKeys() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setThrottlingCache() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getThrottlingCache() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    removeItem() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getKeys() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAccountKeys() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getTokenKeys() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    updateCredentialCacheKey() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    removeOutdatedAccount() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n}\n\n\n//# sourceMappingURL=CacheManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountEntity: function() { return /* binding */ AccountEntity; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../account/AccountInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../authority/AuthorityType.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../account/TokenClaims.mjs */ \"./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../authority/ProtocolMode.mjs */ \"./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n *      nativeAccountId: Account identifier on the native device\r\n *      tenantProfiles: Array of tenant profile objects for each tenant that the account has authenticated with in the browser\r\n * }\r\n * @internal\r\n */\r\nclass AccountEntity {\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    generateAccountId() {\r\n        const accountId = [this.homeAccountId, this.environment];\r\n        return accountId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    }\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    generateAccountKey() {\r\n        return AccountEntity.generateAccountCacheKey({\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n        });\r\n    }\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    getAccountInfo() {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n            name: this.name,\r\n            nativeAccountId: this.nativeAccountId,\r\n            authorityType: this.authorityType,\r\n            // Deserialize tenant profiles array into a Map\r\n            tenantProfiles: new Map((this.tenantProfiles || []).map((tenantProfile) => {\r\n                return [tenantProfile.tenantId, tenantProfile];\r\n            })),\r\n        };\r\n    }\r\n    /**\r\n     * Returns true if the account entity is in single tenant format (outdated), false otherwise\r\n     */\r\n    isSingleTenant() {\r\n        return !this.tenantProfiles;\r\n    }\r\n    /**\r\n     * Generates account key from interface\r\n     * @param accountInterface\r\n     */\r\n    static generateAccountCacheKey(accountInterface) {\r\n        const homeTenantId = accountInterface.homeAccountId.split(\".\")[1];\r\n        const accountKey = [\r\n            accountInterface.homeAccountId,\r\n            accountInterface.environment || \"\",\r\n            homeTenantId || accountInterface.tenantId || \"\",\r\n        ];\r\n        return accountKey.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    }\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\r\n     * @param accountDetails\r\n     */\r\n    static createAccount(accountDetails, authority, base64Decode) {\r\n        const account = new AccountEntity();\r\n        if (authority.authorityType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Adfs) {\r\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.ADFS_ACCOUNT_TYPE;\r\n        }\r\n        else if (authority.protocolMode === _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_2__.ProtocolMode.AAD) {\r\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        }\r\n        else {\r\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        }\r\n        let clientInfo;\r\n        if (accountDetails.clientInfo && base64Decode) {\r\n            clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_3__.buildClientInfo)(accountDetails.clientInfo, base64Decode);\r\n        }\r\n        account.clientInfo = accountDetails.clientInfo;\r\n        account.homeAccountId = accountDetails.homeAccountId;\r\n        account.nativeAccountId = accountDetails.nativeAccountId;\r\n        const env = accountDetails.environment ||\r\n            (authority && authority.getPreferredCache());\r\n        if (!env) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.invalidCacheEnvironment);\r\n        }\r\n        account.environment = env;\r\n        // non AAD scenarios can have empty realm\r\n        account.realm =\r\n            clientInfo?.utid ||\r\n                (0,_account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_6__.getTenantIdFromIdTokenClaims)(accountDetails.idTokenClaims) ||\r\n                \"\";\r\n        // How do you account for MSA CID here?\r\n        account.localAccountId =\r\n            clientInfo?.uid ||\r\n                accountDetails.idTokenClaims?.oid ||\r\n                accountDetails.idTokenClaims?.sub ||\r\n                \"\";\r\n        /*\r\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\r\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\r\n         * policy is configured to return more than 1 email.\r\n         */\r\n        const preferredUsername = accountDetails.idTokenClaims?.preferred_username ||\r\n            accountDetails.idTokenClaims?.upn;\r\n        const email = accountDetails.idTokenClaims?.emails\r\n            ? accountDetails.idTokenClaims.emails[0]\r\n            : null;\r\n        account.username = preferredUsername || email || \"\";\r\n        account.name = accountDetails.idTokenClaims?.name || \"\";\r\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\r\n        account.msGraphHost = accountDetails.msGraphHost;\r\n        if (accountDetails.tenantProfiles) {\r\n            account.tenantProfiles = accountDetails.tenantProfiles;\r\n        }\r\n        else {\r\n            const tenantProfile = (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_7__.buildTenantProfile)(accountDetails.homeAccountId, account.localAccountId, account.realm, accountDetails.idTokenClaims);\r\n            account.tenantProfiles = [tenantProfile];\r\n        }\r\n        return account;\r\n    }\r\n    /**\r\n     * Creates an AccountEntity object from AccountInfo\r\n     * @param accountInfo\r\n     * @param cloudGraphHostName\r\n     * @param msGraphHost\r\n     * @returns\r\n     */\r\n    static createFromAccountInfo(accountInfo, cloudGraphHostName, msGraphHost) {\r\n        const account = new AccountEntity();\r\n        account.authorityType =\r\n            accountInfo.authorityType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        account.homeAccountId = accountInfo.homeAccountId;\r\n        account.localAccountId = accountInfo.localAccountId;\r\n        account.nativeAccountId = accountInfo.nativeAccountId;\r\n        account.realm = accountInfo.tenantId;\r\n        account.environment = accountInfo.environment;\r\n        account.username = accountInfo.username;\r\n        account.name = accountInfo.name;\r\n        account.cloudGraphHostName = cloudGraphHostName;\r\n        account.msGraphHost = msGraphHost;\r\n        // Serialize tenant profiles map into an array\r\n        account.tenantProfiles = Array.from(accountInfo.tenantProfiles?.values() || []);\r\n        return account;\r\n    }\r\n    /**\r\n     * Generate HomeAccountId from server response\r\n     * @param serverClientInfo\r\n     * @param authType\r\n     */\r\n    static generateHomeAccountId(serverClientInfo, authType, logger, cryptoObj, idTokenClaims) {\r\n        // since ADFS/DSTS do not have tid and does not set client_info\r\n        if (!(authType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Adfs ||\r\n            authType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Dsts)) {\r\n            // for cases where there is clientInfo\r\n            if (serverClientInfo) {\r\n                try {\r\n                    const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_3__.buildClientInfo)(serverClientInfo, cryptoObj.base64Decode);\r\n                    if (clientInfo.uid && clientInfo.utid) {\r\n                        return `${clientInfo.uid}.${clientInfo.utid}`;\r\n                    }\r\n                }\r\n                catch (e) { }\r\n            }\r\n            logger.warning(\"No client info in response\");\r\n        }\r\n        // default to \"sub\" claim\r\n        return idTokenClaims?.sub || \"\";\r\n    }\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    static isAccountEntity(entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"realm\") &&\r\n            entity.hasOwnProperty(\"localAccountId\") &&\r\n            entity.hasOwnProperty(\"username\") &&\r\n            entity.hasOwnProperty(\"authorityType\"));\r\n    }\r\n    /**\r\n     * Helper function to determine whether 2 accountInfo objects represent the same account\r\n     * @param accountA\r\n     * @param accountB\r\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\r\n     */\r\n    static accountInfoIsEqual(accountA, accountB, compareClaims) {\r\n        if (!accountA || !accountB) {\r\n            return false;\r\n        }\r\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\r\n        if (compareClaims) {\r\n            const accountAClaims = (accountA.idTokenClaims ||\r\n                {});\r\n            const accountBClaims = (accountB.idTokenClaims ||\r\n                {});\r\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\r\n            claimsMatch =\r\n                accountAClaims.iat === accountBClaims.iat &&\r\n                    accountAClaims.nonce === accountBClaims.nonce;\r\n        }\r\n        return (accountA.homeAccountId === accountB.homeAccountId &&\r\n            accountA.localAccountId === accountB.localAccountId &&\r\n            accountA.username === accountB.username &&\r\n            accountA.tenantId === accountB.tenantId &&\r\n            accountA.environment === accountB.environment &&\r\n            accountA.nativeAccountId === accountB.nativeAccountId &&\r\n            claimsMatch);\r\n    }\r\n}\n\n\n//# sourceMappingURL=AccountEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvZW50aXRpZXMvQWNjb3VudEVudGl0eS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUM0RDtBQUNWO0FBQ0k7QUFDSztBQUNOO0FBQ1c7QUFDYjtBQUNlOztBQUUvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsNERBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDREQUFVO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHVFQUFhO0FBQ3JELG9DQUFvQyxrRUFBZ0I7QUFDcEQ7QUFDQSw0Q0FBNEMscUVBQVk7QUFDeEQsb0NBQW9DLGtFQUFnQjtBQUNwRDtBQUNBO0FBQ0Esb0NBQW9DLGtFQUFnQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsd0VBQWU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUZBQXFCLENBQUMsb0ZBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isc0ZBQTRCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDRFQUFrQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGtFQUFnQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHVFQUFhO0FBQ3hDLHlCQUF5Qix1RUFBYTtBQUN0QztBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsd0VBQWU7QUFDdEQ7QUFDQSxrQ0FBa0MsZUFBZSxHQUFHLGdCQUFnQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jYWNoZS9lbnRpdGllcy9BY2NvdW50RW50aXR5Lm1qcz84YTQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgU2VwYXJhdG9ycywgQ2FjaGVBY2NvdW50VHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgYnVpbGRDbGllbnRJbmZvIH0gZnJvbSAnLi4vLi4vYWNjb3VudC9DbGllbnRJbmZvLm1qcyc7XG5pbXBvcnQgeyBidWlsZFRlbmFudFByb2ZpbGUgfSBmcm9tICcuLi8uLi9hY2NvdW50L0FjY291bnRJbmZvLm1qcyc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi8uLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IEF1dGhvcml0eVR5cGUgfSBmcm9tICcuLi8uLi9hdXRob3JpdHkvQXV0aG9yaXR5VHlwZS5tanMnO1xuaW1wb3J0IHsgZ2V0VGVuYW50SWRGcm9tSWRUb2tlbkNsYWltcyB9IGZyb20gJy4uLy4uL2FjY291bnQvVG9rZW5DbGFpbXMubWpzJztcbmltcG9ydCB7IFByb3RvY29sTW9kZSB9IGZyb20gJy4uLy4uL2F1dGhvcml0eS9Qcm90b2NvbE1vZGUubWpzJztcbmltcG9ydCB7IGludmFsaWRDYWNoZUVudmlyb25tZW50IH0gZnJvbSAnLi4vLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBUeXBlIHRoYXQgZGVmaW5lcyByZXF1aXJlZCBhbmQgb3B0aW9uYWwgcGFyYW1ldGVycyBmb3IgYW4gQWNjb3VudCBmaWVsZCAoYmFzZWQgb24gdW5pdmVyc2FsIGNhY2hlIHNjaGVtYSBpbXBsZW1lbnRlZCBieSBhbGwgTVNBTHMpLlxyXG4gKlxyXG4gKiBLZXkgOiBWYWx1ZSBTY2hlbWFcclxuICpcclxuICogS2V5OiA8aG9tZV9hY2NvdW50X2lkPi08ZW52aXJvbm1lbnQ+LTxyZWFsbSo+XHJcbiAqXHJcbiAqIFZhbHVlIFNjaGVtYTpcclxuICoge1xyXG4gKiAgICAgIGhvbWVBY2NvdW50SWQ6IGhvbWUgYWNjb3VudCBpZGVudGlmaWVyIGZvciB0aGUgYXV0aCBzY2hlbWUsXHJcbiAqICAgICAgZW52aXJvbm1lbnQ6IGVudGl0eSB0aGF0IGlzc3VlZCB0aGUgdG9rZW4sIHJlcHJlc2VudGVkIGFzIGEgZnVsbCBob3N0XHJcbiAqICAgICAgcmVhbG06IEZ1bGwgdGVuYW50IG9yIG9yZ2FuaXphdGlvbmFsIGlkZW50aWZpZXIgdGhhdCB0aGUgYWNjb3VudCBiZWxvbmdzIHRvXHJcbiAqICAgICAgbG9jYWxBY2NvdW50SWQ6IE9yaWdpbmFsIHRlbmFudC1zcGVjaWZpYyBhY2NvdW50SUQsIHVzdWFsbHkgdXNlZCBmb3IgbGVnYWN5IGNhc2VzXHJcbiAqICAgICAgdXNlcm5hbWU6IHByaW1hcnkgdXNlcm5hbWUgdGhhdCByZXByZXNlbnRzIHRoZSB1c2VyLCB1c3VhbGx5IGNvcnJlc3BvbmRzIHRvIHByZWZlcnJlZF91c2VybmFtZSBpbiB0aGUgdjIgZW5kcHRcclxuICogICAgICBhdXRob3JpdHlUeXBlOiBBY2NvdW50cyBhdXRob3JpdHkgdHlwZSBhcyBhIHN0cmluZ1xyXG4gKiAgICAgIG5hbWU6IEZ1bGwgbmFtZSBmb3IgdGhlIGFjY291bnQsIGluY2x1ZGluZyBnaXZlbiBuYW1lIGFuZCBmYW1pbHkgbmFtZSxcclxuICogICAgICBsYXN0TW9kaWZpY2F0aW9uVGltZTogbGFzdCB0aW1lIHRoaXMgZW50aXR5IHdhcyBtb2RpZmllZCBpbiB0aGUgY2FjaGVcclxuICogICAgICBsYXN0TW9kaWZpY2F0aW9uQXBwOlxyXG4gKiAgICAgIG5hdGl2ZUFjY291bnRJZDogQWNjb3VudCBpZGVudGlmaWVyIG9uIHRoZSBuYXRpdmUgZGV2aWNlXHJcbiAqICAgICAgdGVuYW50UHJvZmlsZXM6IEFycmF5IG9mIHRlbmFudCBwcm9maWxlIG9iamVjdHMgZm9yIGVhY2ggdGVuYW50IHRoYXQgdGhlIGFjY291bnQgaGFzIGF1dGhlbnRpY2F0ZWQgd2l0aCBpbiB0aGUgYnJvd3NlclxyXG4gKiB9XHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuY2xhc3MgQWNjb3VudEVudGl0eSB7XHJcbiAgICAvKipcclxuICAgICAqIEdlbmVyYXRlIEFjY291bnQgSWQga2V5IGNvbXBvbmVudCBhcyBwZXIgdGhlIHNjaGVtYTogPGhvbWVfYWNjb3VudF9pZD4tPGVudmlyb25tZW50PlxyXG4gICAgICovXHJcbiAgICBnZW5lcmF0ZUFjY291bnRJZCgpIHtcclxuICAgICAgICBjb25zdCBhY2NvdW50SWQgPSBbdGhpcy5ob21lQWNjb3VudElkLCB0aGlzLmVudmlyb25tZW50XTtcclxuICAgICAgICByZXR1cm4gYWNjb3VudElkLmpvaW4oU2VwYXJhdG9ycy5DQUNIRV9LRVlfU0VQQVJBVE9SKS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZW5lcmF0ZSBBY2NvdW50IENhY2hlIEtleSBhcyBwZXIgdGhlIHNjaGVtYTogPGhvbWVfYWNjb3VudF9pZD4tPGVudmlyb25tZW50Pi08cmVhbG0qPlxyXG4gICAgICovXHJcbiAgICBnZW5lcmF0ZUFjY291bnRLZXkoKSB7XHJcbiAgICAgICAgcmV0dXJuIEFjY291bnRFbnRpdHkuZ2VuZXJhdGVBY2NvdW50Q2FjaGVLZXkoe1xyXG4gICAgICAgICAgICBob21lQWNjb3VudElkOiB0aGlzLmhvbWVBY2NvdW50SWQsXHJcbiAgICAgICAgICAgIGVudmlyb25tZW50OiB0aGlzLmVudmlyb25tZW50LFxyXG4gICAgICAgICAgICB0ZW5hbnRJZDogdGhpcy5yZWFsbSxcclxuICAgICAgICAgICAgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUsXHJcbiAgICAgICAgICAgIGxvY2FsQWNjb3VudElkOiB0aGlzLmxvY2FsQWNjb3VudElkLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBBY2NvdW50SW5mbyBpbnRlcmZhY2UgZm9yIHRoaXMgYWNjb3VudC5cclxuICAgICAqL1xyXG4gICAgZ2V0QWNjb3VudEluZm8oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgaG9tZUFjY291bnRJZDogdGhpcy5ob21lQWNjb3VudElkLFxyXG4gICAgICAgICAgICBlbnZpcm9ubWVudDogdGhpcy5lbnZpcm9ubWVudCxcclxuICAgICAgICAgICAgdGVuYW50SWQ6IHRoaXMucmVhbG0sXHJcbiAgICAgICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lLFxyXG4gICAgICAgICAgICBsb2NhbEFjY291bnRJZDogdGhpcy5sb2NhbEFjY291bnRJZCxcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICBuYXRpdmVBY2NvdW50SWQ6IHRoaXMubmF0aXZlQWNjb3VudElkLFxyXG4gICAgICAgICAgICBhdXRob3JpdHlUeXBlOiB0aGlzLmF1dGhvcml0eVR5cGUsXHJcbiAgICAgICAgICAgIC8vIERlc2VyaWFsaXplIHRlbmFudCBwcm9maWxlcyBhcnJheSBpbnRvIGEgTWFwXHJcbiAgICAgICAgICAgIHRlbmFudFByb2ZpbGVzOiBuZXcgTWFwKCh0aGlzLnRlbmFudFByb2ZpbGVzIHx8IFtdKS5tYXAoKHRlbmFudFByb2ZpbGUpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBbdGVuYW50UHJvZmlsZS50ZW5hbnRJZCwgdGVuYW50UHJvZmlsZV07XHJcbiAgICAgICAgICAgIH0pKSxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIGFjY291bnQgZW50aXR5IGlzIGluIHNpbmdsZSB0ZW5hbnQgZm9ybWF0IChvdXRkYXRlZCksIGZhbHNlIG90aGVyd2lzZVxyXG4gICAgICovXHJcbiAgICBpc1NpbmdsZVRlbmFudCgpIHtcclxuICAgICAgICByZXR1cm4gIXRoaXMudGVuYW50UHJvZmlsZXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdlbmVyYXRlcyBhY2NvdW50IGtleSBmcm9tIGludGVyZmFjZVxyXG4gICAgICogQHBhcmFtIGFjY291bnRJbnRlcmZhY2VcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGdlbmVyYXRlQWNjb3VudENhY2hlS2V5KGFjY291bnRJbnRlcmZhY2UpIHtcclxuICAgICAgICBjb25zdCBob21lVGVuYW50SWQgPSBhY2NvdW50SW50ZXJmYWNlLmhvbWVBY2NvdW50SWQuc3BsaXQoXCIuXCIpWzFdO1xyXG4gICAgICAgIGNvbnN0IGFjY291bnRLZXkgPSBbXHJcbiAgICAgICAgICAgIGFjY291bnRJbnRlcmZhY2UuaG9tZUFjY291bnRJZCxcclxuICAgICAgICAgICAgYWNjb3VudEludGVyZmFjZS5lbnZpcm9ubWVudCB8fCBcIlwiLFxyXG4gICAgICAgICAgICBob21lVGVuYW50SWQgfHwgYWNjb3VudEludGVyZmFjZS50ZW5hbnRJZCB8fCBcIlwiLFxyXG4gICAgICAgIF07XHJcbiAgICAgICAgcmV0dXJuIGFjY291bnRLZXkuam9pbihTZXBhcmF0b3JzLkNBQ0hFX0tFWV9TRVBBUkFUT1IpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEJ1aWxkIEFjY291bnQgY2FjaGUgZnJvbSBJZFRva2VuLCBjbGllbnRJbmZvIGFuZCBhdXRob3JpdHkvcG9saWN5LiBBc3NvY2lhdGVkIHdpdGggQUFELlxyXG4gICAgICogQHBhcmFtIGFjY291bnREZXRhaWxzXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVBY2NvdW50KGFjY291bnREZXRhaWxzLCBhdXRob3JpdHksIGJhc2U2NERlY29kZSkge1xyXG4gICAgICAgIGNvbnN0IGFjY291bnQgPSBuZXcgQWNjb3VudEVudGl0eSgpO1xyXG4gICAgICAgIGlmIChhdXRob3JpdHkuYXV0aG9yaXR5VHlwZSA9PT0gQXV0aG9yaXR5VHlwZS5BZGZzKSB7XHJcbiAgICAgICAgICAgIGFjY291bnQuYXV0aG9yaXR5VHlwZSA9IENhY2hlQWNjb3VudFR5cGUuQURGU19BQ0NPVU5UX1RZUEU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGF1dGhvcml0eS5wcm90b2NvbE1vZGUgPT09IFByb3RvY29sTW9kZS5BQUQpIHtcclxuICAgICAgICAgICAgYWNjb3VudC5hdXRob3JpdHlUeXBlID0gQ2FjaGVBY2NvdW50VHlwZS5NU1NUU19BQ0NPVU5UX1RZUEU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBhY2NvdW50LmF1dGhvcml0eVR5cGUgPSBDYWNoZUFjY291bnRUeXBlLkdFTkVSSUNfQUNDT1VOVF9UWVBFO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgY2xpZW50SW5mbztcclxuICAgICAgICBpZiAoYWNjb3VudERldGFpbHMuY2xpZW50SW5mbyAmJiBiYXNlNjREZWNvZGUpIHtcclxuICAgICAgICAgICAgY2xpZW50SW5mbyA9IGJ1aWxkQ2xpZW50SW5mbyhhY2NvdW50RGV0YWlscy5jbGllbnRJbmZvLCBiYXNlNjREZWNvZGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBhY2NvdW50LmNsaWVudEluZm8gPSBhY2NvdW50RGV0YWlscy5jbGllbnRJbmZvO1xyXG4gICAgICAgIGFjY291bnQuaG9tZUFjY291bnRJZCA9IGFjY291bnREZXRhaWxzLmhvbWVBY2NvdW50SWQ7XHJcbiAgICAgICAgYWNjb3VudC5uYXRpdmVBY2NvdW50SWQgPSBhY2NvdW50RGV0YWlscy5uYXRpdmVBY2NvdW50SWQ7XHJcbiAgICAgICAgY29uc3QgZW52ID0gYWNjb3VudERldGFpbHMuZW52aXJvbm1lbnQgfHxcclxuICAgICAgICAgICAgKGF1dGhvcml0eSAmJiBhdXRob3JpdHkuZ2V0UHJlZmVycmVkQ2FjaGUoKSk7XHJcbiAgICAgICAgaWYgKCFlbnYpIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKGludmFsaWRDYWNoZUVudmlyb25tZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYWNjb3VudC5lbnZpcm9ubWVudCA9IGVudjtcclxuICAgICAgICAvLyBub24gQUFEIHNjZW5hcmlvcyBjYW4gaGF2ZSBlbXB0eSByZWFsbVxyXG4gICAgICAgIGFjY291bnQucmVhbG0gPVxyXG4gICAgICAgICAgICBjbGllbnRJbmZvPy51dGlkIHx8XHJcbiAgICAgICAgICAgICAgICBnZXRUZW5hbnRJZEZyb21JZFRva2VuQ2xhaW1zKGFjY291bnREZXRhaWxzLmlkVG9rZW5DbGFpbXMpIHx8XHJcbiAgICAgICAgICAgICAgICBcIlwiO1xyXG4gICAgICAgIC8vIEhvdyBkbyB5b3UgYWNjb3VudCBmb3IgTVNBIENJRCBoZXJlP1xyXG4gICAgICAgIGFjY291bnQubG9jYWxBY2NvdW50SWQgPVxyXG4gICAgICAgICAgICBjbGllbnRJbmZvPy51aWQgfHxcclxuICAgICAgICAgICAgICAgIGFjY291bnREZXRhaWxzLmlkVG9rZW5DbGFpbXM/Lm9pZCB8fFxyXG4gICAgICAgICAgICAgICAgYWNjb3VudERldGFpbHMuaWRUb2tlbkNsYWltcz8uc3ViIHx8XHJcbiAgICAgICAgICAgICAgICBcIlwiO1xyXG4gICAgICAgIC8qXHJcbiAgICAgICAgICogSW4gQjJDIHNjZW5hcmlvcyB0aGUgZW1haWxzIGNsYWltIGlzIHVzZWQgaW5zdGVhZCBvZiBwcmVmZXJyZWRfdXNlcm5hbWUgYW5kIGl0IGlzIGFuIGFycmF5LlxyXG4gICAgICAgICAqIEluIG1vc3QgY2FzZXMgaXQgd2lsbCBjb250YWluIGEgc2luZ2xlIGVtYWlsLiBUaGlzIGZpZWxkIHNob3VsZCBub3QgYmUgcmVsaWVkIHVwb24gaWYgYSBjdXN0b21cclxuICAgICAgICAgKiBwb2xpY3kgaXMgY29uZmlndXJlZCB0byByZXR1cm4gbW9yZSB0aGFuIDEgZW1haWwuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgY29uc3QgcHJlZmVycmVkVXNlcm5hbWUgPSBhY2NvdW50RGV0YWlscy5pZFRva2VuQ2xhaW1zPy5wcmVmZXJyZWRfdXNlcm5hbWUgfHxcclxuICAgICAgICAgICAgYWNjb3VudERldGFpbHMuaWRUb2tlbkNsYWltcz8udXBuO1xyXG4gICAgICAgIGNvbnN0IGVtYWlsID0gYWNjb3VudERldGFpbHMuaWRUb2tlbkNsYWltcz8uZW1haWxzXHJcbiAgICAgICAgICAgID8gYWNjb3VudERldGFpbHMuaWRUb2tlbkNsYWltcy5lbWFpbHNbMF1cclxuICAgICAgICAgICAgOiBudWxsO1xyXG4gICAgICAgIGFjY291bnQudXNlcm5hbWUgPSBwcmVmZXJyZWRVc2VybmFtZSB8fCBlbWFpbCB8fCBcIlwiO1xyXG4gICAgICAgIGFjY291bnQubmFtZSA9IGFjY291bnREZXRhaWxzLmlkVG9rZW5DbGFpbXM/Lm5hbWUgfHwgXCJcIjtcclxuICAgICAgICBhY2NvdW50LmNsb3VkR3JhcGhIb3N0TmFtZSA9IGFjY291bnREZXRhaWxzLmNsb3VkR3JhcGhIb3N0TmFtZTtcclxuICAgICAgICBhY2NvdW50Lm1zR3JhcGhIb3N0ID0gYWNjb3VudERldGFpbHMubXNHcmFwaEhvc3Q7XHJcbiAgICAgICAgaWYgKGFjY291bnREZXRhaWxzLnRlbmFudFByb2ZpbGVzKSB7XHJcbiAgICAgICAgICAgIGFjY291bnQudGVuYW50UHJvZmlsZXMgPSBhY2NvdW50RGV0YWlscy50ZW5hbnRQcm9maWxlcztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRlbmFudFByb2ZpbGUgPSBidWlsZFRlbmFudFByb2ZpbGUoYWNjb3VudERldGFpbHMuaG9tZUFjY291bnRJZCwgYWNjb3VudC5sb2NhbEFjY291bnRJZCwgYWNjb3VudC5yZWFsbSwgYWNjb3VudERldGFpbHMuaWRUb2tlbkNsYWltcyk7XHJcbiAgICAgICAgICAgIGFjY291bnQudGVuYW50UHJvZmlsZXMgPSBbdGVuYW50UHJvZmlsZV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhY2NvdW50O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuIEFjY291bnRFbnRpdHkgb2JqZWN0IGZyb20gQWNjb3VudEluZm9cclxuICAgICAqIEBwYXJhbSBhY2NvdW50SW5mb1xyXG4gICAgICogQHBhcmFtIGNsb3VkR3JhcGhIb3N0TmFtZVxyXG4gICAgICogQHBhcmFtIG1zR3JhcGhIb3N0XHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlRnJvbUFjY291bnRJbmZvKGFjY291bnRJbmZvLCBjbG91ZEdyYXBoSG9zdE5hbWUsIG1zR3JhcGhIb3N0KSB7XHJcbiAgICAgICAgY29uc3QgYWNjb3VudCA9IG5ldyBBY2NvdW50RW50aXR5KCk7XHJcbiAgICAgICAgYWNjb3VudC5hdXRob3JpdHlUeXBlID1cclxuICAgICAgICAgICAgYWNjb3VudEluZm8uYXV0aG9yaXR5VHlwZSB8fCBDYWNoZUFjY291bnRUeXBlLkdFTkVSSUNfQUNDT1VOVF9UWVBFO1xyXG4gICAgICAgIGFjY291bnQuaG9tZUFjY291bnRJZCA9IGFjY291bnRJbmZvLmhvbWVBY2NvdW50SWQ7XHJcbiAgICAgICAgYWNjb3VudC5sb2NhbEFjY291bnRJZCA9IGFjY291bnRJbmZvLmxvY2FsQWNjb3VudElkO1xyXG4gICAgICAgIGFjY291bnQubmF0aXZlQWNjb3VudElkID0gYWNjb3VudEluZm8ubmF0aXZlQWNjb3VudElkO1xyXG4gICAgICAgIGFjY291bnQucmVhbG0gPSBhY2NvdW50SW5mby50ZW5hbnRJZDtcclxuICAgICAgICBhY2NvdW50LmVudmlyb25tZW50ID0gYWNjb3VudEluZm8uZW52aXJvbm1lbnQ7XHJcbiAgICAgICAgYWNjb3VudC51c2VybmFtZSA9IGFjY291bnRJbmZvLnVzZXJuYW1lO1xyXG4gICAgICAgIGFjY291bnQubmFtZSA9IGFjY291bnRJbmZvLm5hbWU7XHJcbiAgICAgICAgYWNjb3VudC5jbG91ZEdyYXBoSG9zdE5hbWUgPSBjbG91ZEdyYXBoSG9zdE5hbWU7XHJcbiAgICAgICAgYWNjb3VudC5tc0dyYXBoSG9zdCA9IG1zR3JhcGhIb3N0O1xyXG4gICAgICAgIC8vIFNlcmlhbGl6ZSB0ZW5hbnQgcHJvZmlsZXMgbWFwIGludG8gYW4gYXJyYXlcclxuICAgICAgICBhY2NvdW50LnRlbmFudFByb2ZpbGVzID0gQXJyYXkuZnJvbShhY2NvdW50SW5mby50ZW5hbnRQcm9maWxlcz8udmFsdWVzKCkgfHwgW10pO1xyXG4gICAgICAgIHJldHVybiBhY2NvdW50O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZW5lcmF0ZSBIb21lQWNjb3VudElkIGZyb20gc2VydmVyIHJlc3BvbnNlXHJcbiAgICAgKiBAcGFyYW0gc2VydmVyQ2xpZW50SW5mb1xyXG4gICAgICogQHBhcmFtIGF1dGhUeXBlXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBnZW5lcmF0ZUhvbWVBY2NvdW50SWQoc2VydmVyQ2xpZW50SW5mbywgYXV0aFR5cGUsIGxvZ2dlciwgY3J5cHRvT2JqLCBpZFRva2VuQ2xhaW1zKSB7XHJcbiAgICAgICAgLy8gc2luY2UgQURGUy9EU1RTIGRvIG5vdCBoYXZlIHRpZCBhbmQgZG9lcyBub3Qgc2V0IGNsaWVudF9pbmZvXHJcbiAgICAgICAgaWYgKCEoYXV0aFR5cGUgPT09IEF1dGhvcml0eVR5cGUuQWRmcyB8fFxyXG4gICAgICAgICAgICBhdXRoVHlwZSA9PT0gQXV0aG9yaXR5VHlwZS5Ec3RzKSkge1xyXG4gICAgICAgICAgICAvLyBmb3IgY2FzZXMgd2hlcmUgdGhlcmUgaXMgY2xpZW50SW5mb1xyXG4gICAgICAgICAgICBpZiAoc2VydmVyQ2xpZW50SW5mbykge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBjbGllbnRJbmZvID0gYnVpbGRDbGllbnRJbmZvKHNlcnZlckNsaWVudEluZm8sIGNyeXB0b09iai5iYXNlNjREZWNvZGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjbGllbnRJbmZvLnVpZCAmJiBjbGllbnRJbmZvLnV0aWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGAke2NsaWVudEluZm8udWlkfS4ke2NsaWVudEluZm8udXRpZH1gO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7IH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsb2dnZXIud2FybmluZyhcIk5vIGNsaWVudCBpbmZvIGluIHJlc3BvbnNlXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBkZWZhdWx0IHRvIFwic3ViXCIgY2xhaW1cclxuICAgICAgICByZXR1cm4gaWRUb2tlbkNsYWltcz8uc3ViIHx8IFwiXCI7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFZhbGlkYXRlcyBhbiBlbnRpdHk6IGNoZWNrcyBmb3IgYWxsIGV4cGVjdGVkIHBhcmFtc1xyXG4gICAgICogQHBhcmFtIGVudGl0eVxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgaXNBY2NvdW50RW50aXR5KGVudGl0eSkge1xyXG4gICAgICAgIGlmICghZW50aXR5KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIChlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJob21lQWNjb3VudElkXCIpICYmXHJcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImVudmlyb25tZW50XCIpICYmXHJcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInJlYWxtXCIpICYmXHJcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImxvY2FsQWNjb3VudElkXCIpICYmXHJcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInVzZXJuYW1lXCIpICYmXHJcbiAgICAgICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImF1dGhvcml0eVR5cGVcIikpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIHdoZXRoZXIgMiBhY2NvdW50SW5mbyBvYmplY3RzIHJlcHJlc2VudCB0aGUgc2FtZSBhY2NvdW50XHJcbiAgICAgKiBAcGFyYW0gYWNjb3VudEFcclxuICAgICAqIEBwYXJhbSBhY2NvdW50QlxyXG4gICAgICogQHBhcmFtIGNvbXBhcmVDbGFpbXMgLSBJZiBzZXQgdG8gdHJ1ZSBpZFRva2VuQ2xhaW1zIHdpbGwgYWxzbyBiZSBjb21wYXJlZCB0byBkZXRlcm1pbmUgYWNjb3VudCBlcXVhbGl0eVxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgYWNjb3VudEluZm9Jc0VxdWFsKGFjY291bnRBLCBhY2NvdW50QiwgY29tcGFyZUNsYWltcykge1xyXG4gICAgICAgIGlmICghYWNjb3VudEEgfHwgIWFjY291bnRCKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGNsYWltc01hdGNoID0gdHJ1ZTsgLy8gZGVmYXVsdCB0byB0cnVlIHNvIGFzIHRvIG5vdCBmYWlsIGNvbXBhcmlzb24gYmVsb3cgaWYgY29tcGFyZUNsYWltczogZmFsc2VcclxuICAgICAgICBpZiAoY29tcGFyZUNsYWltcykge1xyXG4gICAgICAgICAgICBjb25zdCBhY2NvdW50QUNsYWltcyA9IChhY2NvdW50QS5pZFRva2VuQ2xhaW1zIHx8XHJcbiAgICAgICAgICAgICAgICB7fSk7XHJcbiAgICAgICAgICAgIGNvbnN0IGFjY291bnRCQ2xhaW1zID0gKGFjY291bnRCLmlkVG9rZW5DbGFpbXMgfHxcclxuICAgICAgICAgICAgICAgIHt9KTtcclxuICAgICAgICAgICAgLy8gaXNzdWVkIGF0IHRpbWVzdGFtcCBhbmQgbm9uY2UgYXJlIGV4cGVjdGVkIHRvIGNoYW5nZSBlYWNoIHRpbWUgYSBuZXcgaWQgdG9rZW4gaXMgYWNxdWlyZWRcclxuICAgICAgICAgICAgY2xhaW1zTWF0Y2ggPVxyXG4gICAgICAgICAgICAgICAgYWNjb3VudEFDbGFpbXMuaWF0ID09PSBhY2NvdW50QkNsYWltcy5pYXQgJiZcclxuICAgICAgICAgICAgICAgICAgICBhY2NvdW50QUNsYWltcy5ub25jZSA9PT0gYWNjb3VudEJDbGFpbXMubm9uY2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAoYWNjb3VudEEuaG9tZUFjY291bnRJZCA9PT0gYWNjb3VudEIuaG9tZUFjY291bnRJZCAmJlxyXG4gICAgICAgICAgICBhY2NvdW50QS5sb2NhbEFjY291bnRJZCA9PT0gYWNjb3VudEIubG9jYWxBY2NvdW50SWQgJiZcclxuICAgICAgICAgICAgYWNjb3VudEEudXNlcm5hbWUgPT09IGFjY291bnRCLnVzZXJuYW1lICYmXHJcbiAgICAgICAgICAgIGFjY291bnRBLnRlbmFudElkID09PSBhY2NvdW50Qi50ZW5hbnRJZCAmJlxyXG4gICAgICAgICAgICBhY2NvdW50QS5lbnZpcm9ubWVudCA9PT0gYWNjb3VudEIuZW52aXJvbm1lbnQgJiZcclxuICAgICAgICAgICAgYWNjb3VudEEubmF0aXZlQWNjb3VudElkID09PSBhY2NvdW50Qi5uYXRpdmVBY2NvdW50SWQgJiZcclxuICAgICAgICAgICAgY2xhaW1zTWF0Y2gpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IEFjY291bnRFbnRpdHkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFjY291bnRFbnRpdHkubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenCacheContext: function() { return /* binding */ TokenCacheContext; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */ class TokenCacheContext {\r\n    constructor(tokenCache, hasChanged) {\r\n        this.cache = tokenCache;\r\n        this.hasChanged = hasChanged;\r\n    }\r\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\r\n    get cacheHasChanged() {\r\n        return this.hasChanged;\r\n    }\r\n    /**\r\n     * function to retrieve the token cache\r\n     */\r\n    get tokenCache() {\r\n        return this.cache;\r\n    }\r\n}\n\n\n//# sourceMappingURL=TokenCacheContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvcGVyc2lzdGVuY2UvVG9rZW5DYWNoZUNvbnRleHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jYWNoZS9wZXJzaXN0ZW5jZS9Ub2tlbkNhY2hlQ29udGV4dC5tanM/MzliYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogVGhpcyBjbGFzcyBpbnN0YW5jZSBoZWxwcyB0cmFjayB0aGUgbWVtb3J5IGNoYW5nZXMgZmFjaWxpdGF0aW5nXHJcbiAqIGRlY2lzaW9ucyB0byByZWFkIGZyb20gYW5kIHdyaXRlIHRvIHRoZSBwZXJzaXN0ZW50IGNhY2hlXHJcbiAqLyBjbGFzcyBUb2tlbkNhY2hlQ29udGV4dCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0b2tlbkNhY2hlLCBoYXNDaGFuZ2VkKSB7XHJcbiAgICAgICAgdGhpcy5jYWNoZSA9IHRva2VuQ2FjaGU7XHJcbiAgICAgICAgdGhpcy5oYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogYm9vbGVhbiB3aGljaCBpbmRpY2F0ZXMgdGhlIGNoYW5nZXMgaW4gY2FjaGVcclxuICAgICAqL1xyXG4gICAgZ2V0IGNhY2hlSGFzQ2hhbmdlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5oYXNDaGFuZ2VkO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBmdW5jdGlvbiB0byByZXRyaWV2ZSB0aGUgdG9rZW4gY2FjaGVcclxuICAgICAqL1xyXG4gICAgZ2V0IHRva2VuQ2FjaGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGU7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgVG9rZW5DYWNoZUNvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRva2VuQ2FjaGVDb250ZXh0Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAccessTokenEntity: function() { return /* binding */ createAccessTokenEntity; },\n/* harmony export */   createIdTokenEntity: function() { return /* binding */ createIdTokenEntity; },\n/* harmony export */   createRefreshTokenEntity: function() { return /* binding */ createRefreshTokenEntity; },\n/* harmony export */   generateAppMetadataKey: function() { return /* binding */ generateAppMetadataKey; },\n/* harmony export */   generateAuthorityMetadataExpiresAt: function() { return /* binding */ generateAuthorityMetadataExpiresAt; },\n/* harmony export */   generateCredentialKey: function() { return /* binding */ generateCredentialKey; },\n/* harmony export */   isAccessTokenEntity: function() { return /* binding */ isAccessTokenEntity; },\n/* harmony export */   isAppMetadataEntity: function() { return /* binding */ isAppMetadataEntity; },\n/* harmony export */   isAuthorityMetadataEntity: function() { return /* binding */ isAuthorityMetadataEntity; },\n/* harmony export */   isAuthorityMetadataExpired: function() { return /* binding */ isAuthorityMetadataExpired; },\n/* harmony export */   isCredentialEntity: function() { return /* binding */ isCredentialEntity; },\n/* harmony export */   isIdTokenEntity: function() { return /* binding */ isIdTokenEntity; },\n/* harmony export */   isRefreshTokenEntity: function() { return /* binding */ isRefreshTokenEntity; },\n/* harmony export */   isServerTelemetryEntity: function() { return /* binding */ isServerTelemetryEntity; },\n/* harmony export */   isThrottlingEntity: function() { return /* binding */ isThrottlingEntity; },\n/* harmony export */   updateAuthorityEndpointMetadata: function() { return /* binding */ updateAuthorityEndpointMetadata; },\n/* harmony export */   updateCloudDiscoveryMetadata: function() { return /* binding */ updateCloudDiscoveryMetadata; }\n/* harmony export */ });\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Cache Key: <home_account_id>-<environment>-<credential_type>-<client_id or familyId>-<realm>-<scopes>-<claims hash>-<scheme>\r\n * IdToken Example: uid.utid-login.microsoftonline.com-idtoken-app_client_id-contoso.com\r\n * AccessToken Example: uid.utid-login.microsoftonline.com-accesstoken-app_client_id-contoso.com-scope1 scope2--pop\r\n * RefreshToken Example: uid.utid-login.microsoftonline.com-refreshtoken-1-contoso.com\r\n * @param credentialEntity\r\n * @returns\r\n */\r\nfunction generateCredentialKey(credentialEntity) {\r\n    const credentialKey = [\r\n        generateAccountId(credentialEntity),\r\n        generateCredentialId(credentialEntity),\r\n        generateTarget(credentialEntity),\r\n        generateClaimsHash(credentialEntity),\r\n        generateScheme(credentialEntity),\r\n    ];\r\n    return credentialKey.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n/**\r\n * Create IdTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nfunction createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {\r\n    const idTokenEntity = {\r\n        credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: idToken,\r\n        realm: tenantId,\r\n    };\r\n    return idTokenEntity;\r\n}\r\n/**\r\n * Create AccessTokenEntity\r\n * @param homeAccountId\r\n * @param environment\r\n * @param accessToken\r\n * @param clientId\r\n * @param tenantId\r\n * @param scopes\r\n * @param expiresOn\r\n * @param extExpiresOn\r\n */\r\nfunction createAccessTokenEntity(homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, base64Decode, refreshOn, tokenType, userAssertionHash, keyId, requestedClaims, requestedClaimsHash) {\r\n    const atEntity = {\r\n        homeAccountId: homeAccountId,\r\n        credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN,\r\n        secret: accessToken,\r\n        cachedAt: (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.nowSeconds)().toString(),\r\n        expiresOn: expiresOn.toString(),\r\n        extendedExpiresOn: extExpiresOn.toString(),\r\n        environment: environment,\r\n        clientId: clientId,\r\n        realm: tenantId,\r\n        target: scopes,\r\n        tokenType: tokenType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER,\r\n    };\r\n    if (userAssertionHash) {\r\n        atEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n    if (refreshOn) {\r\n        atEntity.refreshOn = refreshOn.toString();\r\n    }\r\n    if (requestedClaims) {\r\n        atEntity.requestedClaims = requestedClaims;\r\n        atEntity.requestedClaimsHash = requestedClaimsHash;\r\n    }\r\n    /*\r\n     * Create Access Token With Auth Scheme instead of regular access token\r\n     * Cast to lower to handle \"bearer\" from ADFS\r\n     */\r\n    if (atEntity.tokenType?.toLowerCase() !==\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER.toLowerCase()) {\r\n        atEntity.credentialType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n        switch (atEntity.tokenType) {\r\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.POP:\r\n                // Make sure keyId is present and add it to credential\r\n                const tokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_2__.extractTokenClaims)(accessToken, base64Decode);\r\n                if (!tokenClaims?.cnf?.kid) {\r\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenClaimsCnfRequiredForSignedJwt);\r\n                }\r\n                atEntity.keyId = tokenClaims.cnf.kid;\r\n                break;\r\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.SSH:\r\n                atEntity.keyId = keyId;\r\n        }\r\n    }\r\n    return atEntity;\r\n}\r\n/**\r\n * Create RefreshTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nfunction createRefreshTokenEntity(homeAccountId, environment, refreshToken, clientId, familyId, userAssertionHash, expiresOn) {\r\n    const rtEntity = {\r\n        credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: refreshToken,\r\n    };\r\n    if (userAssertionHash) {\r\n        rtEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n    if (familyId) {\r\n        rtEntity.familyId = familyId;\r\n    }\r\n    if (expiresOn) {\r\n        rtEntity.expiresOn = expiresOn.toString();\r\n    }\r\n    return rtEntity;\r\n}\r\nfunction isCredentialEntity(entity) {\r\n    return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n        entity.hasOwnProperty(\"environment\") &&\r\n        entity.hasOwnProperty(\"credentialType\") &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"secret\"));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAccessTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity.hasOwnProperty(\"target\") &&\r\n        (entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN ||\r\n            entity[\"credentialType\"] ===\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isIdTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isRefreshTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\r\n}\r\n/**\r\n * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n */\r\nfunction generateAccountId(credentialEntity) {\r\n    const accountId = [\r\n        credentialEntity.homeAccountId,\r\n        credentialEntity.environment,\r\n    ];\r\n    return accountId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n/**\r\n * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n */\r\nfunction generateCredentialId(credentialEntity) {\r\n    const clientOrFamilyId = credentialEntity.credentialType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN\r\n        ? credentialEntity.familyId || credentialEntity.clientId\r\n        : credentialEntity.clientId;\r\n    const credentialId = [\r\n        credentialEntity.credentialType,\r\n        clientOrFamilyId,\r\n        credentialEntity.realm || \"\",\r\n    ];\r\n    return credentialId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n/**\r\n * Generate target key component as per schema: <target>\r\n */\r\nfunction generateTarget(credentialEntity) {\r\n    return (credentialEntity.target || \"\").toLowerCase();\r\n}\r\n/**\r\n * Generate requested claims key component as per schema: <requestedClaims>\r\n */\r\nfunction generateClaimsHash(credentialEntity) {\r\n    return (credentialEntity.requestedClaimsHash || \"\").toLowerCase();\r\n}\r\n/**\r\n * Generate scheme key componenet as per schema: <scheme>\r\n */\r\nfunction generateScheme(credentialEntity) {\r\n    /*\r\n     * PoP Tokens and SSH certs include scheme in cache key\r\n     * Cast to lowercase to handle \"bearer\" from ADFS\r\n     */\r\n    return credentialEntity.tokenType &&\r\n        credentialEntity.tokenType.toLowerCase() !==\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER.toLowerCase()\r\n        ? credentialEntity.tokenType.toLowerCase()\r\n        : \"\";\r\n}\r\n/**\r\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nfunction isServerTelemetryEntity(key, entity) {\r\n    const validateKey = key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\r\n    let validateEntity = true;\r\n    if (entity) {\r\n        validateEntity =\r\n            entity.hasOwnProperty(\"failedRequests\") &&\r\n                entity.hasOwnProperty(\"errors\") &&\r\n                entity.hasOwnProperty(\"cacheHits\");\r\n    }\r\n    return validateKey && validateEntity;\r\n}\r\n/**\r\n * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nfunction isThrottlingEntity(key, entity) {\r\n    let validateKey = false;\r\n    if (key) {\r\n        validateKey = key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.THROTTLING_PREFIX) === 0;\r\n    }\r\n    let validateEntity = true;\r\n    if (entity) {\r\n        validateEntity = entity.hasOwnProperty(\"throttleTime\");\r\n    }\r\n    return validateKey && validateEntity;\r\n}\r\n/**\r\n * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\r\n */\r\nfunction generateAppMetadataKey({ environment, clientId, }) {\r\n    const appMetaDataKeyArray = [\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.APP_METADATA,\r\n        environment,\r\n        clientId,\r\n    ];\r\n    return appMetaDataKeyArray\r\n        .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR)\r\n        .toLowerCase();\r\n}\r\n/*\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAppMetadataEntity(key, entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.APP_METADATA) === 0 &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"environment\"));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAuthorityMetadataEntity(key, entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\r\n        entity.hasOwnProperty(\"aliases\") &&\r\n        entity.hasOwnProperty(\"preferred_cache\") &&\r\n        entity.hasOwnProperty(\"preferred_network\") &&\r\n        entity.hasOwnProperty(\"canonical_authority\") &&\r\n        entity.hasOwnProperty(\"authorization_endpoint\") &&\r\n        entity.hasOwnProperty(\"token_endpoint\") &&\r\n        entity.hasOwnProperty(\"issuer\") &&\r\n        entity.hasOwnProperty(\"aliasesFromNetwork\") &&\r\n        entity.hasOwnProperty(\"endpointsFromNetwork\") &&\r\n        entity.hasOwnProperty(\"expiresAt\") &&\r\n        entity.hasOwnProperty(\"jwks_uri\"));\r\n}\r\n/**\r\n * Reset the exiresAt value\r\n */\r\nfunction generateAuthorityMetadataExpiresAt() {\r\n    return ((0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.nowSeconds)() +\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS);\r\n}\r\nfunction updateAuthorityEndpointMetadata(authorityMetadata, updatedValues, fromNetwork) {\r\n    authorityMetadata.authorization_endpoint =\r\n        updatedValues.authorization_endpoint;\r\n    authorityMetadata.token_endpoint = updatedValues.token_endpoint;\r\n    authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;\r\n    authorityMetadata.issuer = updatedValues.issuer;\r\n    authorityMetadata.endpointsFromNetwork = fromNetwork;\r\n    authorityMetadata.jwks_uri = updatedValues.jwks_uri;\r\n}\r\nfunction updateCloudDiscoveryMetadata(authorityMetadata, updatedValues, fromNetwork) {\r\n    authorityMetadata.aliases = updatedValues.aliases;\r\n    authorityMetadata.preferred_cache = updatedValues.preferred_cache;\r\n    authorityMetadata.preferred_network = updatedValues.preferred_network;\r\n    authorityMetadata.aliasesFromNetwork = fromNetwork;\r\n}\r\n/**\r\n * Returns whether or not the data needs to be refreshed\r\n */\r\nfunction isAuthorityMetadataExpired(metadata) {\r\n    return metadata.expiresAt <= (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.nowSeconds)();\r\n}\n\n\n//# sourceMappingURL=CacheHelpers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorizationCodeClient: function() { return /* binding */ AuthorizationCodeClient; }\n/* harmony export */ });\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../constants/AADServerParamKeys.mjs */ \"./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _request_RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../request/RequestValidator.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../utils/ClientAssertionUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n * @internal\r\n */\r\nclass AuthorizationCodeClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n        // Flag to indicate if client is for hybrid spa auth code redemption\r\n        this.includeRedirectUri = true;\r\n        this.oidcDefaultScopes =\r\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    async getAuthCodeUrl(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.GetAuthCodeUrl, request.correlationId);\r\n        const queryString = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.createAuthCodeUrlQueryString.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateQueryString, this.logger, this.performanceClient, request.correlationId)(request);\r\n        return _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\r\n    }\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    async acquireToken(request, authCodePayload) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientAcquireToken, request.correlationId);\r\n        if (!request.code) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.requestCannotBeMade);\r\n        }\r\n        const reqTimestamp = (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.nowSeconds)();\r\n        const response = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.executeTokenRequest.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(this.authority, request);\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.HeaderNames.X_MS_REQUEST_ID];\r\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin, this.performanceClient);\r\n        // Validate response. This function throws a server error if an error is returned by the server.\r\n        responseHandler.validateTokenResponse(response.body);\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(responseHandler.handleServerTokenResponse.bind(responseHandler), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, authCodePayload, undefined, undefined, undefined, requestId);\r\n    }\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    handleFragmentResponse(serverParams, cachedState) {\r\n        // Handle responses.\r\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\r\n        // Get code response\r\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState);\r\n        // throw when there is no auth code in the response\r\n        if (!serverParams.code) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.authorizationCodeMissingFromServerResponse);\r\n        }\r\n        return serverParams;\r\n    }\r\n    /**\r\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    getLogoutUri(logoutRequest) {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_9__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_10__.logoutRequestEmpty);\r\n        }\r\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\r\n        // Construct logout URI\r\n        return _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\r\n    }\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    async executeTokenRequest(authority, request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientExecuteTokenRequest, request.correlationId);\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.createTokenRequestBody.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\r\n        let ccsCredential = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfo)(request.clientInfo, this.cryptoUtils.base64Decode);\r\n                ccsCredential = {\r\n                    credential: `${clientInfo.uid}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n            }\r\n        }\r\n        const headers = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\r\n        const thumbprint = {\r\n            clientId: request.tokenBodyParameters?.clientId ||\r\n                this.config.authOptions.clientId,\r\n            authority: authority.canonicalAuthority,\r\n            scopes: request.scopes,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.executePostToTokenEndpoint.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint);\r\n    }\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateTokenRequestBody, request.correlationId);\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__.RequestParameterBuilder(request.correlationId, this.performanceClient);\r\n        parameterBuilder.addClientId(request.embeddedClientId ||\r\n            request.tokenBodyParameters?.[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        /*\r\n         * For hybrid spa flow, there will be a code but no verifier\r\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\r\n         */\r\n        if (!this.includeRedirectUri) {\r\n            // Just validate\r\n            _request_RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_15__.RequestValidator.validateRedirectUri(request.redirectUri);\r\n        }\r\n        else {\r\n            // Validate and include redirect uri\r\n            parameterBuilder.addRedirectUri(request.redirectUri);\r\n        }\r\n        // Add scope array, parameter builder will add default scopes and dedupe\r\n        parameterBuilder.addScopes(request.scopes, true, this.oidcDefaultScopes);\r\n        // add code: user set, not validated\r\n        parameterBuilder.addAuthorizationCode(request.code);\r\n        // Add library metadata\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n        parameterBuilder.addThrottling();\r\n        if (this.serverTelemetryManager && !(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_16__.isOidcProtocolMode)(this.config)) {\r\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n        }\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n        }\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(await (0,_utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_17__.getClientAssertion)(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        parameterBuilder.addGrantType(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.GrantType.AUTHORIZATION_CODE_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_18__.PopTokenGenerator(this.cryptoUtils, this.performanceClient);\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            }\r\n            else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            parameterBuilder.addPopToken(reqCnfData);\r\n        }\r\n        else if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                parameterBuilder.addSshJwk(request.sshJwk);\r\n            }\r\n            else {\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_9__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_10__.missingSshJwk);\r\n            }\r\n        }\r\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_19__.StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        let ccsCred = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfo)(request.clientInfo, this.cryptoUtils.base64Decode);\r\n                ccsCred = {\r\n                    credential: `${clientInfo.uid}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n            }\r\n        }\r\n        else {\r\n            ccsCred = request.ccsCredential;\r\n        }\r\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\r\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(ccsCred.credential);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.UPN:\r\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\r\n                    break;\r\n            }\r\n        }\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n        if (request.tokenBodyParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\r\n        }\r\n        // Add hybrid spa parameters if not already provided\r\n        if (request.enableSpaAuthorizationCode &&\r\n            (!request.tokenBodyParameters ||\r\n                !request.tokenBodyParameters[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.RETURN_SPA_CODE])) {\r\n            parameterBuilder.addExtraQueryParameters({\r\n                [_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.RETURN_SPA_CODE]: \"1\",\r\n            });\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    async createAuthCodeUrlQueryString(request) {\r\n        // generate the correlationId if not set by the user and add\r\n        const correlationId = request.correlationId ||\r\n            this.config.cryptoInterface.createNewGuid();\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateQueryString, correlationId);\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__.RequestParameterBuilder(correlationId, this.performanceClient);\r\n        parameterBuilder.addClientId(request.embeddedClientId ||\r\n            request.extraQueryParameters?.[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        const requestScopes = [\r\n            ...(request.scopes || []),\r\n            ...(request.extraScopesToConsent || []),\r\n        ];\r\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n        // add library info parameters\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        if (!(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_16__.isOidcProtocolMode)(this.config)) {\r\n            parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n        }\r\n        // add client_info=1\r\n        parameterBuilder.addClientInfo();\r\n        if (request.codeChallenge && request.codeChallengeMethod) {\r\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n        }\r\n        if (request.prompt) {\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n        }\r\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\r\n        if (request.prompt !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.PromptValue.SELECT_ACCOUNT) {\r\n            // AAD will throw if prompt=select_account is passed with an account hint\r\n            if (request.sid && request.prompt === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.PromptValue.NONE) {\r\n                // SessionID is only used in silent calls\r\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\r\n                parameterBuilder.addSid(request.sid);\r\n            }\r\n            else if (request.account) {\r\n                const accountSid = this.extractAccountSid(request.account);\r\n                let accountLoginHintClaim = this.extractLoginHint(request.account);\r\n                if (accountLoginHintClaim && request.domainHint) {\r\n                    this.logger.warning(`AuthorizationCodeClient.createAuthCodeUrlQueryString: \"domainHint\" param is set, skipping opaque \"login_hint\" claim. Please consider not passing domainHint`);\r\n                    accountLoginHintClaim = null;\r\n                }\r\n                // If login_hint claim is present, use it over sid/username\r\n                if (accountLoginHintClaim) {\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: login_hint claim present on account\");\r\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                    }\r\n                }\r\n                else if (accountSid && request.prompt === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.PromptValue.NONE) {\r\n                    /*\r\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\r\n                     * SessionId is only used in silent calls\r\n                     */\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\r\n                    parameterBuilder.addSid(accountSid);\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                    }\r\n                }\r\n                else if (request.loginHint) {\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\r\n                    parameterBuilder.addLoginHint(request.loginHint);\r\n                    parameterBuilder.addCcsUpn(request.loginHint);\r\n                }\r\n                else if (request.account.username) {\r\n                    // Fallback to account username if provided\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\r\n                    parameterBuilder.addLoginHint(request.account.username);\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                    }\r\n                }\r\n            }\r\n            else if (request.loginHint) {\r\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\r\n                parameterBuilder.addLoginHint(request.loginHint);\r\n                parameterBuilder.addCcsUpn(request.loginHint);\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\r\n        }\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.claims ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n        this.addExtraQueryParams(request, parameterBuilder);\r\n        if (request.nativeBroker) {\r\n            // signal ests that this is a WAM call\r\n            parameterBuilder.addNativeBroker();\r\n            // pass the req_cnf for POP\r\n            if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthenticationScheme.POP) {\r\n                const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_18__.PopTokenGenerator(this.cryptoUtils);\r\n                // req_cnf is always sent as a string for SPAs\r\n                let reqCnfData;\r\n                if (!request.popKid) {\r\n                    const generatedReqCnfData = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                    reqCnfData = generatedReqCnfData.reqCnfString;\r\n                }\r\n                else {\r\n                    reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n                }\r\n                parameterBuilder.addPopToken(reqCnfData);\r\n            }\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n    /**\r\n     * This API validates the `EndSessionRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    createLogoutUrlQueryString(request) {\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__.RequestParameterBuilder(request.correlationId, this.performanceClient);\r\n        if (request.postLogoutRedirectUri) {\r\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\r\n        }\r\n        if (request.correlationId) {\r\n            parameterBuilder.addCorrelationId(request.correlationId);\r\n        }\r\n        if (request.idTokenHint) {\r\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.logoutHint) {\r\n            parameterBuilder.addLogoutHint(request.logoutHint);\r\n        }\r\n        this.addExtraQueryParams(request, parameterBuilder);\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n    addExtraQueryParams(request, parameterBuilder) {\r\n        const hasRequestInstanceAware = request.extraQueryParameters &&\r\n            request.extraQueryParameters.hasOwnProperty(\"instance_aware\");\r\n        // Set instance_aware flag if config auth param is set\r\n        if (!hasRequestInstanceAware && this.config.authOptions.instanceAware) {\r\n            request.extraQueryParameters = request.extraQueryParameters || {};\r\n            request.extraQueryParameters[\"instance_aware\"] = \"true\";\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\r\n        }\r\n    }\r\n    /**\r\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\r\n     * @param account\r\n     */\r\n    extractAccountSid(account) {\r\n        return account.idTokenClaims?.sid || null;\r\n    }\r\n    extractLoginHint(account) {\r\n        return account.idTokenClaims?.login_hint || null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=AuthorizationCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/client/BaseClient.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/BaseClient.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseClient: function() { return /* binding */ BaseClient; }\n/* harmony export */ });\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger/Logger.mjs */ \"./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../authority/AuthorityFactory.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _network_ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../network/ThrottlingUtils.mjs */ \"./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_NetworkError_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/NetworkError.mjs */ \"./node_modules/@azure/msal-common/dist/error/NetworkError.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n * @internal\r\n */\r\nclass BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        // Set the configuration\r\n        this.config = (0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_0__.buildClientConfiguration)(configuration);\r\n        // Initialize the logger\r\n        this.logger = new _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.Logger(this.config.loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        // Set TelemetryManager\r\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\r\n        // set Authority\r\n        this.authority = this.config.authOptions.authority;\r\n        // set performance telemetry client\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    createTokenRequestHeaders(ccsCred) {\r\n        const headers = {};\r\n        headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.CONTENT_TYPE] = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.Constants.URL_FORM_CONTENT_TYPE;\r\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_4__.CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_5__.buildClientInfoFromHomeAccountId)(ccsCred.credential);\r\n                        headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_4__.CcsCredentialType.UPN:\r\n                    headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\r\n                    break;\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     * @param thumbprint\r\n     */\r\n    async executePostToTokenEndpoint(tokenEndpoint, queryString, headers, thumbprint, correlationId, queuedEvent) {\r\n        if (queuedEvent) {\r\n            this.performanceClient?.addQueueMeasurement(queuedEvent, correlationId);\r\n        }\r\n        const response = await this.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers: headers }, correlationId);\r\n        if (this.config.serverTelemetryManager &&\r\n            response.status < 500 &&\r\n            response.status !== 429) {\r\n            // Telemetry data successfully logged by server, clear Telemetry cache\r\n            this.config.serverTelemetryManager.clearTelemetryCache();\r\n        }\r\n        return response;\r\n    }\r\n    /**\r\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\r\n     * @param thumbprint - Request thumbprint for throttling\r\n     * @param tokenEndpoint - Endpoint to make the POST to\r\n     * @param options - Body and Headers to include on the POST request\r\n     * @param correlationId - CorrelationId for telemetry\r\n     */\r\n    async sendPostRequest(thumbprint, tokenEndpoint, options, correlationId) {\r\n        _network_ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\r\n        let response;\r\n        try {\r\n            response = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_7__.invokeAsync)((this.networkClient.sendPostRequestAsync.bind(this.networkClient)), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.NetworkClientSendPostRequestAsync, this.logger, this.performanceClient, correlationId)(tokenEndpoint, options);\r\n            const responseHeaders = response.headers || {};\r\n            this.performanceClient?.addFields({\r\n                refreshTokenSize: response.body.refresh_token?.length || 0,\r\n                httpVerToken: responseHeaders[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.X_MS_HTTP_VERSION] || \"\",\r\n                requestId: responseHeaders[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.X_MS_REQUEST_ID] || \"\",\r\n            }, correlationId);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _error_NetworkError_mjs__WEBPACK_IMPORTED_MODULE_9__.NetworkError) {\r\n                const responseHeaders = e.responseHeaders;\r\n                if (responseHeaders) {\r\n                    this.performanceClient?.addFields({\r\n                        httpVerToken: responseHeaders[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.X_MS_HTTP_VERSION] || \"\",\r\n                        requestId: responseHeaders[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.X_MS_REQUEST_ID] ||\r\n                            \"\",\r\n                        contentTypeHeader: responseHeaders[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.CONTENT_TYPE] ||\r\n                            undefined,\r\n                        contentLengthHeader: responseHeaders[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HeaderNames.CONTENT_LENGTH] ||\r\n                            undefined,\r\n                        httpStatus: e.httpStatus,\r\n                    }, correlationId);\r\n                }\r\n                throw e.error;\r\n            }\r\n            if (e instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.AuthError) {\r\n                throw e;\r\n            }\r\n            else {\r\n                throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.networkError);\r\n            }\r\n        }\r\n        _network_ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\r\n        return response;\r\n    }\r\n    /**\r\n     * Updates the authority object of the client. Endpoint discovery must be completed.\r\n     * @param updatedAuthority\r\n     */\r\n    async updateAuthority(cloudInstanceHostname, correlationId) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.UpdateTokenEndpointAuthority, correlationId);\r\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\r\n        const cloudInstanceAuthority = await (0,_authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_13__.createDiscoveredInstance)(cloudInstanceAuthorityUri, this.networkClient, this.cacheManager, this.authority.options, this.logger, correlationId, this.performanceClient);\r\n        this.authority = cloudInstanceAuthority;\r\n    }\r\n    /**\r\n     * Creates query string for the /token request\r\n     * @param request\r\n     */\r\n    createTokenQueryParameters(request) {\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_14__.RequestParameterBuilder(request.correlationId, this.performanceClient);\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n        if (request.tokenQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\r\n        }\r\n        parameterBuilder.addCorrelationId(request.correlationId);\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n}\n\n\n//# sourceMappingURL=BaseClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RefreshTokenClient: function() { return /* binding */ RefreshTokenClient; }\n/* harmony export */ });\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../constants/AADServerParamKeys.mjs */ \"./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/InteractionRequiredAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../cache/utils/CacheHelpers.mjs */ \"./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../utils/ClientAssertionUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/InteractionRequiredAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300; // 5 Minutes\r\n/**\r\n * OAuth2.0 refresh token client\r\n * @internal\r\n */\r\nclass RefreshTokenClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n    }\r\n    async acquireToken(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\r\n        const reqTimestamp = (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.nowSeconds)();\r\n        const response = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.executeTokenRequest.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(request, this.authority);\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.X_MS_REQUEST_ID];\r\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n        responseHandler.validateTokenResponse(response.body);\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(responseHandler.handleServerTokenResponse.bind(responseHandler), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId);\r\n    }\r\n    /**\r\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n     * @param request\r\n     */\r\n    async acquireTokenByRefreshToken(request) {\r\n        // Cannot renew token if no request object is given.\r\n        if (!request) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_6__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__.tokenRequestEmpty);\r\n        }\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.noAccountInSilentRequest);\r\n        }\r\n        // try checking if FOCI is enabled for the given application\r\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment);\r\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\r\n        if (isFOCI) {\r\n            try {\r\n                return await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireTokenWithCachedRefreshToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, true);\r\n            }\r\n            catch (e) {\r\n                const noFamilyRTInCache = e instanceof _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.InteractionRequiredAuthError &&\r\n                    e.errorCode ===\r\n                        _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.noTokensFound;\r\n                const clientMismatchErrorWithFamilyRT = e instanceof _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_12__.ServerError &&\r\n                    e.errorCode === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Errors.INVALID_GRANT_ERROR &&\r\n                    e.subError === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Errors.CLIENT_MISMATCH_ERROR;\r\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\r\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\r\n                    return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireTokenWithCachedRefreshToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\r\n                    // throw in all other cases\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        // fall back to application refresh token acquisition\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireTokenWithCachedRefreshToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\r\n    }\r\n    /**\r\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n     * @param request\r\n     */\r\n    async acquireTokenWithCachedRefreshToken(request, foci) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n        // fetches family RT or application RT based on FOCI value\r\n        const refreshToken = (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invoke)(this.cacheManager.getRefreshToken.bind(this.cacheManager), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.CacheManagerGetRefreshToken, this.logger, this.performanceClient, request.correlationId)(request.account, foci, undefined, this.performanceClient, request.correlationId);\r\n        if (!refreshToken) {\r\n            throw (0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.createInteractionRequiredAuthError)(_error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.noTokensFound);\r\n        }\r\n        if (refreshToken.expiresOn &&\r\n            (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.isTokenExpired)(refreshToken.expiresOn, request.refreshTokenExpirationOffsetSeconds ||\r\n                DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS)) {\r\n            throw (0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.createInteractionRequiredAuthError)(_error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.refreshTokenExpired);\r\n        }\r\n        // attach cached RT size to the current measurement\r\n        const refreshTokenRequest = {\r\n            ...request,\r\n            refreshToken: refreshToken.secret,\r\n            authenticationScheme: request.authenticationScheme || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.BEARER,\r\n            ccsCredential: {\r\n                credential: request.account.homeAccountId,\r\n                type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n            },\r\n        };\r\n        try {\r\n            return await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(refreshTokenRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.InteractionRequiredAuthError &&\r\n                e.subError === _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.badToken) {\r\n                // Remove bad refresh token from cache\r\n                this.logger.verbose(\"acquireTokenWithRefreshToken: bad refresh token, removing from cache\");\r\n                const badRefreshTokenKey = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_14__.generateCredentialKey)(refreshToken);\r\n                this.cacheManager.removeRefreshToken(badRefreshTokenKey);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Constructs the network message and makes a NW call to the underlying secure token service\r\n     * @param request\r\n     * @param authority\r\n     */\r\n    async executeTokenRequest(request, authority) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_15__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.createTokenRequestBody.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\r\n        const headers = this.createTokenRequestHeaders(request.ccsCredential);\r\n        const thumbprint = {\r\n            clientId: request.tokenBodyParameters?.clientId ||\r\n                this.config.authOptions.clientId,\r\n            authority: authority.canonicalAuthority,\r\n            scopes: request.scopes,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.executePostToTokenEndpoint.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint);\r\n    }\r\n    /**\r\n     * Helper function to create the token request body\r\n     * @param request\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\r\n        const correlationId = request.correlationId;\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_16__.RequestParameterBuilder(correlationId, this.performanceClient);\r\n        parameterBuilder.addClientId(request.embeddedClientId ||\r\n            request.tokenBodyParameters?.[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_17__.CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        if (request.redirectUri) {\r\n            parameterBuilder.addRedirectUri(request.redirectUri);\r\n        }\r\n        parameterBuilder.addScopes(request.scopes, true, this.config.authOptions.authority.options.OIDCOptions?.defaultScopes);\r\n        parameterBuilder.addGrantType(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.GrantType.REFRESH_TOKEN_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n        parameterBuilder.addThrottling();\r\n        if (this.serverTelemetryManager && !(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_18__.isOidcProtocolMode)(this.config)) {\r\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n        }\r\n        parameterBuilder.addRefreshToken(request.refreshToken);\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(await (0,_utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_19__.getClientAssertion)(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_20__.PopTokenGenerator(this.cryptoUtils, this.performanceClient);\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            }\r\n            else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            parameterBuilder.addPopToken(reqCnfData);\r\n        }\r\n        else if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                parameterBuilder.addSshJwk(request.sshJwk);\r\n            }\r\n            else {\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_6__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__.missingSshJwk);\r\n            }\r\n        }\r\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_21__.StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        if (this.config.systemOptions.preventCorsPreflight &&\r\n            request.ccsCredential) {\r\n            switch (request.ccsCredential.type) {\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__.CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_22__.buildClientInfoFromHomeAccountId)(request.ccsCredential.credential);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__.CcsCredentialType.UPN:\r\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\r\n                    break;\r\n            }\r\n        }\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n        if (request.tokenBodyParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n}\n\n\n//# sourceMappingURL=RefreshTokenClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentFlowClient: function() { return /* binding */ SilentFlowClient; }\n/* harmony export */ });\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RefreshTokenClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../authority/Authority.mjs */ \"./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass SilentFlowClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n    }\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        try {\r\n            const [authResponse, cacheOutcome] = await this.acquireCachedToken({\r\n                ...request,\r\n                scopes: request.scopes?.length\r\n                    ? request.scopes\r\n                    : [..._utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES],\r\n            });\r\n            // if the token is not expired but must be refreshed; get a new one in the background\r\n            if (cacheOutcome === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.PROACTIVELY_REFRESHED) {\r\n                this.logger.info(\"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\r\n                // refresh the access token in the background\r\n                const refreshTokenClient = new _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__.RefreshTokenClient(this.config, this.performanceClient);\r\n                refreshTokenClient\r\n                    .acquireTokenByRefreshToken(request)\r\n                    .catch(() => {\r\n                    // do nothing, this is running in the background and no action is to be taken upon success or failure\r\n                });\r\n            }\r\n            // return the cached token\r\n            return authResponse;\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError &&\r\n                e.errorCode === _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired) {\r\n                const refreshTokenClient = new _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__.RefreshTokenClient(this.config, this.performanceClient);\r\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves token from cache or throws an error if it must be refreshed.\r\n     * @param request\r\n     */\r\n    async acquireCachedToken(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.SilentFlowClientAcquireCachedToken, request.correlationId);\r\n        let lastCacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NOT_APPLICABLE;\r\n        if (request.forceRefresh ||\r\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\r\n                !_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.StringUtils.isEmptyObj(request.claims))) {\r\n            // Must refresh due to present force_refresh flag.\r\n            this.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.FORCE_REFRESH_OR_CLAIMS, request.correlationId);\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired);\r\n        }\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.noAccountInSilentRequest);\r\n        }\r\n        const requestTenantId = request.account.tenantId ||\r\n            (0,_authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_7__.getTenantFromAuthorityString)(request.authority);\r\n        const tokenKeys = this.cacheManager.getTokenKeys();\r\n        const cachedAccessToken = this.cacheManager.getAccessToken(request.account, request, tokenKeys, requestTenantId, this.performanceClient, request.correlationId);\r\n        if (!cachedAccessToken) {\r\n            // must refresh due to non-existent access_token\r\n            this.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NO_CACHED_ACCESS_TOKEN, request.correlationId);\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired);\r\n        }\r\n        else if ((0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.wasClockTurnedBack)(cachedAccessToken.cachedAt) ||\r\n            (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.isTokenExpired)(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\r\n            // must refresh due to the expires_in value\r\n            this.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED, request.correlationId);\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired);\r\n        }\r\n        else if (cachedAccessToken.refreshOn &&\r\n            (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.isTokenExpired)(cachedAccessToken.refreshOn, 0)) {\r\n            // must refresh (in the background) due to the refresh_in value\r\n            lastCacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.PROACTIVELY_REFRESHED;\r\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\r\n        }\r\n        const environment = request.authority || this.authority.getPreferredCache();\r\n        const cacheRecord = {\r\n            account: this.cacheManager.readAccountFromCache(request.account),\r\n            accessToken: cachedAccessToken,\r\n            idToken: this.cacheManager.getIdToken(request.account, tokenKeys, requestTenantId, this.performanceClient, request.correlationId),\r\n            refreshToken: null,\r\n            appMetadata: this.cacheManager.readAppMetadataFromCache(environment),\r\n        };\r\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\r\n        if (this.config.serverTelemetryManager) {\r\n            this.config.serverTelemetryManager.incrementCacheHits();\r\n        }\r\n        return [\r\n            await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_9__.invokeAsync)(this.generateResultFromCacheRecord.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, this.logger, this.performanceClient, request.correlationId)(cacheRecord, request),\r\n            lastCacheOutcome,\r\n        ];\r\n    }\r\n    setCacheOutcome(cacheOutcome, correlationId) {\r\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\r\n        this.performanceClient?.addFields({\r\n            cacheOutcome: cacheOutcome,\r\n        }, correlationId);\r\n        if (cacheOutcome !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NOT_APPLICABLE) {\r\n            this.logger.info(`Token refresh is required due to cache outcome: ${cacheOutcome}`);\r\n        }\r\n    }\r\n    /**\r\n     * Helper function to build response object from the CacheRecord\r\n     * @param cacheRecord\r\n     */\r\n    async generateResultFromCacheRecord(cacheRecord, request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, request.correlationId);\r\n        let idTokenClaims;\r\n        if (cacheRecord.idToken) {\r\n            idTokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_10__.extractTokenClaims)(cacheRecord.idToken.secret, this.config.cryptoInterface.base64Decode);\r\n        }\r\n        // token max_age check\r\n        if (request.maxAge || request.maxAge === 0) {\r\n            const authTime = idTokenClaims?.auth_time;\r\n            if (!authTime) {\r\n                throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.authTimeNotFound);\r\n            }\r\n            (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_10__.checkMaxAge)(authTime, request.maxAge);\r\n        }\r\n        return _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_11__.ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request, idTokenClaims);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentFlowClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SYSTEM_OPTIONS: function() { return /* binding */ DEFAULT_SYSTEM_OPTIONS; },\n/* harmony export */   buildClientConfiguration: function() { return /* binding */ buildClientConfiguration; },\n/* harmony export */   isOidcProtocolMode: function() { return /* binding */ isOidcProtocolMode; }\n/* harmony export */ });\n/* harmony import */ var _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../crypto/ICrypto.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger/Logger.mjs */ \"./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../authority/AuthorityOptions.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../cache/CacheManager.mjs */ \"./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../authority/ProtocolMode.mjs */ \"./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    preventCorsPreflight: false,\r\n};\r\nconst DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: () => {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.LogLevel.Info,\r\n    correlationId: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n};\r\nconst DEFAULT_CACHE_OPTIONS = {\r\n    claimsBasedCachingEnabled: false,\r\n};\r\nconst DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    async sendGetRequestAsync() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.methodNotImplemented);\r\n    },\r\n    async sendPostRequestAsync() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.methodNotImplemented);\r\n    },\r\n};\r\nconst DEFAULT_LIBRARY_INFO = {\r\n    sku: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.SKU,\r\n    version: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.version,\r\n    cpu: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n    os: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n};\r\nconst DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n    clientAssertion: undefined,\r\n};\r\nconst DEFAULT_AZURE_CLOUD_OPTIONS = {\r\n    azureCloudInstance: _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_5__.AzureCloudInstance.None,\r\n    tenant: `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_COMMON_TENANT}`,\r\n};\r\nconst DEFAULT_TELEMETRY_OPTIONS = {\r\n    application: {\r\n        appName: \"\",\r\n        appVersion: \"\",\r\n    },\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration({ authOptions: userAuthOptions, systemOptions: userSystemOptions, loggerOptions: userLoggerOption, cacheOptions: userCacheOptions, storageInterface: storageImplementation, networkInterface: networkImplementation, cryptoInterface: cryptoImplementation, clientCredentials: clientCredentials, libraryInfo: libraryInfo, telemetry: telemetry, serverTelemetryManager: serverTelemetryManager, persistencePlugin: persistencePlugin, serializableCache: serializableCache, }) {\r\n    const loggerOptions = {\r\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\r\n        ...userLoggerOption,\r\n    };\r\n    return {\r\n        authOptions: buildAuthOptions(userAuthOptions),\r\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\r\n        loggerOptions: loggerOptions,\r\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\r\n        storageInterface: storageImplementation ||\r\n            new _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_6__.DefaultStorageClass(userAuthOptions.clientId, _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_CRYPTO_IMPLEMENTATION, new _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.Logger(loggerOptions)),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\r\n        serverTelemetryManager: serverTelemetryManager || null,\r\n        persistencePlugin: persistencePlugin || null,\r\n        serializableCache: serializableCache || null,\r\n    };\r\n}\r\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\r\nfunction buildAuthOptions(authOptions) {\r\n    return {\r\n        clientCapabilities: [],\r\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\r\n        skipAuthorityMetadataCache: false,\r\n        instanceAware: false,\r\n        ...authOptions,\r\n    };\r\n}\r\n/**\r\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\r\n * @param ClientConfiguration\r\n */\r\nfunction isOidcProtocolMode(config) {\r\n    return (config.authOptions.authority.options.protocolMode === _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_8__.ProtocolMode.OIDC);\r\n}\n\n\n//# sourceMappingURL=ClientConfiguration.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY29uZmlnL0NsaWVudENvbmZpZ3VyYXRpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDeUQ7QUFDZDtBQUM2QjtBQUNwQztBQUNzQjtBQUNQO0FBQ0g7QUFDUTtBQUNJOztBQUV6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGtGQUFnQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsY0FBYyx3REFBUTtBQUN0QixtQkFBbUIsMkRBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0E7QUFDQSxTQUFTLDJEQUFTO0FBQ2xCLGFBQWEseURBQU87QUFDcEIsU0FBUywyREFBUztBQUNsQixRQUFRLDJEQUFTO0FBQ2pCO0FBQ0E7QUFDQSxrQkFBa0IsMkRBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtFQUFrQjtBQUMxQyxlQUFlLDJEQUFTLHVCQUF1QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNmNBQTZjO0FBQ2pmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixpREFBaUQ7QUFDMUU7QUFDQSx3QkFBd0IsK0NBQStDO0FBQ3ZFO0FBQ0EsZ0JBQWdCLHdFQUFtQiwyQkFBMkIsOEVBQTZCLE1BQU0sc0RBQU07QUFDdkc7QUFDQSxpREFBaUQsOEVBQTZCO0FBQzlFO0FBQ0EsdUJBQXVCLHlDQUF5QztBQUNoRSxxQkFBcUIsNENBQTRDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UscUVBQVk7QUFDOUU7O0FBRWdGO0FBQ2hGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jb25maWcvQ2xpZW50Q29uZmlndXJhdGlvbi5tanM/NWQ3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IERFRkFVTFRfQ1JZUFRPX0lNUExFTUVOVEFUSU9OIH0gZnJvbSAnLi4vY3J5cHRvL0lDcnlwdG8ubWpzJztcbmltcG9ydCB7IExvZ2dlciwgTG9nTGV2ZWwgfSBmcm9tICcuLi9sb2dnZXIvTG9nZ2VyLm1qcyc7XG5pbXBvcnQgeyBERUZBVUxUX1RPS0VOX1JFTkVXQUxfT0ZGU0VUX1NFQywgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG5pbXBvcnQgeyBBenVyZUNsb3VkSW5zdGFuY2UgfSBmcm9tICcuLi9hdXRob3JpdHkvQXV0aG9yaXR5T3B0aW9ucy5tanMnO1xuaW1wb3J0IHsgRGVmYXVsdFN0b3JhZ2VDbGFzcyB9IGZyb20gJy4uL2NhY2hlL0NhY2hlTWFuYWdlci5tanMnO1xuaW1wb3J0IHsgUHJvdG9jb2xNb2RlIH0gZnJvbSAnLi4vYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanMnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50QXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBtZXRob2ROb3RJbXBsZW1lbnRlZCB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBERUZBVUxUX1NZU1RFTV9PUFRJT05TID0ge1xyXG4gICAgdG9rZW5SZW5ld2FsT2Zmc2V0U2Vjb25kczogREVGQVVMVF9UT0tFTl9SRU5FV0FMX09GRlNFVF9TRUMsXHJcbiAgICBwcmV2ZW50Q29yc1ByZWZsaWdodDogZmFsc2UsXHJcbn07XHJcbmNvbnN0IERFRkFVTFRfTE9HR0VSX0lNUExFTUVOVEFUSU9OID0ge1xyXG4gICAgbG9nZ2VyQ2FsbGJhY2s6ICgpID0+IHtcclxuICAgICAgICAvLyBhbGxvdyB1c2VycyB0byBub3Qgc2V0IGxvZ2dlckNhbGxiYWNrXHJcbiAgICB9LFxyXG4gICAgcGlpTG9nZ2luZ0VuYWJsZWQ6IGZhbHNlLFxyXG4gICAgbG9nTGV2ZWw6IExvZ0xldmVsLkluZm8sXHJcbiAgICBjb3JyZWxhdGlvbklkOiBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG59O1xyXG5jb25zdCBERUZBVUxUX0NBQ0hFX09QVElPTlMgPSB7XHJcbiAgICBjbGFpbXNCYXNlZENhY2hpbmdFbmFibGVkOiBmYWxzZSxcclxufTtcclxuY29uc3QgREVGQVVMVF9ORVRXT1JLX0lNUExFTUVOVEFUSU9OID0ge1xyXG4gICAgYXN5bmMgc2VuZEdldFJlcXVlc3RBc3luYygpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xyXG4gICAgfSxcclxuICAgIGFzeW5jIHNlbmRQb3N0UmVxdWVzdEFzeW5jKCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG59O1xyXG5jb25zdCBERUZBVUxUX0xJQlJBUllfSU5GTyA9IHtcclxuICAgIHNrdTogQ29uc3RhbnRzLlNLVSxcclxuICAgIHZlcnNpb246IHZlcnNpb24sXHJcbiAgICBjcHU6IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXHJcbiAgICBvczogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcclxufTtcclxuY29uc3QgREVGQVVMVF9DTElFTlRfQ1JFREVOVElBTFMgPSB7XHJcbiAgICBjbGllbnRTZWNyZXQ6IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXHJcbiAgICBjbGllbnRBc3NlcnRpb246IHVuZGVmaW5lZCxcclxufTtcclxuY29uc3QgREVGQVVMVF9BWlVSRV9DTE9VRF9PUFRJT05TID0ge1xyXG4gICAgYXp1cmVDbG91ZEluc3RhbmNlOiBBenVyZUNsb3VkSW5zdGFuY2UuTm9uZSxcclxuICAgIHRlbmFudDogYCR7Q29uc3RhbnRzLkRFRkFVTFRfQ09NTU9OX1RFTkFOVH1gLFxyXG59O1xyXG5jb25zdCBERUZBVUxUX1RFTEVNRVRSWV9PUFRJT05TID0ge1xyXG4gICAgYXBwbGljYXRpb246IHtcclxuICAgICAgICBhcHBOYW1lOiBcIlwiLFxyXG4gICAgICAgIGFwcFZlcnNpb246IFwiXCIsXHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogRnVuY3Rpb24gdGhhdCBzZXRzIHRoZSBkZWZhdWx0IG9wdGlvbnMgd2hlbiBub3QgZXhwbGljaXRseSBjb25maWd1cmVkIGZyb20gYXBwIGRldmVsb3BlclxyXG4gKlxyXG4gKiBAcGFyYW0gQ29uZmlndXJhdGlvblxyXG4gKlxyXG4gKiBAcmV0dXJucyBDb25maWd1cmF0aW9uXHJcbiAqL1xyXG5mdW5jdGlvbiBidWlsZENsaWVudENvbmZpZ3VyYXRpb24oeyBhdXRoT3B0aW9uczogdXNlckF1dGhPcHRpb25zLCBzeXN0ZW1PcHRpb25zOiB1c2VyU3lzdGVtT3B0aW9ucywgbG9nZ2VyT3B0aW9uczogdXNlckxvZ2dlck9wdGlvbiwgY2FjaGVPcHRpb25zOiB1c2VyQ2FjaGVPcHRpb25zLCBzdG9yYWdlSW50ZXJmYWNlOiBzdG9yYWdlSW1wbGVtZW50YXRpb24sIG5ldHdvcmtJbnRlcmZhY2U6IG5ldHdvcmtJbXBsZW1lbnRhdGlvbiwgY3J5cHRvSW50ZXJmYWNlOiBjcnlwdG9JbXBsZW1lbnRhdGlvbiwgY2xpZW50Q3JlZGVudGlhbHM6IGNsaWVudENyZWRlbnRpYWxzLCBsaWJyYXJ5SW5mbzogbGlicmFyeUluZm8sIHRlbGVtZXRyeTogdGVsZW1ldHJ5LCBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyOiBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLCBwZXJzaXN0ZW5jZVBsdWdpbjogcGVyc2lzdGVuY2VQbHVnaW4sIHNlcmlhbGl6YWJsZUNhY2hlOiBzZXJpYWxpemFibGVDYWNoZSwgfSkge1xyXG4gICAgY29uc3QgbG9nZ2VyT3B0aW9ucyA9IHtcclxuICAgICAgICAuLi5ERUZBVUxUX0xPR0dFUl9JTVBMRU1FTlRBVElPTixcclxuICAgICAgICAuLi51c2VyTG9nZ2VyT3B0aW9uLFxyXG4gICAgfTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgYXV0aE9wdGlvbnM6IGJ1aWxkQXV0aE9wdGlvbnModXNlckF1dGhPcHRpb25zKSxcclxuICAgICAgICBzeXN0ZW1PcHRpb25zOiB7IC4uLkRFRkFVTFRfU1lTVEVNX09QVElPTlMsIC4uLnVzZXJTeXN0ZW1PcHRpb25zIH0sXHJcbiAgICAgICAgbG9nZ2VyT3B0aW9uczogbG9nZ2VyT3B0aW9ucyxcclxuICAgICAgICBjYWNoZU9wdGlvbnM6IHsgLi4uREVGQVVMVF9DQUNIRV9PUFRJT05TLCAuLi51c2VyQ2FjaGVPcHRpb25zIH0sXHJcbiAgICAgICAgc3RvcmFnZUludGVyZmFjZTogc3RvcmFnZUltcGxlbWVudGF0aW9uIHx8XHJcbiAgICAgICAgICAgIG5ldyBEZWZhdWx0U3RvcmFnZUNsYXNzKHVzZXJBdXRoT3B0aW9ucy5jbGllbnRJZCwgREVGQVVMVF9DUllQVE9fSU1QTEVNRU5UQVRJT04sIG5ldyBMb2dnZXIobG9nZ2VyT3B0aW9ucykpLFxyXG4gICAgICAgIG5ldHdvcmtJbnRlcmZhY2U6IG5ldHdvcmtJbXBsZW1lbnRhdGlvbiB8fCBERUZBVUxUX05FVFdPUktfSU1QTEVNRU5UQVRJT04sXHJcbiAgICAgICAgY3J5cHRvSW50ZXJmYWNlOiBjcnlwdG9JbXBsZW1lbnRhdGlvbiB8fCBERUZBVUxUX0NSWVBUT19JTVBMRU1FTlRBVElPTixcclxuICAgICAgICBjbGllbnRDcmVkZW50aWFsczogY2xpZW50Q3JlZGVudGlhbHMgfHwgREVGQVVMVF9DTElFTlRfQ1JFREVOVElBTFMsXHJcbiAgICAgICAgbGlicmFyeUluZm86IHsgLi4uREVGQVVMVF9MSUJSQVJZX0lORk8sIC4uLmxpYnJhcnlJbmZvIH0sXHJcbiAgICAgICAgdGVsZW1ldHJ5OiB7IC4uLkRFRkFVTFRfVEVMRU1FVFJZX09QVElPTlMsIC4uLnRlbGVtZXRyeSB9LFxyXG4gICAgICAgIHNlcnZlclRlbGVtZXRyeU1hbmFnZXI6IHNlcnZlclRlbGVtZXRyeU1hbmFnZXIgfHwgbnVsbCxcclxuICAgICAgICBwZXJzaXN0ZW5jZVBsdWdpbjogcGVyc2lzdGVuY2VQbHVnaW4gfHwgbnVsbCxcclxuICAgICAgICBzZXJpYWxpemFibGVDYWNoZTogc2VyaWFsaXphYmxlQ2FjaGUgfHwgbnVsbCxcclxuICAgIH07XHJcbn1cclxuLyoqXHJcbiAqIENvbnN0cnVjdCBhdXRob3B0aW9ucyBmcm9tIHRoZSBjbGllbnQgYW5kIHBsYXRmb3JtIHBhc3NlZCB2YWx1ZXNcclxuICogQHBhcmFtIGF1dGhPcHRpb25zXHJcbiAqL1xyXG5mdW5jdGlvbiBidWlsZEF1dGhPcHRpb25zKGF1dGhPcHRpb25zKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGNsaWVudENhcGFiaWxpdGllczogW10sXHJcbiAgICAgICAgYXp1cmVDbG91ZE9wdGlvbnM6IERFRkFVTFRfQVpVUkVfQ0xPVURfT1BUSU9OUyxcclxuICAgICAgICBza2lwQXV0aG9yaXR5TWV0YWRhdGFDYWNoZTogZmFsc2UsXHJcbiAgICAgICAgaW5zdGFuY2VBd2FyZTogZmFsc2UsXHJcbiAgICAgICAgLi4uYXV0aE9wdGlvbnMsXHJcbiAgICB9O1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHRydWUgaWYgY29uZmlnIGhhcyBwcm90b2NvbE1vZGUgc2V0IHRvIFByb3RvY29sTW9kZS5PSURDLCBmYWxzZSBvdGhlcndpc2VcclxuICogQHBhcmFtIENsaWVudENvbmZpZ3VyYXRpb25cclxuICovXHJcbmZ1bmN0aW9uIGlzT2lkY1Byb3RvY29sTW9kZShjb25maWcpIHtcclxuICAgIHJldHVybiAoY29uZmlnLmF1dGhPcHRpb25zLmF1dGhvcml0eS5vcHRpb25zLnByb3RvY29sTW9kZSA9PT0gUHJvdG9jb2xNb2RlLk9JREMpO1xyXG59XG5cbmV4cG9ydCB7IERFRkFVTFRfU1lTVEVNX09QVElPTlMsIGJ1aWxkQ2xpZW50Q29uZmlndXJhdGlvbiwgaXNPaWRjUHJvdG9jb2xNb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRDb25maWd1cmF0aW9uLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCESS_TOKEN: function() { return /* binding */ ACCESS_TOKEN; },\n/* harmony export */   BROKER_CLIENT_ID: function() { return /* binding */ BROKER_CLIENT_ID; },\n/* harmony export */   BROKER_REDIRECT_URI: function() { return /* binding */ BROKER_REDIRECT_URI; },\n/* harmony export */   CCS_HEADER: function() { return /* binding */ CCS_HEADER; },\n/* harmony export */   CLAIMS: function() { return /* binding */ CLAIMS; },\n/* harmony export */   CLIENT_ASSERTION: function() { return /* binding */ CLIENT_ASSERTION; },\n/* harmony export */   CLIENT_ASSERTION_TYPE: function() { return /* binding */ CLIENT_ASSERTION_TYPE; },\n/* harmony export */   CLIENT_ID: function() { return /* binding */ CLIENT_ID; },\n/* harmony export */   CLIENT_INFO: function() { return /* binding */ CLIENT_INFO; },\n/* harmony export */   CLIENT_REQUEST_ID: function() { return /* binding */ CLIENT_REQUEST_ID; },\n/* harmony export */   CLIENT_SECRET: function() { return /* binding */ CLIENT_SECRET; },\n/* harmony export */   CODE: function() { return /* binding */ CODE; },\n/* harmony export */   CODE_CHALLENGE: function() { return /* binding */ CODE_CHALLENGE; },\n/* harmony export */   CODE_CHALLENGE_METHOD: function() { return /* binding */ CODE_CHALLENGE_METHOD; },\n/* harmony export */   CODE_VERIFIER: function() { return /* binding */ CODE_VERIFIER; },\n/* harmony export */   DEVICE_CODE: function() { return /* binding */ DEVICE_CODE; },\n/* harmony export */   DOMAIN_HINT: function() { return /* binding */ DOMAIN_HINT; },\n/* harmony export */   ERROR: function() { return /* binding */ ERROR; },\n/* harmony export */   ERROR_DESCRIPTION: function() { return /* binding */ ERROR_DESCRIPTION; },\n/* harmony export */   EXPIRES_IN: function() { return /* binding */ EXPIRES_IN; },\n/* harmony export */   FOCI: function() { return /* binding */ FOCI; },\n/* harmony export */   GRANT_TYPE: function() { return /* binding */ GRANT_TYPE; },\n/* harmony export */   ID_TOKEN: function() { return /* binding */ ID_TOKEN; },\n/* harmony export */   ID_TOKEN_HINT: function() { return /* binding */ ID_TOKEN_HINT; },\n/* harmony export */   LOGIN_HINT: function() { return /* binding */ LOGIN_HINT; },\n/* harmony export */   LOGOUT_HINT: function() { return /* binding */ LOGOUT_HINT; },\n/* harmony export */   NATIVE_BROKER: function() { return /* binding */ NATIVE_BROKER; },\n/* harmony export */   NONCE: function() { return /* binding */ NONCE; },\n/* harmony export */   OBO_ASSERTION: function() { return /* binding */ OBO_ASSERTION; },\n/* harmony export */   ON_BEHALF_OF: function() { return /* binding */ ON_BEHALF_OF; },\n/* harmony export */   POST_LOGOUT_URI: function() { return /* binding */ POST_LOGOUT_URI; },\n/* harmony export */   PROMPT: function() { return /* binding */ PROMPT; },\n/* harmony export */   REDIRECT_URI: function() { return /* binding */ REDIRECT_URI; },\n/* harmony export */   REFRESH_TOKEN: function() { return /* binding */ REFRESH_TOKEN; },\n/* harmony export */   REFRESH_TOKEN_EXPIRES_IN: function() { return /* binding */ REFRESH_TOKEN_EXPIRES_IN; },\n/* harmony export */   REQUESTED_TOKEN_USE: function() { return /* binding */ REQUESTED_TOKEN_USE; },\n/* harmony export */   REQ_CNF: function() { return /* binding */ REQ_CNF; },\n/* harmony export */   RESPONSE_MODE: function() { return /* binding */ RESPONSE_MODE; },\n/* harmony export */   RESPONSE_TYPE: function() { return /* binding */ RESPONSE_TYPE; },\n/* harmony export */   RETURN_SPA_CODE: function() { return /* binding */ RETURN_SPA_CODE; },\n/* harmony export */   SCOPE: function() { return /* binding */ SCOPE; },\n/* harmony export */   SESSION_STATE: function() { return /* binding */ SESSION_STATE; },\n/* harmony export */   SID: function() { return /* binding */ SID; },\n/* harmony export */   STATE: function() { return /* binding */ STATE; },\n/* harmony export */   TOKEN_TYPE: function() { return /* binding */ TOKEN_TYPE; },\n/* harmony export */   X_APP_NAME: function() { return /* binding */ X_APP_NAME; },\n/* harmony export */   X_APP_VER: function() { return /* binding */ X_APP_VER; },\n/* harmony export */   X_CLIENT_CPU: function() { return /* binding */ X_CLIENT_CPU; },\n/* harmony export */   X_CLIENT_CURR_TELEM: function() { return /* binding */ X_CLIENT_CURR_TELEM; },\n/* harmony export */   X_CLIENT_EXTRA_SKU: function() { return /* binding */ X_CLIENT_EXTRA_SKU; },\n/* harmony export */   X_CLIENT_LAST_TELEM: function() { return /* binding */ X_CLIENT_LAST_TELEM; },\n/* harmony export */   X_CLIENT_OS: function() { return /* binding */ X_CLIENT_OS; },\n/* harmony export */   X_CLIENT_SKU: function() { return /* binding */ X_CLIENT_SKU; },\n/* harmony export */   X_CLIENT_VER: function() { return /* binding */ X_CLIENT_VER; },\n/* harmony export */   X_MS_LIB_CAPABILITY: function() { return /* binding */ X_MS_LIB_CAPABILITY; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CLIENT_ID = \"client_id\";\r\nconst REDIRECT_URI = \"redirect_uri\";\r\nconst RESPONSE_TYPE = \"response_type\";\r\nconst RESPONSE_MODE = \"response_mode\";\r\nconst GRANT_TYPE = \"grant_type\";\r\nconst CLAIMS = \"claims\";\r\nconst SCOPE = \"scope\";\r\nconst ERROR = \"error\";\r\nconst ERROR_DESCRIPTION = \"error_description\";\r\nconst ACCESS_TOKEN = \"access_token\";\r\nconst ID_TOKEN = \"id_token\";\r\nconst REFRESH_TOKEN = \"refresh_token\";\r\nconst EXPIRES_IN = \"expires_in\";\r\nconst REFRESH_TOKEN_EXPIRES_IN = \"refresh_token_expires_in\";\r\nconst STATE = \"state\";\r\nconst NONCE = \"nonce\";\r\nconst PROMPT = \"prompt\";\r\nconst SESSION_STATE = \"session_state\";\r\nconst CLIENT_INFO = \"client_info\";\r\nconst CODE = \"code\";\r\nconst CODE_CHALLENGE = \"code_challenge\";\r\nconst CODE_CHALLENGE_METHOD = \"code_challenge_method\";\r\nconst CODE_VERIFIER = \"code_verifier\";\r\nconst CLIENT_REQUEST_ID = \"client-request-id\";\r\nconst X_CLIENT_SKU = \"x-client-SKU\";\r\nconst X_CLIENT_VER = \"x-client-VER\";\r\nconst X_CLIENT_OS = \"x-client-OS\";\r\nconst X_CLIENT_CPU = \"x-client-CPU\";\r\nconst X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\";\r\nconst X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\";\r\nconst X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\";\r\nconst X_APP_NAME = \"x-app-name\";\r\nconst X_APP_VER = \"x-app-ver\";\r\nconst POST_LOGOUT_URI = \"post_logout_redirect_uri\";\r\nconst ID_TOKEN_HINT = \"id_token_hint\";\r\nconst DEVICE_CODE = \"device_code\";\r\nconst CLIENT_SECRET = \"client_secret\";\r\nconst CLIENT_ASSERTION = \"client_assertion\";\r\nconst CLIENT_ASSERTION_TYPE = \"client_assertion_type\";\r\nconst TOKEN_TYPE = \"token_type\";\r\nconst REQ_CNF = \"req_cnf\";\r\nconst OBO_ASSERTION = \"assertion\";\r\nconst REQUESTED_TOKEN_USE = \"requested_token_use\";\r\nconst ON_BEHALF_OF = \"on_behalf_of\";\r\nconst FOCI = \"foci\";\r\nconst CCS_HEADER = \"X-AnchorMailbox\";\r\nconst RETURN_SPA_CODE = \"return_spa_code\";\r\nconst NATIVE_BROKER = \"nativebroker\";\r\nconst LOGOUT_HINT = \"logout_hint\";\r\nconst SID = \"sid\";\r\nconst LOGIN_HINT = \"login_hint\";\r\nconst DOMAIN_HINT = \"domain_hint\";\r\nconst X_CLIENT_EXTRA_SKU = \"x-client-xtra-sku\";\r\nconst BROKER_CLIENT_ID = \"brk_client_id\";\r\nconst BROKER_REDIRECT_URI = \"brk_redirect_uri\";\n\n\n//# sourceMappingURL=AADServerParamKeys.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY29uc3RhbnRzL0FBRFNlcnZlclBhcmFtS2V5cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVxeEI7QUFDcnhCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jb25zdGFudHMvQUFEU2VydmVyUGFyYW1LZXlzLm1qcz8yNWQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IENMSUVOVF9JRCA9IFwiY2xpZW50X2lkXCI7XHJcbmNvbnN0IFJFRElSRUNUX1VSSSA9IFwicmVkaXJlY3RfdXJpXCI7XHJcbmNvbnN0IFJFU1BPTlNFX1RZUEUgPSBcInJlc3BvbnNlX3R5cGVcIjtcclxuY29uc3QgUkVTUE9OU0VfTU9ERSA9IFwicmVzcG9uc2VfbW9kZVwiO1xyXG5jb25zdCBHUkFOVF9UWVBFID0gXCJncmFudF90eXBlXCI7XHJcbmNvbnN0IENMQUlNUyA9IFwiY2xhaW1zXCI7XHJcbmNvbnN0IFNDT1BFID0gXCJzY29wZVwiO1xyXG5jb25zdCBFUlJPUiA9IFwiZXJyb3JcIjtcclxuY29uc3QgRVJST1JfREVTQ1JJUFRJT04gPSBcImVycm9yX2Rlc2NyaXB0aW9uXCI7XHJcbmNvbnN0IEFDQ0VTU19UT0tFTiA9IFwiYWNjZXNzX3Rva2VuXCI7XHJcbmNvbnN0IElEX1RPS0VOID0gXCJpZF90b2tlblwiO1xyXG5jb25zdCBSRUZSRVNIX1RPS0VOID0gXCJyZWZyZXNoX3Rva2VuXCI7XHJcbmNvbnN0IEVYUElSRVNfSU4gPSBcImV4cGlyZXNfaW5cIjtcclxuY29uc3QgUkVGUkVTSF9UT0tFTl9FWFBJUkVTX0lOID0gXCJyZWZyZXNoX3Rva2VuX2V4cGlyZXNfaW5cIjtcclxuY29uc3QgU1RBVEUgPSBcInN0YXRlXCI7XHJcbmNvbnN0IE5PTkNFID0gXCJub25jZVwiO1xyXG5jb25zdCBQUk9NUFQgPSBcInByb21wdFwiO1xyXG5jb25zdCBTRVNTSU9OX1NUQVRFID0gXCJzZXNzaW9uX3N0YXRlXCI7XHJcbmNvbnN0IENMSUVOVF9JTkZPID0gXCJjbGllbnRfaW5mb1wiO1xyXG5jb25zdCBDT0RFID0gXCJjb2RlXCI7XHJcbmNvbnN0IENPREVfQ0hBTExFTkdFID0gXCJjb2RlX2NoYWxsZW5nZVwiO1xyXG5jb25zdCBDT0RFX0NIQUxMRU5HRV9NRVRIT0QgPSBcImNvZGVfY2hhbGxlbmdlX21ldGhvZFwiO1xyXG5jb25zdCBDT0RFX1ZFUklGSUVSID0gXCJjb2RlX3ZlcmlmaWVyXCI7XHJcbmNvbnN0IENMSUVOVF9SRVFVRVNUX0lEID0gXCJjbGllbnQtcmVxdWVzdC1pZFwiO1xyXG5jb25zdCBYX0NMSUVOVF9TS1UgPSBcIngtY2xpZW50LVNLVVwiO1xyXG5jb25zdCBYX0NMSUVOVF9WRVIgPSBcIngtY2xpZW50LVZFUlwiO1xyXG5jb25zdCBYX0NMSUVOVF9PUyA9IFwieC1jbGllbnQtT1NcIjtcclxuY29uc3QgWF9DTElFTlRfQ1BVID0gXCJ4LWNsaWVudC1DUFVcIjtcclxuY29uc3QgWF9DTElFTlRfQ1VSUl9URUxFTSA9IFwieC1jbGllbnQtY3VycmVudC10ZWxlbWV0cnlcIjtcclxuY29uc3QgWF9DTElFTlRfTEFTVF9URUxFTSA9IFwieC1jbGllbnQtbGFzdC10ZWxlbWV0cnlcIjtcclxuY29uc3QgWF9NU19MSUJfQ0FQQUJJTElUWSA9IFwieC1tcy1saWItY2FwYWJpbGl0eVwiO1xyXG5jb25zdCBYX0FQUF9OQU1FID0gXCJ4LWFwcC1uYW1lXCI7XHJcbmNvbnN0IFhfQVBQX1ZFUiA9IFwieC1hcHAtdmVyXCI7XHJcbmNvbnN0IFBPU1RfTE9HT1VUX1VSSSA9IFwicG9zdF9sb2dvdXRfcmVkaXJlY3RfdXJpXCI7XHJcbmNvbnN0IElEX1RPS0VOX0hJTlQgPSBcImlkX3Rva2VuX2hpbnRcIjtcclxuY29uc3QgREVWSUNFX0NPREUgPSBcImRldmljZV9jb2RlXCI7XHJcbmNvbnN0IENMSUVOVF9TRUNSRVQgPSBcImNsaWVudF9zZWNyZXRcIjtcclxuY29uc3QgQ0xJRU5UX0FTU0VSVElPTiA9IFwiY2xpZW50X2Fzc2VydGlvblwiO1xyXG5jb25zdCBDTElFTlRfQVNTRVJUSU9OX1RZUEUgPSBcImNsaWVudF9hc3NlcnRpb25fdHlwZVwiO1xyXG5jb25zdCBUT0tFTl9UWVBFID0gXCJ0b2tlbl90eXBlXCI7XHJcbmNvbnN0IFJFUV9DTkYgPSBcInJlcV9jbmZcIjtcclxuY29uc3QgT0JPX0FTU0VSVElPTiA9IFwiYXNzZXJ0aW9uXCI7XHJcbmNvbnN0IFJFUVVFU1RFRF9UT0tFTl9VU0UgPSBcInJlcXVlc3RlZF90b2tlbl91c2VcIjtcclxuY29uc3QgT05fQkVIQUxGX09GID0gXCJvbl9iZWhhbGZfb2ZcIjtcclxuY29uc3QgRk9DSSA9IFwiZm9jaVwiO1xyXG5jb25zdCBDQ1NfSEVBREVSID0gXCJYLUFuY2hvck1haWxib3hcIjtcclxuY29uc3QgUkVUVVJOX1NQQV9DT0RFID0gXCJyZXR1cm5fc3BhX2NvZGVcIjtcclxuY29uc3QgTkFUSVZFX0JST0tFUiA9IFwibmF0aXZlYnJva2VyXCI7XHJcbmNvbnN0IExPR09VVF9ISU5UID0gXCJsb2dvdXRfaGludFwiO1xyXG5jb25zdCBTSUQgPSBcInNpZFwiO1xyXG5jb25zdCBMT0dJTl9ISU5UID0gXCJsb2dpbl9oaW50XCI7XHJcbmNvbnN0IERPTUFJTl9ISU5UID0gXCJkb21haW5faGludFwiO1xyXG5jb25zdCBYX0NMSUVOVF9FWFRSQV9TS1UgPSBcIngtY2xpZW50LXh0cmEtc2t1XCI7XHJcbmNvbnN0IEJST0tFUl9DTElFTlRfSUQgPSBcImJya19jbGllbnRfaWRcIjtcclxuY29uc3QgQlJPS0VSX1JFRElSRUNUX1VSSSA9IFwiYnJrX3JlZGlyZWN0X3VyaVwiO1xuXG5leHBvcnQgeyBBQ0NFU1NfVE9LRU4sIEJST0tFUl9DTElFTlRfSUQsIEJST0tFUl9SRURJUkVDVF9VUkksIENDU19IRUFERVIsIENMQUlNUywgQ0xJRU5UX0FTU0VSVElPTiwgQ0xJRU5UX0FTU0VSVElPTl9UWVBFLCBDTElFTlRfSUQsIENMSUVOVF9JTkZPLCBDTElFTlRfUkVRVUVTVF9JRCwgQ0xJRU5UX1NFQ1JFVCwgQ09ERSwgQ09ERV9DSEFMTEVOR0UsIENPREVfQ0hBTExFTkdFX01FVEhPRCwgQ09ERV9WRVJJRklFUiwgREVWSUNFX0NPREUsIERPTUFJTl9ISU5ULCBFUlJPUiwgRVJST1JfREVTQ1JJUFRJT04sIEVYUElSRVNfSU4sIEZPQ0ksIEdSQU5UX1RZUEUsIElEX1RPS0VOLCBJRF9UT0tFTl9ISU5ULCBMT0dJTl9ISU5ULCBMT0dPVVRfSElOVCwgTkFUSVZFX0JST0tFUiwgTk9OQ0UsIE9CT19BU1NFUlRJT04sIE9OX0JFSEFMRl9PRiwgUE9TVF9MT0dPVVRfVVJJLCBQUk9NUFQsIFJFRElSRUNUX1VSSSwgUkVGUkVTSF9UT0tFTiwgUkVGUkVTSF9UT0tFTl9FWFBJUkVTX0lOLCBSRVFVRVNURURfVE9LRU5fVVNFLCBSRVFfQ05GLCBSRVNQT05TRV9NT0RFLCBSRVNQT05TRV9UWVBFLCBSRVRVUk5fU1BBX0NPREUsIFNDT1BFLCBTRVNTSU9OX1NUQVRFLCBTSUQsIFNUQVRFLCBUT0tFTl9UWVBFLCBYX0FQUF9OQU1FLCBYX0FQUF9WRVIsIFhfQ0xJRU5UX0NQVSwgWF9DTElFTlRfQ1VSUl9URUxFTSwgWF9DTElFTlRfRVhUUkFfU0tVLCBYX0NMSUVOVF9MQVNUX1RFTEVNLCBYX0NMSUVOVF9PUywgWF9DTElFTlRfU0tVLCBYX0NMSUVOVF9WRVIsIFhfTVNfTElCX0NBUEFCSUxJVFkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFBRFNlcnZlclBhcmFtS2V5cy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CRYPTO_IMPLEMENTATION: function() { return /* binding */ DEFAULT_CRYPTO_IMPLEMENTATION; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    base64Decode: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    base64Encode: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    base64UrlEncode: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    encodeKid: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async getPublicKeyThumbprint() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async removeTokenBindingKey() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async clearKeystore() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async signJwt() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async hashString() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n};\n\n\n//# sourceMappingURL=ICrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0lDcnlwdG8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDd0Q7QUFDSTs7QUFFekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMOztBQUV5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0lDcnlwdG8ubWpzP2NiYmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IG1ldGhvZE5vdEltcGxlbWVudGVkIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IERFRkFVTFRfQ1JZUFRPX0lNUExFTUVOVEFUSU9OID0ge1xyXG4gICAgY3JlYXRlTmV3R3VpZDogKCkgPT4ge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG4gICAgYmFzZTY0RGVjb2RlOiAoKSA9PiB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG1ldGhvZE5vdEltcGxlbWVudGVkKTtcclxuICAgIH0sXHJcbiAgICBiYXNlNjRFbmNvZGU6ICgpID0+IHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xyXG4gICAgfSxcclxuICAgIGJhc2U2NFVybEVuY29kZTogKCkgPT4ge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG4gICAgZW5jb2RlS2lkOiAoKSA9PiB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG1ldGhvZE5vdEltcGxlbWVudGVkKTtcclxuICAgIH0sXHJcbiAgICBhc3luYyBnZXRQdWJsaWNLZXlUaHVtYnByaW50KCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG4gICAgYXN5bmMgcmVtb3ZlVG9rZW5CaW5kaW5nS2V5KCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG4gICAgYXN5bmMgY2xlYXJLZXlzdG9yZSgpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xyXG4gICAgfSxcclxuICAgIGFzeW5jIHNpZ25Kd3QoKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG1ldGhvZE5vdEltcGxlbWVudGVkKTtcclxuICAgIH0sXHJcbiAgICBhc3luYyBoYXNoU3RyaW5nKCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG59O1xuXG5leHBvcnQgeyBERUZBVUxUX0NSWVBUT19JTVBMRU1FTlRBVElPTiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SUNyeXB0by5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JoseHeader: function() { return /* binding */ JoseHeader; }\n/* harmony export */ });\n/* harmony import */ var _error_JoseHeaderError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/JoseHeaderError.mjs */ \"./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/JoseHeaderErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass JoseHeader {\r\n    constructor(options) {\r\n        this.typ = options.typ;\r\n        this.alg = options.alg;\r\n        this.kid = options.kid;\r\n    }\r\n    /**\r\n     * Builds SignedHttpRequest formatted JOSE Header from the\r\n     * JOSE Header options provided or previously set on the object and returns\r\n     * the stringified header object.\r\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\r\n     * @param shrHeaderOptions\r\n     * @returns\r\n     */\r\n    static getShrHeaderString(shrHeaderOptions) {\r\n        // KeyID is required on the SHR header\r\n        if (!shrHeaderOptions.kid) {\r\n            throw (0,_error_JoseHeaderError_mjs__WEBPACK_IMPORTED_MODULE_0__.createJoseHeaderError)(_error_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.missingKidError);\r\n        }\r\n        // Alg is required on the SHR header\r\n        if (!shrHeaderOptions.alg) {\r\n            throw (0,_error_JoseHeaderError_mjs__WEBPACK_IMPORTED_MODULE_0__.createJoseHeaderError)(_error_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.missingAlgError);\r\n        }\r\n        const shrHeader = new JoseHeader({\r\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\r\n            typ: shrHeaderOptions.typ || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JsonWebTokenTypes.Pop,\r\n            kid: shrHeaderOptions.kid,\r\n            alg: shrHeaderOptions.alg,\r\n        });\r\n        return JSON.stringify(shrHeader);\r\n    }\r\n}\n\n\n//# sourceMappingURL=JoseHeader.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0pvc2VIZWFkZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQ3dEO0FBQ1Y7QUFDMEI7O0FBRXJGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLDRFQUFlO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpRkFBcUIsQ0FBQyw0RUFBZTtBQUN2RDtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsbUVBQWlCO0FBQzFEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0pvc2VIZWFkZXIubWpzPzFiMzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVKb3NlSGVhZGVyRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Kb3NlSGVhZGVyRXJyb3IubWpzJztcbmltcG9ydCB7IEpzb25XZWJUb2tlblR5cGVzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBtaXNzaW5nS2lkRXJyb3IsIG1pc3NpbmdBbGdFcnJvciB9IGZyb20gJy4uL2Vycm9yL0pvc2VIZWFkZXJFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKiogQGludGVybmFsICovXHJcbmNsYXNzIEpvc2VIZWFkZXIge1xyXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMudHlwID0gb3B0aW9ucy50eXA7XHJcbiAgICAgICAgdGhpcy5hbGcgPSBvcHRpb25zLmFsZztcclxuICAgICAgICB0aGlzLmtpZCA9IG9wdGlvbnMua2lkO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBCdWlsZHMgU2lnbmVkSHR0cFJlcXVlc3QgZm9ybWF0dGVkIEpPU0UgSGVhZGVyIGZyb20gdGhlXHJcbiAgICAgKiBKT1NFIEhlYWRlciBvcHRpb25zIHByb3ZpZGVkIG9yIHByZXZpb3VzbHkgc2V0IG9uIHRoZSBvYmplY3QgYW5kIHJldHVybnNcclxuICAgICAqIHRoZSBzdHJpbmdpZmllZCBoZWFkZXIgb2JqZWN0LlxyXG4gICAgICogVGhyb3dzIGlmIGtleUlkIG9yIGFsZ29yaXRobSBhcmVuJ3QgcHJvdmlkZWQgc2luY2UgdGhleSBhcmUgcmVxdWlyZWQgZm9yIEFjY2VzcyBUb2tlbiBCaW5kaW5nLlxyXG4gICAgICogQHBhcmFtIHNockhlYWRlck9wdGlvbnNcclxuICAgICAqIEByZXR1cm5zXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBnZXRTaHJIZWFkZXJTdHJpbmcoc2hySGVhZGVyT3B0aW9ucykge1xyXG4gICAgICAgIC8vIEtleUlEIGlzIHJlcXVpcmVkIG9uIHRoZSBTSFIgaGVhZGVyXHJcbiAgICAgICAgaWYgKCFzaHJIZWFkZXJPcHRpb25zLmtpZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVKb3NlSGVhZGVyRXJyb3IobWlzc2luZ0tpZEVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQWxnIGlzIHJlcXVpcmVkIG9uIHRoZSBTSFIgaGVhZGVyXHJcbiAgICAgICAgaWYgKCFzaHJIZWFkZXJPcHRpb25zLmFsZykge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVKb3NlSGVhZGVyRXJyb3IobWlzc2luZ0FsZ0Vycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qgc2hySGVhZGVyID0gbmV3IEpvc2VIZWFkZXIoe1xyXG4gICAgICAgICAgICAvLyBBY2Nlc3MgVG9rZW4gUG9QIGhlYWRlcnMgbXVzdCBoYXZlIHR5cGUgcG9wLCBidXQgdGhlIHR5cGUgaGVhZGVyIGNhbiBiZSBvdmVycmlkZW4gZm9yIHNwZWNpYWwgY2FzZXNcclxuICAgICAgICAgICAgdHlwOiBzaHJIZWFkZXJPcHRpb25zLnR5cCB8fCBKc29uV2ViVG9rZW5UeXBlcy5Qb3AsXHJcbiAgICAgICAgICAgIGtpZDogc2hySGVhZGVyT3B0aW9ucy5raWQsXHJcbiAgICAgICAgICAgIGFsZzogc2hySGVhZGVyT3B0aW9ucy5hbGcsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHNockhlYWRlcik7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgSm9zZUhlYWRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Sm9zZUhlYWRlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PopTokenGenerator: function() { return /* binding */ PopTokenGenerator; }\n/* harmony export */ });\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst KeyLocation = {\r\n    SW: \"sw\",\r\n    UHW: \"uhw\",\r\n};\r\n/** @internal */\r\nclass PopTokenGenerator {\r\n    constructor(cryptoUtils, performanceClient) {\r\n        this.cryptoUtils = cryptoUtils;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\r\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateCnf(request, logger) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\r\n        const reqCnf = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.generateKid.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateCnf, logger, this.performanceClient, request.correlationId)(request);\r\n        const reqCnfString = this.cryptoUtils.base64UrlEncode(JSON.stringify(reqCnf));\r\n        return {\r\n            kid: reqCnf.kid,\r\n            reqCnfString,\r\n        };\r\n    }\r\n    /**\r\n     * Generates key_id for a SHR token request\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateKid(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateKid, request.correlationId);\r\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\r\n        return {\r\n            kid: kidThumbprint,\r\n            xms_ksl: KeyLocation.SW,\r\n        };\r\n    }\r\n    /**\r\n     * Signs the POP access_token with the local generated key-pair\r\n     * @param accessToken\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async signPopToken(accessToken, keyId, request) {\r\n        return this.signPayload(accessToken, keyId, request);\r\n    }\r\n    /**\r\n     * Utility function to generate the signed JWT for an access_token\r\n     * @param payload\r\n     * @param kid\r\n     * @param request\r\n     * @param claims\r\n     * @returns\r\n     */\r\n    async signPayload(payload, keyId, request, claims) {\r\n        // Deconstruct request to extract SHR parameters\r\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, shrOptions, } = request;\r\n        const resourceUrlString = resourceRequestUri\r\n            ? new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__.UrlString(resourceRequestUri)\r\n            : undefined;\r\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\r\n        return this.cryptoUtils.signJwt({\r\n            at: payload,\r\n            ts: (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.nowSeconds)(),\r\n            m: resourceRequestMethod?.toUpperCase(),\r\n            u: resourceUrlComponents?.HostNameAndPort,\r\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\r\n            p: resourceUrlComponents?.AbsolutePath,\r\n            q: resourceUrlComponents?.QueryString\r\n                ? [[], resourceUrlComponents.QueryString]\r\n                : undefined,\r\n            client_claims: shrClaims || undefined,\r\n            ...claims,\r\n        }, keyId, shrOptions, request.correlationId);\r\n    }\r\n}\n\n\n//# sourceMappingURL=PopTokenGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL1BvcFRva2VuR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDdUM7QUFDSDtBQUNpQztBQUN0Qjs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELDBGQUFpQjtBQUNyRSw2QkFBNkIsd0VBQVcsOEJBQThCLDBGQUFpQjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsMEZBQWlCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhFQUE4RTtBQUM5RjtBQUNBLGtCQUFrQix5REFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnRUFBVTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NyeXB0by9Qb3BUb2tlbkdlbmVyYXRvci5tanM/MzEwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IG5vd1NlY29uZHMgfSBmcm9tICcuLi91dGlscy9UaW1lVXRpbHMubWpzJztcbmltcG9ydCB7IFVybFN0cmluZyB9IGZyb20gJy4uL3VybC9VcmxTdHJpbmcubWpzJztcbmltcG9ydCB7IFBlcmZvcm1hbmNlRXZlbnRzIH0gZnJvbSAnLi4vdGVsZW1ldHJ5L3BlcmZvcm1hbmNlL1BlcmZvcm1hbmNlRXZlbnQubWpzJztcbmltcG9ydCB7IGludm9rZUFzeW5jIH0gZnJvbSAnLi4vdXRpbHMvRnVuY3Rpb25XcmFwcGVycy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgS2V5TG9jYXRpb24gPSB7XHJcbiAgICBTVzogXCJzd1wiLFxyXG4gICAgVUhXOiBcInVod1wiLFxyXG59O1xyXG4vKiogQGludGVybmFsICovXHJcbmNsYXNzIFBvcFRva2VuR2VuZXJhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGNyeXB0b1V0aWxzLCBwZXJmb3JtYW5jZUNsaWVudCkge1xyXG4gICAgICAgIHRoaXMuY3J5cHRvVXRpbHMgPSBjcnlwdG9VdGlscztcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50ID0gcGVyZm9ybWFuY2VDbGllbnQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdlbmVyYXRlcyB0aGUgcmVxX2NuZiB2YWxpZGF0ZWQgYXQgdGhlIFJQIGluIHRoZSBQT1AgcHJvdG9jb2wgZm9yIFNIUiBwYXJhbWV0ZXJzXHJcbiAgICAgKiBhbmQgcmV0dXJucyBhbiBvYmplY3QgY29udGFpbmluZyB0aGUga2V5aWQsIHRoZSBmdWxsIHJlcV9jbmYgc3RyaW5nIGFuZCB0aGUgcmVxX2NuZiBzdHJpbmcgaGFzaFxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqIEByZXR1cm5zXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGdlbmVyYXRlQ25mKHJlcXVlc3QsIGxvZ2dlcikge1xyXG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQ/LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUNuZiwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBjb25zdCByZXFDbmYgPSBhd2FpdCBpbnZva2VBc3luYyh0aGlzLmdlbmVyYXRlS2lkLmJpbmQodGhpcyksIFBlcmZvcm1hbmNlRXZlbnRzLlBvcFRva2VuR2VuZXJhdGVDbmYsIGxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKShyZXF1ZXN0KTtcclxuICAgICAgICBjb25zdCByZXFDbmZTdHJpbmcgPSB0aGlzLmNyeXB0b1V0aWxzLmJhc2U2NFVybEVuY29kZShKU09OLnN0cmluZ2lmeShyZXFDbmYpKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBraWQ6IHJlcUNuZi5raWQsXHJcbiAgICAgICAgICAgIHJlcUNuZlN0cmluZyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZW5lcmF0ZXMga2V5X2lkIGZvciBhIFNIUiB0b2tlbiByZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgYXN5bmMgZ2VuZXJhdGVLaWQocmVxdWVzdCkge1xyXG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQ/LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUtpZCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBjb25zdCBraWRUaHVtYnByaW50ID0gYXdhaXQgdGhpcy5jcnlwdG9VdGlscy5nZXRQdWJsaWNLZXlUaHVtYnByaW50KHJlcXVlc3QpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGtpZDoga2lkVGh1bWJwcmludCxcclxuICAgICAgICAgICAgeG1zX2tzbDogS2V5TG9jYXRpb24uU1csXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU2lnbnMgdGhlIFBPUCBhY2Nlc3NfdG9rZW4gd2l0aCB0aGUgbG9jYWwgZ2VuZXJhdGVkIGtleS1wYWlyXHJcbiAgICAgKiBAcGFyYW0gYWNjZXNzVG9rZW5cclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBhc3luYyBzaWduUG9wVG9rZW4oYWNjZXNzVG9rZW4sIGtleUlkLCByZXF1ZXN0KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2lnblBheWxvYWQoYWNjZXNzVG9rZW4sIGtleUlkLCByZXF1ZXN0KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVXRpbGl0eSBmdW5jdGlvbiB0byBnZW5lcmF0ZSB0aGUgc2lnbmVkIEpXVCBmb3IgYW4gYWNjZXNzX3Rva2VuXHJcbiAgICAgKiBAcGFyYW0gcGF5bG9hZFxyXG4gICAgICogQHBhcmFtIGtpZFxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSBjbGFpbXNcclxuICAgICAqIEByZXR1cm5zXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIHNpZ25QYXlsb2FkKHBheWxvYWQsIGtleUlkLCByZXF1ZXN0LCBjbGFpbXMpIHtcclxuICAgICAgICAvLyBEZWNvbnN0cnVjdCByZXF1ZXN0IHRvIGV4dHJhY3QgU0hSIHBhcmFtZXRlcnNcclxuICAgICAgICBjb25zdCB7IHJlc291cmNlUmVxdWVzdE1ldGhvZCwgcmVzb3VyY2VSZXF1ZXN0VXJpLCBzaHJDbGFpbXMsIHNock5vbmNlLCBzaHJPcHRpb25zLCB9ID0gcmVxdWVzdDtcclxuICAgICAgICBjb25zdCByZXNvdXJjZVVybFN0cmluZyA9IHJlc291cmNlUmVxdWVzdFVyaVxyXG4gICAgICAgICAgICA/IG5ldyBVcmxTdHJpbmcocmVzb3VyY2VSZXF1ZXN0VXJpKVxyXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcclxuICAgICAgICBjb25zdCByZXNvdXJjZVVybENvbXBvbmVudHMgPSByZXNvdXJjZVVybFN0cmluZz8uZ2V0VXJsQ29tcG9uZW50cygpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNyeXB0b1V0aWxzLnNpZ25Kd3Qoe1xyXG4gICAgICAgICAgICBhdDogcGF5bG9hZCxcclxuICAgICAgICAgICAgdHM6IG5vd1NlY29uZHMoKSxcclxuICAgICAgICAgICAgbTogcmVzb3VyY2VSZXF1ZXN0TWV0aG9kPy50b1VwcGVyQ2FzZSgpLFxyXG4gICAgICAgICAgICB1OiByZXNvdXJjZVVybENvbXBvbmVudHM/Lkhvc3ROYW1lQW5kUG9ydCxcclxuICAgICAgICAgICAgbm9uY2U6IHNock5vbmNlIHx8IHRoaXMuY3J5cHRvVXRpbHMuY3JlYXRlTmV3R3VpZCgpLFxyXG4gICAgICAgICAgICBwOiByZXNvdXJjZVVybENvbXBvbmVudHM/LkFic29sdXRlUGF0aCxcclxuICAgICAgICAgICAgcTogcmVzb3VyY2VVcmxDb21wb25lbnRzPy5RdWVyeVN0cmluZ1xyXG4gICAgICAgICAgICAgICAgPyBbW10sIHJlc291cmNlVXJsQ29tcG9uZW50cy5RdWVyeVN0cmluZ11cclxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICBjbGllbnRfY2xhaW1zOiBzaHJDbGFpbXMgfHwgdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICAuLi5jbGFpbXMsXHJcbiAgICAgICAgfSwga2V5SWQsIHNock9wdGlvbnMsIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgUG9wVG9rZW5HZW5lcmF0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBvcFRva2VuR2VuZXJhdG9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/AuthError.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/AuthError.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: function() { return /* binding */ AuthError; },\n/* harmony export */   AuthErrorCodes: function() { return /* reexport module object */ _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   AuthErrorMessage: function() { return /* binding */ AuthErrorMessage; },\n/* harmony export */   AuthErrorMessages: function() { return /* binding */ AuthErrorMessages; },\n/* harmony export */   createAuthError: function() { return /* binding */ createAuthError; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst AuthErrorMessages = {\r\n    [_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedError]: \"Unexpected error in authentication.\",\r\n    [_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\r\n};\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use AuthErrorCodes instead\r\n */\r\nconst AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedError,\r\n        desc: AuthErrorMessages[_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedError],\r\n    },\r\n    postRequestFailed: {\r\n        code: _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed,\r\n        desc: AuthErrorMessages[_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed],\r\n    },\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nclass AuthError extends Error {\r\n    constructor(errorCode, errorMessage, suberror) {\r\n        const errorString = errorMessage\r\n            ? `${errorCode}: ${errorMessage}`\r\n            : errorCode;\r\n        super(errorString);\r\n        Object.setPrototypeOf(this, AuthError.prototype);\r\n        this.errorCode = errorCode || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n        this.errorMessage = errorMessage || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n        this.subError = suberror || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n        this.name = \"AuthError\";\r\n    }\r\n    setCorrelationId(correlationId) {\r\n        this.correlationId = correlationId;\r\n    }\r\n}\r\nfunction createAuthError(code, additionalMessage) {\r\n    return new AuthError(code, additionalMessage\r\n        ? `${AuthErrorMessages[code]} ${additionalMessage}`\r\n        : AuthErrorMessages[code]);\r\n}\n\n\n//# sourceMappingURL=AuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQXV0aEVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNzQztBQUN1QjtBQUNuQjtBQUM3Qjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssZ0VBQWU7QUFDcEIsS0FBSyxrRUFBaUI7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdFQUFlO0FBQzdCLGdDQUFnQyxnRUFBZTtBQUMvQyxLQUFLO0FBQ0w7QUFDQSxjQUFjLGtFQUFpQjtBQUMvQixnQ0FBZ0Msa0VBQWlCO0FBQ2pELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixVQUFVLElBQUksYUFBYTtBQUM1QztBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsMkRBQVM7QUFDL0MsNENBQTRDLDJEQUFTO0FBQ3JELG9DQUFvQywyREFBUztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5QkFBeUIsRUFBRSxrQkFBa0I7QUFDMUQ7QUFDQTs7QUFFMkU7QUFDM0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0F1dGhFcnJvci5tanM/OGJiNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgdW5leHBlY3RlZEVycm9yLCBwb3N0UmVxdWVzdEZhaWxlZCB9IGZyb20gJy4vQXV0aEVycm9yQ29kZXMubWpzJztcbmltcG9ydCAqIGFzIEF1dGhFcnJvckNvZGVzIGZyb20gJy4vQXV0aEVycm9yQ29kZXMubWpzJztcbmV4cG9ydCB7IEF1dGhFcnJvckNvZGVzIH07XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBBdXRoRXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIFt1bmV4cGVjdGVkRXJyb3JdOiBcIlVuZXhwZWN0ZWQgZXJyb3IgaW4gYXV0aGVudGljYXRpb24uXCIsXHJcbiAgICBbcG9zdFJlcXVlc3RGYWlsZWRdOiBcIlBvc3QgcmVxdWVzdCBmYWlsZWQgZnJvbSB0aGUgbmV0d29yaywgY291bGQgYmUgYSA0eHgvNXh4IG9yIGEgbmV0d29yayB1bmF2YWlsYWJpbGl0eS4gUGxlYXNlIGNoZWNrIHRoZSBleGFjdCBlcnJvciBjb2RlIGZvciBkZXRhaWxzLlwiLFxyXG59O1xyXG4vKipcclxuICogQXV0aEVycm9yTWVzc2FnZSBjbGFzcyBjb250YWluaW5nIHN0cmluZyBjb25zdGFudHMgdXNlZCBieSBlcnJvciBjb2RlcyBhbmQgbWVzc2FnZXMuXHJcbiAqIEBkZXByZWNhdGVkIFVzZSBBdXRoRXJyb3JDb2RlcyBpbnN0ZWFkXHJcbiAqL1xyXG5jb25zdCBBdXRoRXJyb3JNZXNzYWdlID0ge1xyXG4gICAgdW5leHBlY3RlZEVycm9yOiB7XHJcbiAgICAgICAgY29kZTogdW5leHBlY3RlZEVycm9yLFxyXG4gICAgICAgIGRlc2M6IEF1dGhFcnJvck1lc3NhZ2VzW3VuZXhwZWN0ZWRFcnJvcl0sXHJcbiAgICB9LFxyXG4gICAgcG9zdFJlcXVlc3RGYWlsZWQ6IHtcclxuICAgICAgICBjb2RlOiBwb3N0UmVxdWVzdEZhaWxlZCxcclxuICAgICAgICBkZXNjOiBBdXRoRXJyb3JNZXNzYWdlc1twb3N0UmVxdWVzdEZhaWxlZF0sXHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogR2VuZXJhbCBlcnJvciBjbGFzcyB0aHJvd24gYnkgdGhlIE1TQUwuanMgbGlicmFyeS5cclxuICovXHJcbmNsYXNzIEF1dGhFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlLCBzdWJlcnJvcikge1xyXG4gICAgICAgIGNvbnN0IGVycm9yU3RyaW5nID0gZXJyb3JNZXNzYWdlXHJcbiAgICAgICAgICAgID8gYCR7ZXJyb3JDb2RlfTogJHtlcnJvck1lc3NhZ2V9YFxyXG4gICAgICAgICAgICA6IGVycm9yQ29kZTtcclxuICAgICAgICBzdXBlcihlcnJvclN0cmluZyk7XHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEF1dGhFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgICAgIHRoaXMuZXJyb3JDb2RlID0gZXJyb3JDb2RlIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XHJcbiAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSBlcnJvck1lc3NhZ2UgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICB0aGlzLnN1YkVycm9yID0gc3ViZXJyb3IgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIkF1dGhFcnJvclwiO1xyXG4gICAgfVxyXG4gICAgc2V0Q29ycmVsYXRpb25JZChjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgdGhpcy5jb3JyZWxhdGlvbklkID0gY29ycmVsYXRpb25JZDtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBjcmVhdGVBdXRoRXJyb3IoY29kZSwgYWRkaXRpb25hbE1lc3NhZ2UpIHtcclxuICAgIHJldHVybiBuZXcgQXV0aEVycm9yKGNvZGUsIGFkZGl0aW9uYWxNZXNzYWdlXHJcbiAgICAgICAgPyBgJHtBdXRoRXJyb3JNZXNzYWdlc1tjb2RlXX0gJHthZGRpdGlvbmFsTWVzc2FnZX1gXHJcbiAgICAgICAgOiBBdXRoRXJyb3JNZXNzYWdlc1tjb2RlXSk7XHJcbn1cblxuZXhwb3J0IHsgQXV0aEVycm9yLCBBdXRoRXJyb3JNZXNzYWdlLCBBdXRoRXJyb3JNZXNzYWdlcywgY3JlYXRlQXV0aEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoRXJyb3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/AuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   postRequestFailed: function() { return /* binding */ postRequestFailed; },\n/* harmony export */   unexpectedError: function() { return /* binding */ unexpectedError; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst unexpectedError = \"unexpected_error\";\r\nconst postRequestFailed = \"post_request_failed\";\n\n\n//# sourceMappingURL=AuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQXV0aEVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFOEM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0F1dGhFcnJvckNvZGVzLm1qcz8wZDM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBBdXRoRXJyb3JNZXNzYWdlIGNsYXNzIGNvbnRhaW5pbmcgc3RyaW5nIGNvbnN0YW50cyB1c2VkIGJ5IGVycm9yIGNvZGVzIGFuZCBtZXNzYWdlcy5cclxuICovXHJcbmNvbnN0IHVuZXhwZWN0ZWRFcnJvciA9IFwidW5leHBlY3RlZF9lcnJvclwiO1xyXG5jb25zdCBwb3N0UmVxdWVzdEZhaWxlZCA9IFwicG9zdF9yZXF1ZXN0X2ZhaWxlZFwiO1xuXG5leHBvcnQgeyBwb3N0UmVxdWVzdEZhaWxlZCwgdW5leHBlY3RlZEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/CacheError.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/CacheError.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheError: function() { return /* binding */ CacheError; },\n/* harmony export */   CacheErrorCodes: function() { return /* reexport module object */ _CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   CacheErrorMessages: function() { return /* binding */ CacheErrorMessages; }\n/* harmony export */ });\n/* harmony import */ var _CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CacheErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CacheErrorMessages = {\r\n    [_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cacheQuotaExceededErrorCode]: \"Exceeded cache storage capacity.\",\r\n    [_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cacheUnknownErrorCode]: \"Unexpected error occurred when using cache storage.\",\r\n};\r\n/**\r\n * Error thrown when there is an error with the cache\r\n */\r\nclass CacheError extends Error {\r\n    constructor(errorCode, errorMessage) {\r\n        const message = errorMessage ||\r\n            (CacheErrorMessages[errorCode]\r\n                ? CacheErrorMessages[errorCode]\r\n                : CacheErrorMessages[_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cacheUnknownErrorCode]);\r\n        super(`${errorCode}: ${message}`);\r\n        Object.setPrototypeOf(this, CacheError.prototype);\r\n        this.name = \"CacheError\";\r\n        this.errorCode = errorCode;\r\n        this.errorMessage = message;\r\n    }\r\n}\n\n\n//# sourceMappingURL=CacheError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2FjaGVFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDOEU7QUFDbEM7QUFDOUI7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLDZFQUEyQjtBQUNoQyxLQUFLLHVFQUFxQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsdUVBQXFCO0FBQzFELGlCQUFpQixVQUFVLElBQUksUUFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBDO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9DYWNoZUVycm9yLm1qcz85ZDY1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgY2FjaGVVbmtub3duRXJyb3JDb2RlLCBjYWNoZVF1b3RhRXhjZWVkZWRFcnJvckNvZGUgfSBmcm9tICcuL0NhY2hlRXJyb3JDb2Rlcy5tanMnO1xuaW1wb3J0ICogYXMgQ2FjaGVFcnJvckNvZGVzIGZyb20gJy4vQ2FjaGVFcnJvckNvZGVzLm1qcyc7XG5leHBvcnQgeyBDYWNoZUVycm9yQ29kZXMgfTtcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IENhY2hlRXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIFtjYWNoZVF1b3RhRXhjZWVkZWRFcnJvckNvZGVdOiBcIkV4Y2VlZGVkIGNhY2hlIHN0b3JhZ2UgY2FwYWNpdHkuXCIsXHJcbiAgICBbY2FjaGVVbmtub3duRXJyb3JDb2RlXTogXCJVbmV4cGVjdGVkIGVycm9yIG9jY3VycmVkIHdoZW4gdXNpbmcgY2FjaGUgc3RvcmFnZS5cIixcclxufTtcclxuLyoqXHJcbiAqIEVycm9yIHRocm93biB3aGVuIHRoZXJlIGlzIGFuIGVycm9yIHdpdGggdGhlIGNhY2hlXHJcbiAqL1xyXG5jbGFzcyBDYWNoZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UpIHtcclxuICAgICAgICBjb25zdCBtZXNzYWdlID0gZXJyb3JNZXNzYWdlIHx8XHJcbiAgICAgICAgICAgIChDYWNoZUVycm9yTWVzc2FnZXNbZXJyb3JDb2RlXVxyXG4gICAgICAgICAgICAgICAgPyBDYWNoZUVycm9yTWVzc2FnZXNbZXJyb3JDb2RlXVxyXG4gICAgICAgICAgICAgICAgOiBDYWNoZUVycm9yTWVzc2FnZXNbY2FjaGVVbmtub3duRXJyb3JDb2RlXSk7XHJcbiAgICAgICAgc3VwZXIoYCR7ZXJyb3JDb2RlfTogJHttZXNzYWdlfWApO1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBDYWNoZUVycm9yLnByb3RvdHlwZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gXCJDYWNoZUVycm9yXCI7XHJcbiAgICAgICAgdGhpcy5lcnJvckNvZGUgPSBlcnJvckNvZGU7XHJcbiAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSBtZXNzYWdlO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IENhY2hlRXJyb3IsIENhY2hlRXJyb3JNZXNzYWdlcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2FjaGVFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/CacheError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheQuotaExceededErrorCode: function() { return /* binding */ cacheQuotaExceededErrorCode; },\n/* harmony export */   cacheUnknownErrorCode: function() { return /* binding */ cacheUnknownErrorCode; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst cacheQuotaExceededErrorCode = \"cache_quota_exceeded\";\r\nconst cacheUnknownErrorCode = \"cache_error_unknown\";\n\n\n//# sourceMappingURL=CacheErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2FjaGVFcnJvckNvZGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRThEO0FBQzlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9DYWNoZUVycm9yQ29kZXMubWpzPzFjYTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgY2FjaGVRdW90YUV4Y2VlZGVkRXJyb3JDb2RlID0gXCJjYWNoZV9xdW90YV9leGNlZWRlZFwiO1xyXG5jb25zdCBjYWNoZVVua25vd25FcnJvckNvZGUgPSBcImNhY2hlX2Vycm9yX3Vua25vd25cIjtcblxuZXhwb3J0IHsgY2FjaGVRdW90YUV4Y2VlZGVkRXJyb3JDb2RlLCBjYWNoZVVua25vd25FcnJvckNvZGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNhY2hlRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientAuthError: function() { return /* binding */ ClientAuthError; },\n/* harmony export */   ClientAuthErrorCodes: function() { return /* reexport module object */ _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   ClientAuthErrorMessage: function() { return /* binding */ ClientAuthErrorMessage; },\n/* harmony export */   ClientAuthErrorMessages: function() { return /* binding */ ClientAuthErrorMessages; },\n/* harmony export */   createClientAuthError: function() { return /* binding */ createClientAuthError; }\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst ClientAuthErrorMessages = {\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoDecodingError]: \"The client info could not be parsed/decoded correctly\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoEmptyError]: \"The client info was empty\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenParsingError]: \"Token cannot be parsed\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nullOrEmptyToken]: \"The token is null or empty\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endpointResolutionError]: \"Endpoints cannot be resolved\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkError]: \"Network request failed\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.openIdConfigError]: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashNotDeserialized]: \"The hash parameters could not be deserialized\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidState]: \"State was not the expected format\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateMismatch]: \"State mismatch error\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateNotFound]: \"State not found\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonceMismatch]: \"Nonce mismatch error\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authTimeNotFound]: \"Max Age was requested and the ID token is missing the auth_time variable.\" +\r\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\r\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.maxAgeTranspired]: \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingTokens]: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAccounts]: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAppMetadata]: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.requestCannotBeMade]: \"Token request cannot be made without authorization code or refresh token.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotRemoveEmptyScope]: \"Cannot remove null or empty scope from ScopeSet\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAppendScopeSet]: \"Cannot append ScopeSet\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopeSet]: \"Empty input ScopeSet cannot be processed\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodePollingCancelled]: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeExpired]: \"Device code is expired.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeUnknownError]: \"Device code stopped polling for unknown reasons.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountInSilentRequest]: \"Please pass an account object, silent flow is not supported without account information\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheRecord]: \"Cache record object was null or undefined.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheEnvironment]: \"Invalid environment when attempting to create cache entry\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountFound]: \"No account found in cache for given key.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCryptoObject]: \"No crypto object detected.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedCredentialType]: \"Unexpected credential type.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAssertion]: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClientCredential]: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRefreshRequired]: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userTimeoutReached]: \"User defined timeout for device code polling reached\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenClaimsCnfRequiredForSignedJwt]: \"Cannot generate a POP jwt if the token_claims are not populated\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorizationCodeMissingFromServerResponse]: \"Server response does not contain an authorization code to proceed\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.bindingKeyNotRemoved]: \"Could not remove the credential's binding key from storage.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endSessionEndpointNotSupported]: \"The provided authority does not support logout\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.keyIdMissing]: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCanceled]: \"User cancelled the flow.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingTenantIdError]: \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.methodNotImplemented]: \"This method has not been implemented\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nestedAppAuthBridgeDisabled]: \"The nested app auth bridge is disabled\",\r\n};\r\n/**\r\n * String constants used by error codes and messages.\r\n * @deprecated Use ClientAuthErrorCodes instead\r\n */\r\nconst ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoDecodingError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoDecodingError],\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoEmptyError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoEmptyError],\r\n    },\r\n    tokenParsingError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenParsingError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenParsingError],\r\n    },\r\n    nullOrEmptyToken: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nullOrEmptyToken,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nullOrEmptyToken],\r\n    },\r\n    endpointResolutionError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endpointResolutionError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endpointResolutionError],\r\n    },\r\n    networkError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkError],\r\n    },\r\n    unableToGetOpenidConfigError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.openIdConfigError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.openIdConfigError],\r\n    },\r\n    hashNotDeserialized: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashNotDeserialized,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashNotDeserialized],\r\n    },\r\n    invalidStateError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidState,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidState],\r\n    },\r\n    stateMismatchError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateMismatch,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateMismatch],\r\n    },\r\n    stateNotFoundError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateNotFound,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateNotFound],\r\n    },\r\n    nonceMismatchError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonceMismatch,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonceMismatch],\r\n    },\r\n    authTimeNotFoundError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authTimeNotFound,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authTimeNotFound],\r\n    },\r\n    maxAgeTranspired: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.maxAgeTranspired,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.maxAgeTranspired],\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingTokens,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingTokens],\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAccounts,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAccounts],\r\n    },\r\n    multipleMatchingAppMetadata: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAppMetadata,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAppMetadata],\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.requestCannotBeMade,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.requestCannotBeMade],\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotRemoveEmptyScope,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotRemoveEmptyScope],\r\n    },\r\n    appendScopeSetError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAppendScopeSet,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAppendScopeSet],\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopeSet,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopeSet],\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodePollingCancelled,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodePollingCancelled],\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeExpired,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeExpired],\r\n    },\r\n    DeviceCodeUnknownError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeUnknownError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeUnknownError],\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountInSilentRequest,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountInSilentRequest],\r\n    },\r\n    invalidCacheRecord: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheRecord,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheRecord],\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheEnvironment,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheEnvironment],\r\n    },\r\n    noAccountFound: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountFound,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountFound],\r\n    },\r\n    noCryptoObj: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCryptoObject,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCryptoObject],\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedCredentialType,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedCredentialType],\r\n    },\r\n    invalidAssertion: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAssertion,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAssertion],\r\n    },\r\n    invalidClientCredential: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClientCredential,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClientCredential],\r\n    },\r\n    tokenRefreshRequired: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRefreshRequired,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRefreshRequired],\r\n    },\r\n    userTimeoutReached: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userTimeoutReached,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userTimeoutReached],\r\n    },\r\n    tokenClaimsRequired: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenClaimsCnfRequiredForSignedJwt,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenClaimsCnfRequiredForSignedJwt],\r\n    },\r\n    noAuthorizationCodeFromServer: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorizationCodeMissingFromServerResponse,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorizationCodeMissingFromServerResponse],\r\n    },\r\n    bindingKeyNotRemovedError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.bindingKeyNotRemoved,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.bindingKeyNotRemoved],\r\n    },\r\n    logoutNotSupported: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endSessionEndpointNotSupported,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endSessionEndpointNotSupported],\r\n    },\r\n    keyIdMissing: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.keyIdMissing,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.keyIdMissing],\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity],\r\n    },\r\n    userCanceledError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCanceled,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCanceled],\r\n    },\r\n    missingTenantIdError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingTenantIdError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingTenantIdError],\r\n    },\r\n    nestedAppAuthBridgeDisabled: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nestedAppAuthBridgeDisabled,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nestedAppAuthBridgeDisabled],\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nclass ClientAuthError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, additionalMessage) {\r\n        super(errorCode, additionalMessage\r\n            ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\r\n            : ClientAuthErrorMessages[errorCode]);\r\n        this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\r\n    }\r\n}\r\nfunction createClientAuthError(errorCode, additionalMessage) {\r\n    return new ClientAuthError(errorCode, additionalMessage);\r\n}\n\n\n//# sourceMappingURL=ClientAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authTimeNotFound: function() { return /* binding */ authTimeNotFound; },\n/* harmony export */   authorizationCodeMissingFromServerResponse: function() { return /* binding */ authorizationCodeMissingFromServerResponse; },\n/* harmony export */   bindingKeyNotRemoved: function() { return /* binding */ bindingKeyNotRemoved; },\n/* harmony export */   cannotAppendScopeSet: function() { return /* binding */ cannotAppendScopeSet; },\n/* harmony export */   cannotRemoveEmptyScope: function() { return /* binding */ cannotRemoveEmptyScope; },\n/* harmony export */   clientInfoDecodingError: function() { return /* binding */ clientInfoDecodingError; },\n/* harmony export */   clientInfoEmptyError: function() { return /* binding */ clientInfoEmptyError; },\n/* harmony export */   deviceCodeExpired: function() { return /* binding */ deviceCodeExpired; },\n/* harmony export */   deviceCodePollingCancelled: function() { return /* binding */ deviceCodePollingCancelled; },\n/* harmony export */   deviceCodeUnknownError: function() { return /* binding */ deviceCodeUnknownError; },\n/* harmony export */   emptyInputScopeSet: function() { return /* binding */ emptyInputScopeSet; },\n/* harmony export */   endSessionEndpointNotSupported: function() { return /* binding */ endSessionEndpointNotSupported; },\n/* harmony export */   endpointResolutionError: function() { return /* binding */ endpointResolutionError; },\n/* harmony export */   hashNotDeserialized: function() { return /* binding */ hashNotDeserialized; },\n/* harmony export */   invalidAssertion: function() { return /* binding */ invalidAssertion; },\n/* harmony export */   invalidCacheEnvironment: function() { return /* binding */ invalidCacheEnvironment; },\n/* harmony export */   invalidCacheRecord: function() { return /* binding */ invalidCacheRecord; },\n/* harmony export */   invalidClientCredential: function() { return /* binding */ invalidClientCredential; },\n/* harmony export */   invalidState: function() { return /* binding */ invalidState; },\n/* harmony export */   keyIdMissing: function() { return /* binding */ keyIdMissing; },\n/* harmony export */   maxAgeTranspired: function() { return /* binding */ maxAgeTranspired; },\n/* harmony export */   methodNotImplemented: function() { return /* binding */ methodNotImplemented; },\n/* harmony export */   missingTenantIdError: function() { return /* binding */ missingTenantIdError; },\n/* harmony export */   multipleMatchingAccounts: function() { return /* binding */ multipleMatchingAccounts; },\n/* harmony export */   multipleMatchingAppMetadata: function() { return /* binding */ multipleMatchingAppMetadata; },\n/* harmony export */   multipleMatchingTokens: function() { return /* binding */ multipleMatchingTokens; },\n/* harmony export */   nestedAppAuthBridgeDisabled: function() { return /* binding */ nestedAppAuthBridgeDisabled; },\n/* harmony export */   networkError: function() { return /* binding */ networkError; },\n/* harmony export */   noAccountFound: function() { return /* binding */ noAccountFound; },\n/* harmony export */   noAccountInSilentRequest: function() { return /* binding */ noAccountInSilentRequest; },\n/* harmony export */   noCryptoObject: function() { return /* binding */ noCryptoObject; },\n/* harmony export */   noNetworkConnectivity: function() { return /* binding */ noNetworkConnectivity; },\n/* harmony export */   nonceMismatch: function() { return /* binding */ nonceMismatch; },\n/* harmony export */   nullOrEmptyToken: function() { return /* binding */ nullOrEmptyToken; },\n/* harmony export */   openIdConfigError: function() { return /* binding */ openIdConfigError; },\n/* harmony export */   requestCannotBeMade: function() { return /* binding */ requestCannotBeMade; },\n/* harmony export */   stateMismatch: function() { return /* binding */ stateMismatch; },\n/* harmony export */   stateNotFound: function() { return /* binding */ stateNotFound; },\n/* harmony export */   tokenClaimsCnfRequiredForSignedJwt: function() { return /* binding */ tokenClaimsCnfRequiredForSignedJwt; },\n/* harmony export */   tokenParsingError: function() { return /* binding */ tokenParsingError; },\n/* harmony export */   tokenRefreshRequired: function() { return /* binding */ tokenRefreshRequired; },\n/* harmony export */   unexpectedCredentialType: function() { return /* binding */ unexpectedCredentialType; },\n/* harmony export */   userCanceled: function() { return /* binding */ userCanceled; },\n/* harmony export */   userTimeoutReached: function() { return /* binding */ userTimeoutReached; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst clientInfoDecodingError = \"client_info_decoding_error\";\r\nconst clientInfoEmptyError = \"client_info_empty_error\";\r\nconst tokenParsingError = \"token_parsing_error\";\r\nconst nullOrEmptyToken = \"null_or_empty_token\";\r\nconst endpointResolutionError = \"endpoints_resolution_error\";\r\nconst networkError = \"network_error\";\r\nconst openIdConfigError = \"openid_config_error\";\r\nconst hashNotDeserialized = \"hash_not_deserialized\";\r\nconst invalidState = \"invalid_state\";\r\nconst stateMismatch = \"state_mismatch\";\r\nconst stateNotFound = \"state_not_found\";\r\nconst nonceMismatch = \"nonce_mismatch\";\r\nconst authTimeNotFound = \"auth_time_not_found\";\r\nconst maxAgeTranspired = \"max_age_transpired\";\r\nconst multipleMatchingTokens = \"multiple_matching_tokens\";\r\nconst multipleMatchingAccounts = \"multiple_matching_accounts\";\r\nconst multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\r\nconst requestCannotBeMade = \"request_cannot_be_made\";\r\nconst cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\r\nconst cannotAppendScopeSet = \"cannot_append_scopeset\";\r\nconst emptyInputScopeSet = \"empty_input_scopeset\";\r\nconst deviceCodePollingCancelled = \"device_code_polling_cancelled\";\r\nconst deviceCodeExpired = \"device_code_expired\";\r\nconst deviceCodeUnknownError = \"device_code_unknown_error\";\r\nconst noAccountInSilentRequest = \"no_account_in_silent_request\";\r\nconst invalidCacheRecord = \"invalid_cache_record\";\r\nconst invalidCacheEnvironment = \"invalid_cache_environment\";\r\nconst noAccountFound = \"no_account_found\";\r\nconst noCryptoObject = \"no_crypto_object\";\r\nconst unexpectedCredentialType = \"unexpected_credential_type\";\r\nconst invalidAssertion = \"invalid_assertion\";\r\nconst invalidClientCredential = \"invalid_client_credential\";\r\nconst tokenRefreshRequired = \"token_refresh_required\";\r\nconst userTimeoutReached = \"user_timeout_reached\";\r\nconst tokenClaimsCnfRequiredForSignedJwt = \"token_claims_cnf_required_for_signedjwt\";\r\nconst authorizationCodeMissingFromServerResponse = \"authorization_code_missing_from_server_response\";\r\nconst bindingKeyNotRemoved = \"binding_key_not_removed\";\r\nconst endSessionEndpointNotSupported = \"end_session_endpoint_not_supported\";\r\nconst keyIdMissing = \"key_id_missing\";\r\nconst noNetworkConnectivity = \"no_network_connectivity\";\r\nconst userCanceled = \"user_canceled\";\r\nconst missingTenantIdError = \"missing_tenant_id_error\";\r\nconst methodNotImplemented = \"method_not_implemented\";\r\nconst nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\n\n\n//# sourceMappingURL=ClientAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaTlCO0FBQ2o5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzP2YzMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgY2xpZW50SW5mb0RlY29kaW5nRXJyb3IgPSBcImNsaWVudF9pbmZvX2RlY29kaW5nX2Vycm9yXCI7XHJcbmNvbnN0IGNsaWVudEluZm9FbXB0eUVycm9yID0gXCJjbGllbnRfaW5mb19lbXB0eV9lcnJvclwiO1xyXG5jb25zdCB0b2tlblBhcnNpbmdFcnJvciA9IFwidG9rZW5fcGFyc2luZ19lcnJvclwiO1xyXG5jb25zdCBudWxsT3JFbXB0eVRva2VuID0gXCJudWxsX29yX2VtcHR5X3Rva2VuXCI7XHJcbmNvbnN0IGVuZHBvaW50UmVzb2x1dGlvbkVycm9yID0gXCJlbmRwb2ludHNfcmVzb2x1dGlvbl9lcnJvclwiO1xyXG5jb25zdCBuZXR3b3JrRXJyb3IgPSBcIm5ldHdvcmtfZXJyb3JcIjtcclxuY29uc3Qgb3BlbklkQ29uZmlnRXJyb3IgPSBcIm9wZW5pZF9jb25maWdfZXJyb3JcIjtcclxuY29uc3QgaGFzaE5vdERlc2VyaWFsaXplZCA9IFwiaGFzaF9ub3RfZGVzZXJpYWxpemVkXCI7XHJcbmNvbnN0IGludmFsaWRTdGF0ZSA9IFwiaW52YWxpZF9zdGF0ZVwiO1xyXG5jb25zdCBzdGF0ZU1pc21hdGNoID0gXCJzdGF0ZV9taXNtYXRjaFwiO1xyXG5jb25zdCBzdGF0ZU5vdEZvdW5kID0gXCJzdGF0ZV9ub3RfZm91bmRcIjtcclxuY29uc3Qgbm9uY2VNaXNtYXRjaCA9IFwibm9uY2VfbWlzbWF0Y2hcIjtcclxuY29uc3QgYXV0aFRpbWVOb3RGb3VuZCA9IFwiYXV0aF90aW1lX25vdF9mb3VuZFwiO1xyXG5jb25zdCBtYXhBZ2VUcmFuc3BpcmVkID0gXCJtYXhfYWdlX3RyYW5zcGlyZWRcIjtcclxuY29uc3QgbXVsdGlwbGVNYXRjaGluZ1Rva2VucyA9IFwibXVsdGlwbGVfbWF0Y2hpbmdfdG9rZW5zXCI7XHJcbmNvbnN0IG11bHRpcGxlTWF0Y2hpbmdBY2NvdW50cyA9IFwibXVsdGlwbGVfbWF0Y2hpbmdfYWNjb3VudHNcIjtcclxuY29uc3QgbXVsdGlwbGVNYXRjaGluZ0FwcE1ldGFkYXRhID0gXCJtdWx0aXBsZV9tYXRjaGluZ19hcHBNZXRhZGF0YVwiO1xyXG5jb25zdCByZXF1ZXN0Q2Fubm90QmVNYWRlID0gXCJyZXF1ZXN0X2Nhbm5vdF9iZV9tYWRlXCI7XHJcbmNvbnN0IGNhbm5vdFJlbW92ZUVtcHR5U2NvcGUgPSBcImNhbm5vdF9yZW1vdmVfZW1wdHlfc2NvcGVcIjtcclxuY29uc3QgY2Fubm90QXBwZW5kU2NvcGVTZXQgPSBcImNhbm5vdF9hcHBlbmRfc2NvcGVzZXRcIjtcclxuY29uc3QgZW1wdHlJbnB1dFNjb3BlU2V0ID0gXCJlbXB0eV9pbnB1dF9zY29wZXNldFwiO1xyXG5jb25zdCBkZXZpY2VDb2RlUG9sbGluZ0NhbmNlbGxlZCA9IFwiZGV2aWNlX2NvZGVfcG9sbGluZ19jYW5jZWxsZWRcIjtcclxuY29uc3QgZGV2aWNlQ29kZUV4cGlyZWQgPSBcImRldmljZV9jb2RlX2V4cGlyZWRcIjtcclxuY29uc3QgZGV2aWNlQ29kZVVua25vd25FcnJvciA9IFwiZGV2aWNlX2NvZGVfdW5rbm93bl9lcnJvclwiO1xyXG5jb25zdCBub0FjY291bnRJblNpbGVudFJlcXVlc3QgPSBcIm5vX2FjY291bnRfaW5fc2lsZW50X3JlcXVlc3RcIjtcclxuY29uc3QgaW52YWxpZENhY2hlUmVjb3JkID0gXCJpbnZhbGlkX2NhY2hlX3JlY29yZFwiO1xyXG5jb25zdCBpbnZhbGlkQ2FjaGVFbnZpcm9ubWVudCA9IFwiaW52YWxpZF9jYWNoZV9lbnZpcm9ubWVudFwiO1xyXG5jb25zdCBub0FjY291bnRGb3VuZCA9IFwibm9fYWNjb3VudF9mb3VuZFwiO1xyXG5jb25zdCBub0NyeXB0b09iamVjdCA9IFwibm9fY3J5cHRvX29iamVjdFwiO1xyXG5jb25zdCB1bmV4cGVjdGVkQ3JlZGVudGlhbFR5cGUgPSBcInVuZXhwZWN0ZWRfY3JlZGVudGlhbF90eXBlXCI7XHJcbmNvbnN0IGludmFsaWRBc3NlcnRpb24gPSBcImludmFsaWRfYXNzZXJ0aW9uXCI7XHJcbmNvbnN0IGludmFsaWRDbGllbnRDcmVkZW50aWFsID0gXCJpbnZhbGlkX2NsaWVudF9jcmVkZW50aWFsXCI7XHJcbmNvbnN0IHRva2VuUmVmcmVzaFJlcXVpcmVkID0gXCJ0b2tlbl9yZWZyZXNoX3JlcXVpcmVkXCI7XHJcbmNvbnN0IHVzZXJUaW1lb3V0UmVhY2hlZCA9IFwidXNlcl90aW1lb3V0X3JlYWNoZWRcIjtcclxuY29uc3QgdG9rZW5DbGFpbXNDbmZSZXF1aXJlZEZvclNpZ25lZEp3dCA9IFwidG9rZW5fY2xhaW1zX2NuZl9yZXF1aXJlZF9mb3Jfc2lnbmVkand0XCI7XHJcbmNvbnN0IGF1dGhvcml6YXRpb25Db2RlTWlzc2luZ0Zyb21TZXJ2ZXJSZXNwb25zZSA9IFwiYXV0aG9yaXphdGlvbl9jb2RlX21pc3NpbmdfZnJvbV9zZXJ2ZXJfcmVzcG9uc2VcIjtcclxuY29uc3QgYmluZGluZ0tleU5vdFJlbW92ZWQgPSBcImJpbmRpbmdfa2V5X25vdF9yZW1vdmVkXCI7XHJcbmNvbnN0IGVuZFNlc3Npb25FbmRwb2ludE5vdFN1cHBvcnRlZCA9IFwiZW5kX3Nlc3Npb25fZW5kcG9pbnRfbm90X3N1cHBvcnRlZFwiO1xyXG5jb25zdCBrZXlJZE1pc3NpbmcgPSBcImtleV9pZF9taXNzaW5nXCI7XHJcbmNvbnN0IG5vTmV0d29ya0Nvbm5lY3Rpdml0eSA9IFwibm9fbmV0d29ya19jb25uZWN0aXZpdHlcIjtcclxuY29uc3QgdXNlckNhbmNlbGVkID0gXCJ1c2VyX2NhbmNlbGVkXCI7XHJcbmNvbnN0IG1pc3NpbmdUZW5hbnRJZEVycm9yID0gXCJtaXNzaW5nX3RlbmFudF9pZF9lcnJvclwiO1xyXG5jb25zdCBtZXRob2ROb3RJbXBsZW1lbnRlZCA9IFwibWV0aG9kX25vdF9pbXBsZW1lbnRlZFwiO1xyXG5jb25zdCBuZXN0ZWRBcHBBdXRoQnJpZGdlRGlzYWJsZWQgPSBcIm5lc3RlZF9hcHBfYXV0aF9icmlkZ2VfZGlzYWJsZWRcIjtcblxuZXhwb3J0IHsgYXV0aFRpbWVOb3RGb3VuZCwgYXV0aG9yaXphdGlvbkNvZGVNaXNzaW5nRnJvbVNlcnZlclJlc3BvbnNlLCBiaW5kaW5nS2V5Tm90UmVtb3ZlZCwgY2Fubm90QXBwZW5kU2NvcGVTZXQsIGNhbm5vdFJlbW92ZUVtcHR5U2NvcGUsIGNsaWVudEluZm9EZWNvZGluZ0Vycm9yLCBjbGllbnRJbmZvRW1wdHlFcnJvciwgZGV2aWNlQ29kZUV4cGlyZWQsIGRldmljZUNvZGVQb2xsaW5nQ2FuY2VsbGVkLCBkZXZpY2VDb2RlVW5rbm93bkVycm9yLCBlbXB0eUlucHV0U2NvcGVTZXQsIGVuZFNlc3Npb25FbmRwb2ludE5vdFN1cHBvcnRlZCwgZW5kcG9pbnRSZXNvbHV0aW9uRXJyb3IsIGhhc2hOb3REZXNlcmlhbGl6ZWQsIGludmFsaWRBc3NlcnRpb24sIGludmFsaWRDYWNoZUVudmlyb25tZW50LCBpbnZhbGlkQ2FjaGVSZWNvcmQsIGludmFsaWRDbGllbnRDcmVkZW50aWFsLCBpbnZhbGlkU3RhdGUsIGtleUlkTWlzc2luZywgbWF4QWdlVHJhbnNwaXJlZCwgbWV0aG9kTm90SW1wbGVtZW50ZWQsIG1pc3NpbmdUZW5hbnRJZEVycm9yLCBtdWx0aXBsZU1hdGNoaW5nQWNjb3VudHMsIG11bHRpcGxlTWF0Y2hpbmdBcHBNZXRhZGF0YSwgbXVsdGlwbGVNYXRjaGluZ1Rva2VucywgbmVzdGVkQXBwQXV0aEJyaWRnZURpc2FibGVkLCBuZXR3b3JrRXJyb3IsIG5vQWNjb3VudEZvdW5kLCBub0FjY291bnRJblNpbGVudFJlcXVlc3QsIG5vQ3J5cHRvT2JqZWN0LCBub05ldHdvcmtDb25uZWN0aXZpdHksIG5vbmNlTWlzbWF0Y2gsIG51bGxPckVtcHR5VG9rZW4sIG9wZW5JZENvbmZpZ0Vycm9yLCByZXF1ZXN0Q2Fubm90QmVNYWRlLCBzdGF0ZU1pc21hdGNoLCBzdGF0ZU5vdEZvdW5kLCB0b2tlbkNsYWltc0NuZlJlcXVpcmVkRm9yU2lnbmVkSnd0LCB0b2tlblBhcnNpbmdFcnJvciwgdG9rZW5SZWZyZXNoUmVxdWlyZWQsIHVuZXhwZWN0ZWRDcmVkZW50aWFsVHlwZSwgdXNlckNhbmNlbGVkLCB1c2VyVGltZW91dFJlYWNoZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsaWVudEF1dGhFcnJvckNvZGVzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientConfigurationError: function() { return /* binding */ ClientConfigurationError; },\n/* harmony export */   ClientConfigurationErrorCodes: function() { return /* reexport module object */ _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   ClientConfigurationErrorMessage: function() { return /* binding */ ClientConfigurationErrorMessage; },\n/* harmony export */   ClientConfigurationErrorMessages: function() { return /* binding */ ClientConfigurationErrorMessages; },\n/* harmony export */   createClientConfigurationError: function() { return /* binding */ createClientConfigurationError; }\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ClientConfigurationErrorMessages = {\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectUriEmpty]: \"A redirect URI is required for all calls, and none has been set.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.claimsRequestParsingError]: \"Could not parse the given claims request object.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityUriInsecure]: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlParseError]: \"URL could not be parsed into appropriate segments.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlEmptyError]: \"URL was empty or null.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopesError]: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPromptValue]: \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClaims]: \"Given claims parameter must be a stringified JSON object.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRequestEmpty]: \"Token request was empty and not found in cache.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.logoutRequestEmpty]: \"The logout request was null or undefined.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCodeChallengeMethod]: 'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceParamsMissing]: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCloudDiscoveryMetadata]: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthorityMetadata]: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.untrustedAuthority]: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshJwk]: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshKid]: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingNonceAuthenticationHeader]: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthenticationHeader]: \"Invalid authentication header provided\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotSetOIDCOptions]: \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAllowNativeBroker]: \"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityMismatch]: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\r\n};\r\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use ClientConfigurationErrorCodes instead\r\n */\r\nconst ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectUriEmpty,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectUriEmpty],\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.claimsRequestParsingError,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.claimsRequestParsingError],\r\n    },\r\n    authorityUriInsecure: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityUriInsecure,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityUriInsecure],\r\n    },\r\n    urlParseError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlParseError,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlParseError],\r\n    },\r\n    urlEmptyError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlEmptyError,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlEmptyError],\r\n    },\r\n    emptyScopesError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopesError,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopesError],\r\n    },\r\n    invalidPrompt: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPromptValue,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPromptValue],\r\n    },\r\n    invalidClaimsRequest: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClaims,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClaims],\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRequestEmpty],\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.logoutRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.logoutRequestEmpty],\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCodeChallengeMethod,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCodeChallengeMethod],\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceParamsMissing,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceParamsMissing],\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCloudDiscoveryMetadata,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCloudDiscoveryMetadata],\r\n    },\r\n    invalidAuthorityMetadata: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthorityMetadata,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthorityMetadata],\r\n    },\r\n    untrustedAuthority: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.untrustedAuthority,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.untrustedAuthority],\r\n    },\r\n    missingSshJwk: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshJwk,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshJwk],\r\n    },\r\n    missingSshKid: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshKid,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshKid],\r\n    },\r\n    missingNonceAuthenticationHeader: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingNonceAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingNonceAuthenticationHeader],\r\n    },\r\n    invalidAuthenticationHeader: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthenticationHeader],\r\n    },\r\n    cannotSetOIDCOptions: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotSetOIDCOptions,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotSetOIDCOptions],\r\n    },\r\n    cannotAllowNativeBroker: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAllowNativeBroker,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAllowNativeBroker],\r\n    },\r\n    authorityMismatch: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityMismatch,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityMismatch],\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nclass ClientConfigurationError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode) {\r\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\r\n        this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\r\n    }\r\n}\r\nfunction createClientConfigurationError(errorCode) {\r\n    return new ClientConfigurationError(errorCode);\r\n}\n\n\n//# sourceMappingURL=ClientConfigurationError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorityMismatch: function() { return /* binding */ authorityMismatch; },\n/* harmony export */   authorityUriInsecure: function() { return /* binding */ authorityUriInsecure; },\n/* harmony export */   cannotAllowNativeBroker: function() { return /* binding */ cannotAllowNativeBroker; },\n/* harmony export */   cannotSetOIDCOptions: function() { return /* binding */ cannotSetOIDCOptions; },\n/* harmony export */   claimsRequestParsingError: function() { return /* binding */ claimsRequestParsingError; },\n/* harmony export */   emptyInputScopesError: function() { return /* binding */ emptyInputScopesError; },\n/* harmony export */   invalidAuthenticationHeader: function() { return /* binding */ invalidAuthenticationHeader; },\n/* harmony export */   invalidAuthorityMetadata: function() { return /* binding */ invalidAuthorityMetadata; },\n/* harmony export */   invalidClaims: function() { return /* binding */ invalidClaims; },\n/* harmony export */   invalidCloudDiscoveryMetadata: function() { return /* binding */ invalidCloudDiscoveryMetadata; },\n/* harmony export */   invalidCodeChallengeMethod: function() { return /* binding */ invalidCodeChallengeMethod; },\n/* harmony export */   invalidPromptValue: function() { return /* binding */ invalidPromptValue; },\n/* harmony export */   logoutRequestEmpty: function() { return /* binding */ logoutRequestEmpty; },\n/* harmony export */   missingNonceAuthenticationHeader: function() { return /* binding */ missingNonceAuthenticationHeader; },\n/* harmony export */   missingSshJwk: function() { return /* binding */ missingSshJwk; },\n/* harmony export */   missingSshKid: function() { return /* binding */ missingSshKid; },\n/* harmony export */   pkceParamsMissing: function() { return /* binding */ pkceParamsMissing; },\n/* harmony export */   redirectUriEmpty: function() { return /* binding */ redirectUriEmpty; },\n/* harmony export */   tokenRequestEmpty: function() { return /* binding */ tokenRequestEmpty; },\n/* harmony export */   untrustedAuthority: function() { return /* binding */ untrustedAuthority; },\n/* harmony export */   urlEmptyError: function() { return /* binding */ urlEmptyError; },\n/* harmony export */   urlParseError: function() { return /* binding */ urlParseError; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst redirectUriEmpty = \"redirect_uri_empty\";\r\nconst claimsRequestParsingError = \"claims_request_parsing_error\";\r\nconst authorityUriInsecure = \"authority_uri_insecure\";\r\nconst urlParseError = \"url_parse_error\";\r\nconst urlEmptyError = \"empty_url_error\";\r\nconst emptyInputScopesError = \"empty_input_scopes_error\";\r\nconst invalidPromptValue = \"invalid_prompt_value\";\r\nconst invalidClaims = \"invalid_claims\";\r\nconst tokenRequestEmpty = \"token_request_empty\";\r\nconst logoutRequestEmpty = \"logout_request_empty\";\r\nconst invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\r\nconst pkceParamsMissing = \"pkce_params_missing\";\r\nconst invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\r\nconst invalidAuthorityMetadata = \"invalid_authority_metadata\";\r\nconst untrustedAuthority = \"untrusted_authority\";\r\nconst missingSshJwk = \"missing_ssh_jwk\";\r\nconst missingSshKid = \"missing_ssh_kid\";\r\nconst missingNonceAuthenticationHeader = \"missing_nonce_authentication_header\";\r\nconst invalidAuthenticationHeader = \"invalid_authentication_header\";\r\nconst cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\r\nconst cannotAllowNativeBroker = \"cannot_allow_native_broker\";\r\nconst authorityMismatch = \"authority_mismatch\";\n\n\n//# sourceMappingURL=ClientConfigurationErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdWU7QUFDdmUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0NsaWVudENvbmZpZ3VyYXRpb25FcnJvckNvZGVzLm1qcz8xZWNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IHJlZGlyZWN0VXJpRW1wdHkgPSBcInJlZGlyZWN0X3VyaV9lbXB0eVwiO1xyXG5jb25zdCBjbGFpbXNSZXF1ZXN0UGFyc2luZ0Vycm9yID0gXCJjbGFpbXNfcmVxdWVzdF9wYXJzaW5nX2Vycm9yXCI7XHJcbmNvbnN0IGF1dGhvcml0eVVyaUluc2VjdXJlID0gXCJhdXRob3JpdHlfdXJpX2luc2VjdXJlXCI7XHJcbmNvbnN0IHVybFBhcnNlRXJyb3IgPSBcInVybF9wYXJzZV9lcnJvclwiO1xyXG5jb25zdCB1cmxFbXB0eUVycm9yID0gXCJlbXB0eV91cmxfZXJyb3JcIjtcclxuY29uc3QgZW1wdHlJbnB1dFNjb3Blc0Vycm9yID0gXCJlbXB0eV9pbnB1dF9zY29wZXNfZXJyb3JcIjtcclxuY29uc3QgaW52YWxpZFByb21wdFZhbHVlID0gXCJpbnZhbGlkX3Byb21wdF92YWx1ZVwiO1xyXG5jb25zdCBpbnZhbGlkQ2xhaW1zID0gXCJpbnZhbGlkX2NsYWltc1wiO1xyXG5jb25zdCB0b2tlblJlcXVlc3RFbXB0eSA9IFwidG9rZW5fcmVxdWVzdF9lbXB0eVwiO1xyXG5jb25zdCBsb2dvdXRSZXF1ZXN0RW1wdHkgPSBcImxvZ291dF9yZXF1ZXN0X2VtcHR5XCI7XHJcbmNvbnN0IGludmFsaWRDb2RlQ2hhbGxlbmdlTWV0aG9kID0gXCJpbnZhbGlkX2NvZGVfY2hhbGxlbmdlX21ldGhvZFwiO1xyXG5jb25zdCBwa2NlUGFyYW1zTWlzc2luZyA9IFwicGtjZV9wYXJhbXNfbWlzc2luZ1wiO1xyXG5jb25zdCBpbnZhbGlkQ2xvdWREaXNjb3ZlcnlNZXRhZGF0YSA9IFwiaW52YWxpZF9jbG91ZF9kaXNjb3ZlcnlfbWV0YWRhdGFcIjtcclxuY29uc3QgaW52YWxpZEF1dGhvcml0eU1ldGFkYXRhID0gXCJpbnZhbGlkX2F1dGhvcml0eV9tZXRhZGF0YVwiO1xyXG5jb25zdCB1bnRydXN0ZWRBdXRob3JpdHkgPSBcInVudHJ1c3RlZF9hdXRob3JpdHlcIjtcclxuY29uc3QgbWlzc2luZ1NzaEp3ayA9IFwibWlzc2luZ19zc2hfandrXCI7XHJcbmNvbnN0IG1pc3NpbmdTc2hLaWQgPSBcIm1pc3Npbmdfc3NoX2tpZFwiO1xyXG5jb25zdCBtaXNzaW5nTm9uY2VBdXRoZW50aWNhdGlvbkhlYWRlciA9IFwibWlzc2luZ19ub25jZV9hdXRoZW50aWNhdGlvbl9oZWFkZXJcIjtcclxuY29uc3QgaW52YWxpZEF1dGhlbnRpY2F0aW9uSGVhZGVyID0gXCJpbnZhbGlkX2F1dGhlbnRpY2F0aW9uX2hlYWRlclwiO1xyXG5jb25zdCBjYW5ub3RTZXRPSURDT3B0aW9ucyA9IFwiY2Fubm90X3NldF9PSURDT3B0aW9uc1wiO1xyXG5jb25zdCBjYW5ub3RBbGxvd05hdGl2ZUJyb2tlciA9IFwiY2Fubm90X2FsbG93X25hdGl2ZV9icm9rZXJcIjtcclxuY29uc3QgYXV0aG9yaXR5TWlzbWF0Y2ggPSBcImF1dGhvcml0eV9taXNtYXRjaFwiO1xuXG5leHBvcnQgeyBhdXRob3JpdHlNaXNtYXRjaCwgYXV0aG9yaXR5VXJpSW5zZWN1cmUsIGNhbm5vdEFsbG93TmF0aXZlQnJva2VyLCBjYW5ub3RTZXRPSURDT3B0aW9ucywgY2xhaW1zUmVxdWVzdFBhcnNpbmdFcnJvciwgZW1wdHlJbnB1dFNjb3Blc0Vycm9yLCBpbnZhbGlkQXV0aGVudGljYXRpb25IZWFkZXIsIGludmFsaWRBdXRob3JpdHlNZXRhZGF0YSwgaW52YWxpZENsYWltcywgaW52YWxpZENsb3VkRGlzY292ZXJ5TWV0YWRhdGEsIGludmFsaWRDb2RlQ2hhbGxlbmdlTWV0aG9kLCBpbnZhbGlkUHJvbXB0VmFsdWUsIGxvZ291dFJlcXVlc3RFbXB0eSwgbWlzc2luZ05vbmNlQXV0aGVudGljYXRpb25IZWFkZXIsIG1pc3NpbmdTc2hKd2ssIG1pc3NpbmdTc2hLaWQsIHBrY2VQYXJhbXNNaXNzaW5nLCByZWRpcmVjdFVyaUVtcHR5LCB0b2tlblJlcXVlc3RFbXB0eSwgdW50cnVzdGVkQXV0aG9yaXR5LCB1cmxFbXB0eUVycm9yLCB1cmxQYXJzZUVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractionRequiredAuthError: function() { return /* binding */ InteractionRequiredAuthError; },\n/* harmony export */   InteractionRequiredAuthErrorCodes: function() { return /* reexport module object */ _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   InteractionRequiredAuthErrorMessage: function() { return /* binding */ InteractionRequiredAuthErrorMessage; },\n/* harmony export */   InteractionRequiredAuthSubErrorMessage: function() { return /* binding */ InteractionRequiredAuthSubErrorMessage; },\n/* harmony export */   InteractionRequiredServerErrorMessage: function() { return /* binding */ InteractionRequiredServerErrorMessage; },\n/* harmony export */   createInteractionRequiredAuthError: function() { return /* binding */ createInteractionRequiredAuthError; },\n/* harmony export */   isInteractionRequiredError: function() { return /* binding */ isInteractionRequiredError; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InteractionRequiredAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\r\nconst InteractionRequiredServerErrorMessage = [\r\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.interactionRequired,\r\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.consentRequired,\r\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.loginRequired,\r\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken,\r\n];\r\nconst InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\",\r\n    \"bad_token\",\r\n];\r\nconst InteractionRequiredAuthErrorMessages = {\r\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokensFound]: \"No refresh token found in the cache. Please sign-in.\",\r\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeAccountUnavailable]: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\r\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.refreshTokenExpired]: \"Refresh token has expired.\",\r\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken]: \"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.\",\r\n};\r\n/**\r\n * Interaction required errors defined by the SDK\r\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\r\n */\r\nconst InteractionRequiredAuthErrorMessage = {\r\n    noTokensFoundError: {\r\n        code: _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokensFound,\r\n        desc: InteractionRequiredAuthErrorMessages[_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokensFound],\r\n    },\r\n    native_account_unavailable: {\r\n        code: _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeAccountUnavailable,\r\n        desc: InteractionRequiredAuthErrorMessages[_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeAccountUnavailable],\r\n    },\r\n    bad_token: {\r\n        code: _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken,\r\n        desc: InteractionRequiredAuthErrorMessages[_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken],\r\n    },\r\n};\r\n/**\r\n * Error thrown when user interaction is required.\r\n */\r\nclass InteractionRequiredAuthError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims, errorNo) {\r\n        super(errorCode, errorMessage, subError);\r\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\r\n        this.timestamp = timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\r\n        this.traceId = traceId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\r\n        this.correlationId = correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\r\n        this.claims = claims || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\r\n        this.name = \"InteractionRequiredAuthError\";\r\n        this.errorNo = errorNo;\r\n    }\r\n}\r\n/**\r\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n * @param errorCode\r\n * @param errorString\r\n * @param subError\r\n */\r\nfunction isInteractionRequiredError(errorCode, errorString, subError) {\r\n    const isInteractionRequiredErrorCode = !!errorCode &&\r\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\r\n    const isInteractionRequiredSubError = !!subError &&\r\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n    const isInteractionRequiredErrorDesc = !!errorString &&\r\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n    return (isInteractionRequiredErrorCode ||\r\n        isInteractionRequiredErrorDesc ||\r\n        isInteractionRequiredSubError);\r\n}\r\n/**\r\n * Creates an InteractionRequiredAuthError\r\n */\r\nfunction createInteractionRequiredAuthError(errorCode) {\r\n    return new InteractionRequiredAuthError(errorCode, InteractionRequiredAuthErrorMessages[errorCode]);\r\n}\n\n\n//# sourceMappingURL=InteractionRequiredAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDc0M7QUFDUDtBQUMwSTtBQUN6RjtBQUNoRDs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdUZBQW1CO0FBQ3ZCLElBQUksbUZBQWU7QUFDbkIsSUFBSSxpRkFBYTtBQUNqQixJQUFJLDRFQUFRO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLGlGQUFhO0FBQ2xCLEtBQUssNEZBQXdCO0FBQzdCLEtBQUssdUZBQW1CO0FBQ3hCLEtBQUssNEVBQVE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQWE7QUFDM0IsbURBQW1ELGlGQUFhO0FBQ2hFLEtBQUs7QUFDTDtBQUNBLGNBQWMsNEZBQXdCO0FBQ3RDLG1EQUFtRCw0RkFBd0I7QUFDM0UsS0FBSztBQUNMO0FBQ0EsY0FBYyw0RUFBUTtBQUN0QixtREFBbUQsNEVBQVE7QUFDM0QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHFEQUFTO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywyREFBUztBQUMvQyxrQ0FBa0MsMkRBQVM7QUFDM0MsOENBQThDLDJEQUFTO0FBQ3ZELGdDQUFnQywyREFBUztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTROO0FBQzVOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9JbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLm1qcz80NDhjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICcuL0F1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgbm9Ub2tlbnNGb3VuZCwgbmF0aXZlQWNjb3VudFVuYXZhaWxhYmxlLCBiYWRUb2tlbiwgcmVmcmVzaFRva2VuRXhwaXJlZCwgaW50ZXJhY3Rpb25SZXF1aXJlZCwgY29uc2VudFJlcXVpcmVkLCBsb2dpblJlcXVpcmVkIH0gZnJvbSAnLi9JbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yQ29kZXMubWpzJztcbmltcG9ydCAqIGFzIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2RlcyBmcm9tICcuL0ludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuZXhwb3J0IHsgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzIH07XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogSW50ZXJhY3Rpb25SZXF1aXJlZFNlcnZlckVycm9yTWVzc2FnZSBjb250YWlucyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzIHJldHVybmVkIGJ5IHRoZSBzZXJ2ZXIgaW5kaWNhdGluZyBpbnRlcmFjdGlvbiBpcyByZXF1aXJlZFxyXG4gKi9cclxuY29uc3QgSW50ZXJhY3Rpb25SZXF1aXJlZFNlcnZlckVycm9yTWVzc2FnZSA9IFtcclxuICAgIGludGVyYWN0aW9uUmVxdWlyZWQsXHJcbiAgICBjb25zZW50UmVxdWlyZWQsXHJcbiAgICBsb2dpblJlcXVpcmVkLFxyXG4gICAgYmFkVG9rZW4sXHJcbl07XHJcbmNvbnN0IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoU3ViRXJyb3JNZXNzYWdlID0gW1xyXG4gICAgXCJtZXNzYWdlX29ubHlcIixcclxuICAgIFwiYWRkaXRpb25hbF9hY3Rpb25cIixcclxuICAgIFwiYmFzaWNfYWN0aW9uXCIsXHJcbiAgICBcInVzZXJfcGFzc3dvcmRfZXhwaXJlZFwiLFxyXG4gICAgXCJjb25zZW50X3JlcXVpcmVkXCIsXHJcbiAgICBcImJhZF90b2tlblwiLFxyXG5dO1xyXG5jb25zdCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZXMgPSB7XHJcbiAgICBbbm9Ub2tlbnNGb3VuZF06IFwiTm8gcmVmcmVzaCB0b2tlbiBmb3VuZCBpbiB0aGUgY2FjaGUuIFBsZWFzZSBzaWduLWluLlwiLFxyXG4gICAgW25hdGl2ZUFjY291bnRVbmF2YWlsYWJsZV06IFwiVGhlIHJlcXVlc3RlZCBhY2NvdW50IGlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIG5hdGl2ZSBicm9rZXIuIEl0IG1heSBoYXZlIGJlZW4gZGVsZXRlZCBvciBsb2dnZWQgb3V0LiBQbGVhc2Ugc2lnbi1pbiBhZ2FpbiB1c2luZyBhbiBpbnRlcmFjdGl2ZSBBUEkuXCIsXHJcbiAgICBbcmVmcmVzaFRva2VuRXhwaXJlZF06IFwiUmVmcmVzaCB0b2tlbiBoYXMgZXhwaXJlZC5cIixcclxuICAgIFtiYWRUb2tlbl06IFwiSWRlbnRpdHkgcHJvdmlkZXIgcmV0dXJuZWQgYmFkX3Rva2VuIGR1ZSB0byBhbiBleHBpcmVkIG9yIGludmFsaWQgcmVmcmVzaCB0b2tlbi4gUGxlYXNlIGludm9rZSBhbiBpbnRlcmFjdGl2ZSBBUEkgdG8gcmVzb2x2ZS5cIixcclxufTtcclxuLyoqXHJcbiAqIEludGVyYWN0aW9uIHJlcXVpcmVkIGVycm9ycyBkZWZpbmVkIGJ5IHRoZSBTREtcclxuICogQGRlcHJlY2F0ZWQgVXNlIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2RlcyBpbnN0ZWFkXHJcbiAqL1xyXG5jb25zdCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZSA9IHtcclxuICAgIG5vVG9rZW5zRm91bmRFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IG5vVG9rZW5zRm91bmQsXHJcbiAgICAgICAgZGVzYzogSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2VzW25vVG9rZW5zRm91bmRdLFxyXG4gICAgfSxcclxuICAgIG5hdGl2ZV9hY2NvdW50X3VuYXZhaWxhYmxlOiB7XHJcbiAgICAgICAgY29kZTogbmF0aXZlQWNjb3VudFVuYXZhaWxhYmxlLFxyXG4gICAgICAgIGRlc2M6IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlc1tuYXRpdmVBY2NvdW50VW5hdmFpbGFibGVdLFxyXG4gICAgfSxcclxuICAgIGJhZF90b2tlbjoge1xyXG4gICAgICAgIGNvZGU6IGJhZFRva2VuLFxyXG4gICAgICAgIGRlc2M6IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlc1tiYWRUb2tlbl0sXHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogRXJyb3IgdGhyb3duIHdoZW4gdXNlciBpbnRlcmFjdGlvbiBpcyByZXF1aXJlZC5cclxuICovXHJcbmNsYXNzIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UsIHN1YkVycm9yLCB0aW1lc3RhbXAsIHRyYWNlSWQsIGNvcnJlbGF0aW9uSWQsIGNsYWltcywgZXJyb3JObykge1xyXG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlLCBzdWJFcnJvcik7XHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IucHJvdG90eXBlKTtcclxuICAgICAgICB0aGlzLnRpbWVzdGFtcCA9IHRpbWVzdGFtcCB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xyXG4gICAgICAgIHRoaXMudHJhY2VJZCA9IHRyYWNlSWQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICB0aGlzLmNvcnJlbGF0aW9uSWQgPSBjb3JyZWxhdGlvbklkIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XHJcbiAgICAgICAgdGhpcy5jbGFpbXMgPSBjbGFpbXMgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIkludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JcIjtcclxuICAgICAgICB0aGlzLmVycm9yTm8gPSBlcnJvck5vO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBIZWxwZXIgZnVuY3Rpb24gdXNlZCB0byBkZXRlcm1pbmUgaWYgYW4gZXJyb3IgdGhyb3duIGJ5IHRoZSBzZXJ2ZXIgcmVxdWlyZXMgaW50ZXJhY3Rpb24gdG8gcmVzb2x2ZVxyXG4gKiBAcGFyYW0gZXJyb3JDb2RlXHJcbiAqIEBwYXJhbSBlcnJvclN0cmluZ1xyXG4gKiBAcGFyYW0gc3ViRXJyb3JcclxuICovXHJcbmZ1bmN0aW9uIGlzSW50ZXJhY3Rpb25SZXF1aXJlZEVycm9yKGVycm9yQ29kZSwgZXJyb3JTdHJpbmcsIHN1YkVycm9yKSB7XHJcbiAgICBjb25zdCBpc0ludGVyYWN0aW9uUmVxdWlyZWRFcnJvckNvZGUgPSAhIWVycm9yQ29kZSAmJlxyXG4gICAgICAgIEludGVyYWN0aW9uUmVxdWlyZWRTZXJ2ZXJFcnJvck1lc3NhZ2UuaW5kZXhPZihlcnJvckNvZGUpID4gLTE7XHJcbiAgICBjb25zdCBpc0ludGVyYWN0aW9uUmVxdWlyZWRTdWJFcnJvciA9ICEhc3ViRXJyb3IgJiZcclxuICAgICAgICBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aFN1YkVycm9yTWVzc2FnZS5pbmRleE9mKHN1YkVycm9yKSA+IC0xO1xyXG4gICAgY29uc3QgaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3JEZXNjID0gISFlcnJvclN0cmluZyAmJlxyXG4gICAgICAgIEludGVyYWN0aW9uUmVxdWlyZWRTZXJ2ZXJFcnJvck1lc3NhZ2Uuc29tZSgoaXJFcnJvckNvZGUpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIGVycm9yU3RyaW5nLmluZGV4T2YoaXJFcnJvckNvZGUpID4gLTE7XHJcbiAgICAgICAgfSk7XHJcbiAgICByZXR1cm4gKGlzSW50ZXJhY3Rpb25SZXF1aXJlZEVycm9yQ29kZSB8fFxyXG4gICAgICAgIGlzSW50ZXJhY3Rpb25SZXF1aXJlZEVycm9yRGVzYyB8fFxyXG4gICAgICAgIGlzSW50ZXJhY3Rpb25SZXF1aXJlZFN1YkVycm9yKTtcclxufVxyXG4vKipcclxuICogQ3JlYXRlcyBhbiBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKGVycm9yQ29kZSkge1xyXG4gICAgcmV0dXJuIG5ldyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKGVycm9yQ29kZSwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2VzW2Vycm9yQ29kZV0pO1xyXG59XG5cbmV4cG9ydCB7IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlLCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aFN1YkVycm9yTWVzc2FnZSwgSW50ZXJhY3Rpb25SZXF1aXJlZFNlcnZlckVycm9yTWVzc2FnZSwgY3JlYXRlSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvciwgaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   badToken: function() { return /* binding */ badToken; },\n/* harmony export */   consentRequired: function() { return /* binding */ consentRequired; },\n/* harmony export */   interactionRequired: function() { return /* binding */ interactionRequired; },\n/* harmony export */   loginRequired: function() { return /* binding */ loginRequired; },\n/* harmony export */   nativeAccountUnavailable: function() { return /* binding */ nativeAccountUnavailable; },\n/* harmony export */   noTokensFound: function() { return /* binding */ noTokensFound; },\n/* harmony export */   refreshTokenExpired: function() { return /* binding */ refreshTokenExpired; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Codes defined by MSAL\r\nconst noTokensFound = \"no_tokens_found\";\r\nconst nativeAccountUnavailable = \"native_account_unavailable\";\r\nconst refreshTokenExpired = \"refresh_token_expired\";\r\n// Codes potentially returned by server\r\nconst interactionRequired = \"interaction_required\";\r\nconst consentRequired = \"consent_required\";\r\nconst loginRequired = \"login_required\";\r\nconst badToken = \"bad_token\";\n\n\n//# sourceMappingURL=InteractionRequiredAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1STtBQUN2SSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLm1qcz85N2QxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8vIENvZGVzIGRlZmluZWQgYnkgTVNBTFxyXG5jb25zdCBub1Rva2Vuc0ZvdW5kID0gXCJub190b2tlbnNfZm91bmRcIjtcclxuY29uc3QgbmF0aXZlQWNjb3VudFVuYXZhaWxhYmxlID0gXCJuYXRpdmVfYWNjb3VudF91bmF2YWlsYWJsZVwiO1xyXG5jb25zdCByZWZyZXNoVG9rZW5FeHBpcmVkID0gXCJyZWZyZXNoX3Rva2VuX2V4cGlyZWRcIjtcclxuLy8gQ29kZXMgcG90ZW50aWFsbHkgcmV0dXJuZWQgYnkgc2VydmVyXHJcbmNvbnN0IGludGVyYWN0aW9uUmVxdWlyZWQgPSBcImludGVyYWN0aW9uX3JlcXVpcmVkXCI7XHJcbmNvbnN0IGNvbnNlbnRSZXF1aXJlZCA9IFwiY29uc2VudF9yZXF1aXJlZFwiO1xyXG5jb25zdCBsb2dpblJlcXVpcmVkID0gXCJsb2dpbl9yZXF1aXJlZFwiO1xyXG5jb25zdCBiYWRUb2tlbiA9IFwiYmFkX3Rva2VuXCI7XG5cbmV4cG9ydCB7IGJhZFRva2VuLCBjb25zZW50UmVxdWlyZWQsIGludGVyYWN0aW9uUmVxdWlyZWQsIGxvZ2luUmVxdWlyZWQsIG5hdGl2ZUFjY291bnRVbmF2YWlsYWJsZSwgbm9Ub2tlbnNGb3VuZCwgcmVmcmVzaFRva2VuRXhwaXJlZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JoseHeaderError: function() { return /* binding */ JoseHeaderError; },\n/* harmony export */   JoseHeaderErrorMessages: function() { return /* binding */ JoseHeaderErrorMessages; },\n/* harmony export */   createJoseHeaderError: function() { return /* binding */ createJoseHeaderError; }\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./JoseHeaderErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst JoseHeaderErrorMessages = {\r\n    [_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingKidError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\r\n    [_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingAlgError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nclass JoseHeaderError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"JoseHeaderError\";\r\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\r\n    }\r\n}\r\n/** Returns JoseHeaderError object */\r\nfunction createJoseHeaderError(code) {\r\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\r\n}\n\n\n//# sourceMappingURL=JoseHeaderError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSm9zZUhlYWRlckVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDK0I7QUFDa0M7O0FBRTlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLHNFQUFlO0FBQ3BCLEtBQUssc0VBQWU7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscURBQVM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTJFO0FBQzNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9Kb3NlSGVhZGVyRXJyb3IubWpzPzJiMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICcuL0F1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgbWlzc2luZ0tpZEVycm9yLCBtaXNzaW5nQWxnRXJyb3IgfSBmcm9tICcuL0pvc2VIZWFkZXJFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBKb3NlSGVhZGVyRXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIFttaXNzaW5nS2lkRXJyb3JdOiBcIlRoZSBKT1NFIEhlYWRlciBmb3IgdGhlIHJlcXVlc3RlZCBKV1QsIEpXUyBvciBKV0sgb2JqZWN0IHJlcXVpcmVzIGEga2V5SWQgdG8gYmUgY29uZmlndXJlZCBhcyB0aGUgJ2tpZCcgaGVhZGVyIGNsYWltLiBObyAna2lkJyB2YWx1ZSB3YXMgcHJvdmlkZWQuXCIsXHJcbiAgICBbbWlzc2luZ0FsZ0Vycm9yXTogXCJUaGUgSk9TRSBIZWFkZXIgZm9yIHRoZSByZXF1ZXN0ZWQgSldULCBKV1Mgb3IgSldLIG9iamVjdCByZXF1aXJlcyBhbiBhbGdvcml0aG0gdG8gYmUgc3BlY2lmaWVkIGFzIHRoZSAnYWxnJyBoZWFkZXIgY2xhaW0uIE5vICdhbGcnIHZhbHVlIHdhcyBwcm92aWRlZC5cIixcclxufTtcclxuLyoqXHJcbiAqIEVycm9yIHRocm93biB3aGVuIHRoZXJlIGlzIGFuIGVycm9yIGluIHRoZSBjbGllbnQgY29kZSBydW5uaW5nIG9uIHRoZSBicm93c2VyLlxyXG4gKi9cclxuY2xhc3MgSm9zZUhlYWRlckVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICAgICAgc3VwZXIoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IFwiSm9zZUhlYWRlckVycm9yXCI7XHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEpvc2VIZWFkZXJFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgfVxyXG59XHJcbi8qKiBSZXR1cm5zIEpvc2VIZWFkZXJFcnJvciBvYmplY3QgKi9cclxuZnVuY3Rpb24gY3JlYXRlSm9zZUhlYWRlckVycm9yKGNvZGUpIHtcclxuICAgIHJldHVybiBuZXcgSm9zZUhlYWRlckVycm9yKGNvZGUsIEpvc2VIZWFkZXJFcnJvck1lc3NhZ2VzW2NvZGVdKTtcclxufVxuXG5leHBvcnQgeyBKb3NlSGVhZGVyRXJyb3IsIEpvc2VIZWFkZXJFcnJvck1lc3NhZ2VzLCBjcmVhdGVKb3NlSGVhZGVyRXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUpvc2VIZWFkZXJFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   missingAlgError: function() { return /* binding */ missingAlgError; },\n/* harmony export */   missingKidError: function() { return /* binding */ missingKidError; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst missingKidError = \"missing_kid_error\";\r\nconst missingAlgError = \"missing_alg_error\";\n\n\n//# sourceMappingURL=JoseHeaderErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSm9zZUhlYWRlckVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0pvc2VIZWFkZXJFcnJvckNvZGVzLm1qcz84NGVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IG1pc3NpbmdLaWRFcnJvciA9IFwibWlzc2luZ19raWRfZXJyb3JcIjtcclxuY29uc3QgbWlzc2luZ0FsZ0Vycm9yID0gXCJtaXNzaW5nX2FsZ19lcnJvclwiO1xuXG5leHBvcnQgeyBtaXNzaW5nQWxnRXJyb3IsIG1pc3NpbmdLaWRFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Sm9zZUhlYWRlckVycm9yQ29kZXMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/NetworkError.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/NetworkError.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NetworkError: function() { return /* binding */ NetworkError; },\n/* harmony export */   createNetworkError: function() { return /* binding */ createNetworkError; }\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Represents network related errors\r\n */\r\nclass NetworkError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError {\r\n    constructor(error, httpStatus, responseHeaders) {\r\n        super(error.errorCode, error.errorMessage, error.subError);\r\n        Object.setPrototypeOf(this, NetworkError.prototype);\r\n        this.name = \"NetworkError\";\r\n        this.error = error;\r\n        this.httpStatus = httpStatus;\r\n        this.responseHeaders = responseHeaders;\r\n    }\r\n}\r\n/**\r\n * Creates NetworkError object for a failed network request\r\n * @param error - Error to be thrown back to the caller\r\n * @param httpStatus - Status code of the network request\r\n * @param responseHeaders - Response headers of the network request, when available\r\n * @returns NetworkError object\r\n */\r\nfunction createNetworkError(error, httpStatus, responseHeaders) {\r\n    return new NetworkError(error, httpStatus, responseHeaders);\r\n}\n\n\n//# sourceMappingURL=NetworkError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvTmV0d29ya0Vycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQytCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixxREFBUztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL05ldHdvcmtFcnJvci5tanM/NTExYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gJy4vQXV0aEVycm9yLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogUmVwcmVzZW50cyBuZXR3b3JrIHJlbGF0ZWQgZXJyb3JzXHJcbiAqL1xyXG5jbGFzcyBOZXR3b3JrRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoZXJyb3IsIGh0dHBTdGF0dXMsIHJlc3BvbnNlSGVhZGVycykge1xyXG4gICAgICAgIHN1cGVyKGVycm9yLmVycm9yQ29kZSwgZXJyb3IuZXJyb3JNZXNzYWdlLCBlcnJvci5zdWJFcnJvcik7XHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIE5ldHdvcmtFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IFwiTmV0d29ya0Vycm9yXCI7XHJcbiAgICAgICAgdGhpcy5lcnJvciA9IGVycm9yO1xyXG4gICAgICAgIHRoaXMuaHR0cFN0YXR1cyA9IGh0dHBTdGF0dXM7XHJcbiAgICAgICAgdGhpcy5yZXNwb25zZUhlYWRlcnMgPSByZXNwb25zZUhlYWRlcnM7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIENyZWF0ZXMgTmV0d29ya0Vycm9yIG9iamVjdCBmb3IgYSBmYWlsZWQgbmV0d29yayByZXF1ZXN0XHJcbiAqIEBwYXJhbSBlcnJvciAtIEVycm9yIHRvIGJlIHRocm93biBiYWNrIHRvIHRoZSBjYWxsZXJcclxuICogQHBhcmFtIGh0dHBTdGF0dXMgLSBTdGF0dXMgY29kZSBvZiB0aGUgbmV0d29yayByZXF1ZXN0XHJcbiAqIEBwYXJhbSByZXNwb25zZUhlYWRlcnMgLSBSZXNwb25zZSBoZWFkZXJzIG9mIHRoZSBuZXR3b3JrIHJlcXVlc3QsIHdoZW4gYXZhaWxhYmxlXHJcbiAqIEByZXR1cm5zIE5ldHdvcmtFcnJvciBvYmplY3RcclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZU5ldHdvcmtFcnJvcihlcnJvciwgaHR0cFN0YXR1cywgcmVzcG9uc2VIZWFkZXJzKSB7XHJcbiAgICByZXR1cm4gbmV3IE5ldHdvcmtFcnJvcihlcnJvciwgaHR0cFN0YXR1cywgcmVzcG9uc2VIZWFkZXJzKTtcclxufVxuXG5leHBvcnQgeyBOZXR3b3JrRXJyb3IsIGNyZWF0ZU5ldHdvcmtFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmV0d29ya0Vycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/NetworkError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/error/ServerError.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ServerError.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerError: function() { return /* binding */ ServerError; }\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nclass ServerError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError {\r\n    constructor(errorCode, errorMessage, subError, errorNo, status) {\r\n        super(errorCode, errorMessage, subError);\r\n        this.name = \"ServerError\";\r\n        this.errorNo = errorNo;\r\n        this.status = status;\r\n        Object.setPrototypeOf(this, ServerError.prototype);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ServerError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvU2VydmVyRXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUMrQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL1NlcnZlckVycm9yLm1qcz9mNTc2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSAnLi9BdXRoRXJyb3IubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBFcnJvciB0aHJvd24gd2hlbiB0aGVyZSBpcyBhbiBlcnJvciB3aXRoIHRoZSBzZXJ2ZXIgY29kZSwgZm9yIGV4YW1wbGUsIHVuYXZhaWxhYmlsaXR5LlxyXG4gKi9cclxuY2xhc3MgU2VydmVyRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UsIHN1YkVycm9yLCBlcnJvck5vLCBzdGF0dXMpIHtcclxuICAgICAgICBzdXBlcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSwgc3ViRXJyb3IpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IFwiU2VydmVyRXJyb3JcIjtcclxuICAgICAgICB0aGlzLmVycm9yTm8gPSBlcnJvck5vO1xyXG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBTZXJ2ZXJFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFNlcnZlckVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2ZXJFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/error/ServerError.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/index-browser.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/index-browser.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AADAuthorityConstants: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.AADAuthorityConstants; },\n/* harmony export */   AADServerParamKeys: function() { return /* reexport module object */ _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_47__; },\n/* harmony export */   AccountEntity: function() { return /* reexport safe */ _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_14__.AccountEntity; },\n/* harmony export */   AuthError: function() { return /* reexport safe */ _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_26__.AuthError; },\n/* harmony export */   AuthErrorCodes: function() { return /* reexport module object */ _error_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_27__; },\n/* harmony export */   AuthErrorMessage: function() { return /* reexport safe */ _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_26__.AuthErrorMessage; },\n/* harmony export */   AuthToken: function() { return /* reexport module object */ _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_42__; },\n/* harmony export */   AuthenticationHeaderParser: function() { return /* reexport safe */ _request_AuthenticationHeaderParser_mjs__WEBPACK_IMPORTED_MODULE_22__.AuthenticationHeaderParser; },\n/* harmony export */   AuthenticationScheme: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.AuthenticationScheme; },\n/* harmony export */   Authority: function() { return /* reexport safe */ _authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_9__.Authority; },\n/* harmony export */   AuthorityFactory: function() { return /* reexport module object */ _authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_43__; },\n/* harmony export */   AuthorityType: function() { return /* reexport safe */ _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_11__.AuthorityType; },\n/* harmony export */   AuthorizationCodeClient: function() { return /* reexport safe */ _client_AuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthorizationCodeClient; },\n/* harmony export */   AzureCloudInstance: function() { return /* reexport safe */ _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_10__.AzureCloudInstance; },\n/* harmony export */   BaseClient: function() { return /* reexport safe */ _client_BaseClient_mjs__WEBPACK_IMPORTED_MODULE_3__.BaseClient; },\n/* harmony export */   CacheAccountType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.CacheAccountType; },\n/* harmony export */   CacheError: function() { return /* reexport safe */ _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_30__.CacheError; },\n/* harmony export */   CacheErrorCodes: function() { return /* reexport module object */ _error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_31__; },\n/* harmony export */   CacheHelpers: function() { return /* reexport module object */ _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_44__; },\n/* harmony export */   CacheManager: function() { return /* reexport safe */ _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_13__.CacheManager; },\n/* harmony export */   CacheOutcome: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.CacheOutcome; },\n/* harmony export */   CacheType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.CacheType; },\n/* harmony export */   CcsCredentialType: function() { return /* reexport safe */ _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_7__.CcsCredentialType; },\n/* harmony export */   ClaimsRequestKeys: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.ClaimsRequestKeys; },\n/* harmony export */   ClientAuthError: function() { return /* reexport safe */ _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_32__.ClientAuthError; },\n/* harmony export */   ClientAuthErrorCodes: function() { return /* reexport module object */ _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_33__; },\n/* harmony export */   ClientAuthErrorMessage: function() { return /* reexport safe */ _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_32__.ClientAuthErrorMessage; },\n/* harmony export */   ClientConfigurationError: function() { return /* reexport safe */ _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_34__.ClientConfigurationError; },\n/* harmony export */   ClientConfigurationErrorCodes: function() { return /* reexport module object */ _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_35__; },\n/* harmony export */   ClientConfigurationErrorMessage: function() { return /* reexport safe */ _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_34__.ClientConfigurationErrorMessage; },\n/* harmony export */   CodeChallengeMethodValues: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.CodeChallengeMethodValues; },\n/* harmony export */   Constants: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.Constants; },\n/* harmony export */   CredentialType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.CredentialType; },\n/* harmony export */   DEFAULT_CRYPTO_IMPLEMENTATION: function() { return /* reexport safe */ _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_18__.DEFAULT_CRYPTO_IMPLEMENTATION; },\n/* harmony export */   DEFAULT_SYSTEM_OPTIONS: function() { return /* reexport safe */ _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_SYSTEM_OPTIONS; },\n/* harmony export */   DEFAULT_TOKEN_RENEWAL_OFFSET_SEC: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.DEFAULT_TOKEN_RENEWAL_OFFSET_SEC; },\n/* harmony export */   DefaultStorageClass: function() { return /* reexport safe */ _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_13__.DefaultStorageClass; },\n/* harmony export */   Errors: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.Errors; },\n/* harmony export */   GrantType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.GrantType; },\n/* harmony export */   HeaderNames: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.HeaderNames; },\n/* harmony export */   HttpStatus: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.HttpStatus; },\n/* harmony export */   IntFields: function() { return /* reexport safe */ _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_49__.IntFields; },\n/* harmony export */   InteractionRequiredAuthError: function() { return /* reexport safe */ _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_24__.InteractionRequiredAuthError; },\n/* harmony export */   InteractionRequiredAuthErrorCodes: function() { return /* reexport module object */ _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_25__; },\n/* harmony export */   InteractionRequiredAuthErrorMessage: function() { return /* reexport safe */ _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_24__.InteractionRequiredAuthErrorMessage; },\n/* harmony export */   JoseHeader: function() { return /* reexport safe */ _crypto_JoseHeader_mjs__WEBPACK_IMPORTED_MODULE_48__.JoseHeader; },\n/* harmony export */   JsonWebTokenTypes: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.JsonWebTokenTypes; },\n/* harmony export */   LogLevel: function() { return /* reexport safe */ _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_23__.LogLevel; },\n/* harmony export */   Logger: function() { return /* reexport safe */ _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_23__.Logger; },\n/* harmony export */   NetworkError: function() { return /* reexport safe */ _error_NetworkError_mjs__WEBPACK_IMPORTED_MODULE_29__.NetworkError; },\n/* harmony export */   OIDC_DEFAULT_SCOPES: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.OIDC_DEFAULT_SCOPES; },\n/* harmony export */   ONE_DAY_IN_MS: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.ONE_DAY_IN_MS; },\n/* harmony export */   PasswordGrantConstants: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.PasswordGrantConstants; },\n/* harmony export */   PerformanceClient: function() { return /* reexport safe */ _telemetry_performance_PerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_50__.PerformanceClient; },\n/* harmony export */   PerformanceEventStatus: function() { return /* reexport safe */ _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_49__.PerformanceEventStatus; },\n/* harmony export */   PerformanceEvents: function() { return /* reexport safe */ _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_49__.PerformanceEvents; },\n/* harmony export */   PersistentCacheKeys: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.PersistentCacheKeys; },\n/* harmony export */   PopTokenGenerator: function() { return /* reexport safe */ _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_52__.PopTokenGenerator; },\n/* harmony export */   PromptValue: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.PromptValue; },\n/* harmony export */   ProtocolMode: function() { return /* reexport safe */ _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_12__.ProtocolMode; },\n/* harmony export */   ProtocolUtils: function() { return /* reexport safe */ _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_38__.ProtocolUtils; },\n/* harmony export */   RefreshTokenClient: function() { return /* reexport safe */ _client_RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_1__.RefreshTokenClient; },\n/* harmony export */   RequestParameterBuilder: function() { return /* reexport safe */ _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_19__.RequestParameterBuilder; },\n/* harmony export */   ResponseHandler: function() { return /* reexport safe */ _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_20__.ResponseHandler; },\n/* harmony export */   ResponseMode: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.ResponseMode; },\n/* harmony export */   ScopeSet: function() { return /* reexport safe */ _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_21__.ScopeSet; },\n/* harmony export */   ServerError: function() { return /* reexport safe */ _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_28__.ServerError; },\n/* harmony export */   ServerResponseType: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.ServerResponseType; },\n/* harmony export */   ServerTelemetryManager: function() { return /* reexport safe */ _telemetry_server_ServerTelemetryManager_mjs__WEBPACK_IMPORTED_MODULE_39__.ServerTelemetryManager; },\n/* harmony export */   SilentFlowClient: function() { return /* reexport safe */ _client_SilentFlowClient_mjs__WEBPACK_IMPORTED_MODULE_2__.SilentFlowClient; },\n/* harmony export */   StringUtils: function() { return /* reexport safe */ _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_37__.StringUtils; },\n/* harmony export */   StubPerformanceClient: function() { return /* reexport safe */ _telemetry_performance_StubPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_51__.StubPerformanceClient; },\n/* harmony export */   StubbedNetworkModule: function() { return /* reexport safe */ _network_INetworkModule_mjs__WEBPACK_IMPORTED_MODULE_15__.StubbedNetworkModule; },\n/* harmony export */   THE_FAMILY_ID: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.THE_FAMILY_ID; },\n/* harmony export */   ThrottlingConstants: function() { return /* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__.ThrottlingConstants; },\n/* harmony export */   ThrottlingUtils: function() { return /* reexport safe */ _network_ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_16__.ThrottlingUtils; },\n/* harmony export */   TimeUtils: function() { return /* reexport module object */ _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_45__; },\n/* harmony export */   UrlString: function() { return /* reexport safe */ _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_17__.UrlString; },\n/* harmony export */   UrlUtils: function() { return /* reexport module object */ _utils_UrlUtils_mjs__WEBPACK_IMPORTED_MODULE_46__; },\n/* harmony export */   buildAccountToCache: function() { return /* reexport safe */ _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_20__.buildAccountToCache; },\n/* harmony export */   buildClientInfo: function() { return /* reexport safe */ _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__.buildClientInfo; },\n/* harmony export */   buildClientInfoFromHomeAccountId: function() { return /* reexport safe */ _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__.buildClientInfoFromHomeAccountId; },\n/* harmony export */   buildStaticAuthorityOptions: function() { return /* reexport safe */ _authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_9__.buildStaticAuthorityOptions; },\n/* harmony export */   buildTenantProfile: function() { return /* reexport safe */ _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_5__.buildTenantProfile; },\n/* harmony export */   createAuthError: function() { return /* reexport safe */ _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_26__.createAuthError; },\n/* harmony export */   createClientAuthError: function() { return /* reexport safe */ _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_32__.createClientAuthError; },\n/* harmony export */   createClientConfigurationError: function() { return /* reexport safe */ _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_34__.createClientConfigurationError; },\n/* harmony export */   createInteractionRequiredAuthError: function() { return /* reexport safe */ _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_24__.createInteractionRequiredAuthError; },\n/* harmony export */   createNetworkError: function() { return /* reexport safe */ _error_NetworkError_mjs__WEBPACK_IMPORTED_MODULE_29__.createNetworkError; },\n/* harmony export */   formatAuthorityUri: function() { return /* reexport safe */ _authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_9__.formatAuthorityUri; },\n/* harmony export */   getTenantIdFromIdTokenClaims: function() { return /* reexport safe */ _account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_6__.getTenantIdFromIdTokenClaims; },\n/* harmony export */   invoke: function() { return /* reexport safe */ _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_41__.invoke; },\n/* harmony export */   invokeAsync: function() { return /* reexport safe */ _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_41__.invokeAsync; },\n/* harmony export */   tenantIdMatchesHomeTenant: function() { return /* reexport safe */ _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_5__.tenantIdMatchesHomeTenant; },\n/* harmony export */   updateAccountTenantProfileData: function() { return /* reexport safe */ _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_5__.updateAccountTenantProfileData; },\n/* harmony export */   version: function() { return /* reexport safe */ _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_40__.version; }\n/* harmony export */ });\n/* harmony import */ var _client_AuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client/AuthorizationCodeClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs\");\n/* harmony import */ var _client_RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client/RefreshTokenClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\");\n/* harmony import */ var _client_SilentFlowClient_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client/SilentFlowClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs\");\n/* harmony import */ var _client_BaseClient_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client/BaseClient.mjs */ \"./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config/ClientConfiguration.mjs */ \"./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./account/AccountInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./account/TokenClaims.mjs */ \"./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./account/CcsCredential.mjs */ \"./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./account/ClientInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./authority/Authority.mjs */ \"./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./authority/AuthorityOptions.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./authority/AuthorityType.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./authority/ProtocolMode.mjs */ \"./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./cache/CacheManager.mjs */ \"./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/* harmony import */ var _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cache/entities/AccountEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _network_INetworkModule_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./network/INetworkModule.mjs */ \"./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs\");\n/* harmony import */ var _network_ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./network/ThrottlingUtils.mjs */ \"./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./url/UrlString.mjs */ \"./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./crypto/ICrypto.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./request/RequestParameterBuilder.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./response/ResponseHandler.mjs */ \"./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./request/ScopeSet.mjs */ \"./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _request_AuthenticationHeaderParser_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./request/AuthenticationHeaderParser.mjs */ \"./node_modules/@azure/msal-common/dist/request/AuthenticationHeaderParser.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./logger/Logger.mjs */ \"./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./error/InteractionRequiredAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./error/InteractionRequiredAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _error_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./error/AuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./error/ServerError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _error_NetworkError_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./error/NetworkError.mjs */ \"./node_modules/@azure/msal-common/dist/error/NetworkError.mjs\");\n/* harmony import */ var _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./error/CacheError.mjs */ \"./node_modules/@azure/msal-common/dist/error/CacheError.mjs\");\n/* harmony import */ var _error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./error/CacheErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./error/ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./utils/ProtocolUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _telemetry_server_ServerTelemetryManager_mjs__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./telemetry/server/ServerTelemetryManager.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./packageMetadata.mjs */ \"./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./utils/FunctionWrappers.mjs */ \"./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./authority/AuthorityFactory.mjs */ \"./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./cache/utils/CacheHelpers.mjs */ \"./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./utils/TimeUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _utils_UrlUtils_mjs__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./utils/UrlUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./constants/AADServerParamKeys.mjs */ \"./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _crypto_JoseHeader_mjs__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./crypto/JoseHeader.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./telemetry/performance/PerformanceClient.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs\");\n/* harmony import */ var _telemetry_performance_StubPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./telemetry/performance/StubPerformanceClient.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./crypto/PopTokenGenerator.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index-browser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvaW5kZXgtYnJvd3Nlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2tFO0FBQ1Y7QUFDSjtBQUNaO0FBQ3FCO0FBQ2dEO0FBQ2pEO0FBQ1Q7QUFDNkI7QUFDVTtBQUNqQztBQUNSO0FBQ0Y7QUFDaUI7QUFDVjtBQUNDO0FBQ0o7QUFDaEI7QUFDcUI7QUFDVztBQUNNO0FBQ3BDO0FBQ29DO0FBQy9CO0FBQzBHO0FBQzlEO0FBQ3REO0FBQ3dDO0FBQ3hCO0FBQ25DO0FBQzRCO0FBQ3NCO0FBQ3hCO0FBQ1c7QUFDcEM7QUFDa0Y7QUFDcEM7QUFDekM7QUFDaUg7QUFDdEQ7QUFDbEQ7QUFDb2E7QUFDdlo7QUFDSTtBQUM2QjtBQUN2QztBQUNtQjtBQUNkO0FBQ2hDO0FBQ2dEO0FBQ3pDO0FBQ21DO0FBQ3ZDO0FBQzJCO0FBQzlCO0FBQzRCO0FBQzdCO0FBQ3FEO0FBQzNDO0FBQ3VCO0FBQytEO0FBQ2xDO0FBQ1E7QUFDdkI7QUFDbkUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2luZGV4LWJyb3dzZXIubWpzPzBkOGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5leHBvcnQgeyBBdXRob3JpemF0aW9uQ29kZUNsaWVudCB9IGZyb20gJy4vY2xpZW50L0F1dGhvcml6YXRpb25Db2RlQ2xpZW50Lm1qcyc7XG5leHBvcnQgeyBSZWZyZXNoVG9rZW5DbGllbnQgfSBmcm9tICcuL2NsaWVudC9SZWZyZXNoVG9rZW5DbGllbnQubWpzJztcbmV4cG9ydCB7IFNpbGVudEZsb3dDbGllbnQgfSBmcm9tICcuL2NsaWVudC9TaWxlbnRGbG93Q2xpZW50Lm1qcyc7XG5leHBvcnQgeyBCYXNlQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQvQmFzZUNsaWVudC5tanMnO1xuZXhwb3J0IHsgREVGQVVMVF9TWVNURU1fT1BUSU9OUyB9IGZyb20gJy4vY29uZmlnL0NsaWVudENvbmZpZ3VyYXRpb24ubWpzJztcbmV4cG9ydCB7IGJ1aWxkVGVuYW50UHJvZmlsZSwgdGVuYW50SWRNYXRjaGVzSG9tZVRlbmFudCwgdXBkYXRlQWNjb3VudFRlbmFudFByb2ZpbGVEYXRhIH0gZnJvbSAnLi9hY2NvdW50L0FjY291bnRJbmZvLm1qcyc7XG5leHBvcnQgeyBnZXRUZW5hbnRJZEZyb21JZFRva2VuQ2xhaW1zIH0gZnJvbSAnLi9hY2NvdW50L1Rva2VuQ2xhaW1zLm1qcyc7XG5leHBvcnQgeyBDY3NDcmVkZW50aWFsVHlwZSB9IGZyb20gJy4vYWNjb3VudC9DY3NDcmVkZW50aWFsLm1qcyc7XG5leHBvcnQgeyBidWlsZENsaWVudEluZm8sIGJ1aWxkQ2xpZW50SW5mb0Zyb21Ib21lQWNjb3VudElkIH0gZnJvbSAnLi9hY2NvdW50L0NsaWVudEluZm8ubWpzJztcbmV4cG9ydCB7IEF1dGhvcml0eSwgYnVpbGRTdGF0aWNBdXRob3JpdHlPcHRpb25zLCBmb3JtYXRBdXRob3JpdHlVcmkgfSBmcm9tICcuL2F1dGhvcml0eS9BdXRob3JpdHkubWpzJztcbmV4cG9ydCB7IEF6dXJlQ2xvdWRJbnN0YW5jZSB9IGZyb20gJy4vYXV0aG9yaXR5L0F1dGhvcml0eU9wdGlvbnMubWpzJztcbmV4cG9ydCB7IEF1dGhvcml0eVR5cGUgfSBmcm9tICcuL2F1dGhvcml0eS9BdXRob3JpdHlUeXBlLm1qcyc7XG5leHBvcnQgeyBQcm90b2NvbE1vZGUgfSBmcm9tICcuL2F1dGhvcml0eS9Qcm90b2NvbE1vZGUubWpzJztcbmV4cG9ydCB7IENhY2hlTWFuYWdlciwgRGVmYXVsdFN0b3JhZ2VDbGFzcyB9IGZyb20gJy4vY2FjaGUvQ2FjaGVNYW5hZ2VyLm1qcyc7XG5leHBvcnQgeyBBY2NvdW50RW50aXR5IH0gZnJvbSAnLi9jYWNoZS9lbnRpdGllcy9BY2NvdW50RW50aXR5Lm1qcyc7XG5leHBvcnQgeyBTdHViYmVkTmV0d29ya01vZHVsZSB9IGZyb20gJy4vbmV0d29yay9JTmV0d29ya01vZHVsZS5tanMnO1xuZXhwb3J0IHsgVGhyb3R0bGluZ1V0aWxzIH0gZnJvbSAnLi9uZXR3b3JrL1Rocm90dGxpbmdVdGlscy5tanMnO1xuZXhwb3J0IHsgVXJsU3RyaW5nIH0gZnJvbSAnLi91cmwvVXJsU3RyaW5nLm1qcyc7XG5leHBvcnQgeyBERUZBVUxUX0NSWVBUT19JTVBMRU1FTlRBVElPTiB9IGZyb20gJy4vY3J5cHRvL0lDcnlwdG8ubWpzJztcbmV4cG9ydCB7IFJlcXVlc3RQYXJhbWV0ZXJCdWlsZGVyIH0gZnJvbSAnLi9yZXF1ZXN0L1JlcXVlc3RQYXJhbWV0ZXJCdWlsZGVyLm1qcyc7XG5leHBvcnQgeyBSZXNwb25zZUhhbmRsZXIsIGJ1aWxkQWNjb3VudFRvQ2FjaGUgfSBmcm9tICcuL3Jlc3BvbnNlL1Jlc3BvbnNlSGFuZGxlci5tanMnO1xuZXhwb3J0IHsgU2NvcGVTZXQgfSBmcm9tICcuL3JlcXVlc3QvU2NvcGVTZXQubWpzJztcbmV4cG9ydCB7IEF1dGhlbnRpY2F0aW9uSGVhZGVyUGFyc2VyIH0gZnJvbSAnLi9yZXF1ZXN0L0F1dGhlbnRpY2F0aW9uSGVhZGVyUGFyc2VyLm1qcyc7XG5leHBvcnQgeyBMb2dMZXZlbCwgTG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXIvTG9nZ2VyLm1qcyc7XG5leHBvcnQgeyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZSwgY3JlYXRlSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvciB9IGZyb20gJy4vZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5tanMnO1xuaW1wb3J0ICogYXMgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzIGZyb20gJy4vZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLm1qcyc7XG5leHBvcnQgeyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yQ29kZXMgfTtcbmV4cG9ydCB7IEF1dGhFcnJvciwgQXV0aEVycm9yTWVzc2FnZSwgY3JlYXRlQXV0aEVycm9yIH0gZnJvbSAnLi9lcnJvci9BdXRoRXJyb3IubWpzJztcbmltcG9ydCAqIGFzIEF1dGhFcnJvckNvZGVzIGZyb20gJy4vZXJyb3IvQXV0aEVycm9yQ29kZXMubWpzJztcbmV4cG9ydCB7IEF1dGhFcnJvckNvZGVzIH07XG5leHBvcnQgeyBTZXJ2ZXJFcnJvciB9IGZyb20gJy4vZXJyb3IvU2VydmVyRXJyb3IubWpzJztcbmV4cG9ydCB7IE5ldHdvcmtFcnJvciwgY3JlYXRlTmV0d29ya0Vycm9yIH0gZnJvbSAnLi9lcnJvci9OZXR3b3JrRXJyb3IubWpzJztcbmV4cG9ydCB7IENhY2hlRXJyb3IgfSBmcm9tICcuL2Vycm9yL0NhY2hlRXJyb3IubWpzJztcbmltcG9ydCAqIGFzIENhY2hlRXJyb3JDb2RlcyBmcm9tICcuL2Vycm9yL0NhY2hlRXJyb3JDb2Rlcy5tanMnO1xuZXhwb3J0IHsgQ2FjaGVFcnJvckNvZGVzIH07XG5leHBvcnQgeyBDbGllbnRBdXRoRXJyb3IsIENsaWVudEF1dGhFcnJvck1lc3NhZ2UsIGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgKiBhcyBDbGllbnRBdXRoRXJyb3JDb2RlcyBmcm9tICcuL2Vycm9yL0NsaWVudEF1dGhFcnJvckNvZGVzLm1qcyc7XG5leHBvcnQgeyBDbGllbnRBdXRoRXJyb3JDb2RlcyB9O1xuZXhwb3J0IHsgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLCBDbGllbnRDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlLCBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IgfSBmcm9tICcuL2Vycm9yL0NsaWVudENvbmZpZ3VyYXRpb25FcnJvci5tanMnO1xuaW1wb3J0ICogYXMgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMgZnJvbSAnLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2Rlcy5tanMnO1xuZXhwb3J0IHsgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMgfTtcbmV4cG9ydCB7IEFBREF1dGhvcml0eUNvbnN0YW50cywgQXV0aGVudGljYXRpb25TY2hlbWUsIENhY2hlQWNjb3VudFR5cGUsIENhY2hlT3V0Y29tZSwgQ2FjaGVUeXBlLCBDbGFpbXNSZXF1ZXN0S2V5cywgQ29kZUNoYWxsZW5nZU1ldGhvZFZhbHVlcywgQ29uc3RhbnRzLCBDcmVkZW50aWFsVHlwZSwgREVGQVVMVF9UT0tFTl9SRU5FV0FMX09GRlNFVF9TRUMsIEVycm9ycywgR3JhbnRUeXBlLCBIZWFkZXJOYW1lcywgSHR0cFN0YXR1cywgSnNvbldlYlRva2VuVHlwZXMsIE9JRENfREVGQVVMVF9TQ09QRVMsIE9ORV9EQVlfSU5fTVMsIFBhc3N3b3JkR3JhbnRDb25zdGFudHMsIFBlcnNpc3RlbnRDYWNoZUtleXMsIFByb21wdFZhbHVlLCBSZXNwb25zZU1vZGUsIFNlcnZlclJlc3BvbnNlVHlwZSwgVEhFX0ZBTUlMWV9JRCwgVGhyb3R0bGluZ0NvbnN0YW50cyB9IGZyb20gJy4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5leHBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gJy4vdXRpbHMvU3RyaW5nVXRpbHMubWpzJztcbmV4cG9ydCB7IFByb3RvY29sVXRpbHMgfSBmcm9tICcuL3V0aWxzL1Byb3RvY29sVXRpbHMubWpzJztcbmV4cG9ydCB7IFNlcnZlclRlbGVtZXRyeU1hbmFnZXIgfSBmcm9tICcuL3RlbGVtZXRyeS9zZXJ2ZXIvU2VydmVyVGVsZW1ldHJ5TWFuYWdlci5tanMnO1xuZXhwb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG5leHBvcnQgeyBpbnZva2UsIGludm9rZUFzeW5jIH0gZnJvbSAnLi91dGlscy9GdW5jdGlvbldyYXBwZXJzLm1qcyc7XG5pbXBvcnQgKiBhcyBBdXRoVG9rZW4gZnJvbSAnLi9hY2NvdW50L0F1dGhUb2tlbi5tanMnO1xuZXhwb3J0IHsgQXV0aFRva2VuIH07XG5pbXBvcnQgKiBhcyBBdXRob3JpdHlGYWN0b3J5IGZyb20gJy4vYXV0aG9yaXR5L0F1dGhvcml0eUZhY3RvcnkubWpzJztcbmV4cG9ydCB7IEF1dGhvcml0eUZhY3RvcnkgfTtcbmltcG9ydCAqIGFzIENhY2hlSGVscGVycyBmcm9tICcuL2NhY2hlL3V0aWxzL0NhY2hlSGVscGVycy5tanMnO1xuZXhwb3J0IHsgQ2FjaGVIZWxwZXJzIH07XG5pbXBvcnQgKiBhcyBUaW1lVXRpbHMgZnJvbSAnLi91dGlscy9UaW1lVXRpbHMubWpzJztcbmV4cG9ydCB7IFRpbWVVdGlscyB9O1xuaW1wb3J0ICogYXMgVXJsVXRpbHMgZnJvbSAnLi91dGlscy9VcmxVdGlscy5tanMnO1xuZXhwb3J0IHsgVXJsVXRpbHMgfTtcbmltcG9ydCAqIGFzIEFBRFNlcnZlclBhcmFtS2V5cyBmcm9tICcuL2NvbnN0YW50cy9BQURTZXJ2ZXJQYXJhbUtleXMubWpzJztcbmV4cG9ydCB7IEFBRFNlcnZlclBhcmFtS2V5cyB9O1xuZXhwb3J0IHsgSm9zZUhlYWRlciB9IGZyb20gJy4vY3J5cHRvL0pvc2VIZWFkZXIubWpzJztcbmV4cG9ydCB7IEludEZpZWxkcywgUGVyZm9ybWFuY2VFdmVudFN0YXR1cywgUGVyZm9ybWFuY2VFdmVudHMgfSBmcm9tICcuL3RlbGVtZXRyeS9wZXJmb3JtYW5jZS9QZXJmb3JtYW5jZUV2ZW50Lm1qcyc7XG5leHBvcnQgeyBQZXJmb3JtYW5jZUNsaWVudCB9IGZyb20gJy4vdGVsZW1ldHJ5L3BlcmZvcm1hbmNlL1BlcmZvcm1hbmNlQ2xpZW50Lm1qcyc7XG5leHBvcnQgeyBTdHViUGVyZm9ybWFuY2VDbGllbnQgfSBmcm9tICcuL3RlbGVtZXRyeS9wZXJmb3JtYW5jZS9TdHViUGVyZm9ybWFuY2VDbGllbnQubWpzJztcbmV4cG9ydCB7IFBvcFRva2VuR2VuZXJhdG9yIH0gZnJvbSAnLi9jcnlwdG8vUG9wVG9rZW5HZW5lcmF0b3IubWpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LWJyb3dzZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/index-browser.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/logger/Logger.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/logger/Logger.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogLevel: function() { return /* binding */ LogLevel; },\n/* harmony export */   Logger: function() { return /* binding */ Logger; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nclass Logger {\r\n    constructor(loggerOptions, packageName, packageVersion) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        const defaultLoggerCallback = () => {\r\n            return;\r\n        };\r\n        const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\r\n        this.localCallback =\r\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\r\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\r\n        this.level =\r\n            typeof setLoggerOptions.logLevel === \"number\"\r\n                ? setLoggerOptions.logLevel\r\n                : LogLevel.Info;\r\n        this.correlationId =\r\n            setLoggerOptions.correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        this.packageName = packageName || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        this.packageVersion = packageVersion || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n    }\r\n    static createDefaultLoggerOptions() {\r\n        return {\r\n            loggerCallback: () => {\r\n                // allow users to not set loggerCallback\r\n            },\r\n            piiLoggingEnabled: false,\r\n            logLevel: LogLevel.Info,\r\n        };\r\n    }\r\n    /**\r\n     * Create new Logger with existing configurations.\r\n     */\r\n    clone(packageName, packageVersion, correlationId) {\r\n        return new Logger({\r\n            loggerCallback: this.localCallback,\r\n            piiLoggingEnabled: this.piiLoggingEnabled,\r\n            logLevel: this.level,\r\n            correlationId: correlationId || this.correlationId,\r\n        }, packageName, packageVersion);\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    logMessage(logMessage, options) {\r\n        if (options.logLevel > this.level ||\r\n            (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        const timestamp = new Date().toUTCString();\r\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\r\n        const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || \"\"}]`;\r\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\r\n    }\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    executeCallback(level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    }\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    error(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    errorPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    warning(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    warningPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    info(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    infoPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    verbose(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    verbosePii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs trace messages.\r\n     */\r\n    trace(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs trace messages with PII.\r\n     */\r\n    tracePii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    isPiiLoggingEnabled() {\r\n        return this.piiLoggingEnabled || false;\r\n    }\r\n}\n\n\n//# sourceMappingURL=Logger.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbG9nZ2VyL0xvZ2dlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNzQzs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDJEQUFTO0FBQ3ZELDBDQUEwQywyREFBUztBQUNuRCxnREFBZ0QsMkRBQVM7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLFVBQVUsT0FBTyxrREFBa0Q7QUFDakcsdUJBQXVCLFdBQVcsSUFBSSxpQkFBaUIsR0FBRyxxQkFBcUIsSUFBSSw0QkFBNEIsSUFBSSxXQUFXO0FBQzlILHlCQUF5QiwyQkFBMkIsRUFBRSxxREFBcUQsRUFBRSxzQkFBc0IsZ0JBQWdCLDJCQUEyQjtBQUM5SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJEQUFTO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbG9nZ2VyL0xvZ2dlci5tanM/ZWZmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIExvZyBtZXNzYWdlIGxldmVsLlxyXG4gKi9cclxudmFyIExvZ0xldmVsO1xyXG4oZnVuY3Rpb24gKExvZ0xldmVsKSB7XHJcbiAgICBMb2dMZXZlbFtMb2dMZXZlbFtcIkVycm9yXCJdID0gMF0gPSBcIkVycm9yXCI7XHJcbiAgICBMb2dMZXZlbFtMb2dMZXZlbFtcIldhcm5pbmdcIl0gPSAxXSA9IFwiV2FybmluZ1wiO1xyXG4gICAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJJbmZvXCJdID0gMl0gPSBcIkluZm9cIjtcclxuICAgIExvZ0xldmVsW0xvZ0xldmVsW1wiVmVyYm9zZVwiXSA9IDNdID0gXCJWZXJib3NlXCI7XHJcbiAgICBMb2dMZXZlbFtMb2dMZXZlbFtcIlRyYWNlXCJdID0gNF0gPSBcIlRyYWNlXCI7XHJcbn0pKExvZ0xldmVsIHx8IChMb2dMZXZlbCA9IHt9KSk7XHJcbi8qKlxyXG4gKiBDbGFzcyB3aGljaCBmYWNpbGl0YXRlcyBsb2dnaW5nIG9mIG1lc3NhZ2VzIHRvIGEgc3BlY2lmaWMgcGxhY2UuXHJcbiAqL1xyXG5jbGFzcyBMb2dnZXIge1xyXG4gICAgY29uc3RydWN0b3IobG9nZ2VyT3B0aW9ucywgcGFja2FnZU5hbWUsIHBhY2thZ2VWZXJzaW9uKSB7XHJcbiAgICAgICAgLy8gQ3VycmVudCBsb2cgbGV2ZWwsIGRlZmF1bHRzIHRvIGluZm8uXHJcbiAgICAgICAgdGhpcy5sZXZlbCA9IExvZ0xldmVsLkluZm87XHJcbiAgICAgICAgY29uc3QgZGVmYXVsdExvZ2dlckNhbGxiYWNrID0gKCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBzZXRMb2dnZXJPcHRpb25zID0gbG9nZ2VyT3B0aW9ucyB8fCBMb2dnZXIuY3JlYXRlRGVmYXVsdExvZ2dlck9wdGlvbnMoKTtcclxuICAgICAgICB0aGlzLmxvY2FsQ2FsbGJhY2sgPVxyXG4gICAgICAgICAgICBzZXRMb2dnZXJPcHRpb25zLmxvZ2dlckNhbGxiYWNrIHx8IGRlZmF1bHRMb2dnZXJDYWxsYmFjaztcclxuICAgICAgICB0aGlzLnBpaUxvZ2dpbmdFbmFibGVkID0gc2V0TG9nZ2VyT3B0aW9ucy5waWlMb2dnaW5nRW5hYmxlZCB8fCBmYWxzZTtcclxuICAgICAgICB0aGlzLmxldmVsID1cclxuICAgICAgICAgICAgdHlwZW9mIHNldExvZ2dlck9wdGlvbnMubG9nTGV2ZWwgPT09IFwibnVtYmVyXCJcclxuICAgICAgICAgICAgICAgID8gc2V0TG9nZ2VyT3B0aW9ucy5sb2dMZXZlbFxyXG4gICAgICAgICAgICAgICAgOiBMb2dMZXZlbC5JbmZvO1xyXG4gICAgICAgIHRoaXMuY29ycmVsYXRpb25JZCA9XHJcbiAgICAgICAgICAgIHNldExvZ2dlck9wdGlvbnMuY29ycmVsYXRpb25JZCB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xyXG4gICAgICAgIHRoaXMucGFja2FnZU5hbWUgPSBwYWNrYWdlTmFtZSB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xyXG4gICAgICAgIHRoaXMucGFja2FnZVZlcnNpb24gPSBwYWNrYWdlVmVyc2lvbiB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGNyZWF0ZURlZmF1bHRMb2dnZXJPcHRpb25zKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGxvZ2dlckNhbGxiYWNrOiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyBhbGxvdyB1c2VycyB0byBub3Qgc2V0IGxvZ2dlckNhbGxiYWNrXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHBpaUxvZ2dpbmdFbmFibGVkOiBmYWxzZSxcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IExvZ0xldmVsLkluZm8sXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIG5ldyBMb2dnZXIgd2l0aCBleGlzdGluZyBjb25maWd1cmF0aW9ucy5cclxuICAgICAqL1xyXG4gICAgY2xvbmUocGFja2FnZU5hbWUsIHBhY2thZ2VWZXJzaW9uLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBMb2dnZXIoe1xyXG4gICAgICAgICAgICBsb2dnZXJDYWxsYmFjazogdGhpcy5sb2NhbENhbGxiYWNrLFxyXG4gICAgICAgICAgICBwaWlMb2dnaW5nRW5hYmxlZDogdGhpcy5waWlMb2dnaW5nRW5hYmxlZCxcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IHRoaXMubGV2ZWwsXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQgfHwgdGhpcy5jb3JyZWxhdGlvbklkLFxyXG4gICAgICAgIH0sIHBhY2thZ2VOYW1lLCBwYWNrYWdlVmVyc2lvbik7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIExvZyBtZXNzYWdlIHdpdGggcmVxdWlyZWQgb3B0aW9ucy5cclxuICAgICAqL1xyXG4gICAgbG9nTWVzc2FnZShsb2dNZXNzYWdlLCBvcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMubG9nTGV2ZWwgPiB0aGlzLmxldmVsIHx8XHJcbiAgICAgICAgICAgICghdGhpcy5waWlMb2dnaW5nRW5hYmxlZCAmJiBvcHRpb25zLmNvbnRhaW5zUGlpKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKCkudG9VVENTdHJpbmcoKTtcclxuICAgICAgICAvLyBBZGQgY29ycmVsYXRpb25JZCB0byBsb2dzIGlmIHNldCwgY29ycmVsYXRpb25JZCBwcm92aWRlZCBvbiBsb2cgbWVzc2FnZXMgdGFrZSBwcmVjZWRlbmNlXHJcbiAgICAgICAgY29uc3QgbG9nSGVhZGVyID0gYFske3RpbWVzdGFtcH1dIDogWyR7b3B0aW9ucy5jb3JyZWxhdGlvbklkIHx8IHRoaXMuY29ycmVsYXRpb25JZCB8fCBcIlwifV1gO1xyXG4gICAgICAgIGNvbnN0IGxvZyA9IGAke2xvZ0hlYWRlcn0gOiAke3RoaXMucGFja2FnZU5hbWV9QCR7dGhpcy5wYWNrYWdlVmVyc2lvbn0gOiAke0xvZ0xldmVsW29wdGlvbnMubG9nTGV2ZWxdfSAtICR7bG9nTWVzc2FnZX1gO1xyXG4gICAgICAgIC8vIGRlYnVnKGBtc2FsOiR7TG9nTGV2ZWxbb3B0aW9ucy5sb2dMZXZlbF19JHtvcHRpb25zLmNvbnRhaW5zUGlpID8gXCItUGlpXCI6IENvbnN0YW50cy5FTVBUWV9TVFJJTkd9JHtvcHRpb25zLmNvbnRleHQgPyBgOiR7b3B0aW9ucy5jb250ZXh0fWAgOiBDb25zdGFudHMuRU1QVFlfU1RSSU5HfWApKGxvZ01lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMuZXhlY3V0ZUNhbGxiYWNrKG9wdGlvbnMubG9nTGV2ZWwsIGxvZywgb3B0aW9ucy5jb250YWluc1BpaSB8fCBmYWxzZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEV4ZWN1dGUgY2FsbGJhY2sgd2l0aCBtZXNzYWdlLlxyXG4gICAgICovXHJcbiAgICBleGVjdXRlQ2FsbGJhY2sobGV2ZWwsIG1lc3NhZ2UsIGNvbnRhaW5zUGlpKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubG9jYWxDYWxsYmFjaykge1xyXG4gICAgICAgICAgICB0aGlzLmxvY2FsQ2FsbGJhY2sobGV2ZWwsIG1lc3NhZ2UsIGNvbnRhaW5zUGlpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIExvZ3MgZXJyb3IgbWVzc2FnZXMuXHJcbiAgICAgKi9cclxuICAgIGVycm9yKG1lc3NhZ2UsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICB0aGlzLmxvZ01lc3NhZ2UobWVzc2FnZSwge1xyXG4gICAgICAgICAgICBsb2dMZXZlbDogTG9nTGV2ZWwuRXJyb3IsXHJcbiAgICAgICAgICAgIGNvbnRhaW5zUGlpOiBmYWxzZSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogY29ycmVsYXRpb25JZCB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIGVycm9yIG1lc3NhZ2VzIHdpdGggUElJLlxyXG4gICAgICovXHJcbiAgICBlcnJvclBpaShtZXNzYWdlLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgdGhpcy5sb2dNZXNzYWdlKG1lc3NhZ2UsIHtcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IExvZ0xldmVsLkVycm9yLFxyXG4gICAgICAgICAgICBjb250YWluc1BpaTogdHJ1ZSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogY29ycmVsYXRpb25JZCB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIHdhcm5pbmcgbWVzc2FnZXMuXHJcbiAgICAgKi9cclxuICAgIHdhcm5pbmcobWVzc2FnZSwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgIHRoaXMubG9nTWVzc2FnZShtZXNzYWdlLCB7XHJcbiAgICAgICAgICAgIGxvZ0xldmVsOiBMb2dMZXZlbC5XYXJuaW5nLFxyXG4gICAgICAgICAgICBjb250YWluc1BpaTogZmFsc2UsXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyB3YXJuaW5nIG1lc3NhZ2VzIHdpdGggUElJLlxyXG4gICAgICovXHJcbiAgICB3YXJuaW5nUGlpKG1lc3NhZ2UsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICB0aGlzLmxvZ01lc3NhZ2UobWVzc2FnZSwge1xyXG4gICAgICAgICAgICBsb2dMZXZlbDogTG9nTGV2ZWwuV2FybmluZyxcclxuICAgICAgICAgICAgY29udGFpbnNQaWk6IHRydWUsXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyBpbmZvIG1lc3NhZ2VzLlxyXG4gICAgICovXHJcbiAgICBpbmZvKG1lc3NhZ2UsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICB0aGlzLmxvZ01lc3NhZ2UobWVzc2FnZSwge1xyXG4gICAgICAgICAgICBsb2dMZXZlbDogTG9nTGV2ZWwuSW5mbyxcclxuICAgICAgICAgICAgY29udGFpbnNQaWk6IGZhbHNlLFxyXG4gICAgICAgICAgICBjb3JyZWxhdGlvbklkOiBjb3JyZWxhdGlvbklkIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIExvZ3MgaW5mbyBtZXNzYWdlcyB3aXRoIFBJSS5cclxuICAgICAqL1xyXG4gICAgaW5mb1BpaShtZXNzYWdlLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgdGhpcy5sb2dNZXNzYWdlKG1lc3NhZ2UsIHtcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IExvZ0xldmVsLkluZm8sXHJcbiAgICAgICAgICAgIGNvbnRhaW5zUGlpOiB0cnVlLFxyXG4gICAgICAgICAgICBjb3JyZWxhdGlvbklkOiBjb3JyZWxhdGlvbklkIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIExvZ3MgdmVyYm9zZSBtZXNzYWdlcy5cclxuICAgICAqL1xyXG4gICAgdmVyYm9zZShtZXNzYWdlLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgdGhpcy5sb2dNZXNzYWdlKG1lc3NhZ2UsIHtcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IExvZ0xldmVsLlZlcmJvc2UsXHJcbiAgICAgICAgICAgIGNvbnRhaW5zUGlpOiBmYWxzZSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogY29ycmVsYXRpb25JZCB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIHZlcmJvc2UgbWVzc2FnZXMgd2l0aCBQSUkuXHJcbiAgICAgKi9cclxuICAgIHZlcmJvc2VQaWkobWVzc2FnZSwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgIHRoaXMubG9nTWVzc2FnZShtZXNzYWdlLCB7XHJcbiAgICAgICAgICAgIGxvZ0xldmVsOiBMb2dMZXZlbC5WZXJib3NlLFxyXG4gICAgICAgICAgICBjb250YWluc1BpaTogdHJ1ZSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogY29ycmVsYXRpb25JZCB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIHRyYWNlIG1lc3NhZ2VzLlxyXG4gICAgICovXHJcbiAgICB0cmFjZShtZXNzYWdlLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgdGhpcy5sb2dNZXNzYWdlKG1lc3NhZ2UsIHtcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IExvZ0xldmVsLlRyYWNlLFxyXG4gICAgICAgICAgICBjb250YWluc1BpaTogZmFsc2UsXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyB0cmFjZSBtZXNzYWdlcyB3aXRoIFBJSS5cclxuICAgICAqL1xyXG4gICAgdHJhY2VQaWkobWVzc2FnZSwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgIHRoaXMubG9nTWVzc2FnZShtZXNzYWdlLCB7XHJcbiAgICAgICAgICAgIGxvZ0xldmVsOiBMb2dMZXZlbC5UcmFjZSxcclxuICAgICAgICAgICAgY29udGFpbnNQaWk6IHRydWUsXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB3aGV0aGVyIFBJSSBMb2dnaW5nIGlzIGVuYWJsZWQgb3Igbm90LlxyXG4gICAgICovXHJcbiAgICBpc1BpaUxvZ2dpbmdFbmFibGVkKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBpaUxvZ2dpbmdFbmFibGVkIHx8IGZhbHNlO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IExvZ0xldmVsLCBMb2dnZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxvZ2dlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/logger/Logger.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StubbedNetworkModule: function() { return /* binding */ StubbedNetworkModule; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst StubbedNetworkModule = {\r\n    sendGetRequestAsync: () => {\r\n        return Promise.reject((0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented));\r\n    },\r\n    sendPostRequestAsync: () => {\r\n        return Promise.reject((0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented));\r\n    },\r\n};\n\n\n//# sourceMappingURL=INetworkModule.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9JTmV0d29ya01vZHVsZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUN3RDtBQUNJOztBQUV6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsaUZBQXFCLENBQUMsaUZBQW9CO0FBQ3hFLEtBQUs7QUFDTDtBQUNBLDhCQUE4QixpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEUsS0FBSztBQUNMOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9JTmV0d29ya01vZHVsZS5tanM/ZTVhMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgbWV0aG9kTm90SW1wbGVtZW50ZWQgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgU3R1YmJlZE5ldHdvcmtNb2R1bGUgPSB7XHJcbiAgICBzZW5kR2V0UmVxdWVzdEFzeW5jOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCkpO1xyXG4gICAgfSxcclxuICAgIHNlbmRQb3N0UmVxdWVzdEFzeW5jOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCkpO1xyXG4gICAgfSxcclxufTtcblxuZXhwb3J0IHsgU3R1YmJlZE5ldHdvcmtNb2R1bGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlOZXR3b3JrTW9kdWxlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThrottlingUtils: function() { return /* binding */ ThrottlingUtils; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass ThrottlingUtils {\r\n    /**\r\n     * Prepares a RequestThumbprint to be stored as a key.\r\n     * @param thumbprint\r\n     */\r\n    static generateThrottlingStorageKey(thumbprint) {\r\n        return `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\r\n    }\r\n    /**\r\n     * Performs necessary throttling checks before a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     */\r\n    static preProcess(cacheManager, thumbprint) {\r\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\r\n        const value = cacheManager.getThrottlingCache(key);\r\n        if (value) {\r\n            if (value.throttleTime < Date.now()) {\r\n                cacheManager.removeItem(key);\r\n                return;\r\n            }\r\n            throw new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__.ServerError(value.errorCodes?.join(\" \") || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING, value.errorMessage, value.subError);\r\n        }\r\n    }\r\n    /**\r\n     * Performs necessary throttling checks after a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     * @param response\r\n     */\r\n    static postProcess(cacheManager, thumbprint, response) {\r\n        if (ThrottlingUtils.checkResponseStatus(response) ||\r\n            ThrottlingUtils.checkResponseForRetryAfter(response)) {\r\n            const thumbprintValue = {\r\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.RETRY_AFTER])),\r\n                error: response.body.error,\r\n                errorCodes: response.body.error_codes,\r\n                errorMessage: response.body.error_description,\r\n                subError: response.body.suberror,\r\n            };\r\n            cacheManager.setThrottlingCache(ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue);\r\n        }\r\n    }\r\n    /**\r\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\r\n     * @param response\r\n     */\r\n    static checkResponseStatus(response) {\r\n        return (response.status === 429 ||\r\n            (response.status >= 500 && response.status < 600));\r\n    }\r\n    /**\r\n     * Checks a NetworkResponse object's RetryAfter header\r\n     * @param response\r\n     */\r\n    static checkResponseForRetryAfter(response) {\r\n        if (response.headers) {\r\n            return (response.headers.hasOwnProperty(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.RETRY_AFTER) &&\r\n                (response.status < 200 || response.status >= 300));\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\r\n     * @param throttleTime\r\n     */\r\n    static calculateThrottleTime(throttleTime) {\r\n        const time = throttleTime <= 0 ? 0 : throttleTime;\r\n        const currentSeconds = Date.now() / 1000;\r\n        return Math.floor(Math.min(currentSeconds +\r\n            (time || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds +\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1000);\r\n    }\r\n    static removeThrottle(cacheManager, clientId, request, homeAccountIdentifier) {\r\n        const thumbprint = {\r\n            clientId: clientId,\r\n            authority: request.authority,\r\n            scopes: request.scopes,\r\n            homeAccountIdentifier: homeAccountIdentifier,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n        const key = this.generateThrottlingStorageKey(thumbprint);\r\n        cacheManager.removeItem(key);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ThrottlingUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9UaHJvdHRsaW5nVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDd0U7QUFDOUI7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscUVBQW1CLG1CQUFtQixHQUFHLDJCQUEyQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLCtEQUFXLGdDQUFnQywyREFBUztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RkFBOEYsNkRBQVc7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsNkRBQVc7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFFQUFtQjtBQUN4QyxZQUFZLHFFQUFtQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9uZXR3b3JrL1Rocm90dGxpbmdVdGlscy5tanM/OTJlOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFRocm90dGxpbmdDb25zdGFudHMsIENvbnN0YW50cywgSGVhZGVyTmFtZXMgfSBmcm9tICcuLi91dGlscy9Db25zdGFudHMubWpzJztcbmltcG9ydCB7IFNlcnZlckVycm9yIH0gZnJvbSAnLi4vZXJyb3IvU2VydmVyRXJyb3IubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKiBAaW50ZXJuYWwgKi9cclxuY2xhc3MgVGhyb3R0bGluZ1V0aWxzIHtcclxuICAgIC8qKlxyXG4gICAgICogUHJlcGFyZXMgYSBSZXF1ZXN0VGh1bWJwcmludCB0byBiZSBzdG9yZWQgYXMgYSBrZXkuXHJcbiAgICAgKiBAcGFyYW0gdGh1bWJwcmludFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgZ2VuZXJhdGVUaHJvdHRsaW5nU3RvcmFnZUtleSh0aHVtYnByaW50KSB7XHJcbiAgICAgICAgcmV0dXJuIGAke1Rocm90dGxpbmdDb25zdGFudHMuVEhST1RUTElOR19QUkVGSVh9LiR7SlNPTi5zdHJpbmdpZnkodGh1bWJwcmludCl9YDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGVyZm9ybXMgbmVjZXNzYXJ5IHRocm90dGxpbmcgY2hlY2tzIGJlZm9yZSBhIG5ldHdvcmsgcmVxdWVzdC5cclxuICAgICAqIEBwYXJhbSBjYWNoZU1hbmFnZXJcclxuICAgICAqIEBwYXJhbSB0aHVtYnByaW50XHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBwcmVQcm9jZXNzKGNhY2hlTWFuYWdlciwgdGh1bWJwcmludCkge1xyXG4gICAgICAgIGNvbnN0IGtleSA9IFRocm90dGxpbmdVdGlscy5nZW5lcmF0ZVRocm90dGxpbmdTdG9yYWdlS2V5KHRodW1icHJpbnQpO1xyXG4gICAgICAgIGNvbnN0IHZhbHVlID0gY2FjaGVNYW5hZ2VyLmdldFRocm90dGxpbmdDYWNoZShrZXkpO1xyXG4gICAgICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICAgICAgICBpZiAodmFsdWUudGhyb3R0bGVUaW1lIDwgRGF0ZS5ub3coKSkge1xyXG4gICAgICAgICAgICAgICAgY2FjaGVNYW5hZ2VyLnJlbW92ZUl0ZW0oa2V5KTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aHJvdyBuZXcgU2VydmVyRXJyb3IodmFsdWUuZXJyb3JDb2Rlcz8uam9pbihcIiBcIikgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORywgdmFsdWUuZXJyb3JNZXNzYWdlLCB2YWx1ZS5zdWJFcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQZXJmb3JtcyBuZWNlc3NhcnkgdGhyb3R0bGluZyBjaGVja3MgYWZ0ZXIgYSBuZXR3b3JrIHJlcXVlc3QuXHJcbiAgICAgKiBAcGFyYW0gY2FjaGVNYW5hZ2VyXHJcbiAgICAgKiBAcGFyYW0gdGh1bWJwcmludFxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBwb3N0UHJvY2VzcyhjYWNoZU1hbmFnZXIsIHRodW1icHJpbnQsIHJlc3BvbnNlKSB7XHJcbiAgICAgICAgaWYgKFRocm90dGxpbmdVdGlscy5jaGVja1Jlc3BvbnNlU3RhdHVzKHJlc3BvbnNlKSB8fFxyXG4gICAgICAgICAgICBUaHJvdHRsaW5nVXRpbHMuY2hlY2tSZXNwb25zZUZvclJldHJ5QWZ0ZXIocmVzcG9uc2UpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRodW1icHJpbnRWYWx1ZSA9IHtcclxuICAgICAgICAgICAgICAgIHRocm90dGxlVGltZTogVGhyb3R0bGluZ1V0aWxzLmNhbGN1bGF0ZVRocm90dGxlVGltZShwYXJzZUludChyZXNwb25zZS5oZWFkZXJzW0hlYWRlck5hbWVzLlJFVFJZX0FGVEVSXSkpLFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IHJlc3BvbnNlLmJvZHkuZXJyb3IsXHJcbiAgICAgICAgICAgICAgICBlcnJvckNvZGVzOiByZXNwb25zZS5ib2R5LmVycm9yX2NvZGVzLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiByZXNwb25zZS5ib2R5LmVycm9yX2Rlc2NyaXB0aW9uLFxyXG4gICAgICAgICAgICAgICAgc3ViRXJyb3I6IHJlc3BvbnNlLmJvZHkuc3ViZXJyb3IsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGNhY2hlTWFuYWdlci5zZXRUaHJvdHRsaW5nQ2FjaGUoVGhyb3R0bGluZ1V0aWxzLmdlbmVyYXRlVGhyb3R0bGluZ1N0b3JhZ2VLZXkodGh1bWJwcmludCksIHRodW1icHJpbnRWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3MgYSBOZXR3b3JrUmVzcG9uc2Ugb2JqZWN0J3Mgc3RhdHVzIGNvZGVzIGFnYWluc3QgNDI5IG9yIDV4eFxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjaGVja1Jlc3BvbnNlU3RhdHVzKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgcmV0dXJuIChyZXNwb25zZS5zdGF0dXMgPT09IDQyOSB8fFxyXG4gICAgICAgICAgICAocmVzcG9uc2Uuc3RhdHVzID49IDUwMCAmJiByZXNwb25zZS5zdGF0dXMgPCA2MDApKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2tzIGEgTmV0d29ya1Jlc3BvbnNlIG9iamVjdCdzIFJldHJ5QWZ0ZXIgaGVhZGVyXHJcbiAgICAgKiBAcGFyYW0gcmVzcG9uc2VcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNoZWNrUmVzcG9uc2VGb3JSZXRyeUFmdGVyKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLmhlYWRlcnMpIHtcclxuICAgICAgICAgICAgcmV0dXJuIChyZXNwb25zZS5oZWFkZXJzLmhhc093blByb3BlcnR5KEhlYWRlck5hbWVzLlJFVFJZX0FGVEVSKSAmJlxyXG4gICAgICAgICAgICAgICAgKHJlc3BvbnNlLnN0YXR1cyA8IDIwMCB8fCByZXNwb25zZS5zdGF0dXMgPj0gMzAwKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ2FsY3VsYXRlcyB0aGUgVW5peC10aW1lIHZhbHVlIGZvciBhIHRocm90dGxlIHRvIGV4cGlyZSBnaXZlbiB0aHJvdHRsZVRpbWUgaW4gc2Vjb25kcy5cclxuICAgICAqIEBwYXJhbSB0aHJvdHRsZVRpbWVcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNhbGN1bGF0ZVRocm90dGxlVGltZSh0aHJvdHRsZVRpbWUpIHtcclxuICAgICAgICBjb25zdCB0aW1lID0gdGhyb3R0bGVUaW1lIDw9IDAgPyAwIDogdGhyb3R0bGVUaW1lO1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRTZWNvbmRzID0gRGF0ZS5ub3coKSAvIDEwMDA7XHJcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5taW4oY3VycmVudFNlY29uZHMgK1xyXG4gICAgICAgICAgICAodGltZSB8fCBUaHJvdHRsaW5nQ29uc3RhbnRzLkRFRkFVTFRfVEhST1RUTEVfVElNRV9TRUNPTkRTKSwgY3VycmVudFNlY29uZHMgK1xyXG4gICAgICAgICAgICBUaHJvdHRsaW5nQ29uc3RhbnRzLkRFRkFVTFRfTUFYX1RIUk9UVExFX1RJTUVfU0VDT05EUykgKiAxMDAwKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyByZW1vdmVUaHJvdHRsZShjYWNoZU1hbmFnZXIsIGNsaWVudElkLCByZXF1ZXN0LCBob21lQWNjb3VudElkZW50aWZpZXIpIHtcclxuICAgICAgICBjb25zdCB0aHVtYnByaW50ID0ge1xyXG4gICAgICAgICAgICBjbGllbnRJZDogY2xpZW50SWQsXHJcbiAgICAgICAgICAgIGF1dGhvcml0eTogcmVxdWVzdC5hdXRob3JpdHksXHJcbiAgICAgICAgICAgIHNjb3BlczogcmVxdWVzdC5zY29wZXMsXHJcbiAgICAgICAgICAgIGhvbWVBY2NvdW50SWRlbnRpZmllcjogaG9tZUFjY291bnRJZGVudGlmaWVyLFxyXG4gICAgICAgICAgICBjbGFpbXM6IHJlcXVlc3QuY2xhaW1zLFxyXG4gICAgICAgICAgICBhdXRoZW50aWNhdGlvblNjaGVtZTogcmVxdWVzdC5hdXRoZW50aWNhdGlvblNjaGVtZSxcclxuICAgICAgICAgICAgcmVzb3VyY2VSZXF1ZXN0TWV0aG9kOiByZXF1ZXN0LnJlc291cmNlUmVxdWVzdE1ldGhvZCxcclxuICAgICAgICAgICAgcmVzb3VyY2VSZXF1ZXN0VXJpOiByZXF1ZXN0LnJlc291cmNlUmVxdWVzdFVyaSxcclxuICAgICAgICAgICAgc2hyQ2xhaW1zOiByZXF1ZXN0LnNockNsYWltcyxcclxuICAgICAgICAgICAgc3NoS2lkOiByZXF1ZXN0LnNzaEtpZCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IGtleSA9IHRoaXMuZ2VuZXJhdGVUaHJvdHRsaW5nU3RvcmFnZUtleSh0aHVtYnByaW50KTtcclxuICAgICAgICBjYWNoZU1hbmFnZXIucmVtb3ZlSXRlbShrZXkpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFRocm90dGxpbmdVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGhyb3R0bGluZ1V0aWxzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/packageMetadata.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/packageMetadata.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: function() { return /* binding */ name; },\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/* eslint-disable header/header */\r\nconst name = \"@azure/msal-common\";\r\nconst version = \"14.16.0\";\n\n\n//# sourceMappingURL=packageMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcGFja2FnZU1ldGFkYXRhLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9wYWNrYWdlTWV0YWRhdGEubWpzP2Q0MzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBoZWFkZXIvaGVhZGVyICovXHJcbmNvbnN0IG5hbWUgPSBcIkBhenVyZS9tc2FsLWNvbW1vblwiO1xyXG5jb25zdCB2ZXJzaW9uID0gXCIxNC4xNi4wXCI7XG5cbmV4cG9ydCB7IG5hbWUsIHZlcnNpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhY2thZ2VNZXRhZGF0YS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/packageMetadata.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/request/AuthenticationHeaderParser.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/AuthenticationHeaderParser.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationHeaderParser: function() { return /* binding */ AuthenticationHeaderParser; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This is a helper class that parses supported HTTP response authentication headers to extract and return\r\n * header challenge values that can be used outside the basic authorization flows.\r\n */\r\nclass AuthenticationHeaderParser {\r\n    constructor(headers) {\r\n        this.headers = headers;\r\n    }\r\n    /**\r\n     * This method parses the SHR nonce value out of either the Authentication-Info or WWW-Authenticate authentication headers.\r\n     * @returns\r\n     */\r\n    getShrNonce() {\r\n        // Attempt to parse nonce from Authentiacation-Info\r\n        const authenticationInfo = this.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.AuthenticationInfo];\r\n        if (authenticationInfo) {\r\n            const authenticationInfoChallenges = this.parseChallenges(authenticationInfo);\r\n            if (authenticationInfoChallenges.nextnonce) {\r\n                return authenticationInfoChallenges.nextnonce;\r\n            }\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidAuthenticationHeader);\r\n        }\r\n        // Attempt to parse nonce from WWW-Authenticate\r\n        const wwwAuthenticate = this.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.WWWAuthenticate];\r\n        if (wwwAuthenticate) {\r\n            const wwwAuthenticateChallenges = this.parseChallenges(wwwAuthenticate);\r\n            if (wwwAuthenticateChallenges.nonce) {\r\n                return wwwAuthenticateChallenges.nonce;\r\n            }\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidAuthenticationHeader);\r\n        }\r\n        // If neither header is present, throw missing headers error\r\n        throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.missingNonceAuthenticationHeader);\r\n    }\r\n    /**\r\n     * Parses an HTTP header's challenge set into a key/value map.\r\n     * @param header\r\n     * @returns\r\n     */\r\n    parseChallenges(header) {\r\n        const schemeSeparator = header.indexOf(\" \");\r\n        const challenges = header.substr(schemeSeparator + 1).split(\",\");\r\n        const challengeMap = {};\r\n        challenges.forEach((challenge) => {\r\n            const [key, value] = challenge.split(\"=\");\r\n            // Remove escaped quotation marks (', \") from challenge string to keep only the challenge value\r\n            challengeMap[key] = unescape(value.replace(/['\"]+/g, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING));\r\n        });\r\n        return challengeMap;\r\n    }\r\n}\n\n\n//# sourceMappingURL=AuthenticationHeaderParser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9BdXRoZW50aWNhdGlvbkhlYWRlclBhcnNlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDMEU7QUFDdkI7QUFDMkQ7O0FBRTNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCw2REFBVztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1HQUE4QixDQUFDLGlHQUEyQjtBQUM1RTtBQUNBO0FBQ0EsNkNBQTZDLDZEQUFXO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUdBQThCLENBQUMsaUdBQTJCO0FBQzVFO0FBQ0E7QUFDQSxjQUFjLG1HQUE4QixDQUFDLHNHQUFnQztBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSwyREFBUztBQUMxRSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVzQztBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9BdXRoZW50aWNhdGlvbkhlYWRlclBhcnNlci5tanM/Mjg3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudENvbmZpZ3VyYXRpb25FcnJvci5tanMnO1xuaW1wb3J0IHsgQ29uc3RhbnRzLCBIZWFkZXJOYW1lcyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgaW52YWxpZEF1dGhlbnRpY2F0aW9uSGVhZGVyLCBtaXNzaW5nTm9uY2VBdXRoZW50aWNhdGlvbkhlYWRlciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudENvbmZpZ3VyYXRpb25FcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogVGhpcyBpcyBhIGhlbHBlciBjbGFzcyB0aGF0IHBhcnNlcyBzdXBwb3J0ZWQgSFRUUCByZXNwb25zZSBhdXRoZW50aWNhdGlvbiBoZWFkZXJzIHRvIGV4dHJhY3QgYW5kIHJldHVyblxyXG4gKiBoZWFkZXIgY2hhbGxlbmdlIHZhbHVlcyB0aGF0IGNhbiBiZSB1c2VkIG91dHNpZGUgdGhlIGJhc2ljIGF1dGhvcml6YXRpb24gZmxvd3MuXHJcbiAqL1xyXG5jbGFzcyBBdXRoZW50aWNhdGlvbkhlYWRlclBhcnNlciB7XHJcbiAgICBjb25zdHJ1Y3RvcihoZWFkZXJzKSB7XHJcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gaGVhZGVycztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBtZXRob2QgcGFyc2VzIHRoZSBTSFIgbm9uY2UgdmFsdWUgb3V0IG9mIGVpdGhlciB0aGUgQXV0aGVudGljYXRpb24tSW5mbyBvciBXV1ctQXV0aGVudGljYXRlIGF1dGhlbnRpY2F0aW9uIGhlYWRlcnMuXHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBnZXRTaHJOb25jZSgpIHtcclxuICAgICAgICAvLyBBdHRlbXB0IHRvIHBhcnNlIG5vbmNlIGZyb20gQXV0aGVudGlhY2F0aW9uLUluZm9cclxuICAgICAgICBjb25zdCBhdXRoZW50aWNhdGlvbkluZm8gPSB0aGlzLmhlYWRlcnNbSGVhZGVyTmFtZXMuQXV0aGVudGljYXRpb25JbmZvXTtcclxuICAgICAgICBpZiAoYXV0aGVudGljYXRpb25JbmZvKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGF1dGhlbnRpY2F0aW9uSW5mb0NoYWxsZW5nZXMgPSB0aGlzLnBhcnNlQ2hhbGxlbmdlcyhhdXRoZW50aWNhdGlvbkluZm8pO1xyXG4gICAgICAgICAgICBpZiAoYXV0aGVudGljYXRpb25JbmZvQ2hhbGxlbmdlcy5uZXh0bm9uY2UpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBhdXRoZW50aWNhdGlvbkluZm9DaGFsbGVuZ2VzLm5leHRub25jZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoaW52YWxpZEF1dGhlbnRpY2F0aW9uSGVhZGVyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQXR0ZW1wdCB0byBwYXJzZSBub25jZSBmcm9tIFdXVy1BdXRoZW50aWNhdGVcclxuICAgICAgICBjb25zdCB3d3dBdXRoZW50aWNhdGUgPSB0aGlzLmhlYWRlcnNbSGVhZGVyTmFtZXMuV1dXQXV0aGVudGljYXRlXTtcclxuICAgICAgICBpZiAod3d3QXV0aGVudGljYXRlKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHd3d0F1dGhlbnRpY2F0ZUNoYWxsZW5nZXMgPSB0aGlzLnBhcnNlQ2hhbGxlbmdlcyh3d3dBdXRoZW50aWNhdGUpO1xyXG4gICAgICAgICAgICBpZiAod3d3QXV0aGVudGljYXRlQ2hhbGxlbmdlcy5ub25jZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHd3d0F1dGhlbnRpY2F0ZUNoYWxsZW5nZXMubm9uY2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKGludmFsaWRBdXRoZW50aWNhdGlvbkhlYWRlcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIElmIG5laXRoZXIgaGVhZGVyIGlzIHByZXNlbnQsIHRocm93IG1pc3NpbmcgaGVhZGVycyBlcnJvclxyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvcihtaXNzaW5nTm9uY2VBdXRoZW50aWNhdGlvbkhlYWRlcik7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFBhcnNlcyBhbiBIVFRQIGhlYWRlcidzIGNoYWxsZW5nZSBzZXQgaW50byBhIGtleS92YWx1ZSBtYXAuXHJcbiAgICAgKiBAcGFyYW0gaGVhZGVyXHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBwYXJzZUNoYWxsZW5nZXMoaGVhZGVyKSB7XHJcbiAgICAgICAgY29uc3Qgc2NoZW1lU2VwYXJhdG9yID0gaGVhZGVyLmluZGV4T2YoXCIgXCIpO1xyXG4gICAgICAgIGNvbnN0IGNoYWxsZW5nZXMgPSBoZWFkZXIuc3Vic3RyKHNjaGVtZVNlcGFyYXRvciArIDEpLnNwbGl0KFwiLFwiKTtcclxuICAgICAgICBjb25zdCBjaGFsbGVuZ2VNYXAgPSB7fTtcclxuICAgICAgICBjaGFsbGVuZ2VzLmZvckVhY2goKGNoYWxsZW5nZSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBba2V5LCB2YWx1ZV0gPSBjaGFsbGVuZ2Uuc3BsaXQoXCI9XCIpO1xyXG4gICAgICAgICAgICAvLyBSZW1vdmUgZXNjYXBlZCBxdW90YXRpb24gbWFya3MgKCcsIFwiKSBmcm9tIGNoYWxsZW5nZSBzdHJpbmcgdG8ga2VlcCBvbmx5IHRoZSBjaGFsbGVuZ2UgdmFsdWVcclxuICAgICAgICAgICAgY2hhbGxlbmdlTWFwW2tleV0gPSB1bmVzY2FwZSh2YWx1ZS5yZXBsYWNlKC9bJ1wiXSsvZywgQ29uc3RhbnRzLkVNUFRZX1NUUklORykpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBjaGFsbGVuZ2VNYXA7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgQXV0aGVudGljYXRpb25IZWFkZXJQYXJzZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhlbnRpY2F0aW9uSGVhZGVyUGFyc2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/request/AuthenticationHeaderParser.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestParameterBuilder: function() { return /* binding */ RequestParameterBuilder; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/AADServerParamKeys.mjs */ \"./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ScopeSet.mjs */ \"./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RequestValidator.mjs */ \"./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction instrumentBrokerParams(parameters, correlationId, performanceClient) {\r\n    if (!correlationId) {\r\n        return;\r\n    }\r\n    const clientId = parameters.get(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ID);\r\n    if (clientId && parameters.has(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.BROKER_CLIENT_ID)) {\r\n        performanceClient?.addFields({\r\n            embeddedClientId: clientId,\r\n            embeddedRedirectUri: parameters.get(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REDIRECT_URI),\r\n        }, correlationId);\r\n    }\r\n}\r\n/** @internal */\r\nclass RequestParameterBuilder {\r\n    constructor(correlationId, performanceClient) {\r\n        this.parameters = new Map();\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n    }\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    addResponseTypeCode() {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.RESPONSE_TYPE, encodeURIComponent(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CODE_RESPONSE_TYPE));\r\n    }\r\n    /**\r\n     * add response_type = token id_token\r\n     */\r\n    addResponseTypeForTokenAndIdToken() {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.RESPONSE_TYPE, encodeURIComponent(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.TOKEN_RESPONSE_TYPE} ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.ID_TOKEN_RESPONSE_TYPE}`));\r\n    }\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    addResponseMode(responseMode) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.RESPONSE_MODE, encodeURIComponent(responseMode ? responseMode : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseMode.QUERY));\r\n    }\r\n    /**\r\n     * Add flag to indicate STS should attempt to use WAM if available\r\n     */\r\n    addNativeBroker() {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.NATIVE_BROKER, encodeURIComponent(\"1\"));\r\n    }\r\n    /**\r\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\r\n     * @param scopeSet\r\n     * @param addOidcScopes\r\n     */\r\n    addScopes(scopes, addOidcScopes = true, defaultScopes = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES) {\r\n        // Always add openid to the scopes when adding OIDC scopes\r\n        if (addOidcScopes &&\r\n            !defaultScopes.includes(\"openid\") &&\r\n            !scopes.includes(\"openid\")) {\r\n            defaultScopes.push(\"openid\");\r\n        }\r\n        const requestScopes = addOidcScopes\r\n            ? [...(scopes || []), ...defaultScopes]\r\n            : scopes || [];\r\n        const scopeSet = new _ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_2__.ScopeSet(requestScopes);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.SCOPE, encodeURIComponent(scopeSet.printScopes()));\r\n    }\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    addClientId(clientId) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ID, encodeURIComponent(clientId));\r\n    }\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    addRedirectUri(redirectUri) {\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REDIRECT_URI, encodeURIComponent(redirectUri));\r\n    }\r\n    /**\r\n     * add post logout redirectUri\r\n     * @param redirectUri\r\n     */\r\n    addPostLogoutRedirectUri(redirectUri) {\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.POST_LOGOUT_URI, encodeURIComponent(redirectUri));\r\n    }\r\n    /**\r\n     * add id_token_hint to logout request\r\n     * @param idTokenHint\r\n     */\r\n    addIdTokenHint(idTokenHint) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\r\n    }\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    addDomainHint(domainHint) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.DOMAIN_HINT, encodeURIComponent(domainHint));\r\n    }\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    addLoginHint(loginHint) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.LOGIN_HINT, encodeURIComponent(loginHint));\r\n    }\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\r\n     * @param loginHint\r\n     */\r\n    addCcsUpn(loginHint) {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\r\n    }\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for account object\r\n     * @param loginHint\r\n     */\r\n    addCcsOid(clientInfo) {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\r\n    }\r\n    /**\r\n     * add sid\r\n     * @param sid\r\n     */\r\n    addSid(sid) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.SID, encodeURIComponent(sid));\r\n    }\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    addClaims(claims, clientCapabilities) {\r\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateClaims(mergedClaims);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLAIMS, encodeURIComponent(mergedClaims));\r\n    }\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    addCorrelationId(correlationId) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\r\n    }\r\n    /**\r\n     * add library info query params\r\n     * @param libraryInfo\r\n     */\r\n    addLibraryInfo(libraryInfo) {\r\n        // Telemetry Info\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_SKU, libraryInfo.sku);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_VER, libraryInfo.version);\r\n        if (libraryInfo.os) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_OS, libraryInfo.os);\r\n        }\r\n        if (libraryInfo.cpu) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_CPU, libraryInfo.cpu);\r\n        }\r\n    }\r\n    /**\r\n     * Add client telemetry parameters\r\n     * @param appTelemetry\r\n     */\r\n    addApplicationTelemetry(appTelemetry) {\r\n        if (appTelemetry?.appName) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_APP_NAME, appTelemetry.appName);\r\n        }\r\n        if (appTelemetry?.appVersion) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_APP_VER, appTelemetry.appVersion);\r\n        }\r\n    }\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    addPrompt(prompt) {\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validatePrompt(prompt);\r\n        this.parameters.set(`${_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.PROMPT}`, encodeURIComponent(prompt));\r\n    }\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    addState(state) {\r\n        if (state) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.STATE, encodeURIComponent(state));\r\n        }\r\n    }\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    addNonce(nonce) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.NONCE, encodeURIComponent(nonce));\r\n    }\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    addCodeChallengeParams(codeChallenge, codeChallengeMethod) {\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\r\n        }\r\n        else {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.pkceParamsMissing);\r\n        }\r\n    }\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    addAuthorizationCode(code) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE, encodeURIComponent(code));\r\n    }\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    addDeviceCode(code) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.DEVICE_CODE, encodeURIComponent(code));\r\n    }\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    addRefreshToken(refreshToken) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REFRESH_TOKEN, encodeURIComponent(refreshToken));\r\n    }\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    addCodeVerifier(codeVerifier) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE_VERIFIER, encodeURIComponent(codeVerifier));\r\n    }\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    addClientSecret(clientSecret) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_SECRET, encodeURIComponent(clientSecret));\r\n    }\r\n    /**\r\n     * add clientAssertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    addClientAssertion(clientAssertion) {\r\n        if (clientAssertion) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\r\n        }\r\n    }\r\n    /**\r\n     * add clientAssertionType for confidential client flows\r\n     * @param clientAssertionType\r\n     */\r\n    addClientAssertionType(clientAssertionType) {\r\n        if (clientAssertionType) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\r\n        }\r\n    }\r\n    /**\r\n     * add OBO assertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    addOboAssertion(oboAssertion) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.OBO_ASSERTION, encodeURIComponent(oboAssertion));\r\n    }\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    addRequestTokenUse(tokenUse) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\r\n    }\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    addGrantType(grantType) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.GRANT_TYPE, encodeURIComponent(grantType));\r\n    }\r\n    /**\r\n     * add client info\r\n     *\r\n     */\r\n    addClientInfo() {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CLIENT_INFO, \"1\");\r\n    }\r\n    /**\r\n     * add extraQueryParams\r\n     * @param eQParams\r\n     */\r\n    addExtraQueryParameters(eQParams) {\r\n        Object.entries(eQParams).forEach(([key, value]) => {\r\n            if (!this.parameters.has(key) && value) {\r\n                this.parameters.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    addClientCapabilitiesToClaims(claims, clientCapabilities) {\r\n        let mergedClaims;\r\n        // Parse provided claims into JSON object or initialize empty object\r\n        if (!claims) {\r\n            mergedClaims = {};\r\n        }\r\n        else {\r\n            try {\r\n                mergedClaims = JSON.parse(claims);\r\n            }\r\n            catch (e) {\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.invalidClaims);\r\n            }\r\n        }\r\n        if (clientCapabilities && clientCapabilities.length > 0) {\r\n            if (!mergedClaims.hasOwnProperty(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.ACCESS_TOKEN)) {\r\n                // Add access_token key to claims object\r\n                mergedClaims[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.ACCESS_TOKEN] = {};\r\n            }\r\n            // Add xms_cc claim with provided clientCapabilities to access_token key\r\n            mergedClaims[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.ACCESS_TOKEN][_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.XMS_CC] = {\r\n                values: clientCapabilities,\r\n            };\r\n        }\r\n        return JSON.stringify(mergedClaims);\r\n    }\r\n    /**\r\n     * adds `username` for Password Grant flow\r\n     * @param username\r\n     */\r\n    addUsername(username) {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.PasswordGrantConstants.username, encodeURIComponent(username));\r\n    }\r\n    /**\r\n     * adds `password` for Password Grant flow\r\n     * @param password\r\n     */\r\n    addPassword(password) {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.PasswordGrantConstants.password, encodeURIComponent(password));\r\n    }\r\n    /**\r\n     * add pop_jwk to query params\r\n     * @param cnfString\r\n     */\r\n    addPopToken(cnfString) {\r\n        if (cnfString) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.TOKEN_TYPE, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.POP);\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REQ_CNF, encodeURIComponent(cnfString));\r\n        }\r\n    }\r\n    /**\r\n     * add SSH JWK and key ID to query params\r\n     */\r\n    addSshJwk(sshJwkString) {\r\n        if (sshJwkString) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.TOKEN_TYPE, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.SSH);\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REQ_CNF, encodeURIComponent(sshJwkString));\r\n        }\r\n    }\r\n    /**\r\n     * add server telemetry fields\r\n     * @param serverTelemetryManager\r\n     */\r\n    addServerTelemetry(serverTelemetryManager) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\r\n    }\r\n    /**\r\n     * Adds parameter that indicates to the server that throttling is supported\r\n     */\r\n    addThrottling() {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_MS_LIB_CAPABILITY, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\r\n    }\r\n    /**\r\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\r\n     */\r\n    addLogoutHint(logoutHint) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.LOGOUT_HINT, encodeURIComponent(logoutHint));\r\n    }\r\n    addBrokerParameters(params) {\r\n        const brokerParams = {};\r\n        brokerParams[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.BROKER_CLIENT_ID] =\r\n            params.brokerClientId;\r\n        brokerParams[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.BROKER_REDIRECT_URI] =\r\n            params.brokerRedirectUri;\r\n        this.addExtraQueryParameters(brokerParams);\r\n    }\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    createQueryString() {\r\n        const queryParameterArray = new Array();\r\n        this.parameters.forEach((value, key) => {\r\n            queryParameterArray.push(`${key}=${value}`);\r\n        });\r\n        instrumentBrokerParams(this.parameters, this.correlationId, this.performanceClient);\r\n        return queryParameterArray.join(\"&\");\r\n    }\r\n}\n\n\n//# sourceMappingURL=RequestParameterBuilder.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestValidator: function() { return /* binding */ RequestValidator; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nclass RequestValidator {\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    static validateRedirectUri(redirectUri) {\r\n        if (!redirectUri) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.redirectUriEmpty);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    static validatePrompt(prompt) {\r\n        const promptValues = [];\r\n        for (const value in _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.PromptValue) {\r\n            promptValues.push(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.PromptValue[value]);\r\n        }\r\n        if (promptValues.indexOf(prompt) < 0) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidPromptValue);\r\n        }\r\n    }\r\n    static validateClaims(claims) {\r\n        try {\r\n            JSON.parse(claims);\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidClaims);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    static validateCodeChallengeParams(codeChallenge, codeChallengeMethod) {\r\n        if (!codeChallenge || !codeChallengeMethod) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.pkceParamsMissing);\r\n        }\r\n        else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    static validateCodeChallengeMethod(codeChallengeMethod) {\r\n        if ([\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CodeChallengeMethodValues.PLAIN,\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CodeChallengeMethodValues.S256,\r\n        ].indexOf(codeChallengeMethod) < 0) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidCodeChallengeMethod);\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=RequestValidator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9SZXF1ZXN0VmFsaWRhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUMwRTtBQUNQO0FBQ2dGOztBQUVoSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1HQUE4QixDQUFDLHNGQUFnQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDZEQUFXO0FBQ3ZDLDhCQUE4Qiw2REFBVztBQUN6QztBQUNBO0FBQ0Esa0JBQWtCLG1HQUE4QixDQUFDLHdGQUFrQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtR0FBOEIsQ0FBQyxtRkFBYTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUdBQThCLENBQUMsdUZBQWlCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJFQUF5QjtBQUNyQyxZQUFZLDJFQUF5QjtBQUNyQztBQUNBLGtCQUFrQixtR0FBOEIsQ0FBQyxnR0FBMEI7QUFDM0U7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9SZXF1ZXN0VmFsaWRhdG9yLm1qcz84OGYzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLm1qcyc7XG5pbXBvcnQgeyBDb2RlQ2hhbGxlbmdlTWV0aG9kVmFsdWVzLCBQcm9tcHRWYWx1ZSB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgcmVkaXJlY3RVcmlFbXB0eSwgaW52YWxpZFByb21wdFZhbHVlLCBpbnZhbGlkQ2xhaW1zLCBwa2NlUGFyYW1zTWlzc2luZywgaW52YWxpZENvZGVDaGFsbGVuZ2VNZXRob2QgfSBmcm9tICcuLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFZhbGlkYXRlcyBzZXJ2ZXIgY29uc3VtYWJsZSBwYXJhbXMgZnJvbSB0aGUgXCJyZXF1ZXN0XCIgb2JqZWN0c1xyXG4gKi9cclxuY2xhc3MgUmVxdWVzdFZhbGlkYXRvciB7XHJcbiAgICAvKipcclxuICAgICAqIFV0aWxpdHkgdG8gY2hlY2sgaWYgdGhlIGByZWRpcmVjdFVyaWAgaW4gdGhlIHJlcXVlc3QgaXMgYSBub24tbnVsbCB2YWx1ZVxyXG4gICAgICogQHBhcmFtIHJlZGlyZWN0VXJpXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB2YWxpZGF0ZVJlZGlyZWN0VXJpKHJlZGlyZWN0VXJpKSB7XHJcbiAgICAgICAgaWYgKCFyZWRpcmVjdFVyaSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IocmVkaXJlY3RVcmlFbXB0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVdGlsaXR5IHRvIHZhbGlkYXRlIHByb21wdCBzZW50IGJ5IHRoZSB1c2VyIGluIHRoZSByZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gcHJvbXB0XHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB2YWxpZGF0ZVByb21wdChwcm9tcHQpIHtcclxuICAgICAgICBjb25zdCBwcm9tcHRWYWx1ZXMgPSBbXTtcclxuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIGluIFByb21wdFZhbHVlKSB7XHJcbiAgICAgICAgICAgIHByb21wdFZhbHVlcy5wdXNoKFByb21wdFZhbHVlW3ZhbHVlXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChwcm9tcHRWYWx1ZXMuaW5kZXhPZihwcm9tcHQpIDwgMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoaW52YWxpZFByb21wdFZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgdmFsaWRhdGVDbGFpbXMoY2xhaW1zKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgSlNPTi5wYXJzZShjbGFpbXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoaW52YWxpZENsYWltcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVdGlsaXR5IHRvIHZhbGlkYXRlIGNvZGVfY2hhbGxlbmdlIGFuZCBjb2RlX2NoYWxsZW5nZV9tZXRob2RcclxuICAgICAqIEBwYXJhbSBjb2RlQ2hhbGxlbmdlXHJcbiAgICAgKiBAcGFyYW0gY29kZUNoYWxsZW5nZU1ldGhvZFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgdmFsaWRhdGVDb2RlQ2hhbGxlbmdlUGFyYW1zKGNvZGVDaGFsbGVuZ2UsIGNvZGVDaGFsbGVuZ2VNZXRob2QpIHtcclxuICAgICAgICBpZiAoIWNvZGVDaGFsbGVuZ2UgfHwgIWNvZGVDaGFsbGVuZ2VNZXRob2QpIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKHBrY2VQYXJhbXNNaXNzaW5nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMudmFsaWRhdGVDb2RlQ2hhbGxlbmdlTWV0aG9kKGNvZGVDaGFsbGVuZ2VNZXRob2QpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVXRpbGl0eSB0byB2YWxpZGF0ZSBjb2RlX2NoYWxsZW5nZV9tZXRob2RcclxuICAgICAqIEBwYXJhbSBjb2RlQ2hhbGxlbmdlTWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB2YWxpZGF0ZUNvZGVDaGFsbGVuZ2VNZXRob2QoY29kZUNoYWxsZW5nZU1ldGhvZCkge1xyXG4gICAgICAgIGlmIChbXHJcbiAgICAgICAgICAgIENvZGVDaGFsbGVuZ2VNZXRob2RWYWx1ZXMuUExBSU4sXHJcbiAgICAgICAgICAgIENvZGVDaGFsbGVuZ2VNZXRob2RWYWx1ZXMuUzI1NixcclxuICAgICAgICBdLmluZGV4T2YoY29kZUNoYWxsZW5nZU1ldGhvZCkgPCAwKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvcihpbnZhbGlkQ29kZUNoYWxsZW5nZU1ldGhvZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFJlcXVlc3RWYWxpZGF0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlcXVlc3RWYWxpZGF0b3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScopeSet: function() { return /* binding */ ScopeSet; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nclass ScopeSet {\r\n    constructor(inputScopes) {\r\n        // Filter empty string and null/undefined array items\r\n        const scopeArr = inputScopes\r\n            ? _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.trimArrayEntries([...inputScopes])\r\n            : [];\r\n        const filteredInput = scopeArr\r\n            ? _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.removeEmptyStringsFromArray(scopeArr)\r\n            : [];\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach((scope) => this.scopes.add(scope));\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n     */\r\n    static fromString(inputScopeString) {\r\n        const scopeString = inputScopeString || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n        const inputScopes = scopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    }\r\n    /**\r\n     * Creates the set of scopes to search for in cache lookups\r\n     * @param inputScopeString\r\n     * @returns\r\n     */\r\n    static createSearchScopes(inputScopeString) {\r\n        const scopeSet = new ScopeSet(inputScopeString);\r\n        if (!scopeSet.containsOnlyOIDCScopes()) {\r\n            scopeSet.removeOIDCScopes();\r\n        }\r\n        else {\r\n            scopeSet.removeScope(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.OFFLINE_ACCESS_SCOPE);\r\n        }\r\n        return scopeSet;\r\n    }\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n     */\r\n    validateInputScopes(inputScopes) {\r\n        // Check if scopes are required but not given or is an empty array\r\n        if (!inputScopes || inputScopes.length < 1) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.emptyInputScopesError);\r\n        }\r\n    }\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    containsScope(scope) {\r\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\r\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\r\n        // compare lowercase scopes\r\n        return scope\r\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\r\n            : false;\r\n    }\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    containsScopeSet(scopeSet) {\r\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size &&\r\n            scopeSet.asArray().every((scope) => this.containsScope(scope)));\r\n    }\r\n    /**\r\n     * Check if set of scopes contains only the defaults\r\n     */\r\n    containsOnlyOIDCScopes() {\r\n        let defaultScopeCount = 0;\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_SCOPES.forEach((defaultScope) => {\r\n            if (this.containsScope(defaultScope)) {\r\n                defaultScopeCount += 1;\r\n            }\r\n        });\r\n        return this.scopes.size === defaultScopeCount;\r\n    }\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    appendScope(newScope) {\r\n        if (newScope) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    }\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    appendScopes(newScopes) {\r\n        try {\r\n            newScopes.forEach((newScope) => this.appendScope(newScope));\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.cannotAppendScopeSet);\r\n        }\r\n    }\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    removeScope(scope) {\r\n        if (!scope) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.cannotRemoveEmptyScope);\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    }\r\n    /**\r\n     * Removes default scopes from set of scopes\r\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\r\n     */\r\n    removeOIDCScopes() {\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_SCOPES.forEach((defaultScope) => {\r\n            this.scopes.delete(defaultScope);\r\n        });\r\n    }\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    unionScopeSets(otherScopes) {\r\n        if (!otherScopes) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.emptyInputScopeSet);\r\n        }\r\n        const unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\r\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\r\n        return unionScopes;\r\n    }\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    intersectingScopeSets(otherScopes) {\r\n        if (!otherScopes) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.emptyInputScopeSet);\r\n        }\r\n        // Do not allow OIDC scopes to be the only intersecting scopes\r\n        if (!otherScopes.containsOnlyOIDCScopes()) {\r\n            otherScopes.removeOIDCScopes();\r\n        }\r\n        const unionScopes = this.unionScopeSets(otherScopes);\r\n        const sizeOtherScopes = otherScopes.getScopeCount();\r\n        const sizeThisScopes = this.getScopeCount();\r\n        const sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\r\n    }\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    getScopeCount() {\r\n        return this.scopes.size;\r\n    }\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    asArray() {\r\n        const array = [];\r\n        this.scopes.forEach((val) => array.push(val));\r\n        return array;\r\n    }\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    printScopes() {\r\n        if (this.scopes) {\r\n            const scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n    }\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    printScopesLowerCase() {\r\n        return this.printScopes().toLowerCase();\r\n    }\r\n}\n\n\n//# sourceMappingURL=ScopeSet.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponseHandler: function() { return /* binding */ ResponseHandler; },\n/* harmony export */   buildAccountToCache: function() { return /* binding */ buildAccountToCache; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../request/ScopeSet.mjs */ \"./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cache/entities/AccountEntity.mjs */ \"./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/InteractionRequiredAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/ProtocolUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../cache/persistence/TokenCacheContext.mjs */ \"./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../account/TokenClaims.mjs */ \"./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../account/AccountInfo.mjs */ \"./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../cache/utils/CacheHelpers.mjs */ \"./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction parseServerErrorNo(serverResponse) {\r\n    const errorCodePrefix = \"code=\";\r\n    const errorCodePrefixIndex = serverResponse.error_uri?.lastIndexOf(errorCodePrefix);\r\n    return errorCodePrefixIndex && errorCodePrefixIndex >= 0\r\n        ? serverResponse.error_uri?.substring(errorCodePrefixIndex + errorCodePrefix.length)\r\n        : undefined;\r\n}\r\n/**\r\n * Class that handles response parsing.\r\n * @internal\r\n */\r\nclass ResponseHandler {\r\n    constructor(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin, performanceClient) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n        this.serializableCache = serializableCache;\r\n        this.persistencePlugin = persistencePlugin;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param requestState\r\n     * @param cryptoObj\r\n     */\r\n    validateServerAuthorizationCodeResponse(serverResponse, requestState) {\r\n        if (!serverResponse.state || !requestState) {\r\n            throw serverResponse.state\r\n                ? (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stateNotFound, \"Cached State\")\r\n                : (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stateNotFound, \"Server State\");\r\n        }\r\n        let decodedServerResponseState;\r\n        let decodedRequestState;\r\n        try {\r\n            decodedServerResponseState = decodeURIComponent(serverResponse.state);\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidState, serverResponse.state);\r\n        }\r\n        try {\r\n            decodedRequestState = decodeURIComponent(requestState);\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidState, serverResponse.state);\r\n        }\r\n        if (decodedServerResponseState !== decodedRequestState) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stateMismatch);\r\n        }\r\n        // Check for error\r\n        if (serverResponse.error ||\r\n            serverResponse.error_description ||\r\n            serverResponse.suberror) {\r\n            const serverErrorNo = parseServerErrorNo(serverResponse);\r\n            if ((0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.isInteractionRequiredError)(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || \"\", serverResponse.trace_id || \"\", serverResponse.correlation_id || \"\", serverResponse.claims || \"\", serverErrorNo);\r\n            }\r\n            throw new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverErrorNo);\r\n        }\r\n    }\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     * @param refreshAccessToken\r\n     */\r\n    validateTokenResponse(serverResponse, refreshAccessToken) {\r\n        // Check for error\r\n        if (serverResponse.error ||\r\n            serverResponse.error_description ||\r\n            serverResponse.suberror) {\r\n            const errString = `Error(s): ${serverResponse.error_codes || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Timestamp: ${serverResponse.timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Description: ${serverResponse.error_description || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Correlation ID: ${serverResponse.correlation_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Trace ID: ${serverResponse.trace_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE}`;\r\n            const serverErrorNo = serverResponse.error_codes?.length\r\n                ? serverResponse.error_codes[0]\r\n                : undefined;\r\n            const serverError = new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerError(serverResponse.error, errString, serverResponse.suberror, serverErrorNo, serverResponse.status);\r\n            // check if 500 error\r\n            if (refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SERVER_ERROR_RANGE_START &&\r\n                serverResponse.status <= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SERVER_ERROR_RANGE_END) {\r\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`);\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n                // check if 400 error\r\n            }\r\n            else if (refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.CLIENT_ERROR_RANGE_START &&\r\n                serverResponse.status <= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.CLIENT_ERROR_RANGE_END) {\r\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`);\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n            }\r\n            if ((0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.isInteractionRequiredError)(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverResponse.trace_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverResponse.correlation_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverResponse.claims || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverErrorNo);\r\n            }\r\n            throw serverError;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    async handleServerTokenResponse(serverTokenResponse, authority, reqTimestamp, request, authCodePayload, userAssertionHash, handlingRefreshTokenResponse, forceCacheRefreshTokenResponse, serverRequestId) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.HandleServerTokenResponse, serverTokenResponse.correlation_id);\r\n        // create an idToken object (not entity)\r\n        let idTokenClaims;\r\n        if (serverTokenResponse.id_token) {\r\n            idTokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__.extractTokenClaims)(serverTokenResponse.id_token || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, this.cryptoObj.base64Decode);\r\n            // token nonce check (TODO: Add a warning if no nonce is given?)\r\n            if (authCodePayload && authCodePayload.nonce) {\r\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\r\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.nonceMismatch);\r\n                }\r\n            }\r\n            // token max_age check\r\n            if (request.maxAge || request.maxAge === 0) {\r\n                const authTime = idTokenClaims.auth_time;\r\n                if (!authTime) {\r\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.authTimeNotFound);\r\n                }\r\n                (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__.checkMaxAge)(authTime, request.maxAge);\r\n            }\r\n        }\r\n        // generate homeAccountId\r\n        this.homeAccountIdentifier = _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_7__.AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\r\n        // save the response tokens\r\n        let requestStateObj;\r\n        if (!!authCodePayload && !!authCodePayload.state) {\r\n            requestStateObj = _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\r\n        }\r\n        // Add keyId from request to serverTokenResponse if defined\r\n        serverTokenResponse.key_id =\r\n            serverTokenResponse.key_id || request.sshKid || undefined;\r\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload);\r\n        let cacheContext;\r\n        try {\r\n            if (this.persistencePlugin && this.serializableCache) {\r\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\r\n                cacheContext = new _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_9__.TokenCacheContext(this.serializableCache, true);\r\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\r\n            }\r\n            /*\r\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\r\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\r\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\r\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\r\n             */\r\n            if (handlingRefreshTokenResponse &&\r\n                !forceCacheRefreshTokenResponse &&\r\n                cacheRecord.account) {\r\n                const key = cacheRecord.account.generateAccountKey();\r\n                const account = this.cacheStorage.getAccount(key, this.logger);\r\n                if (!account) {\r\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\r\n                    return await ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, undefined, serverRequestId);\r\n                }\r\n            }\r\n            await this.cacheStorage.saveCacheRecord(cacheRecord, request.storeInCache, request.correlationId);\r\n        }\r\n        finally {\r\n            if (this.persistencePlugin &&\r\n                this.serializableCache &&\r\n                cacheContext) {\r\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\r\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\r\n            }\r\n        }\r\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, serverTokenResponse, serverRequestId);\r\n    }\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload) {\r\n        const env = authority.getPreferredCache();\r\n        if (!env) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidCacheEnvironment);\r\n        }\r\n        const claimsTenantId = (0,_account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_10__.getTenantIdFromIdTokenClaims)(idTokenClaims);\r\n        // IdToken: non AAD scenarios can have empty realm\r\n        let cachedIdToken;\r\n        let cachedAccount;\r\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\r\n            cachedIdToken = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__.createIdTokenEntity)(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, claimsTenantId || \"\");\r\n            cachedAccount = buildAccountToCache(this.cacheStorage, authority, this.homeAccountIdentifier, this.cryptoObj.base64Decode, idTokenClaims, serverTokenResponse.client_info, env, claimsTenantId, authCodePayload, undefined, // nativeAccountId\r\n            this.logger);\r\n        }\r\n        // AccessToken\r\n        let cachedAccessToken = null;\r\n        if (serverTokenResponse.access_token) {\r\n            // If scopes not returned in server response, use request scopes\r\n            const responseScopes = serverTokenResponse.scope\r\n                ? _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet.fromString(serverTokenResponse.scope)\r\n                : new _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet(request.scopes || []);\r\n            /*\r\n             * Use timestamp calculated before request\r\n             * Server may return timestamps as strings, parse to numbers if so.\r\n             */\r\n            const expiresIn = (typeof serverTokenResponse.expires_in === \"string\"\r\n                ? parseInt(serverTokenResponse.expires_in, 10)\r\n                : serverTokenResponse.expires_in) || 0;\r\n            const extExpiresIn = (typeof serverTokenResponse.ext_expires_in === \"string\"\r\n                ? parseInt(serverTokenResponse.ext_expires_in, 10)\r\n                : serverTokenResponse.ext_expires_in) || 0;\r\n            const refreshIn = (typeof serverTokenResponse.refresh_in === \"string\"\r\n                ? parseInt(serverTokenResponse.refresh_in, 10)\r\n                : serverTokenResponse.refresh_in) || undefined;\r\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\r\n            const refreshOnSeconds = refreshIn && refreshIn > 0\r\n                ? reqTimestamp + refreshIn\r\n                : undefined;\r\n            // non AAD scenarios can have empty realm\r\n            cachedAccessToken = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__.createAccessTokenEntity)(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, claimsTenantId || authority.tenant || \"\", responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj.base64Decode, refreshOnSeconds, serverTokenResponse.token_type, userAssertionHash, serverTokenResponse.key_id, request.claims, request.requestedClaimsHash);\r\n        }\r\n        // refreshToken\r\n        let cachedRefreshToken = null;\r\n        if (serverTokenResponse.refresh_token) {\r\n            let rtExpiresOn;\r\n            if (serverTokenResponse.refresh_token_expires_in) {\r\n                const rtExpiresIn = typeof serverTokenResponse.refresh_token_expires_in ===\r\n                    \"string\"\r\n                    ? parseInt(serverTokenResponse.refresh_token_expires_in, 10)\r\n                    : serverTokenResponse.refresh_token_expires_in;\r\n                rtExpiresOn = reqTimestamp + rtExpiresIn;\r\n            }\r\n            cachedRefreshToken = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__.createRefreshTokenEntity)(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci, userAssertionHash, rtExpiresOn);\r\n        }\r\n        // appMetadata\r\n        let cachedAppMetadata = null;\r\n        if (serverTokenResponse.foci) {\r\n            cachedAppMetadata = {\r\n                clientId: this.clientId,\r\n                environment: env,\r\n                familyId: serverTokenResponse.foci,\r\n            };\r\n        }\r\n        return {\r\n            account: cachedAccount,\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n            refreshToken: cachedRefreshToken,\r\n            appMetadata: cachedAppMetadata,\r\n        };\r\n    }\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    static async generateAuthenticationResult(cryptoObj, authority, cacheRecord, fromTokenCache, request, idTokenClaims, requestState, serverTokenResponse, requestId) {\r\n        let accessToken = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING;\r\n        let responseScopes = [];\r\n        let expiresOn = null;\r\n        let extExpiresOn;\r\n        let refreshOn;\r\n        let familyId = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING;\r\n        if (cacheRecord.accessToken) {\r\n            /*\r\n             * if the request object has `popKid` property, `signPopToken` will be set to false and\r\n             * the token will be returned unsigned\r\n             */\r\n            if (cacheRecord.accessToken.tokenType ===\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.POP &&\r\n                !request.popKid) {\r\n                const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__.PopTokenGenerator(cryptoObj);\r\n                const { secret, keyId } = cacheRecord.accessToken;\r\n                if (!keyId) {\r\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.keyIdMissing);\r\n                }\r\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\r\n            }\r\n            else {\r\n                accessToken = cacheRecord.accessToken.secret;\r\n            }\r\n            responseScopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\r\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\r\n            if (cacheRecord.accessToken.refreshOn) {\r\n                refreshOn = new Date(Number(cacheRecord.accessToken.refreshOn) * 1000);\r\n            }\r\n        }\r\n        if (cacheRecord.appMetadata) {\r\n            familyId =\r\n                cacheRecord.appMetadata.familyId === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.THE_FAMILY_ID\r\n                    ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.THE_FAMILY_ID\r\n                    : \"\";\r\n        }\r\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\r\n        const tid = idTokenClaims?.tid || \"\";\r\n        // for hybrid + native bridge enablement, send back the native account Id\r\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\r\n            cacheRecord.account.nativeAccountId =\r\n                serverTokenResponse?.spa_accountid;\r\n        }\r\n        const accountInfo = cacheRecord.account\r\n            ? (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_14__.updateAccountTenantProfileData)(cacheRecord.account.getAccountInfo(), undefined, // tenantProfile optional\r\n            idTokenClaims, cacheRecord.idToken?.secret)\r\n            : null;\r\n        return {\r\n            authority: authority.canonicalAuthority,\r\n            uniqueId: uid,\r\n            tenantId: tid,\r\n            scopes: responseScopes,\r\n            account: accountInfo,\r\n            idToken: cacheRecord?.idToken?.secret || \"\",\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken,\r\n            fromCache: fromTokenCache,\r\n            expiresOn: expiresOn,\r\n            extExpiresOn: extExpiresOn,\r\n            refreshOn: refreshOn,\r\n            correlationId: request.correlationId,\r\n            requestId: requestId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            familyId: familyId,\r\n            tokenType: cacheRecord.accessToken?.tokenType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            state: requestState\r\n                ? requestState.userRequestState\r\n                : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName ||\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            msGraphHost: cacheRecord.account?.msGraphHost || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            code: serverTokenResponse?.spa_code,\r\n            fromNativeBroker: false,\r\n        };\r\n    }\r\n}\r\nfunction buildAccountToCache(cacheStorage, authority, homeAccountId, base64Decode, idTokenClaims, clientInfo, environment, claimsTenantId, authCodePayload, nativeAccountId, logger) {\r\n    logger?.verbose(\"setCachedAccount called\");\r\n    // Check if base account is already cached\r\n    const accountKeys = cacheStorage.getAccountKeys();\r\n    const baseAccountKey = accountKeys.find((accountKey) => {\r\n        return accountKey.startsWith(homeAccountId);\r\n    });\r\n    let cachedAccount = null;\r\n    if (baseAccountKey) {\r\n        cachedAccount = cacheStorage.getAccount(baseAccountKey, logger);\r\n    }\r\n    const baseAccount = cachedAccount ||\r\n        _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_7__.AccountEntity.createAccount({\r\n            homeAccountId,\r\n            idTokenClaims,\r\n            clientInfo,\r\n            environment,\r\n            cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\r\n            msGraphHost: authCodePayload?.msgraph_host,\r\n            nativeAccountId: nativeAccountId,\r\n        }, authority, base64Decode);\r\n    const tenantProfiles = baseAccount.tenantProfiles || [];\r\n    const tenantId = claimsTenantId || baseAccount.realm;\r\n    if (tenantId &&\r\n        !tenantProfiles.find((tenantProfile) => {\r\n            return tenantProfile.tenantId === tenantId;\r\n        })) {\r\n        const newTenantProfile = (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_14__.buildTenantProfile)(homeAccountId, baseAccount.localAccountId, tenantId, idTokenClaims);\r\n        tenantProfiles.push(newTenantProfile);\r\n    }\r\n    baseAccount.tenantProfiles = tenantProfiles;\r\n    return baseAccount;\r\n}\n\n\n//# sourceMappingURL=ResponseHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PerformanceClient: function() { return /* binding */ PerformanceClient; },\n/* harmony export */   addError: function() { return /* binding */ addError; },\n/* harmony export */   compactStack: function() { return /* binding */ compactStack; },\n/* harmony export */   compactStackLine: function() { return /* binding */ compactStackLine; },\n/* harmony export */   endContext: function() { return /* binding */ endContext; },\n/* harmony export */   startContext: function() { return /* binding */ startContext; }\n/* harmony export */ });\n/* harmony import */ var _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _StubPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./StubPerformanceClient.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/CacheError.mjs */ \"./node_modules/@azure/msal-common/dist/error/CacheError.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/ServerError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/InteractionRequiredAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Starts context by adding payload to the stack\r\n * @param event {PerformanceEvent}\r\n * @param abbreviations {Map<string, string>} event name abbreviations\r\n * @param stack {?PerformanceEventStackedContext[]} stack\r\n */\r\nfunction startContext(event, abbreviations, stack) {\r\n    if (!stack) {\r\n        return;\r\n    }\r\n    stack.push({\r\n        name: abbreviations.get(event.name) || event.name,\r\n    });\r\n}\r\n/**\r\n * Ends context by removing payload from the stack and returning parent or self, if stack is empty, payload\r\n *\r\n * @param event {PerformanceEvent}\r\n * @param abbreviations {Map<string, string>} event name abbreviations\r\n * @param stack {?PerformanceEventStackedContext[]} stack\r\n * @param error {?unknown} error\r\n */\r\nfunction endContext(event, abbreviations, stack, error) {\r\n    if (!stack?.length) {\r\n        return;\r\n    }\r\n    const peek = (stack) => {\r\n        return stack.length ? stack[stack.length - 1] : undefined;\r\n    };\r\n    const abbrEventName = abbreviations.get(event.name) || event.name;\r\n    const top = peek(stack);\r\n    if (top?.name !== abbrEventName) {\r\n        return;\r\n    }\r\n    const current = stack?.pop();\r\n    if (!current) {\r\n        return;\r\n    }\r\n    const errorCode = error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError\r\n        ? error.errorCode\r\n        : error instanceof Error\r\n            ? error.name\r\n            : undefined;\r\n    const subErr = error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError ? error.subError : undefined;\r\n    if (errorCode && current.childErr !== errorCode) {\r\n        current.err = errorCode;\r\n        if (subErr) {\r\n            current.subErr = subErr;\r\n        }\r\n    }\r\n    delete current.name;\r\n    delete current.childErr;\r\n    const context = {\r\n        ...current,\r\n        dur: event.durationMs,\r\n    };\r\n    if (!event.success) {\r\n        context.fail = 1;\r\n    }\r\n    const parent = peek(stack);\r\n    if (!parent) {\r\n        return { [abbrEventName]: context };\r\n    }\r\n    if (errorCode) {\r\n        parent.childErr = errorCode;\r\n    }\r\n    let childName;\r\n    if (!parent[abbrEventName]) {\r\n        childName = abbrEventName;\r\n    }\r\n    else {\r\n        const siblings = Object.keys(parent).filter((key) => key.startsWith(abbrEventName)).length;\r\n        childName = `${abbrEventName}_${siblings + 1}`;\r\n    }\r\n    parent[childName] = context;\r\n    return parent;\r\n}\r\n/**\r\n * Adds error name and stack trace to the telemetry event\r\n * @param error {Error}\r\n * @param logger {Logger}\r\n * @param event {PerformanceEvent}\r\n * @param stackMaxSize {number} max error stack size to capture\r\n */\r\nfunction addError(error, logger, event, stackMaxSize = 5) {\r\n    if (!(error instanceof Error)) {\r\n        logger.trace(\"PerformanceClient.addErrorStack: Input error is not instance of Error\", event.correlationId);\r\n        return;\r\n    }\r\n    else if (error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError) {\r\n        event.errorCode = error.errorCode;\r\n        event.subErrorCode = error.subError;\r\n        if (error instanceof _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__.ServerError ||\r\n            error instanceof _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError) {\r\n            event.serverErrorNo = error.errorNo;\r\n        }\r\n        return;\r\n    }\r\n    else if (error instanceof _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_3__.CacheError) {\r\n        event.errorCode = error.errorCode;\r\n        return;\r\n    }\r\n    else if (event.errorStack?.length) {\r\n        logger.trace(\"PerformanceClient.addErrorStack: Stack already exist\", event.correlationId);\r\n        return;\r\n    }\r\n    else if (!error.stack?.length) {\r\n        logger.trace(\"PerformanceClient.addErrorStack: Input stack is empty\", event.correlationId);\r\n        return;\r\n    }\r\n    if (error.stack) {\r\n        event.errorStack = compactStack(error.stack, stackMaxSize);\r\n    }\r\n    event.errorName = error.name;\r\n}\r\n/**\r\n * Compacts error stack into array by fetching N first entries\r\n * @param stack {string} error stack\r\n * @param stackMaxSize {number} max error stack size to capture\r\n * @returns {string[]}\r\n */\r\nfunction compactStack(stack, stackMaxSize) {\r\n    if (stackMaxSize < 0) {\r\n        return [];\r\n    }\r\n    const stackArr = stack.split(\"\\n\") || [];\r\n    const res = [];\r\n    // Check for a handful of known, common runtime errors and log them (with redaction where applicable).\r\n    const firstLine = stackArr[0];\r\n    if (firstLine.startsWith(\"TypeError: Cannot read property\") ||\r\n        firstLine.startsWith(\"TypeError: Cannot read properties of\") ||\r\n        firstLine.startsWith(\"TypeError: Cannot set property\") ||\r\n        firstLine.startsWith(\"TypeError: Cannot set properties of\") ||\r\n        firstLine.endsWith(\"is not a function\")) {\r\n        // These types of errors are not at risk of leaking PII. They will indicate unavailable APIs\r\n        res.push(compactStackLine(firstLine));\r\n    }\r\n    else if (firstLine.startsWith(\"SyntaxError\") ||\r\n        firstLine.startsWith(\"TypeError\")) {\r\n        // Prevent unintentional leaking of arbitrary info by redacting contents between both single and double quotes\r\n        res.push(compactStackLine(\r\n        // Example: SyntaxError: Unexpected token 'e', \"test\" is not valid JSON -> SyntaxError: Unexpected token <redacted>, <redacted> is not valid JSON\r\n        firstLine.replace(/['].*[']|[\"].*[\"]/g, \"<redacted>\")));\r\n    }\r\n    // Get top N stack lines\r\n    for (let ix = 1; ix < stackArr.length; ix++) {\r\n        if (res.length >= stackMaxSize) {\r\n            break;\r\n        }\r\n        const line = stackArr[ix];\r\n        res.push(compactStackLine(line));\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Compacts error stack line by shortening file path\r\n * Example: https://localhost/msal-common/src/authority/Authority.js:100:1 -> Authority.js:100:1\r\n * @param line {string} stack line\r\n * @returns {string}\r\n */\r\nfunction compactStackLine(line) {\r\n    const filePathIx = line.lastIndexOf(\" \") + 1;\r\n    if (filePathIx < 1) {\r\n        return line;\r\n    }\r\n    const filePath = line.substring(filePathIx);\r\n    let fileNameIx = filePath.lastIndexOf(\"/\");\r\n    fileNameIx = fileNameIx < 0 ? filePath.lastIndexOf(\"\\\\\") : fileNameIx;\r\n    if (fileNameIx >= 0) {\r\n        return (line.substring(0, filePathIx) +\r\n            \"(\" +\r\n            filePath.substring(fileNameIx + 1) +\r\n            (filePath.charAt(filePath.length - 1) === \")\" ? \"\" : \")\")).trimStart();\r\n    }\r\n    return line.trimStart();\r\n}\r\nclass PerformanceClient {\r\n    /**\r\n     * Creates an instance of PerformanceClient,\r\n     * an abstract class containing core performance telemetry logic.\r\n     *\r\n     * @constructor\r\n     * @param {string} clientId Client ID of the application\r\n     * @param {string} authority Authority used by the application\r\n     * @param {Logger} logger Logger used by the application\r\n     * @param {string} libraryName Name of the library\r\n     * @param {string} libraryVersion Version of the library\r\n     * @param {ApplicationTelemetry} applicationTelemetry application name and version\r\n     * @param {Set<String>} intFields integer fields to be truncated\r\n     * @param {Map<string, string>} abbreviations event name abbreviations\r\n     */\r\n    constructor(clientId, authority, logger, libraryName, libraryVersion, applicationTelemetry, intFields, abbreviations) {\r\n        this.authority = authority;\r\n        this.libraryName = libraryName;\r\n        this.libraryVersion = libraryVersion;\r\n        this.applicationTelemetry = applicationTelemetry;\r\n        this.clientId = clientId;\r\n        this.logger = logger;\r\n        this.callbacks = new Map();\r\n        this.eventsByCorrelationId = new Map();\r\n        this.eventStack = new Map();\r\n        this.queueMeasurements = new Map();\r\n        this.preQueueTimeByCorrelationId = new Map();\r\n        this.intFields = intFields || new Set();\r\n        for (const item of _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_4__.IntFields) {\r\n            this.intFields.add(item);\r\n        }\r\n        this.abbreviations = abbreviations || new Map();\r\n        for (const [key, value] of _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_4__.PerformanceEventAbbreviations) {\r\n            this.abbreviations.set(key, value);\r\n        }\r\n    }\r\n    /**\r\n     * Starts and returns an platform-specific implementation of IPerformanceMeasurement.\r\n     * Note: this function can be changed to abstract at the next major version bump.\r\n     *\r\n     * @param {string} measureName\r\n     * @param {string} correlationId\r\n     * @returns {IPerformanceMeasurement}\r\n     * @deprecated This method will be removed in the next major version\r\n     */\r\n    startPerformanceMeasurement(measureName, // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    correlationId // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        return {};\r\n    }\r\n    /**\r\n     * Gets map of pre-queue times by correlation Id\r\n     *\r\n     * @param {PerformanceEvents} eventName\r\n     * @param {string} correlationId\r\n     * @returns {number}\r\n     */\r\n    getPreQueueTime(eventName, correlationId) {\r\n        const preQueueEvent = this.preQueueTimeByCorrelationId.get(correlationId);\r\n        if (!preQueueEvent) {\r\n            this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue times found for correlationId: ${correlationId}, unable to add queue measurement`);\r\n            return;\r\n        }\r\n        else if (preQueueEvent.name !== eventName) {\r\n            this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue time found for ${eventName}, unable to add queue measurement`);\r\n            return;\r\n        }\r\n        return preQueueEvent.time;\r\n    }\r\n    /**\r\n     * Calculates the difference between current time and time when function was queued.\r\n     * Note: It is possible to have 0 as the queue time if the current time and the queued time was the same.\r\n     *\r\n     * @param {number} preQueueTime\r\n     * @param {number} currentTime\r\n     * @returns {number}\r\n     */\r\n    calculateQueuedTime(preQueueTime, currentTime) {\r\n        if (preQueueTime < 1) {\r\n            this.logger.trace(`PerformanceClient: preQueueTime should be a positive integer and not ${preQueueTime}`);\r\n            return 0;\r\n        }\r\n        if (currentTime < 1) {\r\n            this.logger.trace(`PerformanceClient: currentTime should be a positive integer and not ${currentTime}`);\r\n            return 0;\r\n        }\r\n        if (currentTime < preQueueTime) {\r\n            this.logger.trace(\"PerformanceClient: currentTime is less than preQueueTime, check how time is being retrieved\");\r\n            return 0;\r\n        }\r\n        return currentTime - preQueueTime;\r\n    }\r\n    /**\r\n     * Adds queue measurement time to QueueMeasurements array for given correlation ID.\r\n     *\r\n     * @param {PerformanceEvents} eventName\r\n     * @param {?string} correlationId\r\n     * @param {?number} queueTime\r\n     * @param {?boolean} manuallyCompleted - indicator for manually completed queue measurements\r\n     * @returns\r\n     */\r\n    addQueueMeasurement(eventName, correlationId, queueTime, manuallyCompleted) {\r\n        if (!correlationId) {\r\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: correlationId not provided for ${eventName}, cannot add queue measurement`);\r\n            return;\r\n        }\r\n        if (queueTime === 0) {\r\n            // Possible for there to be no queue time after calculation\r\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: queue time provided for ${eventName} is ${queueTime}`);\r\n        }\r\n        else if (!queueTime) {\r\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: no queue time provided for ${eventName}`);\r\n            return;\r\n        }\r\n        const queueMeasurement = {\r\n            eventName,\r\n            // Always default queue time to 0 for manually completed (improperly instrumented)\r\n            queueTime: manuallyCompleted ? 0 : queueTime,\r\n            manuallyCompleted,\r\n        };\r\n        // Adds to existing correlation Id if present in queueMeasurements\r\n        const existingMeasurements = this.queueMeasurements.get(correlationId);\r\n        if (existingMeasurements) {\r\n            existingMeasurements.push(queueMeasurement);\r\n            this.queueMeasurements.set(correlationId, existingMeasurements);\r\n        }\r\n        else {\r\n            // Sets new correlation Id if not present in queueMeasurements\r\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: adding correlationId ${correlationId} to queue measurements`);\r\n            const measurementArray = [queueMeasurement];\r\n            this.queueMeasurements.set(correlationId, measurementArray);\r\n        }\r\n        // Delete processed pre-queue event.\r\n        this.preQueueTimeByCorrelationId.delete(correlationId);\r\n    }\r\n    /**\r\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\r\n     *\r\n     * @param {PerformanceEvents} measureName\r\n     * @param {?string} [correlationId]\r\n     * @returns {InProgressPerformanceEvent}\r\n     */\r\n    startMeasurement(measureName, correlationId) {\r\n        // Generate a placeholder correlation if the request does not provide one\r\n        const eventCorrelationId = correlationId || this.generateId();\r\n        if (!correlationId) {\r\n            this.logger.info(`PerformanceClient: No correlation id provided for ${measureName}, generating`, eventCorrelationId);\r\n        }\r\n        this.logger.trace(`PerformanceClient: Performance measurement started for ${measureName}`, eventCorrelationId);\r\n        const inProgressEvent = {\r\n            eventId: this.generateId(),\r\n            status: _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_4__.PerformanceEventStatus.InProgress,\r\n            authority: this.authority,\r\n            libraryName: this.libraryName,\r\n            libraryVersion: this.libraryVersion,\r\n            clientId: this.clientId,\r\n            name: measureName,\r\n            startTimeMs: Date.now(),\r\n            correlationId: eventCorrelationId,\r\n            appName: this.applicationTelemetry?.appName,\r\n            appVersion: this.applicationTelemetry?.appVersion,\r\n        };\r\n        // Store in progress events so they can be discarded if not ended properly\r\n        this.cacheEventByCorrelationId(inProgressEvent);\r\n        startContext(inProgressEvent, this.abbreviations, this.eventStack.get(eventCorrelationId));\r\n        // Return the event and functions the caller can use to properly end/flush the measurement\r\n        return {\r\n            end: (event, error) => {\r\n                return this.endMeasurement({\r\n                    // Initial set of event properties\r\n                    ...inProgressEvent,\r\n                    // Properties set when event ends\r\n                    ...event,\r\n                }, error);\r\n            },\r\n            discard: () => {\r\n                return this.discardMeasurements(inProgressEvent.correlationId);\r\n            },\r\n            add: (fields) => {\r\n                return this.addFields(fields, inProgressEvent.correlationId);\r\n            },\r\n            increment: (fields) => {\r\n                return this.incrementFields(fields, inProgressEvent.correlationId);\r\n            },\r\n            event: inProgressEvent,\r\n            measurement: new _StubPerformanceClient_mjs__WEBPACK_IMPORTED_MODULE_5__.StubPerformanceMeasurement(),\r\n        };\r\n    }\r\n    /**\r\n     * Stops measuring the performance for an operation. Should only be called directly by PerformanceClient classes,\r\n     * as consumers should instead use the function returned by startMeasurement.\r\n     * Adds a new field named as \"[event name]DurationMs\" for sub-measurements, completes and emits an event\r\n     * otherwise.\r\n     *\r\n     * @param {PerformanceEvent} event\r\n     * @param {unknown} error\r\n     * @returns {(PerformanceEvent | null)}\r\n     */\r\n    endMeasurement(event, error) {\r\n        const rootEvent = this.eventsByCorrelationId.get(event.correlationId);\r\n        if (!rootEvent) {\r\n            this.logger.trace(`PerformanceClient: Measurement not found for ${event.eventId}`, event.correlationId);\r\n            return null;\r\n        }\r\n        const isRoot = event.eventId === rootEvent.eventId;\r\n        let queueInfo = {\r\n            totalQueueTime: 0,\r\n            totalQueueCount: 0,\r\n            manuallyCompletedCount: 0,\r\n        };\r\n        event.durationMs = Math.round(event.durationMs || this.getDurationMs(event.startTimeMs));\r\n        const context = JSON.stringify(endContext(event, this.abbreviations, this.eventStack.get(rootEvent.correlationId), error));\r\n        if (isRoot) {\r\n            queueInfo = this.getQueueInfo(event.correlationId);\r\n            this.discardMeasurements(rootEvent.correlationId);\r\n        }\r\n        else {\r\n            rootEvent.incompleteSubMeasurements?.delete(event.eventId);\r\n        }\r\n        this.logger.trace(`PerformanceClient: Performance measurement ended for ${event.name}: ${event.durationMs} ms`, event.correlationId);\r\n        if (error) {\r\n            addError(error, this.logger, rootEvent);\r\n        }\r\n        // Add sub-measurement attribute to root event.\r\n        if (!isRoot) {\r\n            rootEvent[event.name + \"DurationMs\"] = Math.floor(event.durationMs);\r\n            return { ...rootEvent };\r\n        }\r\n        if (isRoot &&\r\n            !error &&\r\n            (rootEvent.errorCode || rootEvent.subErrorCode)) {\r\n            this.logger.trace(`PerformanceClient: Remove error and sub-error codes for root event ${event.name} as intermediate error was successfully handled`, event.correlationId);\r\n            rootEvent.errorCode = undefined;\r\n            rootEvent.subErrorCode = undefined;\r\n        }\r\n        let finalEvent = { ...rootEvent, ...event };\r\n        let incompleteSubsCount = 0;\r\n        // Incomplete sub-measurements are discarded. They are likely an instrumentation bug that should be fixed.\r\n        finalEvent.incompleteSubMeasurements?.forEach((subMeasurement) => {\r\n            this.logger.trace(`PerformanceClient: Incomplete submeasurement ${subMeasurement.name} found for ${event.name}`, finalEvent.correlationId);\r\n            incompleteSubsCount++;\r\n        });\r\n        finalEvent.incompleteSubMeasurements = undefined;\r\n        finalEvent = {\r\n            ...finalEvent,\r\n            queuedTimeMs: queueInfo.totalQueueTime,\r\n            queuedCount: queueInfo.totalQueueCount,\r\n            queuedManuallyCompletedCount: queueInfo.manuallyCompletedCount,\r\n            status: _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_4__.PerformanceEventStatus.Completed,\r\n            incompleteSubsCount,\r\n            context,\r\n        };\r\n        this.truncateIntegralFields(finalEvent);\r\n        this.emitEvents([finalEvent], event.correlationId);\r\n        return finalEvent;\r\n    }\r\n    /**\r\n     * Saves extra information to be emitted when the measurements are flushed\r\n     * @param fields\r\n     * @param correlationId\r\n     */\r\n    addFields(fields, correlationId) {\r\n        this.logger.trace(\"PerformanceClient: Updating static fields\");\r\n        const event = this.eventsByCorrelationId.get(correlationId);\r\n        if (event) {\r\n            this.eventsByCorrelationId.set(correlationId, {\r\n                ...event,\r\n                ...fields,\r\n            });\r\n        }\r\n        else {\r\n            this.logger.trace(\"PerformanceClient: Event not found for\", correlationId);\r\n        }\r\n    }\r\n    /**\r\n     * Increment counters to be emitted when the measurements are flushed\r\n     * @param fields {string[]}\r\n     * @param correlationId {string} correlation identifier\r\n     */\r\n    incrementFields(fields, correlationId) {\r\n        this.logger.trace(\"PerformanceClient: Updating counters\");\r\n        const event = this.eventsByCorrelationId.get(correlationId);\r\n        if (event) {\r\n            for (const counter in fields) {\r\n                if (!event.hasOwnProperty(counter)) {\r\n                    event[counter] = 0;\r\n                }\r\n                else if (isNaN(Number(event[counter]))) {\r\n                    return;\r\n                }\r\n                event[counter] += fields[counter];\r\n            }\r\n        }\r\n        else {\r\n            this.logger.trace(\"PerformanceClient: Event not found for\", correlationId);\r\n        }\r\n    }\r\n    /**\r\n     * Upserts event into event cache.\r\n     * First key is the correlation id, second key is the event id.\r\n     * Allows for events to be grouped by correlation id,\r\n     * and to easily allow for properties on them to be updated.\r\n     *\r\n     * @private\r\n     * @param {PerformanceEvent} event\r\n     */\r\n    cacheEventByCorrelationId(event) {\r\n        const rootEvent = this.eventsByCorrelationId.get(event.correlationId);\r\n        if (rootEvent) {\r\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} added/updated`, event.correlationId);\r\n            rootEvent.incompleteSubMeasurements =\r\n                rootEvent.incompleteSubMeasurements || new Map();\r\n            rootEvent.incompleteSubMeasurements.set(event.eventId, {\r\n                name: event.name,\r\n                startTimeMs: event.startTimeMs,\r\n            });\r\n        }\r\n        else {\r\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} started`, event.correlationId);\r\n            this.eventsByCorrelationId.set(event.correlationId, { ...event });\r\n            this.eventStack.set(event.correlationId, []);\r\n        }\r\n    }\r\n    getQueueInfo(correlationId) {\r\n        const queueMeasurementForCorrelationId = this.queueMeasurements.get(correlationId);\r\n        if (!queueMeasurementForCorrelationId) {\r\n            this.logger.trace(`PerformanceClient: no queue measurements found for for correlationId: ${correlationId}`);\r\n        }\r\n        let totalQueueTime = 0;\r\n        let totalQueueCount = 0;\r\n        let manuallyCompletedCount = 0;\r\n        queueMeasurementForCorrelationId?.forEach((measurement) => {\r\n            totalQueueTime += measurement.queueTime;\r\n            totalQueueCount++;\r\n            manuallyCompletedCount += measurement.manuallyCompleted ? 1 : 0;\r\n        });\r\n        return {\r\n            totalQueueTime,\r\n            totalQueueCount,\r\n            manuallyCompletedCount,\r\n        };\r\n    }\r\n    /**\r\n     * Removes measurements and aux data for a given correlation id.\r\n     *\r\n     * @param {string} correlationId\r\n     */\r\n    discardMeasurements(correlationId) {\r\n        this.logger.trace(\"PerformanceClient: Performance measurements discarded\", correlationId);\r\n        this.eventsByCorrelationId.delete(correlationId);\r\n        this.logger.trace(\"PerformanceClient: QueueMeasurements discarded\", correlationId);\r\n        this.queueMeasurements.delete(correlationId);\r\n        this.logger.trace(\"PerformanceClient: Pre-queue times discarded\", correlationId);\r\n        this.preQueueTimeByCorrelationId.delete(correlationId);\r\n        this.logger.trace(\"PerformanceClient: Event stack discarded\", correlationId);\r\n        this.eventStack.delete(correlationId);\r\n    }\r\n    /**\r\n     * Registers a callback function to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback) {\r\n        for (const [id, cb] of this.callbacks) {\r\n            if (cb.toString() === callback.toString()) {\r\n                this.logger.warning(`PerformanceClient: Performance callback is already registered with id: ${id}`);\r\n                return id;\r\n            }\r\n        }\r\n        const callbackId = this.generateId();\r\n        this.callbacks.set(callbackId, callback);\r\n        this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${callbackId}`);\r\n        return callbackId;\r\n    }\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId) {\r\n        const result = this.callbacks.delete(callbackId);\r\n        if (result) {\r\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} removed.`);\r\n        }\r\n        else {\r\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} not removed.`);\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Emits events to all registered callbacks.\r\n     *\r\n     * @param {PerformanceEvent[]} events\r\n     * @param {?string} [correlationId]\r\n     */\r\n    emitEvents(events, correlationId) {\r\n        this.logger.verbose(\"PerformanceClient: Emitting performance events\", correlationId);\r\n        this.callbacks.forEach((callback, callbackId) => {\r\n            this.logger.trace(`PerformanceClient: Emitting event to callback ${callbackId}`, correlationId);\r\n            callback.apply(null, [events]);\r\n        });\r\n    }\r\n    /**\r\n     * Enforce truncation of integral fields in performance event.\r\n     * @param {PerformanceEvent} event performance event to update.\r\n     */\r\n    truncateIntegralFields(event) {\r\n        this.intFields.forEach((key) => {\r\n            if (key in event && typeof event[key] === \"number\") {\r\n                event[key] = Math.floor(event[key]);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns event duration in milliseconds\r\n     * @param startTimeMs {number}\r\n     * @returns {number}\r\n     */\r\n    getDurationMs(startTimeMs) {\r\n        const durationMs = Date.now() - startTimeMs;\r\n        // Handle clock skew\r\n        return durationMs < 0 ? durationMs : 0;\r\n    }\r\n}\n\n\n//# sourceMappingURL=PerformanceClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IntFields: function() { return /* binding */ IntFields; },\n/* harmony export */   PerformanceEventAbbreviations: function() { return /* binding */ PerformanceEventAbbreviations; },\n/* harmony export */   PerformanceEventStatus: function() { return /* binding */ PerformanceEventStatus; },\n/* harmony export */   PerformanceEvents: function() { return /* binding */ PerformanceEvents; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nconst PerformanceEvents = {\r\n    /**\r\n     * acquireTokenByCode API (msal-browser and msal-node).\r\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\r\n     */\r\n    AcquireTokenByCode: \"acquireTokenByCode\",\r\n    /**\r\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\r\n     * Used to renew an access token using a refresh token against the token endpoint.\r\n     */\r\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\r\n    /**\r\n     * acquireTokenSilent API (msal-browser and msal-node).\r\n     * Used to silently acquire a new access token (from the cache or the network).\r\n     */\r\n    AcquireTokenSilent: \"acquireTokenSilent\",\r\n    /**\r\n     * acquireTokenSilentAsync (msal-browser).\r\n     * Internal API for acquireTokenSilent.\r\n     */\r\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\r\n    /**\r\n     * acquireTokenPopup (msal-browser).\r\n     * Used to acquire a new access token interactively through pop ups\r\n     */\r\n    AcquireTokenPopup: \"acquireTokenPopup\",\r\n    /**\r\n     * acquireTokenPreRedirect (msal-browser).\r\n     * First part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenPreRedirect: \"acquireTokenPreRedirect\",\r\n    /**\r\n     * acquireTokenRedirect (msal-browser).\r\n     * Second part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenRedirect: \"acquireTokenRedirect\",\r\n    /**\r\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\r\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\r\n     */\r\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\r\n    /**\r\n     * signJwt API in CryptoOpts class (msal-browser).\r\n     * Used to signed a pop token.\r\n     */\r\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\r\n    /**\r\n     * acquireToken API in the SilentCacheClient class (msal-browser).\r\n     * Used to read access tokens from the cache.\r\n     */\r\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\r\n    /**\r\n     * acquireToken API in the SilentIframeClient class (msal-browser).\r\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\r\n     */\r\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\r\n    AwaitConcurrentIframe: \"awaitConcurrentIframe\",\r\n    /**\r\n     * acquireToken API in SilentRereshClient (msal-browser).\r\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\r\n     */\r\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\r\n    /**\r\n     * ssoSilent API (msal-browser).\r\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\r\n     */\r\n    SsoSilent: \"ssoSilent\",\r\n    /**\r\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\r\n     * Used to load authority metadata for a request.\r\n     */\r\n    StandardInteractionClientGetDiscoveredAuthority: \"standardInteractionClientGetDiscoveredAuthority\",\r\n    /**\r\n     * acquireToken APIs in msal-browser.\r\n     * Used to make an /authorize endpoint call with native brokering enabled.\r\n     */\r\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\r\n    /**\r\n     * acquireToken API in NativeInteractionClient class (msal-browser).\r\n     * Used to acquire a token from Native component when native brokering is enabled.\r\n     */\r\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\r\n    /**\r\n     * Time spent creating default headers for requests to token endpoint\r\n     */\r\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\r\n    /**\r\n     * Time spent sending/waiting for the response of a request to the token endpoint\r\n     */\r\n    NetworkClientSendPostRequestAsync: \"networkClientSendPostRequestAsync\",\r\n    RefreshTokenClientExecutePostToTokenEndpoint: \"refreshTokenClientExecutePostToTokenEndpoint\",\r\n    AuthorizationCodeClientExecutePostToTokenEndpoint: \"authorizationCodeClientExecutePostToTokenEndpoint\",\r\n    /**\r\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\r\n     */\r\n    BrokerHandhshake: \"brokerHandshake\",\r\n    /**\r\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\r\n     */\r\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\r\n    /**\r\n     * Time taken for token acquisition by broker\r\n     */\r\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\r\n    /**\r\n     * Time spent on the network for refresh token acquisition\r\n     */\r\n    RefreshTokenClientExecuteTokenRequest: \"refreshTokenClientExecuteTokenRequest\",\r\n    /**\r\n     * Time taken for acquiring refresh token , records RT size\r\n     */\r\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\r\n    /**\r\n     * Time taken for acquiring cached refresh token\r\n     */\r\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken: \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\r\n    /**\r\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientAcquireTokenByRefreshToken: \"refreshTokenClientAcquireTokenByRefreshToken\",\r\n    /**\r\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientCreateTokenRequestBody: \"refreshTokenClientCreateTokenRequestBody\",\r\n    /**\r\n     * acquireTokenFromCache (msal-browser).\r\n     * Internal API for acquiring token from cache\r\n     */\r\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\r\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\r\n    SilentFlowClientGenerateResultFromCacheRecord: \"silentFlowClientGenerateResultFromCacheRecord\",\r\n    /**\r\n     * acquireTokenBySilentIframe (msal-browser).\r\n     * Internal API for acquiring token by silent Iframe\r\n     */\r\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\r\n    /**\r\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\r\n     */\r\n    InitializeBaseRequest: \"initializeBaseRequest\",\r\n    /**\r\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\r\n     */\r\n    InitializeSilentRequest: \"initializeSilentRequest\",\r\n    InitializeClientApplication: \"initializeClientApplication\",\r\n    /**\r\n     * Helper function in SilentIframeClient class (msal-browser).\r\n     */\r\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\r\n    /**\r\n     * SilentHandler\r\n     */\r\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\r\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\r\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\r\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\r\n    /**\r\n     * Helper functions in StandardInteractionClient class (msal-browser)\r\n     */\r\n    StandardInteractionClientCreateAuthCodeClient: \"standardInteractionClientCreateAuthCodeClient\",\r\n    StandardInteractionClientGetClientConfiguration: \"standardInteractionClientGetClientConfiguration\",\r\n    StandardInteractionClientInitializeAuthorizationRequest: \"standardInteractionClientInitializeAuthorizationRequest\",\r\n    StandardInteractionClientInitializeAuthorizationCodeRequest: \"standardInteractionClientInitializeAuthorizationCodeRequest\",\r\n    /**\r\n     * getAuthCodeUrl API (msal-browser and msal-node).\r\n     */\r\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\r\n    /**\r\n     * Functions from InteractionHandler (msal-browser)\r\n     */\r\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\r\n    HandleCodeResponse: \"handleCodeResponse\",\r\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\r\n    /**\r\n     * APIs in Authorization Code Client (msal-common)\r\n     */\r\n    AuthClientAcquireToken: \"authClientAcquireToken\",\r\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\r\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\r\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\r\n    /**\r\n     * Generate functions in PopTokenGenerator (msal-common)\r\n     */\r\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\r\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\r\n    /**\r\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\r\n     */\r\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\r\n    DeserializeResponse: \"deserializeResponse\",\r\n    /**\r\n     * Authority functions\r\n     */\r\n    AuthorityFactoryCreateDiscoveredInstance: \"authorityFactoryCreateDiscoveredInstance\",\r\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\r\n    AuthorityResolveEndpointsFromLocalSources: \"authorityResolveEndpointsFromLocalSources\",\r\n    AuthorityGetCloudDiscoveryMetadataFromNetwork: \"authorityGetCloudDiscoveryMetadataFromNetwork\",\r\n    AuthorityUpdateCloudDiscoveryMetadata: \"authorityUpdateCloudDiscoveryMetadata\",\r\n    AuthorityGetEndpointMetadataFromNetwork: \"authorityGetEndpointMetadataFromNetwork\",\r\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\r\n    AuthorityUpdateMetadataWithRegionalInformation: \"authorityUpdateMetadataWithRegionalInformation\",\r\n    /**\r\n     * Region Discovery functions\r\n     */\r\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\r\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\r\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\r\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\r\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\r\n    GetCloudDiscoveryMetadataFromNetworkMeasurement: \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\r\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromise\",\r\n    HandleNativeRedirectPromiseMeasurement: \"handleNativeRedirectPromise\",\r\n    UpdateCloudDiscoveryMetadataMeasurement: \"updateCloudDiscoveryMetadataMeasurement\",\r\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\r\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\r\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\r\n    RemoveHiddenIframe: \"removeHiddenIframe\",\r\n    /**\r\n     * Cache operations\r\n     */\r\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\r\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\r\n    /**\r\n     * Crypto Operations\r\n     */\r\n    GeneratePkceCodes: \"generatePkceCodes\",\r\n    GenerateCodeVerifier: \"generateCodeVerifier\",\r\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\r\n    Sha256Digest: \"sha256Digest\",\r\n    GetRandomValues: \"getRandomValues\",\r\n};\r\nconst PerformanceEventAbbreviations = new Map([\r\n    [PerformanceEvents.AcquireTokenByCode, \"ATByCode\"],\r\n    [PerformanceEvents.AcquireTokenByRefreshToken, \"ATByRT\"],\r\n    [PerformanceEvents.AcquireTokenSilent, \"ATS\"],\r\n    [PerformanceEvents.AcquireTokenSilentAsync, \"ATSAsync\"],\r\n    [PerformanceEvents.AcquireTokenPopup, \"ATPopup\"],\r\n    [PerformanceEvents.AcquireTokenRedirect, \"ATRedirect\"],\r\n    [\r\n        PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\r\n        \"CryptoGetPKThumb\",\r\n    ],\r\n    [PerformanceEvents.CryptoOptsSignJwt, \"CryptoSignJwt\"],\r\n    [PerformanceEvents.SilentCacheClientAcquireToken, \"SltCacheClientAT\"],\r\n    [PerformanceEvents.SilentIframeClientAcquireToken, \"SltIframeClientAT\"],\r\n    [PerformanceEvents.SilentRefreshClientAcquireToken, \"SltRClientAT\"],\r\n    [PerformanceEvents.SsoSilent, \"SsoSlt\"],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\r\n        \"StdIntClientGetDiscAuth\",\r\n    ],\r\n    [\r\n        PerformanceEvents.FetchAccountIdWithNativeBroker,\r\n        \"FetchAccIdWithNtvBroker\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NativeInteractionClientAcquireToken,\r\n        \"NtvIntClientAT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.BaseClientCreateTokenRequestHeaders,\r\n        \"BaseClientCreateTReqHead\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NetworkClientSendPostRequestAsync,\r\n        \"NetClientSendPost\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\r\n        \"RTClientExecPost\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\r\n        \"AuthCodeClientExecPost\",\r\n    ],\r\n    [PerformanceEvents.BrokerHandhshake, \"BrokerHandshake\"],\r\n    [\r\n        PerformanceEvents.AcquireTokenByRefreshTokenInBroker,\r\n        \"ATByRTInBroker\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenByBroker, \"ATByBroker\"],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\r\n        \"RTClientExecTReq\",\r\n    ],\r\n    [PerformanceEvents.RefreshTokenClientAcquireToken, \"RTClientAT\"],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\r\n        \"RTClientATWithCachedRT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\r\n        \"RTClientATByRT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\r\n        \"RTClientCreateTReqBody\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenFromCache, \"ATFromCache\"],\r\n    [\r\n        PerformanceEvents.SilentFlowClientAcquireCachedToken,\r\n        \"SltFlowClientATCached\",\r\n    ],\r\n    [\r\n        PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\r\n        \"SltFlowClientGenResFromCache\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenBySilentIframe, \"ATBySltIframe\"],\r\n    [PerformanceEvents.InitializeBaseRequest, \"InitBaseReq\"],\r\n    [PerformanceEvents.InitializeSilentRequest, \"InitSltReq\"],\r\n    [\r\n        PerformanceEvents.InitializeClientApplication,\r\n        \"InitClientApplication\",\r\n    ],\r\n    [PerformanceEvents.SilentIframeClientTokenHelper, \"SIClientTHelper\"],\r\n    [\r\n        PerformanceEvents.SilentHandlerInitiateAuthRequest,\r\n        \"SHandlerInitAuthReq\",\r\n    ],\r\n    [\r\n        PerformanceEvents.SilentHandlerMonitorIframeForHash,\r\n        \"SltHandlerMonitorIframeForHash\",\r\n    ],\r\n    [PerformanceEvents.SilentHandlerLoadFrame, \"SHandlerLoadFrame\"],\r\n    [PerformanceEvents.SilentHandlerLoadFrameSync, \"SHandlerLoadFrameSync\"],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n        \"StdIntClientCreateAuthCodeClient\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n        \"StdIntClientGetClientConf\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n        \"StdIntClientInitAuthReq\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\r\n        \"StdIntClientInitAuthCodeReq\",\r\n    ],\r\n    [PerformanceEvents.GetAuthCodeUrl, \"GetAuthCodeUrl\"],\r\n    [\r\n        PerformanceEvents.HandleCodeResponseFromServer,\r\n        \"HandleCodeResFromServer\",\r\n    ],\r\n    [PerformanceEvents.HandleCodeResponse, \"HandleCodeResp\"],\r\n    [PerformanceEvents.UpdateTokenEndpointAuthority, \"UpdTEndpointAuth\"],\r\n    [PerformanceEvents.AuthClientAcquireToken, \"AuthClientAT\"],\r\n    [PerformanceEvents.AuthClientExecuteTokenRequest, \"AuthClientExecTReq\"],\r\n    [\r\n        PerformanceEvents.AuthClientCreateTokenRequestBody,\r\n        \"AuthClientCreateTReqBody\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthClientCreateQueryString,\r\n        \"AuthClientCreateQueryStr\",\r\n    ],\r\n    [PerformanceEvents.PopTokenGenerateCnf, \"PopTGenCnf\"],\r\n    [PerformanceEvents.PopTokenGenerateKid, \"PopTGenKid\"],\r\n    [PerformanceEvents.HandleServerTokenResponse, \"HandleServerTRes\"],\r\n    [PerformanceEvents.DeserializeResponse, \"DeserializeRes\"],\r\n    [\r\n        PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\r\n        \"AuthFactCreateDiscInst\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityResolveEndpointsAsync,\r\n        \"AuthResolveEndpointsAsync\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityResolveEndpointsFromLocalSources,\r\n        \"AuthResolveEndpointsFromLocal\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\r\n        \"AuthGetCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\r\n        \"AuthUpdCDMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\r\n        \"AuthUpdCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateEndpointMetadata,\r\n        \"AuthUpdEndpointMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\r\n        \"AuthUpdMetaWithRegInfo\",\r\n    ],\r\n    [PerformanceEvents.RegionDiscoveryDetectRegion, \"RegDiscDetectReg\"],\r\n    [\r\n        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\r\n        \"RegDiscGetRegFromIMDS\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\r\n        \"RegDiscGetCurrentVer\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenByCodeAsync, \"ATByCodeAsync\"],\r\n    [\r\n        PerformanceEvents.GetEndpointMetadataFromNetwork,\r\n        \"GetEndpointMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.GetCloudDiscoveryMetadataFromNetworkMeasurement,\r\n        \"GetCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.HandleRedirectPromiseMeasurement,\r\n        \"HandleRedirectPromise\",\r\n    ],\r\n    [\r\n        PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\r\n        \"HandleNtvRedirectPromise\",\r\n    ],\r\n    [\r\n        PerformanceEvents.UpdateCloudDiscoveryMetadataMeasurement,\r\n        \"UpdateCDMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.UsernamePasswordClientAcquireToken,\r\n        \"UserPassClientAT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NativeMessageHandlerHandshake,\r\n        \"NtvMsgHandlerHandshake\",\r\n    ],\r\n    [PerformanceEvents.NativeGenerateAuthResult, \"NtvGenAuthRes\"],\r\n    [PerformanceEvents.RemoveHiddenIframe, \"RemoveHiddenIframe\"],\r\n    [\r\n        PerformanceEvents.ClearTokensAndKeysWithClaims,\r\n        \"ClearTAndKeysWithClaims\",\r\n    ],\r\n    [PerformanceEvents.CacheManagerGetRefreshToken, \"CacheManagerGetRT\"],\r\n    [PerformanceEvents.GeneratePkceCodes, \"GenPkceCodes\"],\r\n    [PerformanceEvents.GenerateCodeVerifier, \"GenCodeVerifier\"],\r\n    [\r\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\r\n        \"GenCodeChallengeFromVerifier\",\r\n    ],\r\n    [PerformanceEvents.Sha256Digest, \"Sha256Digest\"],\r\n    [PerformanceEvents.GetRandomValues, \"GetRandomValues\"],\r\n]);\r\n/**\r\n * State of the performance event.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nconst PerformanceEventStatus = {\r\n    NotStarted: 0,\r\n    InProgress: 1,\r\n    Completed: 2,\r\n};\r\nconst IntFields = new Set([\r\n    \"accessTokenSize\",\r\n    \"durationMs\",\r\n    \"idTokenSize\",\r\n    \"matsSilentStatus\",\r\n    \"matsHttpStatus\",\r\n    \"refreshTokenSize\",\r\n    \"queuedTimeMs\",\r\n    \"startTimeMs\",\r\n    \"status\",\r\n    \"multiMatchedAT\",\r\n    \"multiMatchedID\",\r\n    \"multiMatchedRT\",\r\n]);\n\n\n//# sourceMappingURL=PerformanceEvent.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StubPerformanceClient: function() { return /* binding */ StubPerformanceClient; },\n/* harmony export */   StubPerformanceMeasurement: function() { return /* binding */ StubPerformanceMeasurement; }\n/* harmony export */ });\n/* harmony import */ var _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PerformanceEvent.mjs */ \"./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass StubPerformanceMeasurement {\r\n    startMeasurement() {\r\n        return;\r\n    }\r\n    endMeasurement() {\r\n        return;\r\n    }\r\n    flushMeasurement() {\r\n        return null;\r\n    }\r\n}\r\nclass StubPerformanceClient {\r\n    generateId() {\r\n        return \"callback-id\";\r\n    }\r\n    startMeasurement(measureName, correlationId) {\r\n        return {\r\n            end: () => null,\r\n            discard: () => { },\r\n            add: () => { },\r\n            increment: () => { },\r\n            event: {\r\n                eventId: this.generateId(),\r\n                status: _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEventStatus.InProgress,\r\n                authority: \"\",\r\n                libraryName: \"\",\r\n                libraryVersion: \"\",\r\n                clientId: \"\",\r\n                name: measureName,\r\n                startTimeMs: Date.now(),\r\n                correlationId: correlationId || \"\",\r\n            },\r\n            measurement: new StubPerformanceMeasurement(),\r\n        };\r\n    }\r\n    startPerformanceMeasurement() {\r\n        return new StubPerformanceMeasurement();\r\n    }\r\n    calculateQueuedTime() {\r\n        return 0;\r\n    }\r\n    addQueueMeasurement() {\r\n        return;\r\n    }\r\n    setPreQueueTime() {\r\n        return;\r\n    }\r\n    endMeasurement() {\r\n        return null;\r\n    }\r\n    discardMeasurements() {\r\n        return;\r\n    }\r\n    removePerformanceCallback() {\r\n        return true;\r\n    }\r\n    addPerformanceCallback() {\r\n        return \"\";\r\n    }\r\n    emitEvents() {\r\n        return;\r\n    }\r\n    addFields() {\r\n        return;\r\n    }\r\n    incrementFields() {\r\n        return;\r\n    }\r\n    cacheEventByCorrelationId() {\r\n        return;\r\n    }\r\n}\n\n\n//# sourceMappingURL=StubPerformanceClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdGVsZW1ldHJ5L3BlcmZvcm1hbmNlL1N0dWJQZXJmb3JtYW5jZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNtRDs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsMEJBQTBCO0FBQzFCLGdDQUFnQztBQUNoQztBQUNBO0FBQ0Esd0JBQXdCLHlFQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkQ7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3RlbGVtZXRyeS9wZXJmb3JtYW5jZS9TdHViUGVyZm9ybWFuY2VDbGllbnQubWpzPzc4YjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50U3RhdHVzIH0gZnJvbSAnLi9QZXJmb3JtYW5jZUV2ZW50Lm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBTdHViUGVyZm9ybWFuY2VNZWFzdXJlbWVudCB7XHJcbiAgICBzdGFydE1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGVuZE1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGZsdXNoTWVhc3VyZW1lbnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn1cclxuY2xhc3MgU3R1YlBlcmZvcm1hbmNlQ2xpZW50IHtcclxuICAgIGdlbmVyYXRlSWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiY2FsbGJhY2staWRcIjtcclxuICAgIH1cclxuICAgIHN0YXJ0TWVhc3VyZW1lbnQobWVhc3VyZU5hbWUsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBlbmQ6ICgpID0+IG51bGwsXHJcbiAgICAgICAgICAgIGRpc2NhcmQ6ICgpID0+IHsgfSxcclxuICAgICAgICAgICAgYWRkOiAoKSA9PiB7IH0sXHJcbiAgICAgICAgICAgIGluY3JlbWVudDogKCkgPT4geyB9LFxyXG4gICAgICAgICAgICBldmVudDoge1xyXG4gICAgICAgICAgICAgICAgZXZlbnRJZDogdGhpcy5nZW5lcmF0ZUlkKCksXHJcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFBlcmZvcm1hbmNlRXZlbnRTdGF0dXMuSW5Qcm9ncmVzcyxcclxuICAgICAgICAgICAgICAgIGF1dGhvcml0eTogXCJcIixcclxuICAgICAgICAgICAgICAgIGxpYnJhcnlOYW1lOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgbGlicmFyeVZlcnNpb246IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBjbGllbnRJZDogXCJcIixcclxuICAgICAgICAgICAgICAgIG5hbWU6IG1lYXN1cmVOYW1lLFxyXG4gICAgICAgICAgICAgICAgc3RhcnRUaW1lTXM6IERhdGUubm93KCksXHJcbiAgICAgICAgICAgICAgICBjb3JyZWxhdGlvbklkOiBjb3JyZWxhdGlvbklkIHx8IFwiXCIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG1lYXN1cmVtZW50OiBuZXcgU3R1YlBlcmZvcm1hbmNlTWVhc3VyZW1lbnQoKSxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgc3RhcnRQZXJmb3JtYW5jZU1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgU3R1YlBlcmZvcm1hbmNlTWVhc3VyZW1lbnQoKTtcclxuICAgIH1cclxuICAgIGNhbGN1bGF0ZVF1ZXVlZFRpbWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICB9XHJcbiAgICBhZGRRdWV1ZU1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHNldFByZVF1ZXVlVGltZSgpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBlbmRNZWFzdXJlbWVudCgpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIGRpc2NhcmRNZWFzdXJlbWVudHMoKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgcmVtb3ZlUGVyZm9ybWFuY2VDYWxsYmFjaygpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIGFkZFBlcmZvcm1hbmNlQ2FsbGJhY2soKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICB9XHJcbiAgICBlbWl0RXZlbnRzKCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGFkZEZpZWxkcygpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpbmNyZW1lbnRGaWVsZHMoKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY2FjaGVFdmVudEJ5Q29ycmVsYXRpb25JZCgpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgU3R1YlBlcmZvcm1hbmNlQ2xpZW50LCBTdHViUGVyZm9ybWFuY2VNZWFzdXJlbWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3R1YlBlcmZvcm1hbmNlQ2xpZW50Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerTelemetryManager: function() { return /* binding */ ServerTelemetryManager; }\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/AuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst skuGroupSeparator = \",\";\r\nconst skuValueSeparator = \"|\";\r\nfunction makeExtraSkuString(params) {\r\n    const { skus, libraryName, libraryVersion, extensionName, extensionVersion, } = params;\r\n    const skuMap = new Map([\r\n        [0, [libraryName, libraryVersion]],\r\n        [2, [extensionName, extensionVersion]],\r\n    ]);\r\n    let skuArr = [];\r\n    if (skus?.length) {\r\n        skuArr = skus.split(skuGroupSeparator);\r\n        // Ignore invalid input sku param\r\n        if (skuArr.length < 4) {\r\n            return skus;\r\n        }\r\n    }\r\n    else {\r\n        skuArr = Array.from({ length: 4 }, () => skuValueSeparator);\r\n    }\r\n    skuMap.forEach((value, key) => {\r\n        if (value.length === 2 && value[0]?.length && value[1]?.length) {\r\n            setSku({\r\n                skuArr,\r\n                index: key,\r\n                skuName: value[0],\r\n                skuVersion: value[1],\r\n            });\r\n        }\r\n    });\r\n    return skuArr.join(skuGroupSeparator);\r\n}\r\nfunction setSku(params) {\r\n    const { skuArr, index, skuName, skuVersion } = params;\r\n    if (index >= skuArr.length) {\r\n        return;\r\n    }\r\n    skuArr[index] = [skuName, skuVersion].join(skuValueSeparator);\r\n}\r\n/** @internal */\r\nclass ServerTelemetryManager {\r\n    constructor(telemetryRequest, cacheManager) {\r\n        this.cacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheOutcome.NOT_APPLICABLE;\r\n        this.cacheManager = cacheManager;\r\n        this.apiId = telemetryRequest.apiId;\r\n        this.correlationId = telemetryRequest.correlationId;\r\n        this.wrapperSKU = telemetryRequest.wrapperSKU || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        this.wrapperVer = telemetryRequest.wrapperVer || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        this.telemetryCacheKey =\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CACHE_KEY +\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR +\r\n                telemetryRequest.clientId;\r\n    }\r\n    /**\r\n     * API to add MSER Telemetry to request\r\n     */\r\n    generateCurrentRequestHeaderValue() {\r\n        const request = `${this.apiId}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\r\n        const platformFieldsArr = [this.wrapperSKU, this.wrapperVer];\r\n        const nativeBrokerErrorCode = this.getNativeBrokerErrorCode();\r\n        if (nativeBrokerErrorCode?.length) {\r\n            platformFieldsArr.push(`broker_error=${nativeBrokerErrorCode}`);\r\n        }\r\n        const platformFields = platformFieldsArr.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\r\n        const requestWithRegionDiscoveryFields = [\r\n            request,\r\n            regionDiscoveryFields,\r\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            requestWithRegionDiscoveryFields,\r\n            platformFields,\r\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n    /**\r\n     * API to add MSER Telemetry for the last failed request\r\n     */\r\n    generateLastRequestHeaderValue() {\r\n        const lastRequests = this.getLastRequests();\r\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const failedRequests = lastRequests.failedRequests\r\n            .slice(0, 2 * maxErrors)\r\n            .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errors = lastRequests.errors\r\n            .slice(0, maxErrors)\r\n            .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errorCount = lastRequests.errors.length;\r\n        // Indicate whether this header contains all data or partial data\r\n        const overflow = maxErrors < errorCount\r\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\r\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\r\n        const platformFields = [errorCount, overflow].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            lastRequests.cacheHits,\r\n            failedRequests,\r\n            errors,\r\n            platformFields,\r\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n    /**\r\n     * API to cache token failures for MSER data capture\r\n     * @param error\r\n     */\r\n    cacheFailedRequest(error) {\r\n        const lastRequests = this.getLastRequests();\r\n        if (lastRequests.errors.length >=\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\r\n            // Remove a cached error to make room, first in first out\r\n            lastRequests.failedRequests.shift(); // apiId\r\n            lastRequests.failedRequests.shift(); // correlationId\r\n            lastRequests.errors.shift();\r\n        }\r\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\r\n        if (error instanceof Error && !!error && error.toString()) {\r\n            if (error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                if (error.subError) {\r\n                    lastRequests.errors.push(error.subError);\r\n                }\r\n                else if (error.errorCode) {\r\n                    lastRequests.errors.push(error.errorCode);\r\n                }\r\n                else {\r\n                    lastRequests.errors.push(error.toString());\r\n                }\r\n            }\r\n            else {\r\n                lastRequests.errors.push(error.toString());\r\n            }\r\n        }\r\n        else {\r\n            lastRequests.errors.push(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\r\n        }\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n        return;\r\n    }\r\n    /**\r\n     * Update server telemetry cache entry by incrementing cache hit counter\r\n     */\r\n    incrementCacheHits() {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.cacheHits += 1;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n        return lastRequests.cacheHits;\r\n    }\r\n    /**\r\n     * Get the server telemetry entity from cache or initialize a new one\r\n     */\r\n    getLastRequests() {\r\n        const initialValue = {\r\n            failedRequests: [],\r\n            errors: [],\r\n            cacheHits: 0,\r\n        };\r\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);\r\n        return lastRequests || initialValue;\r\n    }\r\n    /**\r\n     * Remove server telemetry cache entry\r\n     */\r\n    clearTelemetryCache() {\r\n        const lastRequests = this.getLastRequests();\r\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const errorCount = lastRequests.errors.length;\r\n        if (numErrorsFlushed === errorCount) {\r\n            // All errors were sent on last request, clear Telemetry cache\r\n            this.cacheManager.removeItem(this.telemetryCacheKey);\r\n        }\r\n        else {\r\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\r\n            const serverTelemEntity = {\r\n                failedRequests: lastRequests.failedRequests.slice(numErrorsFlushed * 2),\r\n                errors: lastRequests.errors.slice(numErrorsFlushed),\r\n                cacheHits: 0,\r\n            };\r\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\r\n     * @param serverTelemetryEntity\r\n     */\r\n    static maxErrorsToSend(serverTelemetryEntity) {\r\n        let i;\r\n        let maxErrors = 0;\r\n        let dataSize = 0;\r\n        const errorCount = serverTelemetryEntity.errors.length;\r\n        for (i = 0; i < errorCount; i++) {\r\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\r\n            const apiId = serverTelemetryEntity.failedRequests[2 * i] ||\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n            const correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] ||\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n            const errorCode = serverTelemetryEntity.errors[i] || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\r\n            dataSize +=\r\n                apiId.toString().length +\r\n                    correlationId.toString().length +\r\n                    errorCode.length +\r\n                    3;\r\n            if (dataSize < _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\r\n                // Adding this entry to the header would still keep header size below the limit\r\n                maxErrors += 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return maxErrors;\r\n    }\r\n    /**\r\n     * Get the region discovery fields\r\n     *\r\n     * @returns string\r\n     */\r\n    getRegionDiscoveryFields() {\r\n        const regionDiscoveryFields = [];\r\n        regionDiscoveryFields.push(this.regionUsed || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(this.regionSource || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(this.regionOutcome || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\r\n        return regionDiscoveryFields.join(\",\");\r\n    }\r\n    /**\r\n     * Update the region discovery metadata\r\n     *\r\n     * @param regionDiscoveryMetadata\r\n     * @returns void\r\n     */\r\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata) {\r\n        this.regionUsed = regionDiscoveryMetadata.region_used;\r\n        this.regionSource = regionDiscoveryMetadata.region_source;\r\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\r\n    }\r\n    /**\r\n     * Set cache outcome\r\n     */\r\n    setCacheOutcome(cacheOutcome) {\r\n        this.cacheOutcome = cacheOutcome;\r\n    }\r\n    setNativeBrokerErrorCode(errorCode) {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.nativeBrokerErrorCode = errorCode;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n    }\r\n    getNativeBrokerErrorCode() {\r\n        return this.getLastRequests().nativeBrokerErrorCode;\r\n    }\r\n    clearNativeBrokerErrorCode() {\r\n        const lastRequests = this.getLastRequests();\r\n        delete lastRequests.nativeBrokerErrorCode;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n    }\r\n    static makeExtraSkuString(params) {\r\n        return makeExtraSkuString(params);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ServerTelemetryManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdGVsZW1ldHJ5L3NlcnZlci9TZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQzJGO0FBQ2xEOztBQUV0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksc0VBQXNFO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLFdBQVc7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFDQUFxQztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDhEQUFZO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCwyREFBUztBQUNsRSx5REFBeUQsMkRBQVM7QUFDbEU7QUFDQSxZQUFZLHdFQUFzQjtBQUNsQyxnQkFBZ0IsNERBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLFdBQVcsRUFBRSx3RUFBc0IsaUJBQWlCLEVBQUUsa0JBQWtCO0FBQ25HO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxzQkFBc0I7QUFDekU7QUFDQSxzREFBc0Qsd0VBQXNCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx3RUFBc0I7QUFDckM7QUFDQSxZQUFZLHdFQUFzQjtBQUNsQztBQUNBO0FBQ0EsZUFBZSx3RUFBc0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdFQUFzQjtBQUN4QztBQUNBO0FBQ0Esa0JBQWtCLHdFQUFzQjtBQUN4QztBQUNBO0FBQ0E7QUFDQSxjQUFjLHdFQUFzQjtBQUNwQyxjQUFjLHdFQUFzQjtBQUNwQywyREFBMkQsd0VBQXNCO0FBQ2pGO0FBQ0EsWUFBWSx3RUFBc0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHdFQUFzQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3RUFBc0I7QUFDbEM7QUFDQSxpREFBaUQ7QUFDakQsaURBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDJEQUFTO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx3RUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQSxnQkFBZ0IsMkRBQVM7QUFDekI7QUFDQSxnQkFBZ0IsMkRBQVM7QUFDekIsaUVBQWlFLDJEQUFTO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix3RUFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsMkRBQVM7QUFDL0Qsd0RBQXdELDJEQUFTO0FBQ2pFLHlEQUF5RCwyREFBUztBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWtDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC90ZWxlbWV0cnkvc2VydmVyL1NlcnZlclRlbGVtZXRyeU1hbmFnZXIubWpzPzQ2MmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDYWNoZU91dGNvbWUsIENvbnN0YW50cywgU0VSVkVSX1RFTEVNX0NPTlNUQU5UUywgU2VwYXJhdG9ycyB9IGZyb20gJy4uLy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSAnLi4vLi4vZXJyb3IvQXV0aEVycm9yLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBza3VHcm91cFNlcGFyYXRvciA9IFwiLFwiO1xyXG5jb25zdCBza3VWYWx1ZVNlcGFyYXRvciA9IFwifFwiO1xyXG5mdW5jdGlvbiBtYWtlRXh0cmFTa3VTdHJpbmcocGFyYW1zKSB7XHJcbiAgICBjb25zdCB7IHNrdXMsIGxpYnJhcnlOYW1lLCBsaWJyYXJ5VmVyc2lvbiwgZXh0ZW5zaW9uTmFtZSwgZXh0ZW5zaW9uVmVyc2lvbiwgfSA9IHBhcmFtcztcclxuICAgIGNvbnN0IHNrdU1hcCA9IG5ldyBNYXAoW1xyXG4gICAgICAgIFswLCBbbGlicmFyeU5hbWUsIGxpYnJhcnlWZXJzaW9uXV0sXHJcbiAgICAgICAgWzIsIFtleHRlbnNpb25OYW1lLCBleHRlbnNpb25WZXJzaW9uXV0sXHJcbiAgICBdKTtcclxuICAgIGxldCBza3VBcnIgPSBbXTtcclxuICAgIGlmIChza3VzPy5sZW5ndGgpIHtcclxuICAgICAgICBza3VBcnIgPSBza3VzLnNwbGl0KHNrdUdyb3VwU2VwYXJhdG9yKTtcclxuICAgICAgICAvLyBJZ25vcmUgaW52YWxpZCBpbnB1dCBza3UgcGFyYW1cclxuICAgICAgICBpZiAoc2t1QXJyLmxlbmd0aCA8IDQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHNrdXM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgc2t1QXJyID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogNCB9LCAoKSA9PiBza3VWYWx1ZVNlcGFyYXRvcik7XHJcbiAgICB9XHJcbiAgICBza3VNYXAuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xyXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDIgJiYgdmFsdWVbMF0/Lmxlbmd0aCAmJiB2YWx1ZVsxXT8ubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHNldFNrdSh7XHJcbiAgICAgICAgICAgICAgICBza3VBcnIsXHJcbiAgICAgICAgICAgICAgICBpbmRleDoga2V5LFxyXG4gICAgICAgICAgICAgICAgc2t1TmFtZTogdmFsdWVbMF0sXHJcbiAgICAgICAgICAgICAgICBza3VWZXJzaW9uOiB2YWx1ZVsxXSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gc2t1QXJyLmpvaW4oc2t1R3JvdXBTZXBhcmF0b3IpO1xyXG59XHJcbmZ1bmN0aW9uIHNldFNrdShwYXJhbXMpIHtcclxuICAgIGNvbnN0IHsgc2t1QXJyLCBpbmRleCwgc2t1TmFtZSwgc2t1VmVyc2lvbiB9ID0gcGFyYW1zO1xyXG4gICAgaWYgKGluZGV4ID49IHNrdUFyci5sZW5ndGgpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBza3VBcnJbaW5kZXhdID0gW3NrdU5hbWUsIHNrdVZlcnNpb25dLmpvaW4oc2t1VmFsdWVTZXBhcmF0b3IpO1xyXG59XHJcbi8qKiBAaW50ZXJuYWwgKi9cclxuY2xhc3MgU2VydmVyVGVsZW1ldHJ5TWFuYWdlciB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0ZWxlbWV0cnlSZXF1ZXN0LCBjYWNoZU1hbmFnZXIpIHtcclxuICAgICAgICB0aGlzLmNhY2hlT3V0Y29tZSA9IENhY2hlT3V0Y29tZS5OT1RfQVBQTElDQUJMRTtcclxuICAgICAgICB0aGlzLmNhY2hlTWFuYWdlciA9IGNhY2hlTWFuYWdlcjtcclxuICAgICAgICB0aGlzLmFwaUlkID0gdGVsZW1ldHJ5UmVxdWVzdC5hcGlJZDtcclxuICAgICAgICB0aGlzLmNvcnJlbGF0aW9uSWQgPSB0ZWxlbWV0cnlSZXF1ZXN0LmNvcnJlbGF0aW9uSWQ7XHJcbiAgICAgICAgdGhpcy53cmFwcGVyU0tVID0gdGVsZW1ldHJ5UmVxdWVzdC53cmFwcGVyU0tVIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XHJcbiAgICAgICAgdGhpcy53cmFwcGVyVmVyID0gdGVsZW1ldHJ5UmVxdWVzdC53cmFwcGVyVmVyIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XHJcbiAgICAgICAgdGhpcy50ZWxlbWV0cnlDYWNoZUtleSA9XHJcbiAgICAgICAgICAgIFNFUlZFUl9URUxFTV9DT05TVEFOVFMuQ0FDSEVfS0VZICtcclxuICAgICAgICAgICAgICAgIFNlcGFyYXRvcnMuQ0FDSEVfS0VZX1NFUEFSQVRPUiArXHJcbiAgICAgICAgICAgICAgICB0ZWxlbWV0cnlSZXF1ZXN0LmNsaWVudElkO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBUEkgdG8gYWRkIE1TRVIgVGVsZW1ldHJ5IHRvIHJlcXVlc3RcclxuICAgICAqL1xyXG4gICAgZ2VuZXJhdGVDdXJyZW50UmVxdWVzdEhlYWRlclZhbHVlKCkge1xyXG4gICAgICAgIGNvbnN0IHJlcXVlc3QgPSBgJHt0aGlzLmFwaUlkfSR7U0VSVkVSX1RFTEVNX0NPTlNUQU5UUy5WQUxVRV9TRVBBUkFUT1J9JHt0aGlzLmNhY2hlT3V0Y29tZX1gO1xyXG4gICAgICAgIGNvbnN0IHBsYXRmb3JtRmllbGRzQXJyID0gW3RoaXMud3JhcHBlclNLVSwgdGhpcy53cmFwcGVyVmVyXTtcclxuICAgICAgICBjb25zdCBuYXRpdmVCcm9rZXJFcnJvckNvZGUgPSB0aGlzLmdldE5hdGl2ZUJyb2tlckVycm9yQ29kZSgpO1xyXG4gICAgICAgIGlmIChuYXRpdmVCcm9rZXJFcnJvckNvZGU/Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICBwbGF0Zm9ybUZpZWxkc0Fyci5wdXNoKGBicm9rZXJfZXJyb3I9JHtuYXRpdmVCcm9rZXJFcnJvckNvZGV9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHBsYXRmb3JtRmllbGRzID0gcGxhdGZvcm1GaWVsZHNBcnIuam9pbihTRVJWRVJfVEVMRU1fQ09OU1RBTlRTLlZBTFVFX1NFUEFSQVRPUik7XHJcbiAgICAgICAgY29uc3QgcmVnaW9uRGlzY292ZXJ5RmllbGRzID0gdGhpcy5nZXRSZWdpb25EaXNjb3ZlcnlGaWVsZHMoKTtcclxuICAgICAgICBjb25zdCByZXF1ZXN0V2l0aFJlZ2lvbkRpc2NvdmVyeUZpZWxkcyA9IFtcclxuICAgICAgICAgICAgcmVxdWVzdCxcclxuICAgICAgICAgICAgcmVnaW9uRGlzY292ZXJ5RmllbGRzLFxyXG4gICAgICAgIF0uam9pbihTRVJWRVJfVEVMRU1fQ09OU1RBTlRTLlZBTFVFX1NFUEFSQVRPUik7XHJcbiAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgU0VSVkVSX1RFTEVNX0NPTlNUQU5UUy5TQ0hFTUFfVkVSU0lPTixcclxuICAgICAgICAgICAgcmVxdWVzdFdpdGhSZWdpb25EaXNjb3ZlcnlGaWVsZHMsXHJcbiAgICAgICAgICAgIHBsYXRmb3JtRmllbGRzLFxyXG4gICAgICAgIF0uam9pbihTRVJWRVJfVEVMRU1fQ09OU1RBTlRTLkNBVEVHT1JZX1NFUEFSQVRPUik7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFQSSB0byBhZGQgTVNFUiBUZWxlbWV0cnkgZm9yIHRoZSBsYXN0IGZhaWxlZCByZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIGdlbmVyYXRlTGFzdFJlcXVlc3RIZWFkZXJWYWx1ZSgpIHtcclxuICAgICAgICBjb25zdCBsYXN0UmVxdWVzdHMgPSB0aGlzLmdldExhc3RSZXF1ZXN0cygpO1xyXG4gICAgICAgIGNvbnN0IG1heEVycm9ycyA9IFNlcnZlclRlbGVtZXRyeU1hbmFnZXIubWF4RXJyb3JzVG9TZW5kKGxhc3RSZXF1ZXN0cyk7XHJcbiAgICAgICAgY29uc3QgZmFpbGVkUmVxdWVzdHMgPSBsYXN0UmVxdWVzdHMuZmFpbGVkUmVxdWVzdHNcclxuICAgICAgICAgICAgLnNsaWNlKDAsIDIgKiBtYXhFcnJvcnMpXHJcbiAgICAgICAgICAgIC5qb2luKFNFUlZFUl9URUxFTV9DT05TVEFOVFMuVkFMVUVfU0VQQVJBVE9SKTtcclxuICAgICAgICBjb25zdCBlcnJvcnMgPSBsYXN0UmVxdWVzdHMuZXJyb3JzXHJcbiAgICAgICAgICAgIC5zbGljZSgwLCBtYXhFcnJvcnMpXHJcbiAgICAgICAgICAgIC5qb2luKFNFUlZFUl9URUxFTV9DT05TVEFOVFMuVkFMVUVfU0VQQVJBVE9SKTtcclxuICAgICAgICBjb25zdCBlcnJvckNvdW50ID0gbGFzdFJlcXVlc3RzLmVycm9ycy5sZW5ndGg7XHJcbiAgICAgICAgLy8gSW5kaWNhdGUgd2hldGhlciB0aGlzIGhlYWRlciBjb250YWlucyBhbGwgZGF0YSBvciBwYXJ0aWFsIGRhdGFcclxuICAgICAgICBjb25zdCBvdmVyZmxvdyA9IG1heEVycm9ycyA8IGVycm9yQ291bnRcclxuICAgICAgICAgICAgPyBTRVJWRVJfVEVMRU1fQ09OU1RBTlRTLk9WRVJGTE9XX1RSVUVcclxuICAgICAgICAgICAgOiBTRVJWRVJfVEVMRU1fQ09OU1RBTlRTLk9WRVJGTE9XX0ZBTFNFO1xyXG4gICAgICAgIGNvbnN0IHBsYXRmb3JtRmllbGRzID0gW2Vycm9yQ291bnQsIG92ZXJmbG93XS5qb2luKFNFUlZFUl9URUxFTV9DT05TVEFOVFMuVkFMVUVfU0VQQVJBVE9SKTtcclxuICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICBTRVJWRVJfVEVMRU1fQ09OU1RBTlRTLlNDSEVNQV9WRVJTSU9OLFxyXG4gICAgICAgICAgICBsYXN0UmVxdWVzdHMuY2FjaGVIaXRzLFxyXG4gICAgICAgICAgICBmYWlsZWRSZXF1ZXN0cyxcclxuICAgICAgICAgICAgZXJyb3JzLFxyXG4gICAgICAgICAgICBwbGF0Zm9ybUZpZWxkcyxcclxuICAgICAgICBdLmpvaW4oU0VSVkVSX1RFTEVNX0NPTlNUQU5UUy5DQVRFR09SWV9TRVBBUkFUT1IpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBUEkgdG8gY2FjaGUgdG9rZW4gZmFpbHVyZXMgZm9yIE1TRVIgZGF0YSBjYXB0dXJlXHJcbiAgICAgKiBAcGFyYW0gZXJyb3JcclxuICAgICAqL1xyXG4gICAgY2FjaGVGYWlsZWRSZXF1ZXN0KGVycm9yKSB7XHJcbiAgICAgICAgY29uc3QgbGFzdFJlcXVlc3RzID0gdGhpcy5nZXRMYXN0UmVxdWVzdHMoKTtcclxuICAgICAgICBpZiAobGFzdFJlcXVlc3RzLmVycm9ycy5sZW5ndGggPj1cclxuICAgICAgICAgICAgU0VSVkVSX1RFTEVNX0NPTlNUQU5UUy5NQVhfQ0FDSEVEX0VSUk9SUykge1xyXG4gICAgICAgICAgICAvLyBSZW1vdmUgYSBjYWNoZWQgZXJyb3IgdG8gbWFrZSByb29tLCBmaXJzdCBpbiBmaXJzdCBvdXRcclxuICAgICAgICAgICAgbGFzdFJlcXVlc3RzLmZhaWxlZFJlcXVlc3RzLnNoaWZ0KCk7IC8vIGFwaUlkXHJcbiAgICAgICAgICAgIGxhc3RSZXF1ZXN0cy5mYWlsZWRSZXF1ZXN0cy5zaGlmdCgpOyAvLyBjb3JyZWxhdGlvbklkXHJcbiAgICAgICAgICAgIGxhc3RSZXF1ZXN0cy5lcnJvcnMuc2hpZnQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGFzdFJlcXVlc3RzLmZhaWxlZFJlcXVlc3RzLnB1c2godGhpcy5hcGlJZCwgdGhpcy5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciAmJiAhIWVycm9yICYmIGVycm9yLnRvU3RyaW5nKCkpIHtcclxuICAgICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQXV0aEVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3Iuc3ViRXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICBsYXN0UmVxdWVzdHMuZXJyb3JzLnB1c2goZXJyb3Iuc3ViRXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZXJyb3IuZXJyb3JDb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGFzdFJlcXVlc3RzLmVycm9ycy5wdXNoKGVycm9yLmVycm9yQ29kZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBsYXN0UmVxdWVzdHMuZXJyb3JzLnB1c2goZXJyb3IudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBsYXN0UmVxdWVzdHMuZXJyb3JzLnB1c2goZXJyb3IudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGxhc3RSZXF1ZXN0cy5lcnJvcnMucHVzaChTRVJWRVJfVEVMRU1fQ09OU1RBTlRTLlVOS05PV05fRVJST1IpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNhY2hlTWFuYWdlci5zZXRTZXJ2ZXJUZWxlbWV0cnkodGhpcy50ZWxlbWV0cnlDYWNoZUtleSwgbGFzdFJlcXVlc3RzKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZSBzZXJ2ZXIgdGVsZW1ldHJ5IGNhY2hlIGVudHJ5IGJ5IGluY3JlbWVudGluZyBjYWNoZSBoaXQgY291bnRlclxyXG4gICAgICovXHJcbiAgICBpbmNyZW1lbnRDYWNoZUhpdHMoKSB7XHJcbiAgICAgICAgY29uc3QgbGFzdFJlcXVlc3RzID0gdGhpcy5nZXRMYXN0UmVxdWVzdHMoKTtcclxuICAgICAgICBsYXN0UmVxdWVzdHMuY2FjaGVIaXRzICs9IDE7XHJcbiAgICAgICAgdGhpcy5jYWNoZU1hbmFnZXIuc2V0U2VydmVyVGVsZW1ldHJ5KHRoaXMudGVsZW1ldHJ5Q2FjaGVLZXksIGxhc3RSZXF1ZXN0cyk7XHJcbiAgICAgICAgcmV0dXJuIGxhc3RSZXF1ZXN0cy5jYWNoZUhpdHM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdldCB0aGUgc2VydmVyIHRlbGVtZXRyeSBlbnRpdHkgZnJvbSBjYWNoZSBvciBpbml0aWFsaXplIGEgbmV3IG9uZVxyXG4gICAgICovXHJcbiAgICBnZXRMYXN0UmVxdWVzdHMoKSB7XHJcbiAgICAgICAgY29uc3QgaW5pdGlhbFZhbHVlID0ge1xyXG4gICAgICAgICAgICBmYWlsZWRSZXF1ZXN0czogW10sXHJcbiAgICAgICAgICAgIGVycm9yczogW10sXHJcbiAgICAgICAgICAgIGNhY2hlSGl0czogMCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IGxhc3RSZXF1ZXN0cyA9IHRoaXMuY2FjaGVNYW5hZ2VyLmdldFNlcnZlclRlbGVtZXRyeSh0aGlzLnRlbGVtZXRyeUNhY2hlS2V5KTtcclxuICAgICAgICByZXR1cm4gbGFzdFJlcXVlc3RzIHx8IGluaXRpYWxWYWx1ZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlIHNlcnZlciB0ZWxlbWV0cnkgY2FjaGUgZW50cnlcclxuICAgICAqL1xyXG4gICAgY2xlYXJUZWxlbWV0cnlDYWNoZSgpIHtcclxuICAgICAgICBjb25zdCBsYXN0UmVxdWVzdHMgPSB0aGlzLmdldExhc3RSZXF1ZXN0cygpO1xyXG4gICAgICAgIGNvbnN0IG51bUVycm9yc0ZsdXNoZWQgPSBTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLm1heEVycm9yc1RvU2VuZChsYXN0UmVxdWVzdHMpO1xyXG4gICAgICAgIGNvbnN0IGVycm9yQ291bnQgPSBsYXN0UmVxdWVzdHMuZXJyb3JzLmxlbmd0aDtcclxuICAgICAgICBpZiAobnVtRXJyb3JzRmx1c2hlZCA9PT0gZXJyb3JDb3VudCkge1xyXG4gICAgICAgICAgICAvLyBBbGwgZXJyb3JzIHdlcmUgc2VudCBvbiBsYXN0IHJlcXVlc3QsIGNsZWFyIFRlbGVtZXRyeSBjYWNoZVxyXG4gICAgICAgICAgICB0aGlzLmNhY2hlTWFuYWdlci5yZW1vdmVJdGVtKHRoaXMudGVsZW1ldHJ5Q2FjaGVLZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgLy8gUGFydGlhbCBkYXRhIHdhcyBmbHVzaGVkIHRvIHNlcnZlciwgY29uc3RydWN0IGEgbmV3IHRlbGVtZXRyeSBjYWNoZSBpdGVtIHdpdGggZXJyb3JzIHRoYXQgd2VyZSBub3QgZmx1c2hlZFxyXG4gICAgICAgICAgICBjb25zdCBzZXJ2ZXJUZWxlbUVudGl0eSA9IHtcclxuICAgICAgICAgICAgICAgIGZhaWxlZFJlcXVlc3RzOiBsYXN0UmVxdWVzdHMuZmFpbGVkUmVxdWVzdHMuc2xpY2UobnVtRXJyb3JzRmx1c2hlZCAqIDIpLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JzOiBsYXN0UmVxdWVzdHMuZXJyb3JzLnNsaWNlKG51bUVycm9yc0ZsdXNoZWQpLFxyXG4gICAgICAgICAgICAgICAgY2FjaGVIaXRzOiAwLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB0aGlzLmNhY2hlTWFuYWdlci5zZXRTZXJ2ZXJUZWxlbWV0cnkodGhpcy50ZWxlbWV0cnlDYWNoZUtleSwgc2VydmVyVGVsZW1FbnRpdHkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgbWF4aW11bSBudW1iZXIgb2YgZXJyb3JzIHRoYXQgY2FuIGJlIGZsdXNoZWQgdG8gdGhlIHNlcnZlciBpbiB0aGUgbmV4dCBuZXR3b3JrIHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSBzZXJ2ZXJUZWxlbWV0cnlFbnRpdHlcclxuICAgICAqL1xyXG4gICAgc3RhdGljIG1heEVycm9yc1RvU2VuZChzZXJ2ZXJUZWxlbWV0cnlFbnRpdHkpIHtcclxuICAgICAgICBsZXQgaTtcclxuICAgICAgICBsZXQgbWF4RXJyb3JzID0gMDtcclxuICAgICAgICBsZXQgZGF0YVNpemUgPSAwO1xyXG4gICAgICAgIGNvbnN0IGVycm9yQ291bnQgPSBzZXJ2ZXJUZWxlbWV0cnlFbnRpdHkuZXJyb3JzLmxlbmd0aDtcclxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZXJyb3JDb3VudDsgaSsrKSB7XHJcbiAgICAgICAgICAgIC8vIGZhaWxlZFJlcXVlc3RzIHBhcmFtZXRlciBjb250YWlucyBwYWlycyBvZiBhcGlJZCBhbmQgY29ycmVsYXRpb25JZCwgbXVsdGlwbHkgaW5kZXggYnkgMiB0byBwcmVzZXJ2ZSBwYWlyc1xyXG4gICAgICAgICAgICBjb25zdCBhcGlJZCA9IHNlcnZlclRlbGVtZXRyeUVudGl0eS5mYWlsZWRSZXF1ZXN0c1syICogaV0gfHxcclxuICAgICAgICAgICAgICAgIENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvcnJlbGF0aW9uSWQgPSBzZXJ2ZXJUZWxlbWV0cnlFbnRpdHkuZmFpbGVkUmVxdWVzdHNbMiAqIGkgKyAxXSB8fFxyXG4gICAgICAgICAgICAgICAgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICAgICAgY29uc3QgZXJyb3JDb2RlID0gc2VydmVyVGVsZW1ldHJ5RW50aXR5LmVycm9yc1tpXSB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xyXG4gICAgICAgICAgICAvLyBDb3VudCBudW1iZXIgb2YgY2hhcmFjdGVycyB0aGF0IHdvdWxkIGJlIGFkZGVkIHRvIGhlYWRlciwgZWFjaCBjaGFyYWN0ZXIgaXMgMSBieXRlLiBBZGQgMyBhdCB0aGUgZW5kIHRvIGFjY291bnQgZm9yIHNlcGFyYXRvcnNcclxuICAgICAgICAgICAgZGF0YVNpemUgKz1cclxuICAgICAgICAgICAgICAgIGFwaUlkLnRvU3RyaW5nKCkubGVuZ3RoICtcclxuICAgICAgICAgICAgICAgICAgICBjb3JyZWxhdGlvbklkLnRvU3RyaW5nKCkubGVuZ3RoICtcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckNvZGUubGVuZ3RoICtcclxuICAgICAgICAgICAgICAgICAgICAzO1xyXG4gICAgICAgICAgICBpZiAoZGF0YVNpemUgPCBTRVJWRVJfVEVMRU1fQ09OU1RBTlRTLk1BWF9MQVNUX0hFQURFUl9CWVRFUykge1xyXG4gICAgICAgICAgICAgICAgLy8gQWRkaW5nIHRoaXMgZW50cnkgdG8gdGhlIGhlYWRlciB3b3VsZCBzdGlsbCBrZWVwIGhlYWRlciBzaXplIGJlbG93IHRoZSBsaW1pdFxyXG4gICAgICAgICAgICAgICAgbWF4RXJyb3JzICs9IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbWF4RXJyb3JzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGhlIHJlZ2lvbiBkaXNjb3ZlcnkgZmllbGRzXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMgc3RyaW5nXHJcbiAgICAgKi9cclxuICAgIGdldFJlZ2lvbkRpc2NvdmVyeUZpZWxkcygpIHtcclxuICAgICAgICBjb25zdCByZWdpb25EaXNjb3ZlcnlGaWVsZHMgPSBbXTtcclxuICAgICAgICByZWdpb25EaXNjb3ZlcnlGaWVsZHMucHVzaCh0aGlzLnJlZ2lvblVzZWQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORyk7XHJcbiAgICAgICAgcmVnaW9uRGlzY292ZXJ5RmllbGRzLnB1c2godGhpcy5yZWdpb25Tb3VyY2UgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORyk7XHJcbiAgICAgICAgcmVnaW9uRGlzY292ZXJ5RmllbGRzLnB1c2godGhpcy5yZWdpb25PdXRjb21lIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkcpO1xyXG4gICAgICAgIHJldHVybiByZWdpb25EaXNjb3ZlcnlGaWVsZHMuam9pbihcIixcIik7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZSB0aGUgcmVnaW9uIGRpc2NvdmVyeSBtZXRhZGF0YVxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSByZWdpb25EaXNjb3ZlcnlNZXRhZGF0YVxyXG4gICAgICogQHJldHVybnMgdm9pZFxyXG4gICAgICovXHJcbiAgICB1cGRhdGVSZWdpb25EaXNjb3ZlcnlNZXRhZGF0YShyZWdpb25EaXNjb3ZlcnlNZXRhZGF0YSkge1xyXG4gICAgICAgIHRoaXMucmVnaW9uVXNlZCA9IHJlZ2lvbkRpc2NvdmVyeU1ldGFkYXRhLnJlZ2lvbl91c2VkO1xyXG4gICAgICAgIHRoaXMucmVnaW9uU291cmNlID0gcmVnaW9uRGlzY292ZXJ5TWV0YWRhdGEucmVnaW9uX3NvdXJjZTtcclxuICAgICAgICB0aGlzLnJlZ2lvbk91dGNvbWUgPSByZWdpb25EaXNjb3ZlcnlNZXRhZGF0YS5yZWdpb25fb3V0Y29tZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU2V0IGNhY2hlIG91dGNvbWVcclxuICAgICAqL1xyXG4gICAgc2V0Q2FjaGVPdXRjb21lKGNhY2hlT3V0Y29tZSkge1xyXG4gICAgICAgIHRoaXMuY2FjaGVPdXRjb21lID0gY2FjaGVPdXRjb21lO1xyXG4gICAgfVxyXG4gICAgc2V0TmF0aXZlQnJva2VyRXJyb3JDb2RlKGVycm9yQ29kZSkge1xyXG4gICAgICAgIGNvbnN0IGxhc3RSZXF1ZXN0cyA9IHRoaXMuZ2V0TGFzdFJlcXVlc3RzKCk7XHJcbiAgICAgICAgbGFzdFJlcXVlc3RzLm5hdGl2ZUJyb2tlckVycm9yQ29kZSA9IGVycm9yQ29kZTtcclxuICAgICAgICB0aGlzLmNhY2hlTWFuYWdlci5zZXRTZXJ2ZXJUZWxlbWV0cnkodGhpcy50ZWxlbWV0cnlDYWNoZUtleSwgbGFzdFJlcXVlc3RzKTtcclxuICAgIH1cclxuICAgIGdldE5hdGl2ZUJyb2tlckVycm9yQ29kZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRMYXN0UmVxdWVzdHMoKS5uYXRpdmVCcm9rZXJFcnJvckNvZGU7XHJcbiAgICB9XHJcbiAgICBjbGVhck5hdGl2ZUJyb2tlckVycm9yQ29kZSgpIHtcclxuICAgICAgICBjb25zdCBsYXN0UmVxdWVzdHMgPSB0aGlzLmdldExhc3RSZXF1ZXN0cygpO1xyXG4gICAgICAgIGRlbGV0ZSBsYXN0UmVxdWVzdHMubmF0aXZlQnJva2VyRXJyb3JDb2RlO1xyXG4gICAgICAgIHRoaXMuY2FjaGVNYW5hZ2VyLnNldFNlcnZlclRlbGVtZXRyeSh0aGlzLnRlbGVtZXRyeUNhY2hlS2V5LCBsYXN0UmVxdWVzdHMpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIG1ha2VFeHRyYVNrdVN0cmluZyhwYXJhbXMpIHtcclxuICAgICAgICByZXR1cm4gbWFrZUV4dHJhU2t1U3RyaW5nKHBhcmFtcyk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgU2VydmVyVGVsZW1ldHJ5TWFuYWdlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VydmVyVGVsZW1ldHJ5TWFuYWdlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/url/UrlString.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/url/UrlString.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UrlString: function() { return /* binding */ UrlString; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_UrlUtils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/UrlUtils.mjs */ \"./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nclass UrlString {\r\n    get urlString() {\r\n        return this._urlString;\r\n    }\r\n    constructor(url) {\r\n        this._urlString = url;\r\n        if (!this._urlString) {\r\n            // Throws error if url is empty\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlEmptyError);\r\n        }\r\n        if (!url.includes(\"#\")) {\r\n            this._urlString = UrlString.canonicalizeUri(url);\r\n        }\r\n    }\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    static canonicalizeUri(url) {\r\n        if (url) {\r\n            let lowerCaseUrl = url.toLowerCase();\r\n            if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.endsWith(lowerCaseUrl, \"?\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\r\n            }\r\n            else if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\r\n            }\r\n            if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.endsWith(lowerCaseUrl, \"/\")) {\r\n                lowerCaseUrl += \"/\";\r\n            }\r\n            return lowerCaseUrl;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    validateAsUri() {\r\n        // Attempts to parse url for uri components\r\n        let components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol ||\r\n            components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.authorityUriInsecure);\r\n        }\r\n    }\r\n    /**\r\n     * Given a url and a query string return the url with provided query string appended\r\n     * @param url\r\n     * @param queryString\r\n     */\r\n    static appendQueryString(url, queryString) {\r\n        if (!queryString) {\r\n            return url;\r\n        }\r\n        return url.indexOf(\"?\") < 0\r\n            ? `${url}?${queryString}`\r\n            : `${url}&${queryString}`;\r\n    }\r\n    /**\r\n     * Returns a url with the hash removed\r\n     * @param url\r\n     */\r\n    static removeHashFromUrl(url) {\r\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\r\n    }\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    replaceTenantPath(tenantId) {\r\n        const urlObject = this.getUrlComponents();\r\n        const pathArray = urlObject.PathSegments;\r\n        if (tenantId &&\r\n            pathArray.length !== 0 &&\r\n            (pathArray[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AADAuthorityConstants.COMMON ||\r\n                pathArray[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AADAuthorityConstants.ORGANIZATIONS)) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    }\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    getUrlComponents() {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        const match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\r\n        }\r\n        // Url component object\r\n        const urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5],\r\n            QueryString: match[7],\r\n        };\r\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        if (urlComponents.QueryString &&\r\n            urlComponents.QueryString.endsWith(\"/\")) {\r\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);\r\n        }\r\n        return urlComponents;\r\n    }\r\n    static getDomainFromUrl(url) {\r\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\r\n        const match = url.match(regEx);\r\n        if (!match) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\r\n        }\r\n        return match[2];\r\n    }\r\n    static getAbsoluteUrl(relativeUrl, baseUrl) {\r\n        if (relativeUrl[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.Constants.FORWARD_SLASH) {\r\n            const url = new UrlString(baseUrl);\r\n            const baseComponents = url.getUrlComponents();\r\n            return (baseComponents.Protocol +\r\n                \"//\" +\r\n                baseComponents.HostNameAndPort +\r\n                relativeUrl);\r\n        }\r\n        return relativeUrl;\r\n    }\r\n    static constructAuthorityUriFromObject(urlObject) {\r\n        return new UrlString(urlObject.Protocol +\r\n            \"//\" +\r\n            urlObject.HostNameAndPort +\r\n            \"/\" +\r\n            urlObject.PathSegments.join(\"/\"));\r\n    }\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     * @deprecated This API will be removed in a future version\r\n     */\r\n    static hashContainsKnownProperties(response) {\r\n        return !!(0,_utils_UrlUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getDeserializedResponse)(response);\r\n    }\r\n}\n\n\n//# sourceMappingURL=UrlString.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/url/UrlString.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getClientAssertion: function() { return /* binding */ getClientAssertion; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nasync function getClientAssertion(clientAssertion, clientId, tokenEndpoint) {\r\n    if (typeof clientAssertion === \"string\") {\r\n        return clientAssertion;\r\n    }\r\n    else {\r\n        const config = {\r\n            clientId: clientId,\r\n            tokenEndpoint: tokenEndpoint,\r\n        };\r\n        return clientAssertion(config);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ClientAssertionUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvQ2xpZW50QXNzZXJ0aW9uVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC91dGlscy9DbGllbnRBc3NlcnRpb25VdGlscy5tanM/OWYxNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBnZXRDbGllbnRBc3NlcnRpb24oY2xpZW50QXNzZXJ0aW9uLCBjbGllbnRJZCwgdG9rZW5FbmRwb2ludCkge1xyXG4gICAgaWYgKHR5cGVvZiBjbGllbnRBc3NlcnRpb24gPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICByZXR1cm4gY2xpZW50QXNzZXJ0aW9uO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgY29uc3QgY29uZmlnID0ge1xyXG4gICAgICAgICAgICBjbGllbnRJZDogY2xpZW50SWQsXHJcbiAgICAgICAgICAgIHRva2VuRW5kcG9pbnQ6IHRva2VuRW5kcG9pbnQsXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gY2xpZW50QXNzZXJ0aW9uKGNvbmZpZyk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgZ2V0Q2xpZW50QXNzZXJ0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRBc3NlcnRpb25VdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/Constants.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/Constants.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AADAuthorityConstants: function() { return /* binding */ AADAuthorityConstants; },\n/* harmony export */   APP_METADATA: function() { return /* binding */ APP_METADATA; },\n/* harmony export */   AUTHORITY_METADATA_CONSTANTS: function() { return /* binding */ AUTHORITY_METADATA_CONSTANTS; },\n/* harmony export */   AuthenticationScheme: function() { return /* binding */ AuthenticationScheme; },\n/* harmony export */   AuthorityMetadataSource: function() { return /* binding */ AuthorityMetadataSource; },\n/* harmony export */   CLIENT_INFO: function() { return /* binding */ CLIENT_INFO; },\n/* harmony export */   CacheAccountType: function() { return /* binding */ CacheAccountType; },\n/* harmony export */   CacheOutcome: function() { return /* binding */ CacheOutcome; },\n/* harmony export */   CacheType: function() { return /* binding */ CacheType; },\n/* harmony export */   ClaimsRequestKeys: function() { return /* binding */ ClaimsRequestKeys; },\n/* harmony export */   CodeChallengeMethodValues: function() { return /* binding */ CodeChallengeMethodValues; },\n/* harmony export */   Constants: function() { return /* binding */ Constants; },\n/* harmony export */   CredentialType: function() { return /* binding */ CredentialType; },\n/* harmony export */   DEFAULT_TOKEN_RENEWAL_OFFSET_SEC: function() { return /* binding */ DEFAULT_TOKEN_RENEWAL_OFFSET_SEC; },\n/* harmony export */   Errors: function() { return /* binding */ Errors; },\n/* harmony export */   GrantType: function() { return /* binding */ GrantType; },\n/* harmony export */   HeaderNames: function() { return /* binding */ HeaderNames; },\n/* harmony export */   HttpStatus: function() { return /* binding */ HttpStatus; },\n/* harmony export */   JsonWebTokenTypes: function() { return /* binding */ JsonWebTokenTypes; },\n/* harmony export */   OIDC_DEFAULT_SCOPES: function() { return /* binding */ OIDC_DEFAULT_SCOPES; },\n/* harmony export */   OIDC_SCOPES: function() { return /* binding */ OIDC_SCOPES; },\n/* harmony export */   ONE_DAY_IN_MS: function() { return /* binding */ ONE_DAY_IN_MS; },\n/* harmony export */   PasswordGrantConstants: function() { return /* binding */ PasswordGrantConstants; },\n/* harmony export */   PersistentCacheKeys: function() { return /* binding */ PersistentCacheKeys; },\n/* harmony export */   PromptValue: function() { return /* binding */ PromptValue; },\n/* harmony export */   RegionDiscoveryOutcomes: function() { return /* binding */ RegionDiscoveryOutcomes; },\n/* harmony export */   RegionDiscoverySources: function() { return /* binding */ RegionDiscoverySources; },\n/* harmony export */   ResponseCodes: function() { return /* binding */ ResponseCodes; },\n/* harmony export */   ResponseMode: function() { return /* binding */ ResponseMode; },\n/* harmony export */   SERVER_TELEM_CONSTANTS: function() { return /* binding */ SERVER_TELEM_CONSTANTS; },\n/* harmony export */   Separators: function() { return /* binding */ Separators; },\n/* harmony export */   ServerResponseType: function() { return /* binding */ ServerResponseType; },\n/* harmony export */   THE_FAMILY_ID: function() { return /* binding */ THE_FAMILY_ID; },\n/* harmony export */   ThrottlingConstants: function() { return /* binding */ ThrottlingConstants; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    DEFAULT_COMMON_TENANT: \"common\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    DSTS: \"dstsv2\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // CIAM URL\r\n    CIAM_AUTH_URL: \".ciamlogin.com\",\r\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    EMAIL_SCOPE: \"email\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\",\r\n    EMPTY_STRING: \"\",\r\n    NOT_APPLICABLE: \"N/A\",\r\n    NOT_AVAILABLE: \"Not Available\",\r\n    FORWARD_SLASH: \"/\",\r\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\r\n    IMDS_VERSION: \"2020-06-01\",\r\n    IMDS_TIMEOUT: 2000,\r\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\r\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\r\n    KNOWN_PUBLIC_CLOUDS: [\r\n        \"login.microsoftonline.com\",\r\n        \"login.windows.net\",\r\n        \"login.microsoft.com\",\r\n        \"sts.windows.net\",\r\n    ],\r\n    TOKEN_RESPONSE_TYPE: \"token\",\r\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\r\n    SHR_NONCE_VALIDITY: 240,\r\n    INVALID_INSTANCE: \"invalid_instance\",\r\n};\r\nconst HttpStatus = {\r\n    SUCCESS: 200,\r\n    SUCCESS_RANGE_START: 200,\r\n    SUCCESS_RANGE_END: 299,\r\n    REDIRECT: 302,\r\n    CLIENT_ERROR: 400,\r\n    CLIENT_ERROR_RANGE_START: 400,\r\n    BAD_REQUEST: 400,\r\n    UNAUTHORIZED: 401,\r\n    NOT_FOUND: 404,\r\n    REQUEST_TIMEOUT: 408,\r\n    TOO_MANY_REQUESTS: 429,\r\n    CLIENT_ERROR_RANGE_END: 499,\r\n    SERVER_ERROR: 500,\r\n    SERVER_ERROR_RANGE_START: 500,\r\n    SERVICE_UNAVAILABLE: 503,\r\n    GATEWAY_TIMEOUT: 504,\r\n    SERVER_ERROR_RANGE_END: 599,\r\n    MULTI_SIDED_ERROR: 600,\r\n};\r\nconst OIDC_DEFAULT_SCOPES = [\r\n    Constants.OPENID_SCOPE,\r\n    Constants.PROFILE_SCOPE,\r\n    Constants.OFFLINE_ACCESS_SCOPE,\r\n];\r\nconst OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\r\n/**\r\n * Request header names\r\n */\r\nconst HeaderNames = {\r\n    CONTENT_TYPE: \"Content-Type\",\r\n    CONTENT_LENGTH: \"Content-Length\",\r\n    RETRY_AFTER: \"Retry-After\",\r\n    CCS_HEADER: \"X-AnchorMailbox\",\r\n    WWWAuthenticate: \"WWW-Authenticate\",\r\n    AuthenticationInfo: \"Authentication-Info\",\r\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\r\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\r\n};\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nconst PersistentCacheKeys = {\r\n    ID_TOKEN: \"idtoken\",\r\n    CLIENT_INFO: \"client.info\",\r\n    ADAL_ID_TOKEN: \"adal.idtoken\",\r\n    ERROR: \"error\",\r\n    ERROR_DESC: \"error.description\",\r\n    ACTIVE_ACCOUNT: \"active-account\",\r\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\r\n};\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nconst AADAuthorityConstants = {\r\n    COMMON: \"common\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\",\r\n};\r\n/**\r\n * Claims request keys\r\n */\r\nconst ClaimsRequestKeys = {\r\n    ACCESS_TOKEN: \"access_token\",\r\n    XMS_CC: \"xms_cc\",\r\n};\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nconst PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n    CREATE: \"create\",\r\n    NO_SESSION: \"no_session\",\r\n};\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nconst CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\",\r\n};\r\n/**\r\n * allowed values for server response type\r\n */\r\nconst ServerResponseType = {\r\n    QUERY: \"query\",\r\n    FRAGMENT: \"fragment\",\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nconst ResponseMode = {\r\n    ...ServerResponseType,\r\n    FORM_POST: \"form_post\",\r\n};\r\n/**\r\n * allowed grant_type\r\n */\r\nconst GrantType = {\r\n    IMPLICIT_GRANT: \"implicit\",\r\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\r\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\r\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\r\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\r\n    DEVICE_CODE_GRANT: \"device_code\",\r\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\r\n};\r\n/**\r\n * Account types in Cache\r\n */\r\nconst CacheAccountType = {\r\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\r\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\r\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\r\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\r\n};\r\n/**\r\n * Separators used in cache\r\n */\r\nconst Separators = {\r\n    CACHE_KEY_SEPARATOR: \"-\",\r\n    CLIENT_INFO_SEPARATOR: \".\",\r\n};\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nconst CredentialType = {\r\n    ID_TOKEN: \"IdToken\",\r\n    ACCESS_TOKEN: \"AccessToken\",\r\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\r\n    REFRESH_TOKEN: \"RefreshToken\",\r\n};\r\n/**\r\n * Combine all cache types\r\n */\r\nconst CacheType = {\r\n    ADFS: 1001,\r\n    MSA: 1002,\r\n    MSSTS: 1003,\r\n    GENERIC: 1004,\r\n    ACCESS_TOKEN: 2001,\r\n    REFRESH_TOKEN: 2002,\r\n    ID_TOKEN: 2003,\r\n    APP_METADATA: 3001,\r\n    UNDEFINED: 9999,\r\n};\r\n/**\r\n * More Cache related constants\r\n */\r\nconst APP_METADATA = \"appmetadata\";\r\nconst CLIENT_INFO = \"client_info\";\r\nconst THE_FAMILY_ID = \"1\";\r\nconst AUTHORITY_METADATA_CONSTANTS = {\r\n    CACHE_KEY: \"authority-metadata\",\r\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\r\n};\r\nconst AuthorityMetadataSource = {\r\n    CONFIG: \"config\",\r\n    CACHE: \"cache\",\r\n    NETWORK: \"network\",\r\n    HARDCODED_VALUES: \"hardcoded_values\",\r\n};\r\nconst SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 5,\r\n    MAX_CUR_HEADER_BYTES: 80,\r\n    MAX_LAST_HEADER_BYTES: 330,\r\n    MAX_CACHED_ERRORS: 50,\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\",\r\n    OVERFLOW_TRUE: \"1\",\r\n    OVERFLOW_FALSE: \"0\",\r\n    UNKNOWN_ERROR: \"unknown_error\",\r\n};\r\n/**\r\n * Type of the authentication request\r\n */\r\nconst AuthenticationScheme = {\r\n    BEARER: \"Bearer\",\r\n    POP: \"pop\",\r\n    SSH: \"ssh-cert\",\r\n};\r\n/**\r\n * Constants related to throttling\r\n */\r\nconst ThrottlingConstants = {\r\n    // Default time to throttle RequestThumbprint in seconds\r\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\r\n    // Default maximum time to throttle in seconds, overrides what the server sends back\r\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\r\n    // Prefix for storing throttling entries\r\n    THROTTLING_PREFIX: \"throttling\",\r\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\r\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\r\n};\r\nconst Errors = {\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\r\n};\r\n/**\r\n * Password grant parameters\r\n */\r\nconst PasswordGrantConstants = {\r\n    username: \"username\",\r\n    password: \"password\",\r\n};\r\n/**\r\n * Response codes\r\n */\r\nconst ResponseCodes = {\r\n    httpSuccess: 200,\r\n    httpBadRequest: 400,\r\n};\r\n/**\r\n * Region Discovery Sources\r\n */\r\nconst RegionDiscoverySources = {\r\n    FAILED_AUTO_DETECTION: \"1\",\r\n    INTERNAL_CACHE: \"2\",\r\n    ENVIRONMENT_VARIABLE: \"3\",\r\n    IMDS: \"4\",\r\n};\r\n/**\r\n * Region Discovery Outcomes\r\n */\r\nconst RegionDiscoveryOutcomes = {\r\n    CONFIGURED_MATCHES_DETECTED: \"1\",\r\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\r\n    CONFIGURED_NOT_DETECTED: \"3\",\r\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\r\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\r\n};\r\n/**\r\n * Specifies the reason for fetching the access token from the identity provider\r\n */\r\nconst CacheOutcome = {\r\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\r\n    NOT_APPLICABLE: \"0\",\r\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\r\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\r\n    // When the token request goes to the identity provider because no cached access token exists\r\n    NO_CACHED_ACCESS_TOKEN: \"2\",\r\n    // When the token request goes to the identity provider because cached access token expired\r\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\r\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\r\n    PROACTIVELY_REFRESHED: \"4\",\r\n};\r\nconst JsonWebTokenTypes = {\r\n    Jwt: \"JWT\",\r\n    Jwk: \"JWK\",\r\n    Pop: \"pop\",\r\n};\r\nconst ONE_DAY_IN_MS = 86400000;\r\n// Token renewal offset default in seconds\r\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n\n\n//# sourceMappingURL=Constants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/Constants.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invoke: function() { return /* binding */ invoke; },\n/* harmony export */   invokeAsync: function() { return /* binding */ invokeAsync; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Wraps a function with a performance measurement.\r\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst invoke = (callback, eventName, logger, telemetryClient, correlationId) => {\r\n    return (...args) => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\r\n        }\r\n        try {\r\n            const result = callback(...args);\r\n            inProgressEvent?.end({\r\n                success: true,\r\n            });\r\n            logger.trace(`Returning result from ${eventName}`);\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            logger.trace(`Error occurred in ${eventName}`);\r\n            try {\r\n                logger.trace(JSON.stringify(e));\r\n            }\r\n            catch (e) {\r\n                logger.trace(\"Unable to print error message.\");\r\n            }\r\n            inProgressEvent?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        }\r\n    };\r\n};\r\n/**\r\n * Wraps an async function with a performance measurement.\r\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n *\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst invokeAsync = (callback, eventName, logger, telemetryClient, correlationId) => {\r\n    return (...args) => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\r\n        }\r\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\r\n        return callback(...args)\r\n            .then((response) => {\r\n            logger.trace(`Returning result from ${eventName}`);\r\n            inProgressEvent?.end({\r\n                success: true,\r\n            });\r\n            return response;\r\n        })\r\n            .catch((e) => {\r\n            logger.trace(`Error occurred in ${eventName}`);\r\n            try {\r\n                logger.trace(JSON.stringify(e));\r\n            }\r\n            catch (e) {\r\n                logger.trace(\"Unable to print error message.\");\r\n            }\r\n            inProgressEvent?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        });\r\n    };\r\n};\n\n\n//# sourceMappingURL=FunctionWrappers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvRnVuY3Rpb25XcmFwcGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsaUJBQWlCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2Isa0RBQWtELFVBQVU7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFVBQVU7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxVQUFVO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLGlCQUFpQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxVQUFVO0FBQzVEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQSw4Q0FBOEMsVUFBVTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC91dGlscy9GdW5jdGlvbldyYXBwZXJzLm1qcz82NzIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBXcmFwcyBhIGZ1bmN0aW9uIHdpdGggYSBwZXJmb3JtYW5jZSBtZWFzdXJlbWVudC5cclxuICogVXNhZ2U6IGludm9rZShmdW5jdGlvblRvQ2FsbCwgcGVyZm9ybWFuY2VDbGllbnQsIFwiRXZlbnROYW1lXCIsIFwiY29ycmVsYXRpb25JZFwiKSguLi5hcmdzVG9QYXNzVG9GdW5jdGlvbilcclxuICogQHBhcmFtIGNhbGxiYWNrXHJcbiAqIEBwYXJhbSBldmVudE5hbWVcclxuICogQHBhcmFtIGxvZ2dlclxyXG4gKiBAcGFyYW0gdGVsZW1ldHJ5Q2xpZW50XHJcbiAqIEBwYXJhbSBjb3JyZWxhdGlvbklkXHJcbiAqIEByZXR1cm5zXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuY29uc3QgaW52b2tlID0gKGNhbGxiYWNrLCBldmVudE5hbWUsIGxvZ2dlciwgdGVsZW1ldHJ5Q2xpZW50LCBjb3JyZWxhdGlvbklkKSA9PiB7XHJcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcclxuICAgICAgICBsb2dnZXIudHJhY2UoYEV4ZWN1dGluZyBmdW5jdGlvbiAke2V2ZW50TmFtZX1gKTtcclxuICAgICAgICBjb25zdCBpblByb2dyZXNzRXZlbnQgPSB0ZWxlbWV0cnlDbGllbnQ/LnN0YXJ0TWVhc3VyZW1lbnQoZXZlbnROYW1lLCBjb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBpZiAoY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgICAgICAvLyBUcmFjayBudW1iZXIgb2YgdGltZXMgdGhpcyBBUEkgaXMgY2FsbGVkIGluIGEgc2luZ2xlIHJlcXVlc3RcclxuICAgICAgICAgICAgY29uc3QgZXZlbnRDb3VudCA9IGV2ZW50TmFtZSArIFwiQ2FsbENvdW50XCI7XHJcbiAgICAgICAgICAgIHRlbGVtZXRyeUNsaWVudD8uaW5jcmVtZW50RmllbGRzKHsgW2V2ZW50Q291bnRdOiAxIH0sIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBjYWxsYmFjayguLi5hcmdzKTtcclxuICAgICAgICAgICAgaW5Qcm9ncmVzc0V2ZW50Py5lbmQoe1xyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGxvZ2dlci50cmFjZShgUmV0dXJuaW5nIHJlc3VsdCBmcm9tICR7ZXZlbnROYW1lfWApO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICBsb2dnZXIudHJhY2UoYEVycm9yIG9jY3VycmVkIGluICR7ZXZlbnROYW1lfWApO1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgbG9nZ2VyLnRyYWNlKEpTT04uc3RyaW5naWZ5KGUpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgbG9nZ2VyLnRyYWNlKFwiVW5hYmxlIHRvIHByaW50IGVycm9yIG1lc3NhZ2UuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGluUHJvZ3Jlc3NFdmVudD8uZW5kKHtcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgICB9LCBlKTtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59O1xyXG4vKipcclxuICogV3JhcHMgYW4gYXN5bmMgZnVuY3Rpb24gd2l0aCBhIHBlcmZvcm1hbmNlIG1lYXN1cmVtZW50LlxyXG4gKiBVc2FnZTogaW52b2tlQXN5bmMoZnVuY3Rpb25Ub0NhbGwsIHBlcmZvcm1hbmNlQ2xpZW50LCBcIkV2ZW50TmFtZVwiLCBcImNvcnJlbGF0aW9uSWRcIikoLi4uYXJnc1RvUGFzc1RvRnVuY3Rpb24pXHJcbiAqIEBwYXJhbSBjYWxsYmFja1xyXG4gKiBAcGFyYW0gZXZlbnROYW1lXHJcbiAqIEBwYXJhbSBsb2dnZXJcclxuICogQHBhcmFtIHRlbGVtZXRyeUNsaWVudFxyXG4gKiBAcGFyYW0gY29ycmVsYXRpb25JZFxyXG4gKiBAcmV0dXJuc1xyXG4gKiBAaW50ZXJuYWxcclxuICpcclxuICovXHJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XHJcbmNvbnN0IGludm9rZUFzeW5jID0gKGNhbGxiYWNrLCBldmVudE5hbWUsIGxvZ2dlciwgdGVsZW1ldHJ5Q2xpZW50LCBjb3JyZWxhdGlvbklkKSA9PiB7XHJcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcclxuICAgICAgICBsb2dnZXIudHJhY2UoYEV4ZWN1dGluZyBmdW5jdGlvbiAke2V2ZW50TmFtZX1gKTtcclxuICAgICAgICBjb25zdCBpblByb2dyZXNzRXZlbnQgPSB0ZWxlbWV0cnlDbGllbnQ/LnN0YXJ0TWVhc3VyZW1lbnQoZXZlbnROYW1lLCBjb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBpZiAoY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgICAgICAvLyBUcmFjayBudW1iZXIgb2YgdGltZXMgdGhpcyBBUEkgaXMgY2FsbGVkIGluIGEgc2luZ2xlIHJlcXVlc3RcclxuICAgICAgICAgICAgY29uc3QgZXZlbnRDb3VudCA9IGV2ZW50TmFtZSArIFwiQ2FsbENvdW50XCI7XHJcbiAgICAgICAgICAgIHRlbGVtZXRyeUNsaWVudD8uaW5jcmVtZW50RmllbGRzKHsgW2V2ZW50Q291bnRdOiAxIH0sIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0ZWxlbWV0cnlDbGllbnQ/LnNldFByZVF1ZXVlVGltZShldmVudE5hbWUsIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIHJldHVybiBjYWxsYmFjayguLi5hcmdzKVxyXG4gICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgbG9nZ2VyLnRyYWNlKGBSZXR1cm5pbmcgcmVzdWx0IGZyb20gJHtldmVudE5hbWV9YCk7XHJcbiAgICAgICAgICAgIGluUHJvZ3Jlc3NFdmVudD8uZW5kKHtcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlKSA9PiB7XHJcbiAgICAgICAgICAgIGxvZ2dlci50cmFjZShgRXJyb3Igb2NjdXJyZWQgaW4gJHtldmVudE5hbWV9YCk7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBsb2dnZXIudHJhY2UoSlNPTi5zdHJpbmdpZnkoZSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICBsb2dnZXIudHJhY2UoXCJVbmFibGUgdG8gcHJpbnQgZXJyb3IgbWVzc2FnZS5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW5Qcm9ncmVzc0V2ZW50Py5lbmQoe1xyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgICAgIH0sIGUpO1xyXG4gICAgICAgICAgICB0aHJvdyBlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxufTtcblxuZXhwb3J0IHsgaW52b2tlLCBpbnZva2VBc3luYyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RnVuY3Rpb25XcmFwcGVycy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolUtils: function() { return /* binding */ ProtocolUtils; }\n/* harmony export */ });\n/* harmony import */ var _Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Constants.mjs */ \"./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nclass ProtocolUtils {\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    static setRequestState(cryptoObj, userState, meta) {\r\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\r\n        return userState\r\n            ? `${libraryState}${_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.RESOURCE_DELIM}${userState}`\r\n            : libraryState;\r\n    }\r\n    /**\r\n     * Generates the state value used by the common library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    static generateLibraryState(cryptoObj, meta) {\r\n        if (!cryptoObj) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noCryptoObject);\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        const stateObj = {\r\n            id: cryptoObj.createNewGuid(),\r\n        };\r\n        if (meta) {\r\n            stateObj.meta = meta;\r\n        }\r\n        const stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    }\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    static parseRequestState(cryptoObj, state) {\r\n        if (!cryptoObj) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noCryptoObject);\r\n        }\r\n        if (!state) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidState);\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            const splitState = state.split(_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.RESOURCE_DELIM);\r\n            const libraryState = splitState[0];\r\n            const userState = splitState.length > 1\r\n                ? splitState.slice(1).join(_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.RESOURCE_DELIM)\r\n                : _Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            const libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: userState || _Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n                libraryState: libraryStateObj,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidState);\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=ProtocolUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvUHJvdG9jb2xVdGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDK0I7QUFDeUI7QUFDWTs7QUFFakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsYUFBYSxFQUFFLHFEQUFTLGdCQUFnQixFQUFFLFVBQVU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLDJFQUFjO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpRkFBcUIsQ0FBQywyRUFBYztBQUN0RDtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLHlFQUFZO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxxREFBUztBQUNwRDtBQUNBO0FBQ0EsMkNBQTJDLHFEQUFTO0FBQ3BELGtCQUFrQixxREFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MscURBQVM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUZBQXFCLENBQUMseUVBQVk7QUFDcEQ7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvUHJvdG9jb2xVdGlscy5tanM/OTcxZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJy4vQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IG5vQ3J5cHRvT2JqZWN0LCBpbnZhbGlkU3RhdGUgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIENsYXNzIHdoaWNoIHByb3ZpZGVzIGhlbHBlcnMgZm9yIE9BdXRoIDIuMCBwcm90b2NvbCBzcGVjaWZpYyB2YWx1ZXNcclxuICovXHJcbmNsYXNzIFByb3RvY29sVXRpbHMge1xyXG4gICAgLyoqXHJcbiAgICAgKiBBcHBlbmRzIHVzZXIgc3RhdGUgd2l0aCByYW5kb20gZ3VpZCwgb3IgcmV0dXJucyByYW5kb20gZ3VpZC5cclxuICAgICAqIEBwYXJhbSB1c2VyU3RhdGVcclxuICAgICAqIEBwYXJhbSByYW5kb21HdWlkXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBzZXRSZXF1ZXN0U3RhdGUoY3J5cHRvT2JqLCB1c2VyU3RhdGUsIG1ldGEpIHtcclxuICAgICAgICBjb25zdCBsaWJyYXJ5U3RhdGUgPSBQcm90b2NvbFV0aWxzLmdlbmVyYXRlTGlicmFyeVN0YXRlKGNyeXB0b09iaiwgbWV0YSk7XHJcbiAgICAgICAgcmV0dXJuIHVzZXJTdGF0ZVxyXG4gICAgICAgICAgICA/IGAke2xpYnJhcnlTdGF0ZX0ke0NvbnN0YW50cy5SRVNPVVJDRV9ERUxJTX0ke3VzZXJTdGF0ZX1gXHJcbiAgICAgICAgICAgIDogbGlicmFyeVN0YXRlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZW5lcmF0ZXMgdGhlIHN0YXRlIHZhbHVlIHVzZWQgYnkgdGhlIGNvbW1vbiBsaWJyYXJ5LlxyXG4gICAgICogQHBhcmFtIHJhbmRvbUd1aWRcclxuICAgICAqIEBwYXJhbSBjcnlwdG9PYmpcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGdlbmVyYXRlTGlicmFyeVN0YXRlKGNyeXB0b09iaiwgbWV0YSkge1xyXG4gICAgICAgIGlmICghY3J5cHRvT2JqKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihub0NyeXB0b09iamVjdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIENyZWF0ZSBhIHN0YXRlIG9iamVjdCBjb250YWluaW5nIGEgdW5pcXVlIGlkIGFuZCB0aGUgdGltZXN0YW1wIG9mIHRoZSByZXF1ZXN0IGNyZWF0aW9uXHJcbiAgICAgICAgY29uc3Qgc3RhdGVPYmogPSB7XHJcbiAgICAgICAgICAgIGlkOiBjcnlwdG9PYmouY3JlYXRlTmV3R3VpZCgpLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKG1ldGEpIHtcclxuICAgICAgICAgICAgc3RhdGVPYmoubWV0YSA9IG1ldGE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHN0YXRlU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoc3RhdGVPYmopO1xyXG4gICAgICAgIHJldHVybiBjcnlwdG9PYmouYmFzZTY0RW5jb2RlKHN0YXRlU3RyaW5nKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2VzIHRoZSBzdGF0ZSBpbnRvIHRoZSBSZXF1ZXN0U3RhdGVPYmplY3QsIHdoaWNoIGNvbnRhaW5zIHRoZSBMaWJyYXJ5U3RhdGUgaW5mbyBhbmQgdGhlIHN0YXRlIHBhc3NlZCBieSB0aGUgdXNlci5cclxuICAgICAqIEBwYXJhbSBzdGF0ZVxyXG4gICAgICogQHBhcmFtIGNyeXB0b09ialxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgcGFyc2VSZXF1ZXN0U3RhdGUoY3J5cHRvT2JqLCBzdGF0ZSkge1xyXG4gICAgICAgIGlmICghY3J5cHRvT2JqKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihub0NyeXB0b09iamVjdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghc3RhdGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKGludmFsaWRTdGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIFNwbGl0IHRoZSBzdGF0ZSBiZXR3ZWVuIGxpYnJhcnkgc3RhdGUgYW5kIHVzZXIgcGFzc2VkIHN0YXRlIGFuZCBkZWNvZGUgdGhlbSBzZXBhcmF0ZWx5XHJcbiAgICAgICAgICAgIGNvbnN0IHNwbGl0U3RhdGUgPSBzdGF0ZS5zcGxpdChDb25zdGFudHMuUkVTT1VSQ0VfREVMSU0pO1xyXG4gICAgICAgICAgICBjb25zdCBsaWJyYXJ5U3RhdGUgPSBzcGxpdFN0YXRlWzBdO1xyXG4gICAgICAgICAgICBjb25zdCB1c2VyU3RhdGUgPSBzcGxpdFN0YXRlLmxlbmd0aCA+IDFcclxuICAgICAgICAgICAgICAgID8gc3BsaXRTdGF0ZS5zbGljZSgxKS5qb2luKENvbnN0YW50cy5SRVNPVVJDRV9ERUxJTSlcclxuICAgICAgICAgICAgICAgIDogQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICAgICAgY29uc3QgbGlicmFyeVN0YXRlU3RyaW5nID0gY3J5cHRvT2JqLmJhc2U2NERlY29kZShsaWJyYXJ5U3RhdGUpO1xyXG4gICAgICAgICAgICBjb25zdCBsaWJyYXJ5U3RhdGVPYmogPSBKU09OLnBhcnNlKGxpYnJhcnlTdGF0ZVN0cmluZyk7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB1c2VyUmVxdWVzdFN0YXRlOiB1c2VyU3RhdGUgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcclxuICAgICAgICAgICAgICAgIGxpYnJhcnlTdGF0ZTogbGlicmFyeVN0YXRlT2JqLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoaW52YWxpZFN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgUHJvdG9jb2xVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHJvdG9jb2xVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StringUtils: function() { return /* binding */ StringUtils; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nclass StringUtils {\r\n    /**\r\n     * Check if stringified object is empty\r\n     * @param strObj\r\n     */\r\n    static isEmptyObj(strObj) {\r\n        if (strObj) {\r\n            try {\r\n                const obj = JSON.parse(strObj);\r\n                return Object.keys(obj).length === 0;\r\n            }\r\n            catch (e) { }\r\n        }\r\n        return true;\r\n    }\r\n    static startsWith(str, search) {\r\n        return str.indexOf(search) === 0;\r\n    }\r\n    static endsWith(str, search) {\r\n        return (str.length >= search.length &&\r\n            str.lastIndexOf(search) === str.length - search.length);\r\n    }\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    static queryStringToObject(query) {\r\n        const obj = {};\r\n        const params = query.split(\"&\");\r\n        const decode = (s) => decodeURIComponent(s.replace(/\\+/g, \" \"));\r\n        params.forEach((pair) => {\r\n            if (pair.trim()) {\r\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\r\n                if (key && value) {\r\n                    obj[decode(key)] = decode(value);\r\n                }\r\n            }\r\n        });\r\n        return obj;\r\n    }\r\n    /**\r\n     * Trims entries in an array.\r\n     *\r\n     * @param arr\r\n     */\r\n    static trimArrayEntries(arr) {\r\n        return arr.map((entry) => entry.trim());\r\n    }\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    static removeEmptyStringsFromArray(arr) {\r\n        return arr.filter((entry) => {\r\n            return !!entry;\r\n        });\r\n    }\r\n    /**\r\n     * Attempts to parse a string into JSON\r\n     * @param str\r\n     */\r\n    static jsonParseHelper(str) {\r\n        try {\r\n            return JSON.parse(str);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\r\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\r\n     * @param input String to match against\r\n     */\r\n    static matchPattern(pattern, input) {\r\n        /**\r\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\r\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\r\n         */\r\n        // eslint-disable-next-line security/detect-non-literal-regexp\r\n        const regex = new RegExp(pattern\r\n            .replace(/\\\\/g, \"\\\\\\\\\")\r\n            .replace(/\\*/g, \"[^ ]*\")\r\n            .replace(/\\?/g, \"\\\\?\"));\r\n        return regex.test(input);\r\n    }\r\n}\n\n\n//# sourceMappingURL=StringUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvU3RyaW5nVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3V0aWxzL1N0cmluZ1V0aWxzLm1qcz9lY2ZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5jbGFzcyBTdHJpbmdVdGlscyB7XHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGlmIHN0cmluZ2lmaWVkIG9iamVjdCBpcyBlbXB0eVxyXG4gICAgICogQHBhcmFtIHN0ck9ialxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgaXNFbXB0eU9iaihzdHJPYmopIHtcclxuICAgICAgICBpZiAoc3RyT2JqKSB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBvYmogPSBKU09OLnBhcnNlKHN0ck9iaik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5sZW5ndGggPT09IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGUpIHsgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBzdGFydHNXaXRoKHN0ciwgc2VhcmNoKSB7XHJcbiAgICAgICAgcmV0dXJuIHN0ci5pbmRleE9mKHNlYXJjaCkgPT09IDA7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgZW5kc1dpdGgoc3RyLCBzZWFyY2gpIHtcclxuICAgICAgICByZXR1cm4gKHN0ci5sZW5ndGggPj0gc2VhcmNoLmxlbmd0aCAmJlxyXG4gICAgICAgICAgICBzdHIubGFzdEluZGV4T2Yoc2VhcmNoKSA9PT0gc3RyLmxlbmd0aCAtIHNlYXJjaC5sZW5ndGgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQYXJzZXMgc3RyaW5nIGludG8gYW4gb2JqZWN0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBxdWVyeVxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgcXVlcnlTdHJpbmdUb09iamVjdChxdWVyeSkge1xyXG4gICAgICAgIGNvbnN0IG9iaiA9IHt9O1xyXG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHF1ZXJ5LnNwbGl0KFwiJlwiKTtcclxuICAgICAgICBjb25zdCBkZWNvZGUgPSAocykgPT4gZGVjb2RlVVJJQ29tcG9uZW50KHMucmVwbGFjZSgvXFwrL2csIFwiIFwiKSk7XHJcbiAgICAgICAgcGFyYW1zLmZvckVhY2goKHBhaXIpID0+IHtcclxuICAgICAgICAgICAgaWYgKHBhaXIudHJpbSgpKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBba2V5LCB2YWx1ZV0gPSBwYWlyLnNwbGl0KC89KC4rKS9nLCAyKTsgLy8gU3BsaXQgb24gdGhlIGZpcnN0IG9jY3VyZW5jZSBvZiB0aGUgJz0nIGNoYXJhY3RlclxyXG4gICAgICAgICAgICAgICAgaWYgKGtleSAmJiB2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG9ialtkZWNvZGUoa2V5KV0gPSBkZWNvZGUodmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVHJpbXMgZW50cmllcyBpbiBhbiBhcnJheS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gYXJyXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB0cmltQXJyYXlFbnRyaWVzKGFycikge1xyXG4gICAgICAgIHJldHVybiBhcnIubWFwKChlbnRyeSkgPT4gZW50cnkudHJpbSgpKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlcyBlbXB0eSBzdHJpbmdzIGZyb20gYXJyYXlcclxuICAgICAqIEBwYXJhbSBhcnJcclxuICAgICAqL1xyXG4gICAgc3RhdGljIHJlbW92ZUVtcHR5U3RyaW5nc0Zyb21BcnJheShhcnIpIHtcclxuICAgICAgICByZXR1cm4gYXJyLmZpbHRlcigoZW50cnkpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuICEhZW50cnk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEF0dGVtcHRzIHRvIHBhcnNlIGEgc3RyaW5nIGludG8gSlNPTlxyXG4gICAgICogQHBhcmFtIHN0clxyXG4gICAgICovXHJcbiAgICBzdGF0aWMganNvblBhcnNlSGVscGVyKHN0cikge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHN0cik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGVzdHMgaWYgYSBnaXZlbiBzdHJpbmcgbWF0Y2hlcyBhIGdpdmVuIHBhdHRlcm4sIHdpdGggc3VwcG9ydCBmb3Igd2lsZGNhcmRzIGFuZCBxdWVyaWVzLlxyXG4gICAgICogQHBhcmFtIHBhdHRlcm4gV2lsZGNhcmQgcGF0dGVybiB0byBzdHJpbmcgbWF0Y2guIFN1cHBvcnRzIFwiKlwiIGZvciB3aWxkY2FyZHMgYW5kIFwiP1wiIGZvciBxdWVyaWVzXHJcbiAgICAgKiBAcGFyYW0gaW5wdXQgU3RyaW5nIHRvIG1hdGNoIGFnYWluc3RcclxuICAgICAqL1xyXG4gICAgc3RhdGljIG1hdGNoUGF0dGVybihwYXR0ZXJuLCBpbnB1dCkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFdpbGRjYXJkIHN1cHBvcnQ6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zMTE3MjQ4LzQ4ODg1NTlcclxuICAgICAgICAgKiBRdWVyaWVzOiByZXBsYWNlcyBcIj9cIiBpbiBzdHJpbmcgd2l0aCBlc2NhcGVkIFwiXFw/XCIgZm9yIHJlZ2V4IHRlc3RcclxuICAgICAgICAgKi9cclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2VjdXJpdHkvZGV0ZWN0LW5vbi1saXRlcmFsLXJlZ2V4cFxyXG4gICAgICAgIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChwYXR0ZXJuXHJcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcL2csIFwiXFxcXFxcXFxcIilcclxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcKi9nLCBcIlteIF0qXCIpXHJcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXD8vZywgXCJcXFxcP1wiKSk7XHJcbiAgICAgICAgcmV0dXJuIHJlZ2V4LnRlc3QoaW5wdXQpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFN0cmluZ1V0aWxzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdHJpbmdVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   delay: function() { return /* binding */ delay; },\n/* harmony export */   isTokenExpired: function() { return /* binding */ isTokenExpired; },\n/* harmony export */   nowSeconds: function() { return /* binding */ nowSeconds; },\n/* harmony export */   wasClockTurnedBack: function() { return /* binding */ wasClockTurnedBack; }\n/* harmony export */ });\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility functions for managing date and time operations.\r\n */\r\n/**\r\n * return the current time in Unix time (seconds).\r\n */\r\nfunction nowSeconds() {\r\n    // Date.getTime() returns in milliseconds.\r\n    return Math.round(new Date().getTime() / 1000.0);\r\n}\r\n/**\r\n * check if a token is expired based on given UTC time in seconds.\r\n * @param expiresOn\r\n */\r\nfunction isTokenExpired(expiresOn, offset) {\r\n    // check for access token expiry\r\n    const expirationSec = Number(expiresOn) || 0;\r\n    const offsetCurrentTimeSec = nowSeconds() + offset;\r\n    // If current time + offset is greater than token expiration time, then token is expired.\r\n    return offsetCurrentTimeSec > expirationSec;\r\n}\r\n/**\r\n * If the current time is earlier than the time that a token was cached at, we must discard the token\r\n * i.e. The system clock was turned back after acquiring the cached token\r\n * @param cachedAt\r\n * @param offset\r\n */\r\nfunction wasClockTurnedBack(cachedAt) {\r\n    const cachedAtSec = Number(cachedAt);\r\n    return cachedAtSec > nowSeconds();\r\n}\r\n/**\r\n * Waits for t number of milliseconds\r\n * @param t number\r\n * @param value T\r\n */\r\nfunction delay(t, value) {\r\n    return new Promise((resolve) => setTimeout(() => resolve(value), t));\r\n}\n\n\n//# sourceMappingURL=TimeUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVGltZVV0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVpRTtBQUNqRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVGltZVV0aWxzLm1qcz9jZmNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE2LjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBVdGlsaXR5IGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZGF0ZSBhbmQgdGltZSBvcGVyYXRpb25zLlxyXG4gKi9cclxuLyoqXHJcbiAqIHJldHVybiB0aGUgY3VycmVudCB0aW1lIGluIFVuaXggdGltZSAoc2Vjb25kcykuXHJcbiAqL1xyXG5mdW5jdGlvbiBub3dTZWNvbmRzKCkge1xyXG4gICAgLy8gRGF0ZS5nZXRUaW1lKCkgcmV0dXJucyBpbiBtaWxsaXNlY29uZHMuXHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZChuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDAuMCk7XHJcbn1cclxuLyoqXHJcbiAqIGNoZWNrIGlmIGEgdG9rZW4gaXMgZXhwaXJlZCBiYXNlZCBvbiBnaXZlbiBVVEMgdGltZSBpbiBzZWNvbmRzLlxyXG4gKiBAcGFyYW0gZXhwaXJlc09uXHJcbiAqL1xyXG5mdW5jdGlvbiBpc1Rva2VuRXhwaXJlZChleHBpcmVzT24sIG9mZnNldCkge1xyXG4gICAgLy8gY2hlY2sgZm9yIGFjY2VzcyB0b2tlbiBleHBpcnlcclxuICAgIGNvbnN0IGV4cGlyYXRpb25TZWMgPSBOdW1iZXIoZXhwaXJlc09uKSB8fCAwO1xyXG4gICAgY29uc3Qgb2Zmc2V0Q3VycmVudFRpbWVTZWMgPSBub3dTZWNvbmRzKCkgKyBvZmZzZXQ7XHJcbiAgICAvLyBJZiBjdXJyZW50IHRpbWUgKyBvZmZzZXQgaXMgZ3JlYXRlciB0aGFuIHRva2VuIGV4cGlyYXRpb24gdGltZSwgdGhlbiB0b2tlbiBpcyBleHBpcmVkLlxyXG4gICAgcmV0dXJuIG9mZnNldEN1cnJlbnRUaW1lU2VjID4gZXhwaXJhdGlvblNlYztcclxufVxyXG4vKipcclxuICogSWYgdGhlIGN1cnJlbnQgdGltZSBpcyBlYXJsaWVyIHRoYW4gdGhlIHRpbWUgdGhhdCBhIHRva2VuIHdhcyBjYWNoZWQgYXQsIHdlIG11c3QgZGlzY2FyZCB0aGUgdG9rZW5cclxuICogaS5lLiBUaGUgc3lzdGVtIGNsb2NrIHdhcyB0dXJuZWQgYmFjayBhZnRlciBhY3F1aXJpbmcgdGhlIGNhY2hlZCB0b2tlblxyXG4gKiBAcGFyYW0gY2FjaGVkQXRcclxuICogQHBhcmFtIG9mZnNldFxyXG4gKi9cclxuZnVuY3Rpb24gd2FzQ2xvY2tUdXJuZWRCYWNrKGNhY2hlZEF0KSB7XHJcbiAgICBjb25zdCBjYWNoZWRBdFNlYyA9IE51bWJlcihjYWNoZWRBdCk7XHJcbiAgICByZXR1cm4gY2FjaGVkQXRTZWMgPiBub3dTZWNvbmRzKCk7XHJcbn1cclxuLyoqXHJcbiAqIFdhaXRzIGZvciB0IG51bWJlciBvZiBtaWxsaXNlY29uZHNcclxuICogQHBhcmFtIHQgbnVtYmVyXHJcbiAqIEBwYXJhbSB2YWx1ZSBUXHJcbiAqL1xyXG5mdW5jdGlvbiBkZWxheSh0LCB2YWx1ZSkge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KCgpID0+IHJlc29sdmUodmFsdWUpLCB0KSk7XHJcbn1cblxuZXhwb3J0IHsgZGVsYXksIGlzVG9rZW5FeHBpcmVkLCBub3dTZWNvbmRzLCB3YXNDbG9ja1R1cm5lZEJhY2sgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRpbWVVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDeserializedResponse: function() { return /* binding */ getDeserializedResponse; },\n/* harmony export */   stripLeadingHashOrQuery: function() { return /* binding */ stripLeadingHashOrQuery; }\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.16.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\r\n * @param hashString\r\n */\r\nfunction stripLeadingHashOrQuery(responseString) {\r\n    if (responseString.startsWith(\"#/\")) {\r\n        return responseString.substring(2);\r\n    }\r\n    else if (responseString.startsWith(\"#\") ||\r\n        responseString.startsWith(\"?\")) {\r\n        return responseString.substring(1);\r\n    }\r\n    return responseString;\r\n}\r\n/**\r\n * Returns URL hash as server auth code response object.\r\n */\r\nfunction getDeserializedResponse(responseString) {\r\n    // Check if given hash is empty\r\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\r\n        return null;\r\n    }\r\n    try {\r\n        // Strip the # or ? symbol if present\r\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\r\n        // If # symbol was not present, above will return empty string, so give original hash value\r\n        const deserializedHash = Object.fromEntries(new URLSearchParams(normalizedResponse));\r\n        // Check for known response properties\r\n        if (deserializedHash.code ||\r\n            deserializedHash.error ||\r\n            deserializedHash.error_description ||\r\n            deserializedHash.state) {\r\n            return deserializedHash;\r\n        }\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.hashNotDeserialized);\r\n    }\r\n    return null;\r\n}\n\n\n//# sourceMappingURL=UrlUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVXJsVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQ3dEO0FBQ0c7O0FBRXhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxnRkFBbUI7QUFDdkQ7QUFDQTtBQUNBOztBQUU0RDtBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVXJsVXRpbHMubWpzPzc1MjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTYuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IGhhc2hOb3REZXNlcmlhbGl6ZWQgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFBhcnNlcyBoYXNoIHN0cmluZyBmcm9tIGdpdmVuIHN0cmluZy4gUmV0dXJucyBlbXB0eSBzdHJpbmcgaWYgbm8gaGFzaCBzeW1ib2wgaXMgZm91bmQuXHJcbiAqIEBwYXJhbSBoYXNoU3RyaW5nXHJcbiAqL1xyXG5mdW5jdGlvbiBzdHJpcExlYWRpbmdIYXNoT3JRdWVyeShyZXNwb25zZVN0cmluZykge1xyXG4gICAgaWYgKHJlc3BvbnNlU3RyaW5nLnN0YXJ0c1dpdGgoXCIjL1wiKSkge1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZVN0cmluZy5zdWJzdHJpbmcoMik7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChyZXNwb25zZVN0cmluZy5zdGFydHNXaXRoKFwiI1wiKSB8fFxyXG4gICAgICAgIHJlc3BvbnNlU3RyaW5nLnN0YXJ0c1dpdGgoXCI/XCIpKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlU3RyaW5nLnN1YnN0cmluZygxKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXNwb25zZVN0cmluZztcclxufVxyXG4vKipcclxuICogUmV0dXJucyBVUkwgaGFzaCBhcyBzZXJ2ZXIgYXV0aCBjb2RlIHJlc3BvbnNlIG9iamVjdC5cclxuICovXHJcbmZ1bmN0aW9uIGdldERlc2VyaWFsaXplZFJlc3BvbnNlKHJlc3BvbnNlU3RyaW5nKSB7XHJcbiAgICAvLyBDaGVjayBpZiBnaXZlbiBoYXNoIGlzIGVtcHR5XHJcbiAgICBpZiAoIXJlc3BvbnNlU3RyaW5nIHx8IHJlc3BvbnNlU3RyaW5nLmluZGV4T2YoXCI9XCIpIDwgMCkge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgICAvLyBTdHJpcCB0aGUgIyBvciA/IHN5bWJvbCBpZiBwcmVzZW50XHJcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplZFJlc3BvbnNlID0gc3RyaXBMZWFkaW5nSGFzaE9yUXVlcnkocmVzcG9uc2VTdHJpbmcpO1xyXG4gICAgICAgIC8vIElmICMgc3ltYm9sIHdhcyBub3QgcHJlc2VudCwgYWJvdmUgd2lsbCByZXR1cm4gZW1wdHkgc3RyaW5nLCBzbyBnaXZlIG9yaWdpbmFsIGhhc2ggdmFsdWVcclxuICAgICAgICBjb25zdCBkZXNlcmlhbGl6ZWRIYXNoID0gT2JqZWN0LmZyb21FbnRyaWVzKG5ldyBVUkxTZWFyY2hQYXJhbXMobm9ybWFsaXplZFJlc3BvbnNlKSk7XHJcbiAgICAgICAgLy8gQ2hlY2sgZm9yIGtub3duIHJlc3BvbnNlIHByb3BlcnRpZXNcclxuICAgICAgICBpZiAoZGVzZXJpYWxpemVkSGFzaC5jb2RlIHx8XHJcbiAgICAgICAgICAgIGRlc2VyaWFsaXplZEhhc2guZXJyb3IgfHxcclxuICAgICAgICAgICAgZGVzZXJpYWxpemVkSGFzaC5lcnJvcl9kZXNjcmlwdGlvbiB8fFxyXG4gICAgICAgICAgICBkZXNlcmlhbGl6ZWRIYXNoLnN0YXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBkZXNlcmlhbGl6ZWRIYXNoO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKGhhc2hOb3REZXNlcmlhbGl6ZWQpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn1cblxuZXhwb3J0IHsgZ2V0RGVzZXJpYWxpemVkUmVzcG9uc2UsIHN0cmlwTGVhZGluZ0hhc2hPclF1ZXJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1VcmxVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/MsalContext.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/MsalContext.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MsalConsumer: function() { return /* binding */ MsalConsumer; },\n/* harmony export */   MsalContext: function() { return /* binding */ MsalContext; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/*\r\n * Stubbed context implementation\r\n * Only used when there is no provider, which is an unsupported scenario\r\n */\r\nconst defaultMsalContext = {\r\n    instance: _azure_msal_browser__WEBPACK_IMPORTED_MODULE_1__.stubbedPublicClientApplication,\r\n    inProgress: _azure_msal_browser__WEBPACK_IMPORTED_MODULE_1__.InteractionStatus.None,\r\n    accounts: [],\r\n    logger: new _azure_msal_browser__WEBPACK_IMPORTED_MODULE_1__.Logger({}),\r\n};\r\nconst MsalContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultMsalContext);\r\nconst MsalConsumer = MsalContext.Consumer;\n\n\n//# sourceMappingURL=MsalContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9Nc2FsQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUNrQjtBQUNpRTs7QUFFaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywrRUFBOEI7QUFDNUMsZ0JBQWdCLGtFQUFpQjtBQUNqQztBQUNBLGdCQUFnQix1REFBTSxHQUFHO0FBQ3pCO0FBQ0Esb0JBQW9CLGdEQUFtQjtBQUN2Qzs7QUFFcUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLXJlYWN0L2Rpc3QvTXNhbENvbnRleHQuanM/ZjM4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbiwgSW50ZXJhY3Rpb25TdGF0dXMsIExvZ2dlciB9IGZyb20gJ0BhenVyZS9tc2FsLWJyb3dzZXInO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLypcclxuICogU3R1YmJlZCBjb250ZXh0IGltcGxlbWVudGF0aW9uXHJcbiAqIE9ubHkgdXNlZCB3aGVuIHRoZXJlIGlzIG5vIHByb3ZpZGVyLCB3aGljaCBpcyBhbiB1bnN1cHBvcnRlZCBzY2VuYXJpb1xyXG4gKi9cclxuY29uc3QgZGVmYXVsdE1zYWxDb250ZXh0ID0ge1xyXG4gICAgaW5zdGFuY2U6IHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbixcclxuICAgIGluUHJvZ3Jlc3M6IEludGVyYWN0aW9uU3RhdHVzLk5vbmUsXHJcbiAgICBhY2NvdW50czogW10sXHJcbiAgICBsb2dnZXI6IG5ldyBMb2dnZXIoe30pLFxyXG59O1xyXG5jb25zdCBNc2FsQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZGVmYXVsdE1zYWxDb250ZXh0KTtcclxuY29uc3QgTXNhbENvbnN1bWVyID0gTXNhbENvbnRleHQuQ29uc3VtZXI7XG5cbmV4cG9ydCB7IE1zYWxDb25zdW1lciwgTXNhbENvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1zYWxDb250ZXh0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/MsalContext.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/MsalProvider.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/MsalProvider.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MsalProvider: function() { return /* binding */ MsalProvider; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var _MsalContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MsalContext.js */ \"./node_modules/@azure/msal-react/dist/MsalContext.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/* harmony import */ var _packageMetadata_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./packageMetadata.js */ \"./node_modules/@azure/msal-react/dist/packageMetadata.js\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst MsalProviderActionType = {\r\n    UNBLOCK_INPROGRESS: \"UNBLOCK_INPROGRESS\",\r\n    EVENT: \"EVENT\",\r\n};\r\n/**\r\n * Returns the next inProgress and accounts state based on event message\r\n * @param previousState\r\n * @param action\r\n */\r\nconst reducer = (previousState, action) => {\r\n    const { type, payload } = action;\r\n    let newInProgress = previousState.inProgress;\r\n    switch (type) {\r\n        case MsalProviderActionType.UNBLOCK_INPROGRESS:\r\n            if (previousState.inProgress === _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.Startup) {\r\n                newInProgress = _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.None;\r\n                payload.logger.info(\"MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'\");\r\n            }\r\n            break;\r\n        case MsalProviderActionType.EVENT:\r\n            const message = payload.message;\r\n            const status = _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.EventMessageUtils.getInteractionStatusFromEvent(message, previousState.inProgress);\r\n            if (status) {\r\n                payload.logger.info(`MsalProvider - ${message.eventType} results in setting inProgress from ${previousState.inProgress} to ${status}`);\r\n                newInProgress = status;\r\n            }\r\n            break;\r\n        default:\r\n            throw new Error(`Unknown action type: ${type}`);\r\n    }\r\n    const currentAccounts = payload.instance.getAllAccounts();\r\n    if (newInProgress !== previousState.inProgress &&\r\n        !(0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__.accountArraysAreEqual)(currentAccounts, previousState.accounts)) {\r\n        // Both inProgress and accounts changed\r\n        return {\r\n            ...previousState,\r\n            inProgress: newInProgress,\r\n            accounts: currentAccounts,\r\n        };\r\n    }\r\n    else if (newInProgress !== previousState.inProgress) {\r\n        // Only only inProgress changed\r\n        return {\r\n            ...previousState,\r\n            inProgress: newInProgress,\r\n        };\r\n    }\r\n    else if (!(0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__.accountArraysAreEqual)(currentAccounts, previousState.accounts)) {\r\n        // Only accounts changed\r\n        return {\r\n            ...previousState,\r\n            accounts: currentAccounts,\r\n        };\r\n    }\r\n    else {\r\n        // Nothing changed\r\n        return previousState;\r\n    }\r\n};\r\n/**\r\n * MSAL context provider component. This must be rendered above any other components that use MSAL.\r\n */\r\nfunction MsalProvider({ instance, children, }) {\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\r\n        instance.initializeWrapperLibrary(_azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.WrapperSKU.React, _packageMetadata_js__WEBPACK_IMPORTED_MODULE_3__.version);\r\n    }, [instance]);\r\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\r\n    const logger = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\r\n        return instance.getLogger().clone(_packageMetadata_js__WEBPACK_IMPORTED_MODULE_3__.name, _packageMetadata_js__WEBPACK_IMPORTED_MODULE_3__.version);\r\n    }, [instance]);\r\n    const [state, updateState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, undefined, () => {\r\n        // Lazy initialization of the initial state\r\n        return {\r\n            inProgress: _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.Startup,\r\n            accounts: instance.getAllAccounts(),\r\n        };\r\n    });\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\r\n        const callbackId = instance.addEventCallback((message) => {\r\n            updateState({\r\n                payload: {\r\n                    instance,\r\n                    logger,\r\n                    message,\r\n                },\r\n                type: MsalProviderActionType.EVENT,\r\n            });\r\n        });\r\n        logger.verbose(`MsalProvider - Registered event callback with id: ${callbackId}`);\r\n        instance\r\n            .initialize()\r\n            .then(() => {\r\n            instance\r\n                .handleRedirectPromise()\r\n                .catch(() => {\r\n                // Errors should be handled by listening to the LOGIN_FAILURE event\r\n                return;\r\n            })\r\n                .finally(() => {\r\n                /*\r\n                 * If handleRedirectPromise returns a cached promise the necessary events may not be fired\r\n                 * This is a fallback to prevent inProgress from getting stuck in 'startup'\r\n                 */\r\n                updateState({\r\n                    payload: {\r\n                        instance,\r\n                        logger,\r\n                    },\r\n                    type: MsalProviderActionType.UNBLOCK_INPROGRESS,\r\n                });\r\n            });\r\n        })\r\n            .catch(() => {\r\n            // Errors should be handled by listening to the LOGIN_FAILURE event\r\n            return;\r\n        });\r\n        return () => {\r\n            // Remove callback when component unmounts or accounts change\r\n            if (callbackId) {\r\n                logger.verbose(`MsalProvider - Removing event callback ${callbackId}`);\r\n                instance.removeEventCallback(callbackId);\r\n            }\r\n        };\r\n    }, [instance, logger]);\r\n    const contextValue = {\r\n        instance,\r\n        inProgress: state.inProgress,\r\n        accounts: state.accounts,\r\n        logger,\r\n    };\r\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MsalContext_js__WEBPACK_IMPORTED_MODULE_1__.MsalContext.Provider, { value: contextValue }, children));\r\n}\n\n\n//# sourceMappingURL=MsalProvider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/MsalProvider.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/components/AuthenticatedTemplate.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/components/AuthenticatedTemplate.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticatedTemplate: function() { return /* binding */ AuthenticatedTemplate; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks/useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Renders child components if user is authenticated\r\n * @param props\r\n */\r\nfunction AuthenticatedTemplate({ username, homeAccountId, localAccountId, children, }) {\r\n    const context = (0,_hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_2__.useMsal)();\r\n    const accountIdentifier = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\r\n        return {\r\n            username,\r\n            homeAccountId,\r\n            localAccountId,\r\n        };\r\n    }, [username, homeAccountId, localAccountId]);\r\n    const isAuthenticated = (0,_hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_3__.useIsAuthenticated)(accountIdentifier);\r\n    if (isAuthenticated && context.inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.Startup) {\r\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_1__.getChildrenOrFunction)(children, context)));\r\n    }\r\n    return null;\r\n}\n\n\n//# sourceMappingURL=AuthenticatedTemplate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL0F1dGhlbnRpY2F0ZWRUZW1wbGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ21DO0FBQ2M7QUFDaEI7QUFDc0I7QUFDWjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxvREFBb0Q7QUFDckYsb0JBQW9CLDBEQUFPO0FBQzNCLDhCQUE4Qiw4Q0FBTztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDRCQUE0QixnRkFBa0I7QUFDOUMsa0RBQWtELGtFQUFpQjtBQUNuRSxnQkFBZ0IsZ0RBQTRCLENBQUMsMkNBQXVCLFFBQVEsMEVBQXFCO0FBQ2pHO0FBQ0E7QUFDQTs7QUFFaUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLXJlYWN0L2Rpc3QvY29tcG9uZW50cy9BdXRoZW50aWNhdGVkVGVtcGxhdGUuanM/NjE2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCBSZWFjdF9fZGVmYXVsdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0Q2hpbGRyZW5PckZ1bmN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvdXRpbGl0aWVzLmpzJztcbmltcG9ydCB7IHVzZU1zYWwgfSBmcm9tICcuLi9ob29rcy91c2VNc2FsLmpzJztcbmltcG9ydCB7IHVzZUlzQXV0aGVudGljYXRlZCB9IGZyb20gJy4uL2hvb2tzL3VzZUlzQXV0aGVudGljYXRlZC5qcyc7XG5pbXBvcnQgeyBJbnRlcmFjdGlvblN0YXR1cyB9IGZyb20gJ0BhenVyZS9tc2FsLWJyb3dzZXInO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFJlbmRlcnMgY2hpbGQgY29tcG9uZW50cyBpZiB1c2VyIGlzIGF1dGhlbnRpY2F0ZWRcclxuICogQHBhcmFtIHByb3BzXHJcbiAqL1xyXG5mdW5jdGlvbiBBdXRoZW50aWNhdGVkVGVtcGxhdGUoeyB1c2VybmFtZSwgaG9tZUFjY291bnRJZCwgbG9jYWxBY2NvdW50SWQsIGNoaWxkcmVuLCB9KSB7XHJcbiAgICBjb25zdCBjb250ZXh0ID0gdXNlTXNhbCgpO1xyXG4gICAgY29uc3QgYWNjb3VudElkZW50aWZpZXIgPSB1c2VNZW1vKCgpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB1c2VybmFtZSxcclxuICAgICAgICAgICAgaG9tZUFjY291bnRJZCxcclxuICAgICAgICAgICAgbG9jYWxBY2NvdW50SWQsXHJcbiAgICAgICAgfTtcclxuICAgIH0sIFt1c2VybmFtZSwgaG9tZUFjY291bnRJZCwgbG9jYWxBY2NvdW50SWRdKTtcclxuICAgIGNvbnN0IGlzQXV0aGVudGljYXRlZCA9IHVzZUlzQXV0aGVudGljYXRlZChhY2NvdW50SWRlbnRpZmllcik7XHJcbiAgICBpZiAoaXNBdXRoZW50aWNhdGVkICYmIGNvbnRleHQuaW5Qcm9ncmVzcyAhPT0gSW50ZXJhY3Rpb25TdGF0dXMuU3RhcnR1cCkge1xyXG4gICAgICAgIHJldHVybiAoUmVhY3RfX2RlZmF1bHQuY3JlYXRlRWxlbWVudChSZWFjdF9fZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgZ2V0Q2hpbGRyZW5PckZ1bmN0aW9uKGNoaWxkcmVuLCBjb250ZXh0KSkpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn1cblxuZXhwb3J0IHsgQXV0aGVudGljYXRlZFRlbXBsYXRlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoZW50aWNhdGVkVGVtcGxhdGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/components/AuthenticatedTemplate.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/components/MsalAuthenticationTemplate.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/components/MsalAuthenticationTemplate.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MsalAuthenticationTemplate: function() { return /* binding */ MsalAuthenticationTemplate; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _hooks_useMsalAuthentication_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks/useMsalAuthentication.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js\");\n/* harmony import */ var _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hooks/useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Attempts to authenticate user if not already authenticated, then renders child components\r\n * @param props\r\n */\r\nfunction MsalAuthenticationTemplate({ interactionType, username, homeAccountId, localAccountId, authenticationRequest, loadingComponent: LoadingComponent, errorComponent: ErrorComponent, children, }) {\r\n    const accountIdentifier = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\r\n        return {\r\n            username,\r\n            homeAccountId,\r\n            localAccountId,\r\n        };\r\n    }, [username, homeAccountId, localAccountId]);\r\n    const context = (0,_hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_2__.useMsal)();\r\n    const msalAuthResult = (0,_hooks_useMsalAuthentication_js__WEBPACK_IMPORTED_MODULE_3__.useMsalAuthentication)(interactionType, authenticationRequest, accountIdentifier);\r\n    const isAuthenticated = (0,_hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_4__.useIsAuthenticated)(accountIdentifier);\r\n    if (msalAuthResult.error && context.inProgress === _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None) {\r\n        if (!!ErrorComponent) {\r\n            return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorComponent, { ...msalAuthResult });\r\n        }\r\n        throw msalAuthResult.error;\r\n    }\r\n    if (isAuthenticated) {\r\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_1__.getChildrenOrFunction)(children, msalAuthResult)));\r\n    }\r\n    if (!!LoadingComponent && context.inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None) {\r\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingComponent, { ...context });\r\n    }\r\n    return null;\r\n}\n\n\n//# sourceMappingURL=MsalAuthenticationTemplate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL01zYWxBdXRoZW50aWNhdGlvblRlbXBsYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ21DO0FBQ2M7QUFDaEI7QUFDNEI7QUFDTjtBQUNaOztBQUV4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdLQUFnSztBQUN0TSw4QkFBOEIsOENBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxvQkFBb0IsMERBQU87QUFDM0IsMkJBQTJCLHNGQUFxQjtBQUNoRCw0QkFBNEIsZ0ZBQWtCO0FBQzlDLHVEQUF1RCxrRUFBaUI7QUFDeEU7QUFDQSxtQkFBbUIsZ0RBQTRCLG1CQUFtQixtQkFBbUI7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0RBQTRCLENBQUMsMkNBQXVCLFFBQVEsMEVBQXFCO0FBQ2pHO0FBQ0EscURBQXFELGtFQUFpQjtBQUN0RSxlQUFlLGdEQUE0QixxQkFBcUIsWUFBWTtBQUM1RTtBQUNBO0FBQ0E7O0FBRXNDO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1yZWFjdC9kaXN0L2NvbXBvbmVudHMvTXNhbEF1dGhlbnRpY2F0aW9uVGVtcGxhdGUuanM/ZTEyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCBSZWFjdF9fZGVmYXVsdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0Q2hpbGRyZW5PckZ1bmN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvdXRpbGl0aWVzLmpzJztcbmltcG9ydCB7IHVzZU1zYWwgfSBmcm9tICcuLi9ob29rcy91c2VNc2FsLmpzJztcbmltcG9ydCB7IHVzZU1zYWxBdXRoZW50aWNhdGlvbiB9IGZyb20gJy4uL2hvb2tzL3VzZU1zYWxBdXRoZW50aWNhdGlvbi5qcyc7XG5pbXBvcnQgeyB1c2VJc0F1dGhlbnRpY2F0ZWQgfSBmcm9tICcuLi9ob29rcy91c2VJc0F1dGhlbnRpY2F0ZWQuanMnO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25TdGF0dXMgfSBmcm9tICdAYXp1cmUvbXNhbC1icm93c2VyJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBBdHRlbXB0cyB0byBhdXRoZW50aWNhdGUgdXNlciBpZiBub3QgYWxyZWFkeSBhdXRoZW50aWNhdGVkLCB0aGVuIHJlbmRlcnMgY2hpbGQgY29tcG9uZW50c1xyXG4gKiBAcGFyYW0gcHJvcHNcclxuICovXHJcbmZ1bmN0aW9uIE1zYWxBdXRoZW50aWNhdGlvblRlbXBsYXRlKHsgaW50ZXJhY3Rpb25UeXBlLCB1c2VybmFtZSwgaG9tZUFjY291bnRJZCwgbG9jYWxBY2NvdW50SWQsIGF1dGhlbnRpY2F0aW9uUmVxdWVzdCwgbG9hZGluZ0NvbXBvbmVudDogTG9hZGluZ0NvbXBvbmVudCwgZXJyb3JDb21wb25lbnQ6IEVycm9yQ29tcG9uZW50LCBjaGlsZHJlbiwgfSkge1xyXG4gICAgY29uc3QgYWNjb3VudElkZW50aWZpZXIgPSB1c2VNZW1vKCgpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB1c2VybmFtZSxcclxuICAgICAgICAgICAgaG9tZUFjY291bnRJZCxcclxuICAgICAgICAgICAgbG9jYWxBY2NvdW50SWQsXHJcbiAgICAgICAgfTtcclxuICAgIH0sIFt1c2VybmFtZSwgaG9tZUFjY291bnRJZCwgbG9jYWxBY2NvdW50SWRdKTtcclxuICAgIGNvbnN0IGNvbnRleHQgPSB1c2VNc2FsKCk7XHJcbiAgICBjb25zdCBtc2FsQXV0aFJlc3VsdCA9IHVzZU1zYWxBdXRoZW50aWNhdGlvbihpbnRlcmFjdGlvblR5cGUsIGF1dGhlbnRpY2F0aW9uUmVxdWVzdCwgYWNjb3VudElkZW50aWZpZXIpO1xyXG4gICAgY29uc3QgaXNBdXRoZW50aWNhdGVkID0gdXNlSXNBdXRoZW50aWNhdGVkKGFjY291bnRJZGVudGlmaWVyKTtcclxuICAgIGlmIChtc2FsQXV0aFJlc3VsdC5lcnJvciAmJiBjb250ZXh0LmluUHJvZ3Jlc3MgPT09IEludGVyYWN0aW9uU3RhdHVzLk5vbmUpIHtcclxuICAgICAgICBpZiAoISFFcnJvckNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICByZXR1cm4gUmVhY3RfX2RlZmF1bHQuY3JlYXRlRWxlbWVudChFcnJvckNvbXBvbmVudCwgeyAuLi5tc2FsQXV0aFJlc3VsdCB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhyb3cgbXNhbEF1dGhSZXN1bHQuZXJyb3I7XHJcbiAgICB9XHJcbiAgICBpZiAoaXNBdXRoZW50aWNhdGVkKSB7XHJcbiAgICAgICAgcmV0dXJuIChSZWFjdF9fZGVmYXVsdC5jcmVhdGVFbGVtZW50KFJlYWN0X19kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBnZXRDaGlsZHJlbk9yRnVuY3Rpb24oY2hpbGRyZW4sIG1zYWxBdXRoUmVzdWx0KSkpO1xyXG4gICAgfVxyXG4gICAgaWYgKCEhTG9hZGluZ0NvbXBvbmVudCAmJiBjb250ZXh0LmluUHJvZ3Jlc3MgIT09IEludGVyYWN0aW9uU3RhdHVzLk5vbmUpIHtcclxuICAgICAgICByZXR1cm4gUmVhY3RfX2RlZmF1bHQuY3JlYXRlRWxlbWVudChMb2FkaW5nQ29tcG9uZW50LCB7IC4uLmNvbnRleHQgfSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxufVxuXG5leHBvcnQgeyBNc2FsQXV0aGVudGljYXRpb25UZW1wbGF0ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXNhbEF1dGhlbnRpY2F0aW9uVGVtcGxhdGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/components/MsalAuthenticationTemplate.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/components/UnauthenticatedTemplate.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/components/UnauthenticatedTemplate.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnauthenticatedTemplate: function() { return /* binding */ UnauthenticatedTemplate; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Renders child components if user is unauthenticated\r\n * @param props\r\n */\r\nfunction UnauthenticatedTemplate({ username, homeAccountId, localAccountId, children, }) {\r\n    const context = (0,_hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_1__.useMsal)();\r\n    const accountIdentifier = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\r\n        return {\r\n            username,\r\n            homeAccountId,\r\n            localAccountId,\r\n        };\r\n    }, [username, homeAccountId, localAccountId]);\r\n    const isAuthenticated = (0,_hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_2__.useIsAuthenticated)(accountIdentifier);\r\n    if (!isAuthenticated &&\r\n        context.inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.Startup &&\r\n        context.inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_4__.InteractionStatus.HandleRedirect) {\r\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_3__.getChildrenOrFunction)(children, context)));\r\n    }\r\n    return null;\r\n}\n\n\n//# sourceMappingURL=UnauthenticatedTemplate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL1VuYXV0aGVudGljYXRlZFRlbXBsYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDbUM7QUFDRjtBQUNzQjtBQUNOO0FBQ047O0FBRXhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0RBQW9EO0FBQ3ZGLG9CQUFvQiwwREFBTztBQUMzQiw4QkFBOEIsOENBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCw0QkFBNEIsZ0ZBQWtCO0FBQzlDO0FBQ0EsK0JBQStCLGtFQUFpQjtBQUNoRCwrQkFBK0Isa0VBQWlCO0FBQ2hELGdCQUFnQixnREFBNEIsQ0FBQywyQ0FBdUIsUUFBUSwwRUFBcUI7QUFDakc7QUFDQTtBQUNBOztBQUVtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL1VuYXV0aGVudGljYXRlZFRlbXBsYXRlLmpzPzkwYzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLXJlYWN0IHYyLjIuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgUmVhY3RfX2RlZmF1bHQsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZU1zYWwgfSBmcm9tICcuLi9ob29rcy91c2VNc2FsLmpzJztcbmltcG9ydCB7IHVzZUlzQXV0aGVudGljYXRlZCB9IGZyb20gJy4uL2hvb2tzL3VzZUlzQXV0aGVudGljYXRlZC5qcyc7XG5pbXBvcnQgeyBnZXRDaGlsZHJlbk9yRnVuY3Rpb24gfSBmcm9tICcuLi91dGlscy91dGlsaXRpZXMuanMnO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25TdGF0dXMgfSBmcm9tICdAYXp1cmUvbXNhbC1icm93c2VyJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBSZW5kZXJzIGNoaWxkIGNvbXBvbmVudHMgaWYgdXNlciBpcyB1bmF1dGhlbnRpY2F0ZWRcclxuICogQHBhcmFtIHByb3BzXHJcbiAqL1xyXG5mdW5jdGlvbiBVbmF1dGhlbnRpY2F0ZWRUZW1wbGF0ZSh7IHVzZXJuYW1lLCBob21lQWNjb3VudElkLCBsb2NhbEFjY291bnRJZCwgY2hpbGRyZW4sIH0pIHtcclxuICAgIGNvbnN0IGNvbnRleHQgPSB1c2VNc2FsKCk7XHJcbiAgICBjb25zdCBhY2NvdW50SWRlbnRpZmllciA9IHVzZU1lbW8oKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHVzZXJuYW1lLFxyXG4gICAgICAgICAgICBob21lQWNjb3VudElkLFxyXG4gICAgICAgICAgICBsb2NhbEFjY291bnRJZCxcclxuICAgICAgICB9O1xyXG4gICAgfSwgW3VzZXJuYW1lLCBob21lQWNjb3VudElkLCBsb2NhbEFjY291bnRJZF0pO1xyXG4gICAgY29uc3QgaXNBdXRoZW50aWNhdGVkID0gdXNlSXNBdXRoZW50aWNhdGVkKGFjY291bnRJZGVudGlmaWVyKTtcclxuICAgIGlmICghaXNBdXRoZW50aWNhdGVkICYmXHJcbiAgICAgICAgY29udGV4dC5pblByb2dyZXNzICE9PSBJbnRlcmFjdGlvblN0YXR1cy5TdGFydHVwICYmXHJcbiAgICAgICAgY29udGV4dC5pblByb2dyZXNzICE9PSBJbnRlcmFjdGlvblN0YXR1cy5IYW5kbGVSZWRpcmVjdCkge1xyXG4gICAgICAgIHJldHVybiAoUmVhY3RfX2RlZmF1bHQuY3JlYXRlRWxlbWVudChSZWFjdF9fZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgZ2V0Q2hpbGRyZW5PckZ1bmN0aW9uKGNoaWxkcmVuLCBjb250ZXh0KSkpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn1cblxuZXhwb3J0IHsgVW5hdXRoZW50aWNhdGVkVGVtcGxhdGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVuYXV0aGVudGljYXRlZFRlbXBsYXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/components/UnauthenticatedTemplate.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/components/withMsal.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/components/withMsal.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withMsal: function() { return /* binding */ withMsal; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Higher order component wraps provided component with msal by injecting msal context values into the component's props\r\n * @param Component\r\n */\r\nconst withMsal = (Component) => {\r\n    const ComponentWithMsal = (props) => {\r\n        const msal = (0,_hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_1__.useMsal)();\r\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, { ...props, msalContext: msal });\r\n    };\r\n    const componentName = Component.displayName || Component.name || \"Component\";\r\n    ComponentWithMsal.displayName = `withMsal(${componentName})`;\r\n    return ComponentWithMsal;\r\n};\n\n\n//# sourceMappingURL=withMsal.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9jb21wb25lbnRzL3dpdGhNc2FsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDc0I7QUFDVzs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMERBQU87QUFDNUIsZUFBZSxnREFBNEIsY0FBYyw2QkFBNkI7QUFDdEY7QUFDQTtBQUNBLGdEQUFnRCxjQUFjO0FBQzlEO0FBQ0E7O0FBRW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1yZWFjdC9kaXN0L2NvbXBvbmVudHMvd2l0aE1zYWwuanM/OGUyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCBSZWFjdF9fZGVmYXVsdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VNc2FsIH0gZnJvbSAnLi4vaG9va3MvdXNlTXNhbC5qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogSGlnaGVyIG9yZGVyIGNvbXBvbmVudCB3cmFwcyBwcm92aWRlZCBjb21wb25lbnQgd2l0aCBtc2FsIGJ5IGluamVjdGluZyBtc2FsIGNvbnRleHQgdmFsdWVzIGludG8gdGhlIGNvbXBvbmVudCdzIHByb3BzXHJcbiAqIEBwYXJhbSBDb21wb25lbnRcclxuICovXHJcbmNvbnN0IHdpdGhNc2FsID0gKENvbXBvbmVudCkgPT4ge1xyXG4gICAgY29uc3QgQ29tcG9uZW50V2l0aE1zYWwgPSAocHJvcHMpID0+IHtcclxuICAgICAgICBjb25zdCBtc2FsID0gdXNlTXNhbCgpO1xyXG4gICAgICAgIHJldHVybiBSZWFjdF9fZGVmYXVsdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgeyAuLi5wcm9wcywgbXNhbENvbnRleHQ6IG1zYWwgfSk7XHJcbiAgICB9O1xyXG4gICAgY29uc3QgY29tcG9uZW50TmFtZSA9IENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSB8fCBcIkNvbXBvbmVudFwiO1xyXG4gICAgQ29tcG9uZW50V2l0aE1zYWwuZGlzcGxheU5hbWUgPSBgd2l0aE1zYWwoJHtjb21wb25lbnROYW1lfSlgO1xyXG4gICAgcmV0dXJuIENvbXBvbmVudFdpdGhNc2FsO1xyXG59O1xuXG5leHBvcnQgeyB3aXRoTXNhbCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2l0aE1zYWwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/components/withMsal.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/error/ReactAuthError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/error/ReactAuthError.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReactAuthError: function() { return /* binding */ ReactAuthError; },\n/* harmony export */   ReactAuthErrorMessage: function() { return /* binding */ ReactAuthErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ReactAuthErrorMessage = {\r\n    invalidInteractionType: {\r\n        code: \"invalid_interaction_type\",\r\n        desc: \"The provided interaction type is invalid.\",\r\n    },\r\n    unableToFallbackToInteraction: {\r\n        code: \"unable_to_fallback_to_interaction\",\r\n        desc: \"Interaction is required but another interaction is already in progress. Please try again when the current interaction is complete.\",\r\n    },\r\n};\r\nclass ReactAuthError extends _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        Object.setPrototypeOf(this, ReactAuthError.prototype);\r\n        this.name = \"ReactAuthError\";\r\n    }\r\n    static createInvalidInteractionTypeError() {\r\n        return new ReactAuthError(ReactAuthErrorMessage.invalidInteractionType.code, ReactAuthErrorMessage.invalidInteractionType.desc);\r\n    }\r\n    static createUnableToFallbackToInteractionError() {\r\n        return new ReactAuthError(ReactAuthErrorMessage.unableToFallbackToInteraction.code, ReactAuthErrorMessage.unableToFallbackToInteraction.desc);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ReactAuthError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9lcnJvci9SZWFjdEF1dGhFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ21DOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDZCQUE2QiwwREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlEO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1yZWFjdC9kaXN0L2Vycm9yL1JlYWN0QXV0aEVycm9yLmpzP2IwYjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLXJlYWN0IHYyLjIuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICdAYXp1cmUvbXNhbC1icm93c2VyJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IFJlYWN0QXV0aEVycm9yTWVzc2FnZSA9IHtcclxuICAgIGludmFsaWRJbnRlcmFjdGlvblR5cGU6IHtcclxuICAgICAgICBjb2RlOiBcImludmFsaWRfaW50ZXJhY3Rpb25fdHlwZVwiLFxyXG4gICAgICAgIGRlc2M6IFwiVGhlIHByb3ZpZGVkIGludGVyYWN0aW9uIHR5cGUgaXMgaW52YWxpZC5cIixcclxuICAgIH0sXHJcbiAgICB1bmFibGVUb0ZhbGxiYWNrVG9JbnRlcmFjdGlvbjoge1xyXG4gICAgICAgIGNvZGU6IFwidW5hYmxlX3RvX2ZhbGxiYWNrX3RvX2ludGVyYWN0aW9uXCIsXHJcbiAgICAgICAgZGVzYzogXCJJbnRlcmFjdGlvbiBpcyByZXF1aXJlZCBidXQgYW5vdGhlciBpbnRlcmFjdGlvbiBpcyBhbHJlYWR5IGluIHByb2dyZXNzLiBQbGVhc2UgdHJ5IGFnYWluIHdoZW4gdGhlIGN1cnJlbnQgaW50ZXJhY3Rpb24gaXMgY29tcGxldGUuXCIsXHJcbiAgICB9LFxyXG59O1xyXG5jbGFzcyBSZWFjdEF1dGhFcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKTtcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgUmVhY3RBdXRoRXJyb3IucHJvdG90eXBlKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIlJlYWN0QXV0aEVycm9yXCI7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgY3JlYXRlSW52YWxpZEludGVyYWN0aW9uVHlwZUVycm9yKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUmVhY3RBdXRoRXJyb3IoUmVhY3RBdXRoRXJyb3JNZXNzYWdlLmludmFsaWRJbnRlcmFjdGlvblR5cGUuY29kZSwgUmVhY3RBdXRoRXJyb3JNZXNzYWdlLmludmFsaWRJbnRlcmFjdGlvblR5cGUuZGVzYyk7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgY3JlYXRlVW5hYmxlVG9GYWxsYmFja1RvSW50ZXJhY3Rpb25FcnJvcigpIHtcclxuICAgICAgICByZXR1cm4gbmV3IFJlYWN0QXV0aEVycm9yKFJlYWN0QXV0aEVycm9yTWVzc2FnZS51bmFibGVUb0ZhbGxiYWNrVG9JbnRlcmFjdGlvbi5jb2RlLCBSZWFjdEF1dGhFcnJvck1lc3NhZ2UudW5hYmxlVG9GYWxsYmFja1RvSW50ZXJhY3Rpb24uZGVzYyk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgUmVhY3RBdXRoRXJyb3IsIFJlYWN0QXV0aEVycm9yTWVzc2FnZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVhY3RBdXRoRXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/error/ReactAuthError.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/hooks/useAccount.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/hooks/useAccount.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAccount: function() { return /* binding */ useAccount; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var _useMsal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction getAccount(instance, accountIdentifiers) {\r\n    if (!accountIdentifiers ||\r\n        (!accountIdentifiers.homeAccountId &&\r\n            !accountIdentifiers.localAccountId &&\r\n            !accountIdentifiers.username)) {\r\n        // If no account identifiers are provided, return active account\r\n        return instance.getActiveAccount();\r\n    }\r\n    return (0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__.getAccountByIdentifiers)(instance.getAllAccounts(), accountIdentifiers);\r\n}\r\n/**\r\n * Given 1 or more accountIdentifiers, returns the Account object if the user is signed-in\r\n * @param accountIdentifiers\r\n */\r\nfunction useAccount(accountIdentifiers) {\r\n    const { instance, inProgress, logger } = (0,_useMsal_js__WEBPACK_IMPORTED_MODULE_1__.useMsal)();\r\n    const [account, setAccount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => getAccount(instance, accountIdentifiers));\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\r\n        setAccount((currentAccount) => {\r\n            const nextAccount = getAccount(instance, accountIdentifiers);\r\n            if (!_azure_msal_browser__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.accountInfoIsEqual(currentAccount, nextAccount, true)) {\r\n                logger.info(\"useAccount - Updating account\");\r\n                return nextAccount;\r\n            }\r\n            return currentAccount;\r\n        });\r\n    }, [inProgress, accountIdentifiers, instance, logger]);\r\n    return account;\r\n}\n\n\n//# sourceMappingURL=useAccount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9ob29rcy91c2VBY2NvdW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDYTtBQUMrQjtBQUNRO0FBQ2I7QUFDeUI7O0FBRWhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEVBQXVCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0JBQStCLEVBQUUsb0RBQU87QUFDcEQsa0NBQWtDLCtDQUFRO0FBQzFDLElBQUksZ0RBQVM7QUFDYjtBQUNBO0FBQ0EsaUJBQWlCLDhEQUFhO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBOztBQUVzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9ob29rcy91c2VBY2NvdW50LmpzPzlkMDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLXJlYWN0IHYyLjIuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQWNjb3VudEVudGl0eSB9IGZyb20gJ0BhenVyZS9tc2FsLWJyb3dzZXInO1xuaW1wb3J0IHsgdXNlTXNhbCB9IGZyb20gJy4vdXNlTXNhbC5qcyc7XG5pbXBvcnQgeyBnZXRBY2NvdW50QnlJZGVudGlmaWVycyB9IGZyb20gJy4uL3V0aWxzL3V0aWxpdGllcy5qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRBY2NvdW50KGluc3RhbmNlLCBhY2NvdW50SWRlbnRpZmllcnMpIHtcclxuICAgIGlmICghYWNjb3VudElkZW50aWZpZXJzIHx8XHJcbiAgICAgICAgKCFhY2NvdW50SWRlbnRpZmllcnMuaG9tZUFjY291bnRJZCAmJlxyXG4gICAgICAgICAgICAhYWNjb3VudElkZW50aWZpZXJzLmxvY2FsQWNjb3VudElkICYmXHJcbiAgICAgICAgICAgICFhY2NvdW50SWRlbnRpZmllcnMudXNlcm5hbWUpKSB7XHJcbiAgICAgICAgLy8gSWYgbm8gYWNjb3VudCBpZGVudGlmaWVycyBhcmUgcHJvdmlkZWQsIHJldHVybiBhY3RpdmUgYWNjb3VudFxyXG4gICAgICAgIHJldHVybiBpbnN0YW5jZS5nZXRBY3RpdmVBY2NvdW50KCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZ2V0QWNjb3VudEJ5SWRlbnRpZmllcnMoaW5zdGFuY2UuZ2V0QWxsQWNjb3VudHMoKSwgYWNjb3VudElkZW50aWZpZXJzKTtcclxufVxyXG4vKipcclxuICogR2l2ZW4gMSBvciBtb3JlIGFjY291bnRJZGVudGlmaWVycywgcmV0dXJucyB0aGUgQWNjb3VudCBvYmplY3QgaWYgdGhlIHVzZXIgaXMgc2lnbmVkLWluXHJcbiAqIEBwYXJhbSBhY2NvdW50SWRlbnRpZmllcnNcclxuICovXHJcbmZ1bmN0aW9uIHVzZUFjY291bnQoYWNjb3VudElkZW50aWZpZXJzKSB7XHJcbiAgICBjb25zdCB7IGluc3RhbmNlLCBpblByb2dyZXNzLCBsb2dnZXIgfSA9IHVzZU1zYWwoKTtcclxuICAgIGNvbnN0IFthY2NvdW50LCBzZXRBY2NvdW50XSA9IHVzZVN0YXRlKCgpID0+IGdldEFjY291bnQoaW5zdGFuY2UsIGFjY291bnRJZGVudGlmaWVycykpO1xyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBzZXRBY2NvdW50KChjdXJyZW50QWNjb3VudCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBuZXh0QWNjb3VudCA9IGdldEFjY291bnQoaW5zdGFuY2UsIGFjY291bnRJZGVudGlmaWVycyk7XHJcbiAgICAgICAgICAgIGlmICghQWNjb3VudEVudGl0eS5hY2NvdW50SW5mb0lzRXF1YWwoY3VycmVudEFjY291bnQsIG5leHRBY2NvdW50LCB0cnVlKSkge1xyXG4gICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oXCJ1c2VBY2NvdW50IC0gVXBkYXRpbmcgYWNjb3VudFwiKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0QWNjb3VudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gY3VycmVudEFjY291bnQ7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LCBbaW5Qcm9ncmVzcywgYWNjb3VudElkZW50aWZpZXJzLCBpbnN0YW5jZSwgbG9nZ2VyXSk7XHJcbiAgICByZXR1cm4gYWNjb3VudDtcclxufVxuXG5leHBvcnQgeyB1c2VBY2NvdW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VBY2NvdW50LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/hooks/useAccount.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useIsAuthenticated: function() { return /* binding */ useIsAuthenticated; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _useMsal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var _utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utilities.js */ \"./node_modules/@azure/msal-react/dist/utils/utilities.js\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isAuthenticated(allAccounts, matchAccount) {\r\n    if (matchAccount &&\r\n        (matchAccount.username ||\r\n            matchAccount.homeAccountId ||\r\n            matchAccount.localAccountId)) {\r\n        return !!(0,_utils_utilities_js__WEBPACK_IMPORTED_MODULE_2__.getAccountByIdentifiers)(allAccounts, matchAccount);\r\n    }\r\n    return allAccounts.length > 0;\r\n}\r\n/**\r\n * Returns whether or not a user is currently signed-in. Optionally provide 1 or more accountIdentifiers to determine if a specific user is signed-in\r\n * @param matchAccount\r\n */\r\nfunction useIsAuthenticated(matchAccount) {\r\n    const { accounts: allAccounts, inProgress } = (0,_useMsal_js__WEBPACK_IMPORTED_MODULE_1__.useMsal)();\r\n    const isUserAuthenticated = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\r\n        if (inProgress === _azure_msal_browser__WEBPACK_IMPORTED_MODULE_3__.InteractionStatus.Startup) {\r\n            return false;\r\n        }\r\n        return isAuthenticated(allAccounts, matchAccount);\r\n    }, [allAccounts, inProgress, matchAccount]);\r\n    return isUserAuthenticated;\r\n}\n\n\n//# sourceMappingURL=useIsAuthenticated.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9ob29rcy91c2VJc0F1dGhlbnRpY2F0ZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ21CO0FBQ087QUFDaUI7QUFDUTs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRFQUF1QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQ0FBb0MsRUFBRSxvREFBTztBQUN6RCxnQ0FBZ0MsOENBQU87QUFDdkMsMkJBQTJCLGtFQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLXJlYWN0L2Rpc3QvaG9va3MvdXNlSXNBdXRoZW50aWNhdGVkLmpzPzQxZTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLXJlYWN0IHYyLjIuMCAyMDI0LTExLTA1ICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlTXNhbCB9IGZyb20gJy4vdXNlTXNhbC5qcyc7XG5pbXBvcnQgeyBJbnRlcmFjdGlvblN0YXR1cyB9IGZyb20gJ0BhenVyZS9tc2FsLWJyb3dzZXInO1xuaW1wb3J0IHsgZ2V0QWNjb3VudEJ5SWRlbnRpZmllcnMgfSBmcm9tICcuLi91dGlscy91dGlsaXRpZXMuanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNBdXRoZW50aWNhdGVkKGFsbEFjY291bnRzLCBtYXRjaEFjY291bnQpIHtcclxuICAgIGlmIChtYXRjaEFjY291bnQgJiZcclxuICAgICAgICAobWF0Y2hBY2NvdW50LnVzZXJuYW1lIHx8XHJcbiAgICAgICAgICAgIG1hdGNoQWNjb3VudC5ob21lQWNjb3VudElkIHx8XHJcbiAgICAgICAgICAgIG1hdGNoQWNjb3VudC5sb2NhbEFjY291bnRJZCkpIHtcclxuICAgICAgICByZXR1cm4gISFnZXRBY2NvdW50QnlJZGVudGlmaWVycyhhbGxBY2NvdW50cywgbWF0Y2hBY2NvdW50KTtcclxuICAgIH1cclxuICAgIHJldHVybiBhbGxBY2NvdW50cy5sZW5ndGggPiAwO1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHdoZXRoZXIgb3Igbm90IGEgdXNlciBpcyBjdXJyZW50bHkgc2lnbmVkLWluLiBPcHRpb25hbGx5IHByb3ZpZGUgMSBvciBtb3JlIGFjY291bnRJZGVudGlmaWVycyB0byBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyB1c2VyIGlzIHNpZ25lZC1pblxyXG4gKiBAcGFyYW0gbWF0Y2hBY2NvdW50XHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VJc0F1dGhlbnRpY2F0ZWQobWF0Y2hBY2NvdW50KSB7XHJcbiAgICBjb25zdCB7IGFjY291bnRzOiBhbGxBY2NvdW50cywgaW5Qcm9ncmVzcyB9ID0gdXNlTXNhbCgpO1xyXG4gICAgY29uc3QgaXNVc2VyQXV0aGVudGljYXRlZCA9IHVzZU1lbW8oKCkgPT4ge1xyXG4gICAgICAgIGlmIChpblByb2dyZXNzID09PSBJbnRlcmFjdGlvblN0YXR1cy5TdGFydHVwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGlzQXV0aGVudGljYXRlZChhbGxBY2NvdW50cywgbWF0Y2hBY2NvdW50KTtcclxuICAgIH0sIFthbGxBY2NvdW50cywgaW5Qcm9ncmVzcywgbWF0Y2hBY2NvdW50XSk7XHJcbiAgICByZXR1cm4gaXNVc2VyQXV0aGVudGljYXRlZDtcclxufVxuXG5leHBvcnQgeyB1c2VJc0F1dGhlbnRpY2F0ZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZUlzQXV0aGVudGljYXRlZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/hooks/useMsal.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/hooks/useMsal.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMsal: function() { return /* binding */ useMsal; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _MsalContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MsalContext.js */ \"./node_modules/@azure/msal-react/dist/MsalContext.js\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns Msal Context values\r\n */\r\nconst useMsal = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_MsalContext_js__WEBPACK_IMPORTED_MODULE_1__.MsalContext);\n\n\n//# sourceMappingURL=useMsal.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9ob29rcy91c2VNc2FsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDc0I7QUFDYTs7QUFFaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaURBQVUsQ0FBQyx3REFBVzs7QUFFekI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLXJlYWN0L2Rpc3QvaG9va3MvdXNlTXNhbC5qcz9lNWYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1yZWFjdCB2Mi4yLjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE1zYWxDb250ZXh0IH0gZnJvbSAnLi4vTXNhbENvbnRleHQuanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybnMgTXNhbCBDb250ZXh0IHZhbHVlc1xyXG4gKi9cclxuY29uc3QgdXNlTXNhbCA9ICgpID0+IHVzZUNvbnRleHQoTXNhbENvbnRleHQpO1xuXG5leHBvcnQgeyB1c2VNc2FsIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VNc2FsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/hooks/useMsal.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMsalAuthentication: function() { return /* binding */ useMsalAuthentication; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-browser */ \"./node_modules/@azure/msal-browser/dist/index.mjs\");\n/* harmony import */ var _useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _useMsal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _useAccount_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useAccount.js */ \"./node_modules/@azure/msal-react/dist/hooks/useAccount.js\");\n/* harmony import */ var _error_ReactAuthError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ReactAuthError.js */ \"./node_modules/@azure/msal-react/dist/error/ReactAuthError.js\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * If a user is not currently signed in this hook invokes a login. Failed logins can be retried using the login callback returned.\r\n * If a user is currently signed in this hook attempts to acquire a token. Subsequent token requests can use the acquireToken callback returned.\r\n * Optionally provide a request object to be used in the login/acquireToken call.\r\n * Optionally provide a specific user that should be logged in.\r\n * @param interactionType\r\n * @param authenticationRequest\r\n * @param accountIdentifiers\r\n */\r\nfunction useMsalAuthentication(interactionType, authenticationRequest, accountIdentifiers) {\r\n    const { instance, inProgress, logger } = (0,_useMsal_js__WEBPACK_IMPORTED_MODULE_2__.useMsal)();\r\n    const isAuthenticated = (0,_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_1__.useIsAuthenticated)(accountIdentifiers);\r\n    const account = (0,_useAccount_js__WEBPACK_IMPORTED_MODULE_3__.useAccount)(accountIdentifiers);\r\n    const [[result, error], setResponse] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([null, null]);\r\n    // Used to prevent state updates after unmount\r\n    const mounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\r\n        return () => {\r\n            mounted.current = false;\r\n        };\r\n    }, []);\r\n    // Boolean used to check if interaction is in progress in acquireTokenSilent fallback. Use Ref instead of state to prevent acquireToken function from being regenerated on each change to interactionInProgress value\r\n    const interactionInProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None);\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\r\n        interactionInProgress.current = inProgress !== _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None;\r\n    }, [inProgress]);\r\n    // Flag used to control when the hook calls login/acquireToken\r\n    const shouldAcquireToken = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\r\n        if (!!error) {\r\n            // Errors should be handled by consuming component\r\n            shouldAcquireToken.current = false;\r\n            return;\r\n        }\r\n        if (!!result) {\r\n            // Token has already been acquired, consuming component/application is responsible for renewing\r\n            shouldAcquireToken.current = false;\r\n            return;\r\n        }\r\n    }, [error, result]);\r\n    const login = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (callbackInteractionType, callbackRequest) => {\r\n        const loginType = callbackInteractionType || interactionType;\r\n        const loginRequest = callbackRequest || authenticationRequest;\r\n        switch (loginType) {\r\n            case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Popup:\r\n                logger.verbose(\"useMsalAuthentication - Calling loginPopup\");\r\n                return instance.loginPopup(loginRequest);\r\n            case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Redirect:\r\n                // This promise is not expected to resolve due to full frame redirect\r\n                logger.verbose(\"useMsalAuthentication - Calling loginRedirect\");\r\n                return instance\r\n                    .loginRedirect(loginRequest)\r\n                    .then(null);\r\n            case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent:\r\n                logger.verbose(\"useMsalAuthentication - Calling ssoSilent\");\r\n                return instance.ssoSilent(loginRequest);\r\n            default:\r\n                throw _error_ReactAuthError_js__WEBPACK_IMPORTED_MODULE_4__.ReactAuthError.createInvalidInteractionTypeError();\r\n        }\r\n    }, [instance, interactionType, authenticationRequest, logger]);\r\n    const acquireToken = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (callbackInteractionType, callbackRequest) => {\r\n        const fallbackInteractionType = callbackInteractionType || interactionType;\r\n        let tokenRequest;\r\n        if (callbackRequest) {\r\n            logger.trace(\"useMsalAuthentication - acquireToken - Using request provided in the callback\");\r\n            tokenRequest = {\r\n                ...callbackRequest,\r\n            };\r\n        }\r\n        else if (authenticationRequest) {\r\n            logger.trace(\"useMsalAuthentication - acquireToken - Using request provided in the hook\");\r\n            tokenRequest = {\r\n                ...authenticationRequest,\r\n                scopes: authenticationRequest.scopes || _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.OIDC_DEFAULT_SCOPES,\r\n            };\r\n        }\r\n        else {\r\n            logger.trace(\"useMsalAuthentication - acquireToken - No request object provided, using default request.\");\r\n            tokenRequest = {\r\n                scopes: _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.OIDC_DEFAULT_SCOPES,\r\n            };\r\n        }\r\n        if (!tokenRequest.account && account) {\r\n            logger.trace(\"useMsalAuthentication - acquireToken - Attaching account to request\");\r\n            tokenRequest.account = account;\r\n        }\r\n        const getToken = async () => {\r\n            logger.verbose(\"useMsalAuthentication - Calling acquireTokenSilent\");\r\n            return instance\r\n                .acquireTokenSilent(tokenRequest)\r\n                .catch(async (e) => {\r\n                if (e instanceof _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionRequiredAuthError) {\r\n                    if (!interactionInProgress.current) {\r\n                        logger.error(\"useMsalAuthentication - Interaction required, falling back to interaction\");\r\n                        return login(fallbackInteractionType, tokenRequest);\r\n                    }\r\n                    else {\r\n                        logger.error(\"useMsalAuthentication - Interaction required but is already in progress. Please try again, if needed, after interaction completes.\");\r\n                        throw _error_ReactAuthError_js__WEBPACK_IMPORTED_MODULE_4__.ReactAuthError.createUnableToFallbackToInteractionError();\r\n                    }\r\n                }\r\n                throw e;\r\n            });\r\n        };\r\n        return getToken()\r\n            .then((response) => {\r\n            if (mounted.current) {\r\n                setResponse([response, null]);\r\n            }\r\n            return response;\r\n        })\r\n            .catch((e) => {\r\n            if (mounted.current) {\r\n                setResponse([null, e]);\r\n            }\r\n            throw e;\r\n        });\r\n    }, [\r\n        instance,\r\n        interactionType,\r\n        authenticationRequest,\r\n        logger,\r\n        account,\r\n        login,\r\n    ]);\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\r\n        const callbackId = instance.addEventCallback((message) => {\r\n            switch (message.eventType) {\r\n                case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGIN_SUCCESS:\r\n                case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.EventType.SSO_SILENT_SUCCESS:\r\n                    if (message.payload) {\r\n                        setResponse([\r\n                            message.payload,\r\n                            null,\r\n                        ]);\r\n                    }\r\n                    break;\r\n                case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.EventType.LOGIN_FAILURE:\r\n                case _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.EventType.SSO_SILENT_FAILURE:\r\n                    if (message.error) {\r\n                        setResponse([null, message.error]);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n        logger.verbose(`useMsalAuthentication - Registered event callback with id: ${callbackId}`);\r\n        return () => {\r\n            if (callbackId) {\r\n                logger.verbose(`useMsalAuthentication - Removing event callback ${callbackId}`);\r\n                instance.removeEventCallback(callbackId);\r\n            }\r\n        };\r\n    }, [instance, logger]);\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\r\n        if (shouldAcquireToken.current &&\r\n            inProgress === _azure_msal_browser__WEBPACK_IMPORTED_MODULE_5__.InteractionStatus.None) {\r\n            shouldAcquireToken.current = false;\r\n            if (!isAuthenticated) {\r\n                logger.info(\"useMsalAuthentication - No user is authenticated, attempting to login\");\r\n                login().catch(() => {\r\n                    // Errors are saved in state above\r\n                    return;\r\n                });\r\n            }\r\n            else if (account) {\r\n                logger.info(\"useMsalAuthentication - User is authenticated, attempting to acquire token\");\r\n                acquireToken().catch(() => {\r\n                    // Errors are saved in state above\r\n                    return;\r\n                });\r\n            }\r\n        }\r\n    }, [isAuthenticated, account, inProgress, login, acquireToken, logger]);\r\n    return {\r\n        login,\r\n        acquireToken,\r\n        result,\r\n        error,\r\n    };\r\n}\n\n\n//# sourceMappingURL=useMsalAuthentication.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticatedTemplate: function() { return /* reexport safe */ _components_AuthenticatedTemplate_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticatedTemplate; },\n/* harmony export */   MsalAuthenticationTemplate: function() { return /* reexport safe */ _components_MsalAuthenticationTemplate_js__WEBPACK_IMPORTED_MODULE_4__.MsalAuthenticationTemplate; },\n/* harmony export */   MsalConsumer: function() { return /* reexport safe */ _MsalContext_js__WEBPACK_IMPORTED_MODULE_0__.MsalConsumer; },\n/* harmony export */   MsalContext: function() { return /* reexport safe */ _MsalContext_js__WEBPACK_IMPORTED_MODULE_0__.MsalContext; },\n/* harmony export */   MsalProvider: function() { return /* reexport safe */ _MsalProvider_js__WEBPACK_IMPORTED_MODULE_1__.MsalProvider; },\n/* harmony export */   UnauthenticatedTemplate: function() { return /* reexport safe */ _components_UnauthenticatedTemplate_js__WEBPACK_IMPORTED_MODULE_3__.UnauthenticatedTemplate; },\n/* harmony export */   useAccount: function() { return /* reexport safe */ _hooks_useAccount_js__WEBPACK_IMPORTED_MODULE_7__.useAccount; },\n/* harmony export */   useIsAuthenticated: function() { return /* reexport safe */ _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_8__.useIsAuthenticated; },\n/* harmony export */   useMsal: function() { return /* reexport safe */ _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_6__.useMsal; },\n/* harmony export */   useMsalAuthentication: function() { return /* reexport safe */ _hooks_useMsalAuthentication_js__WEBPACK_IMPORTED_MODULE_9__.useMsalAuthentication; },\n/* harmony export */   version: function() { return /* reexport safe */ _packageMetadata_js__WEBPACK_IMPORTED_MODULE_10__.version; },\n/* harmony export */   withMsal: function() { return /* reexport safe */ _components_withMsal_js__WEBPACK_IMPORTED_MODULE_5__.withMsal; }\n/* harmony export */ });\n/* harmony import */ var _MsalContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MsalContext.js */ \"./node_modules/@azure/msal-react/dist/MsalContext.js\");\n/* harmony import */ var _MsalProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MsalProvider.js */ \"./node_modules/@azure/msal-react/dist/MsalProvider.js\");\n/* harmony import */ var _components_AuthenticatedTemplate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/AuthenticatedTemplate.js */ \"./node_modules/@azure/msal-react/dist/components/AuthenticatedTemplate.js\");\n/* harmony import */ var _components_UnauthenticatedTemplate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/UnauthenticatedTemplate.js */ \"./node_modules/@azure/msal-react/dist/components/UnauthenticatedTemplate.js\");\n/* harmony import */ var _components_MsalAuthenticationTemplate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/MsalAuthenticationTemplate.js */ \"./node_modules/@azure/msal-react/dist/components/MsalAuthenticationTemplate.js\");\n/* harmony import */ var _components_withMsal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/withMsal.js */ \"./node_modules/@azure/msal-react/dist/components/withMsal.js\");\n/* harmony import */ var _hooks_useMsal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hooks/useMsal.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsal.js\");\n/* harmony import */ var _hooks_useAccount_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./hooks/useAccount.js */ \"./node_modules/@azure/msal-react/dist/hooks/useAccount.js\");\n/* harmony import */ var _hooks_useIsAuthenticated_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./hooks/useIsAuthenticated.js */ \"./node_modules/@azure/msal-react/dist/hooks/useIsAuthenticated.js\");\n/* harmony import */ var _hooks_useMsalAuthentication_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./hooks/useMsalAuthentication.js */ \"./node_modules/@azure/msal-react/dist/hooks/useMsalAuthentication.js\");\n/* harmony import */ var _packageMetadata_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./packageMetadata.js */ \"./node_modules/@azure/msal-react/dist/packageMetadata.js\");\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDZ0Q7QUFDWjtBQUM2QjtBQUNJO0FBQ007QUFDcEM7QUFDUDtBQUNNO0FBQ2dCO0FBQ007QUFDMUI7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLXJlYWN0L2Rpc3QvaW5kZXguanM/ZTk3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCB7IE1zYWxDb25zdW1lciwgTXNhbENvbnRleHQgfSBmcm9tICcuL01zYWxDb250ZXh0LmpzJztcbmV4cG9ydCB7IE1zYWxQcm92aWRlciB9IGZyb20gJy4vTXNhbFByb3ZpZGVyLmpzJztcbmV4cG9ydCB7IEF1dGhlbnRpY2F0ZWRUZW1wbGF0ZSB9IGZyb20gJy4vY29tcG9uZW50cy9BdXRoZW50aWNhdGVkVGVtcGxhdGUuanMnO1xuZXhwb3J0IHsgVW5hdXRoZW50aWNhdGVkVGVtcGxhdGUgfSBmcm9tICcuL2NvbXBvbmVudHMvVW5hdXRoZW50aWNhdGVkVGVtcGxhdGUuanMnO1xuZXhwb3J0IHsgTXNhbEF1dGhlbnRpY2F0aW9uVGVtcGxhdGUgfSBmcm9tICcuL2NvbXBvbmVudHMvTXNhbEF1dGhlbnRpY2F0aW9uVGVtcGxhdGUuanMnO1xuZXhwb3J0IHsgd2l0aE1zYWwgfSBmcm9tICcuL2NvbXBvbmVudHMvd2l0aE1zYWwuanMnO1xuZXhwb3J0IHsgdXNlTXNhbCB9IGZyb20gJy4vaG9va3MvdXNlTXNhbC5qcyc7XG5leHBvcnQgeyB1c2VBY2NvdW50IH0gZnJvbSAnLi9ob29rcy91c2VBY2NvdW50LmpzJztcbmV4cG9ydCB7IHVzZUlzQXV0aGVudGljYXRlZCB9IGZyb20gJy4vaG9va3MvdXNlSXNBdXRoZW50aWNhdGVkLmpzJztcbmV4cG9ydCB7IHVzZU1zYWxBdXRoZW50aWNhdGlvbiB9IGZyb20gJy4vaG9va3MvdXNlTXNhbEF1dGhlbnRpY2F0aW9uLmpzJztcbmV4cG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3BhY2thZ2VNZXRhZGF0YS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/packageMetadata.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/packageMetadata.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: function() { return /* binding */ name; },\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n/* eslint-disable header/header */\r\nconst name = \"@azure/msal-react\";\r\nconst version = \"2.2.0\";\n\n\n//# sourceMappingURL=packageMetadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9wYWNrYWdlTWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC9wYWNrYWdlTWV0YWRhdGEuanM/OTk4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtcmVhY3QgdjIuMi4wIDIwMjQtMTEtMDUgKi9cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIGhlYWRlci9oZWFkZXIgKi9cclxuY29uc3QgbmFtZSA9IFwiQGF6dXJlL21zYWwtcmVhY3RcIjtcclxuY29uc3QgdmVyc2lvbiA9IFwiMi4yLjBcIjtcblxuZXhwb3J0IHsgbmFtZSwgdmVyc2lvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFja2FnZU1ldGFkYXRhLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/packageMetadata.js\n"));

/***/ }),

/***/ "./node_modules/@azure/msal-react/dist/utils/utilities.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-react/dist/utils/utilities.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accountArraysAreEqual: function() { return /* binding */ accountArraysAreEqual; },\n/* harmony export */   getAccountByIdentifiers: function() { return /* binding */ getAccountByIdentifiers; },\n/* harmony export */   getChildrenOrFunction: function() { return /* binding */ getChildrenOrFunction; }\n/* harmony export */ });\n/*! @azure/msal-react v2.2.0 2024-11-05 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction getChildrenOrFunction(children, args) {\r\n    if (typeof children === \"function\") {\r\n        return children(args);\r\n    }\r\n    return children;\r\n}\r\n/**\r\n * Helper function to determine whether 2 arrays are equal\r\n * Used to avoid unnecessary state updates\r\n * @param arrayA\r\n * @param arrayB\r\n */\r\nfunction accountArraysAreEqual(arrayA, arrayB) {\r\n    if (arrayA.length !== arrayB.length) {\r\n        return false;\r\n    }\r\n    const comparisonArray = [...arrayB];\r\n    return arrayA.every((elementA) => {\r\n        const elementB = comparisonArray.shift();\r\n        if (!elementA || !elementB) {\r\n            return false;\r\n        }\r\n        return (elementA.homeAccountId === elementB.homeAccountId &&\r\n            elementA.localAccountId === elementB.localAccountId &&\r\n            elementA.username === elementB.username);\r\n    });\r\n}\r\nfunction getAccountByIdentifiers(allAccounts, accountIdentifiers) {\r\n    if (allAccounts.length > 0 &&\r\n        (accountIdentifiers.homeAccountId ||\r\n            accountIdentifiers.localAccountId ||\r\n            accountIdentifiers.username)) {\r\n        const matchedAccounts = allAccounts.filter((accountObj) => {\r\n            if (accountIdentifiers.username &&\r\n                accountIdentifiers.username.toLowerCase() !==\r\n                    accountObj.username.toLowerCase()) {\r\n                return false;\r\n            }\r\n            if (accountIdentifiers.homeAccountId &&\r\n                accountIdentifiers.homeAccountId.toLowerCase() !==\r\n                    accountObj.homeAccountId.toLowerCase()) {\r\n                return false;\r\n            }\r\n            if (accountIdentifiers.localAccountId &&\r\n                accountIdentifiers.localAccountId.toLowerCase() !==\r\n                    accountObj.localAccountId.toLowerCase()) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return matchedAccounts[0] || null;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=utilities.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtcmVhY3QvZGlzdC91dGlscy91dGlsaXRpZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlGO0FBQ2pGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1yZWFjdC9kaXN0L3V0aWxzL3V0aWxpdGllcy5qcz80ZTYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1yZWFjdCB2Mi4yLjAgMjAyNC0xMS0wNSAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmZ1bmN0aW9uIGdldENoaWxkcmVuT3JGdW5jdGlvbihjaGlsZHJlbiwgYXJncykge1xyXG4gICAgaWYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgcmV0dXJuIGNoaWxkcmVuKGFyZ3MpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNoaWxkcmVuO1xyXG59XHJcbi8qKlxyXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIHdoZXRoZXIgMiBhcnJheXMgYXJlIGVxdWFsXHJcbiAqIFVzZWQgdG8gYXZvaWQgdW5uZWNlc3Nhcnkgc3RhdGUgdXBkYXRlc1xyXG4gKiBAcGFyYW0gYXJyYXlBXHJcbiAqIEBwYXJhbSBhcnJheUJcclxuICovXHJcbmZ1bmN0aW9uIGFjY291bnRBcnJheXNBcmVFcXVhbChhcnJheUEsIGFycmF5Qikge1xyXG4gICAgaWYgKGFycmF5QS5sZW5ndGggIT09IGFycmF5Qi5sZW5ndGgpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBjb25zdCBjb21wYXJpc29uQXJyYXkgPSBbLi4uYXJyYXlCXTtcclxuICAgIHJldHVybiBhcnJheUEuZXZlcnkoKGVsZW1lbnRBKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZWxlbWVudEIgPSBjb21wYXJpc29uQXJyYXkuc2hpZnQoKTtcclxuICAgICAgICBpZiAoIWVsZW1lbnRBIHx8ICFlbGVtZW50Qikge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAoZWxlbWVudEEuaG9tZUFjY291bnRJZCA9PT0gZWxlbWVudEIuaG9tZUFjY291bnRJZCAmJlxyXG4gICAgICAgICAgICBlbGVtZW50QS5sb2NhbEFjY291bnRJZCA9PT0gZWxlbWVudEIubG9jYWxBY2NvdW50SWQgJiZcclxuICAgICAgICAgICAgZWxlbWVudEEudXNlcm5hbWUgPT09IGVsZW1lbnRCLnVzZXJuYW1lKTtcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIGdldEFjY291bnRCeUlkZW50aWZpZXJzKGFsbEFjY291bnRzLCBhY2NvdW50SWRlbnRpZmllcnMpIHtcclxuICAgIGlmIChhbGxBY2NvdW50cy5sZW5ndGggPiAwICYmXHJcbiAgICAgICAgKGFjY291bnRJZGVudGlmaWVycy5ob21lQWNjb3VudElkIHx8XHJcbiAgICAgICAgICAgIGFjY291bnRJZGVudGlmaWVycy5sb2NhbEFjY291bnRJZCB8fFxyXG4gICAgICAgICAgICBhY2NvdW50SWRlbnRpZmllcnMudXNlcm5hbWUpKSB7XHJcbiAgICAgICAgY29uc3QgbWF0Y2hlZEFjY291bnRzID0gYWxsQWNjb3VudHMuZmlsdGVyKChhY2NvdW50T2JqKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChhY2NvdW50SWRlbnRpZmllcnMudXNlcm5hbWUgJiZcclxuICAgICAgICAgICAgICAgIGFjY291bnRJZGVudGlmaWVycy51c2VybmFtZS50b0xvd2VyQ2FzZSgpICE9PVxyXG4gICAgICAgICAgICAgICAgICAgIGFjY291bnRPYmoudXNlcm5hbWUudG9Mb3dlckNhc2UoKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChhY2NvdW50SWRlbnRpZmllcnMuaG9tZUFjY291bnRJZCAmJlxyXG4gICAgICAgICAgICAgICAgYWNjb3VudElkZW50aWZpZXJzLmhvbWVBY2NvdW50SWQudG9Mb3dlckNhc2UoKSAhPT1cclxuICAgICAgICAgICAgICAgICAgICBhY2NvdW50T2JqLmhvbWVBY2NvdW50SWQudG9Mb3dlckNhc2UoKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChhY2NvdW50SWRlbnRpZmllcnMubG9jYWxBY2NvdW50SWQgJiZcclxuICAgICAgICAgICAgICAgIGFjY291bnRJZGVudGlmaWVycy5sb2NhbEFjY291bnRJZC50b0xvd2VyQ2FzZSgpICE9PVxyXG4gICAgICAgICAgICAgICAgICAgIGFjY291bnRPYmoubG9jYWxBY2NvdW50SWQudG9Mb3dlckNhc2UoKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBtYXRjaGVkQWNjb3VudHNbMF0gfHwgbnVsbDtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IGFjY291bnRBcnJheXNBcmVFcXVhbCwgZ2V0QWNjb3VudEJ5SWRlbnRpZmllcnMsIGdldENoaWxkcmVuT3JGdW5jdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbGl0aWVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@azure/msal-react/dist/utils/utilities.js\n"));

/***/ }),

/***/ "./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clsx: function() { return /* binding */ clsx; }\n/* harmony export */ });\nfunction r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}/* harmony default export */ __webpack_exports__[\"default\"] = (clsx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2xzeC9kaXN0L2Nsc3gubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjLGFBQWEsK0NBQStDLGdEQUFnRCxlQUFlLFFBQVEsSUFBSSwwQ0FBMEMseUNBQXlDLFNBQWdCLGdCQUFnQix3Q0FBd0MsSUFBSSxtREFBbUQsU0FBUywrREFBZSxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tanM/YzYyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiByKGUpe3ZhciB0LGYsbj1cIlwiO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlfHxcIm51bWJlclwiPT10eXBlb2YgZSluKz1lO2Vsc2UgaWYoXCJvYmplY3RcIj09dHlwZW9mIGUpaWYoQXJyYXkuaXNBcnJheShlKSl7dmFyIG89ZS5sZW5ndGg7Zm9yKHQ9MDt0PG87dCsrKWVbdF0mJihmPXIoZVt0XSkpJiYobiYmKG4rPVwiIFwiKSxuKz1mKX1lbHNlIGZvcihmIGluIGUpZVtmXSYmKG4mJihuKz1cIiBcIiksbis9Zik7cmV0dXJuIG59ZXhwb3J0IGZ1bmN0aW9uIGNsc3goKXtmb3IodmFyIGUsdCxmPTAsbj1cIlwiLG89YXJndW1lbnRzLmxlbmd0aDtmPG87ZisrKShlPWFyZ3VtZW50c1tmXSkmJih0PXIoZSkpJiYobiYmKG4rPVwiIFwiKSxuKz10KTtyZXR1cm4gbn1leHBvcnQgZGVmYXVsdCBjbHN4OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/clsx/dist/clsx.mjs\n"));

/***/ }),

/***/ "./node_modules/react-toastify/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/react-toastify/dist/index.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bounce: function() { return /* binding */ lt; },\n/* harmony export */   Flip: function() { return /* binding */ uo; },\n/* harmony export */   Icons: function() { return /* binding */ W; },\n/* harmony export */   Slide: function() { return /* binding */ mo; },\n/* harmony export */   ToastContainer: function() { return /* binding */ Lt; },\n/* harmony export */   Zoom: function() { return /* binding */ po; },\n/* harmony export */   collapseToast: function() { return /* binding */ Z; },\n/* harmony export */   cssTransition: function() { return /* binding */ $; },\n/* harmony export */   toast: function() { return /* binding */ y; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"./node_modules/clsx/dist/clsx.mjs\");\n\"use client\";\nfunction Mt(t){if(!t||typeof document==\"undefined\")return;let o=document.head||document.getElementsByTagName(\"head\")[0],e=document.createElement(\"style\");e.type=\"text/css\",o.firstChild?o.insertBefore(e,o.firstChild):o.appendChild(e),e.styleSheet?e.styleSheet.cssText=t:e.appendChild(document.createTextNode(t))}Mt(`:root{--toastify-color-light: #fff;--toastify-color-dark: #121212;--toastify-color-info: #3498db;--toastify-color-success: #07bc0c;--toastify-color-warning: #f1c40f;--toastify-color-error: hsl(6, 78%, 57%);--toastify-color-transparent: rgba(255, 255, 255, .7);--toastify-icon-color-info: var(--toastify-color-info);--toastify-icon-color-success: var(--toastify-color-success);--toastify-icon-color-warning: var(--toastify-color-warning);--toastify-icon-color-error: var(--toastify-color-error);--toastify-container-width: fit-content;--toastify-toast-width: 320px;--toastify-toast-offset: 16px;--toastify-toast-top: max(var(--toastify-toast-offset), env(safe-area-inset-top));--toastify-toast-right: max(var(--toastify-toast-offset), env(safe-area-inset-right));--toastify-toast-left: max(var(--toastify-toast-offset), env(safe-area-inset-left));--toastify-toast-bottom: max(var(--toastify-toast-offset), env(safe-area-inset-bottom));--toastify-toast-background: #fff;--toastify-toast-padding: 14px;--toastify-toast-min-height: 64px;--toastify-toast-max-height: 800px;--toastify-toast-bd-radius: 6px;--toastify-toast-shadow: 0px 4px 12px rgba(0, 0, 0, .1);--toastify-font-family: sans-serif;--toastify-z-index: 9999;--toastify-text-color-light: #757575;--toastify-text-color-dark: #fff;--toastify-text-color-info: #fff;--toastify-text-color-success: #fff;--toastify-text-color-warning: #fff;--toastify-text-color-error: #fff;--toastify-spinner-color: #616161;--toastify-spinner-color-empty-area: #e0e0e0;--toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);--toastify-color-progress-dark: #bb86fc;--toastify-color-progress-info: var(--toastify-color-info);--toastify-color-progress-success: var(--toastify-color-success);--toastify-color-progress-warning: var(--toastify-color-warning);--toastify-color-progress-error: var(--toastify-color-error);--toastify-color-progress-bgo: .2}.Toastify__toast-container{z-index:var(--toastify-z-index);-webkit-transform:translate3d(0,0,var(--toastify-z-index));position:fixed;width:var(--toastify-container-width);box-sizing:border-box;color:#fff;display:flex;flex-direction:column}.Toastify__toast-container--top-left{top:var(--toastify-toast-top);left:var(--toastify-toast-left)}.Toastify__toast-container--top-center{top:var(--toastify-toast-top);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--top-right{top:var(--toastify-toast-top);right:var(--toastify-toast-right);align-items:end}.Toastify__toast-container--bottom-left{bottom:var(--toastify-toast-bottom);left:var(--toastify-toast-left)}.Toastify__toast-container--bottom-center{bottom:var(--toastify-toast-bottom);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--bottom-right{bottom:var(--toastify-toast-bottom);right:var(--toastify-toast-right);align-items:end}.Toastify__toast{--y: 0;position:relative;touch-action:none;width:var(--toastify-toast-width);min-height:var(--toastify-toast-min-height);box-sizing:border-box;margin-bottom:1rem;padding:var(--toastify-toast-padding);border-radius:var(--toastify-toast-bd-radius);box-shadow:var(--toastify-toast-shadow);max-height:var(--toastify-toast-max-height);font-family:var(--toastify-font-family);z-index:0;display:flex;flex:1 auto;align-items:center;word-break:break-word}@media only screen and (max-width: 480px){.Toastify__toast-container{width:100vw;left:env(safe-area-inset-left);margin:0}.Toastify__toast-container--top-left,.Toastify__toast-container--top-center,.Toastify__toast-container--top-right{top:env(safe-area-inset-top);transform:translate(0)}.Toastify__toast-container--bottom-left,.Toastify__toast-container--bottom-center,.Toastify__toast-container--bottom-right{bottom:env(safe-area-inset-bottom);transform:translate(0)}.Toastify__toast-container--rtl{right:env(safe-area-inset-right);left:initial}.Toastify__toast{--toastify-toast-width: 100%;margin-bottom:0;border-radius:0}}.Toastify__toast-container[data-stacked=true]{width:var(--toastify-toast-width)}.Toastify__toast--stacked{position:absolute;width:100%;transform:translate3d(0,var(--y),0) scale(var(--s));transition:transform .3s}.Toastify__toast--stacked[data-collapsed] .Toastify__toast-body,.Toastify__toast--stacked[data-collapsed] .Toastify__close-button{transition:opacity .1s}.Toastify__toast--stacked[data-collapsed=false]{overflow:visible}.Toastify__toast--stacked[data-collapsed=true]:not(:last-child)>*{opacity:0}.Toastify__toast--stacked:after{content:\"\";position:absolute;left:0;right:0;height:calc(var(--g) * 1px);bottom:100%}.Toastify__toast--stacked[data-pos=top]{top:0}.Toastify__toast--stacked[data-pos=bot]{bottom:0}.Toastify__toast--stacked[data-pos=bot].Toastify__toast--stacked:before{transform-origin:top}.Toastify__toast--stacked[data-pos=top].Toastify__toast--stacked:before{transform-origin:bottom}.Toastify__toast--stacked:before{content:\"\";position:absolute;left:0;right:0;bottom:0;height:100%;transform:scaleY(3);z-index:-1}.Toastify__toast--rtl{direction:rtl}.Toastify__toast--close-on-click{cursor:pointer}.Toastify__toast-icon{margin-inline-end:10px;width:22px;flex-shrink:0;display:flex}.Toastify--animate{animation-fill-mode:both;animation-duration:.5s}.Toastify--animate-icon{animation-fill-mode:both;animation-duration:.3s}.Toastify__toast-theme--dark{background:var(--toastify-color-dark);color:var(--toastify-text-color-dark)}.Toastify__toast-theme--light,.Toastify__toast-theme--colored.Toastify__toast--default{background:var(--toastify-color-light);color:var(--toastify-text-color-light)}.Toastify__toast-theme--colored.Toastify__toast--info{color:var(--toastify-text-color-info);background:var(--toastify-color-info)}.Toastify__toast-theme--colored.Toastify__toast--success{color:var(--toastify-text-color-success);background:var(--toastify-color-success)}.Toastify__toast-theme--colored.Toastify__toast--warning{color:var(--toastify-text-color-warning);background:var(--toastify-color-warning)}.Toastify__toast-theme--colored.Toastify__toast--error{color:var(--toastify-text-color-error);background:var(--toastify-color-error)}.Toastify__progress-bar-theme--light{background:var(--toastify-color-progress-light)}.Toastify__progress-bar-theme--dark{background:var(--toastify-color-progress-dark)}.Toastify__progress-bar--info{background:var(--toastify-color-progress-info)}.Toastify__progress-bar--success{background:var(--toastify-color-progress-success)}.Toastify__progress-bar--warning{background:var(--toastify-color-progress-warning)}.Toastify__progress-bar--error{background:var(--toastify-color-progress-error)}.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--success,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--warning,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--error{background:var(--toastify-color-transparent)}.Toastify__close-button{color:#fff;position:absolute;top:6px;right:6px;background:transparent;outline:none;border:none;padding:0;cursor:pointer;opacity:.7;transition:.3s ease;z-index:1}.Toastify__toast--rtl .Toastify__close-button{left:6px;right:unset}.Toastify__close-button--light{color:#000;opacity:.3}.Toastify__close-button>svg{fill:currentColor;height:16px;width:14px}.Toastify__close-button:hover,.Toastify__close-button:focus{opacity:1}@keyframes Toastify__trackProgress{0%{transform:scaleX(1)}to{transform:scaleX(0)}}.Toastify__progress-bar{position:absolute;bottom:0;left:0;width:100%;height:100%;z-index:1;opacity:.7;transform-origin:left}.Toastify__progress-bar--animated{animation:Toastify__trackProgress linear 1 forwards}.Toastify__progress-bar--controlled{transition:transform .2s}.Toastify__progress-bar--rtl{right:0;left:initial;transform-origin:right;border-bottom-left-radius:initial}.Toastify__progress-bar--wrp{position:absolute;overflow:hidden;bottom:0;left:0;width:100%;height:5px;border-bottom-left-radius:var(--toastify-toast-bd-radius);border-bottom-right-radius:var(--toastify-toast-bd-radius)}.Toastify__progress-bar--wrp[data-hidden=true]{opacity:0}.Toastify__progress-bar--bg{opacity:var(--toastify-color-progress-bgo);width:100%;height:100%}.Toastify__spinner{width:20px;height:20px;box-sizing:border-box;border:2px solid;border-radius:100%;border-color:var(--toastify-spinner-color-empty-area);border-right-color:var(--toastify-spinner-color);animation:Toastify__spin .65s linear infinite}@keyframes Toastify__bounceInRight{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutRight{20%{opacity:1;transform:translate3d(-20px,var(--y),0)}to{opacity:0;transform:translate3d(2000px,var(--y),0)}}@keyframes Toastify__bounceInLeft{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0)}60%{opacity:1;transform:translate3d(25px,0,0)}75%{transform:translate3d(-10px,0,0)}90%{transform:translate3d(5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutLeft{20%{opacity:1;transform:translate3d(20px,var(--y),0)}to{opacity:0;transform:translate3d(-2000px,var(--y),0)}}@keyframes Toastify__bounceInUp{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0)}60%{opacity:1;transform:translate3d(0,-20px,0)}75%{transform:translate3d(0,10px,0)}90%{transform:translate3d(0,-5px,0)}to{transform:translateZ(0)}}@keyframes Toastify__bounceOutUp{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,-2000px,0)}}@keyframes Toastify__bounceInDown{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0)}60%{opacity:1;transform:translate3d(0,25px,0)}75%{transform:translate3d(0,-10px,0)}90%{transform:translate3d(0,5px,0)}to{transform:none}}@keyframes Toastify__bounceOutDown{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,2000px,0)}}.Toastify__bounce-enter--top-left,.Toastify__bounce-enter--bottom-left{animation-name:Toastify__bounceInLeft}.Toastify__bounce-enter--top-right,.Toastify__bounce-enter--bottom-right{animation-name:Toastify__bounceInRight}.Toastify__bounce-enter--top-center{animation-name:Toastify__bounceInDown}.Toastify__bounce-enter--bottom-center{animation-name:Toastify__bounceInUp}.Toastify__bounce-exit--top-left,.Toastify__bounce-exit--bottom-left{animation-name:Toastify__bounceOutLeft}.Toastify__bounce-exit--top-right,.Toastify__bounce-exit--bottom-right{animation-name:Toastify__bounceOutRight}.Toastify__bounce-exit--top-center{animation-name:Toastify__bounceOutUp}.Toastify__bounce-exit--bottom-center{animation-name:Toastify__bounceOutDown}@keyframes Toastify__zoomIn{0%{opacity:0;transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes Toastify__zoomOut{0%{opacity:1}50%{opacity:0;transform:translate3d(0,var(--y),0) scale3d(.3,.3,.3)}to{opacity:0}}.Toastify__zoom-enter{animation-name:Toastify__zoomIn}.Toastify__zoom-exit{animation-name:Toastify__zoomOut}@keyframes Toastify__flipIn{0%{transform:perspective(400px) rotateX(90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotateX(-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotateX(10deg);opacity:1}80%{transform:perspective(400px) rotateX(-5deg)}to{transform:perspective(400px)}}@keyframes Toastify__flipOut{0%{transform:translate3d(0,var(--y),0) perspective(400px)}30%{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(-20deg);opacity:1}to{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(90deg);opacity:0}}.Toastify__flip-enter{animation-name:Toastify__flipIn}.Toastify__flip-exit{animation-name:Toastify__flipOut}@keyframes Toastify__slideInRight{0%{transform:translate3d(110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInLeft{0%{transform:translate3d(-110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInUp{0%{transform:translate3d(0,110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInDown{0%{transform:translate3d(0,-110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideOutRight{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(110%,var(--y),0)}}@keyframes Toastify__slideOutLeft{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(-110%,var(--y),0)}}@keyframes Toastify__slideOutDown{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,500px,0)}}@keyframes Toastify__slideOutUp{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,-500px,0)}}.Toastify__slide-enter--top-left,.Toastify__slide-enter--bottom-left{animation-name:Toastify__slideInLeft}.Toastify__slide-enter--top-right,.Toastify__slide-enter--bottom-right{animation-name:Toastify__slideInRight}.Toastify__slide-enter--top-center{animation-name:Toastify__slideInDown}.Toastify__slide-enter--bottom-center{animation-name:Toastify__slideInUp}.Toastify__slide-exit--top-left,.Toastify__slide-exit--bottom-left{animation-name:Toastify__slideOutLeft;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-right,.Toastify__slide-exit--bottom-right{animation-name:Toastify__slideOutRight;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-center{animation-name:Toastify__slideOutUp;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--bottom-center{animation-name:Toastify__slideOutDown;animation-timing-function:ease-in;animation-duration:.3s}@keyframes Toastify__spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\n`);var L=t=>typeof t==\"number\"&&!isNaN(t),N=t=>typeof t==\"string\",P=t=>typeof t==\"function\",mt=t=>N(t)||L(t),B=t=>N(t)||P(t)?t:null,pt=(t,o)=>t===!1||L(t)&&t>0?t:o,z=t=>(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(t)||N(t)||P(t)||L(t);function Z(t,o,e=300){let{scrollHeight:r,style:s}=t;requestAnimationFrame(()=>{s.minHeight=\"initial\",s.height=r+\"px\",s.transition=`all ${e}ms`,requestAnimationFrame(()=>{s.height=\"0\",s.padding=\"0\",s.margin=\"0\",setTimeout(o,e)})})}function $({enter:t,exit:o,appendPosition:e=!1,collapse:r=!0,collapseDuration:s=300}){return function({children:a,position:d,preventExitTransition:c,done:T,nodeRef:g,isIn:v,playToast:x}){let C=e?`${t}--${d}`:t,S=e?`${o}--${d}`:o,E=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);return (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(()=>{let f=g.current,p=C.split(\" \"),b=n=>{n.target===g.current&&(x(),f.removeEventListener(\"animationend\",b),f.removeEventListener(\"animationcancel\",b),E.current===0&&n.type!==\"animationcancel\"&&f.classList.remove(...p))};(()=>{f.classList.add(...p),f.addEventListener(\"animationend\",b),f.addEventListener(\"animationcancel\",b)})()},[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let f=g.current,p=()=>{f.removeEventListener(\"animationend\",p),r?Z(f,T,s):T()};v||(c?p():(()=>{E.current=1,f.className+=` ${S}`,f.addEventListener(\"animationend\",p)})())},[v]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,a)}}function J(t,o){return{content:tt(t.content,t.props),containerId:t.props.containerId,id:t.props.toastId,theme:t.props.theme,type:t.props.type,data:t.props.data||{},isLoading:t.props.isLoading,icon:t.props.icon,reason:t.removalReason,status:o}}function tt(t,o,e=!1){return (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(t)&&!N(t.type)?(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(t,{closeToast:o.closeToast,toastProps:o,data:o.data,isPaused:e}):P(t)?t({closeToast:o.closeToast,toastProps:o,data:o.data,isPaused:e}):t}function yt({closeToast:t,theme:o,ariaLabel:e=\"close\"}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\",{className:`Toastify__close-button Toastify__close-button--${o}`,type:\"button\",onClick:r=>{r.stopPropagation(),t(!0)},\"aria-label\":e},react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\",{\"aria-hidden\":\"true\",viewBox:\"0 0 14 16\"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\",{fillRule:\"evenodd\",d:\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"})))}function gt({delay:t,isRunning:o,closeToast:e,type:r=\"default\",hide:s,className:l,controlledProgress:a,progress:d,rtl:c,isIn:T,theme:g}){let v=s||a&&d===0,x={animationDuration:`${t}ms`,animationPlayState:o?\"running\":\"paused\"};a&&(x.transform=`scaleX(${d})`);let C=(0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"Toastify__progress-bar\",a?\"Toastify__progress-bar--controlled\":\"Toastify__progress-bar--animated\",`Toastify__progress-bar-theme--${g}`,`Toastify__progress-bar--${r}`,{[\"Toastify__progress-bar--rtl\"]:c}),S=P(l)?l({rtl:c,type:r,defaultClassName:C}):(0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(C,l),E={[a&&d>=1?\"onTransitionEnd\":\"onAnimationEnd\"]:a&&d<1?null:()=>{T&&e()}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\",{className:\"Toastify__progress-bar--wrp\",\"data-hidden\":v},react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\",{className:`Toastify__progress-bar--bg Toastify__progress-bar-theme--${g} Toastify__progress-bar--${r}`}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\",{role:\"progressbar\",\"aria-hidden\":v?\"true\":\"false\",\"aria-label\":\"notification timer\",className:S,style:x,...E}))}var Xt=1,at=()=>`${Xt++}`;function _t(t,o,e){let r=1,s=0,l=[],a=[],d=o,c=new Map,T=new Set,g=i=>(T.add(i),()=>T.delete(i)),v=()=>{a=Array.from(c.values()),T.forEach(i=>i())},x=({containerId:i,toastId:n,updateId:u})=>{let h=i?i!==t:t!==1,m=c.has(n)&&u==null;return h||m},C=(i,n)=>{c.forEach(u=>{var h;(n==null||n===u.props.toastId)&&((h=u.toggle)==null||h.call(u,i))})},S=i=>{var n,u;(u=(n=i.props)==null?void 0:n.onClose)==null||u.call(n,i.removalReason),i.isActive=!1},E=i=>{if(i==null)c.forEach(S);else{let n=c.get(i);n&&S(n)}v()},f=()=>{s-=l.length,l=[]},p=i=>{var m,_;let{toastId:n,updateId:u}=i.props,h=u==null;i.staleId&&c.delete(i.staleId),i.isActive=!0,c.set(n,i),v(),e(J(i,h?\"added\":\"updated\")),h&&((_=(m=i.props).onOpen)==null||_.call(m))};return{id:t,props:d,observe:g,toggle:C,removeToast:E,toasts:c,clearQueue:f,buildToast:(i,n)=>{if(x(n))return;let{toastId:u,updateId:h,data:m,staleId:_,delay:k}=n,M=h==null;M&&s++;let A={...d,style:d.toastStyle,key:r++,...Object.fromEntries(Object.entries(n).filter(([D,Y])=>Y!=null)),toastId:u,updateId:h,data:m,isIn:!1,className:B(n.className||d.toastClassName),progressClassName:B(n.progressClassName||d.progressClassName),autoClose:n.isLoading?!1:pt(n.autoClose,d.autoClose),closeToast(D){c.get(u).removalReason=D,E(u)},deleteToast(){let D=c.get(u);if(D!=null){if(e(J(D,\"removed\")),c.delete(u),s--,s<0&&(s=0),l.length>0){p(l.shift());return}v()}}};A.closeButton=d.closeButton,n.closeButton===!1||z(n.closeButton)?A.closeButton=n.closeButton:n.closeButton===!0&&(A.closeButton=z(d.closeButton)?d.closeButton:!0);let R={content:i,props:A,staleId:_};d.limit&&d.limit>0&&s>d.limit&&M?l.push(R):L(k)?setTimeout(()=>{p(R)},k):p(R)},setProps(i){d=i},setToggle:(i,n)=>{let u=c.get(i);u&&(u.toggle=n)},isToastActive:i=>{var n;return(n=c.get(i))==null?void 0:n.isActive},getSnapshot:()=>a}}var I=new Map,F=[],st=new Set,Vt=t=>st.forEach(o=>o(t)),bt=()=>I.size>0;function Qt(){F.forEach(t=>nt(t.content,t.options)),F=[]}var vt=(t,{containerId:o})=>{var e;return(e=I.get(o||1))==null?void 0:e.toasts.get(t)};function X(t,o){var r;if(o)return!!((r=I.get(o))!=null&&r.isToastActive(t));let e=!1;return I.forEach(s=>{s.isToastActive(t)&&(e=!0)}),e}function ht(t){if(!bt()){F=F.filter(o=>t!=null&&o.options.toastId!==t);return}if(t==null||mt(t))I.forEach(o=>{o.removeToast(t)});else if(t&&(\"containerId\"in t||\"id\"in t)){let o=I.get(t.containerId);o?o.removeToast(t.id):I.forEach(e=>{e.removeToast(t.id)})}}var Ct=(t={})=>{I.forEach(o=>{o.props.limit&&(!t.containerId||o.id===t.containerId)&&o.clearQueue()})};function nt(t,o){z(t)&&(bt()||F.push({content:t,options:o}),I.forEach(e=>{e.buildToast(t,o)}))}function xt(t){var o;(o=I.get(t.containerId||1))==null||o.setToggle(t.id,t.fn)}function rt(t,o){I.forEach(e=>{(o==null||!(o!=null&&o.containerId)||(o==null?void 0:o.containerId)===e.id)&&e.toggle(t,o==null?void 0:o.id)})}function Et(t){let o=t.containerId||1;return{subscribe(e){let r=_t(o,t,Vt);I.set(o,r);let s=r.observe(e);return Qt(),()=>{s(),I.delete(o)}},setProps(e){var r;(r=I.get(o))==null||r.setProps(e)},getSnapshot(){var e;return(e=I.get(o))==null?void 0:e.getSnapshot()}}}function Pt(t){return st.add(t),()=>{st.delete(t)}}function Wt(t){return t&&(N(t.toastId)||L(t.toastId))?t.toastId:at()}function U(t,o){return nt(t,o),o.toastId}function V(t,o){return{...o,type:o&&o.type||t,toastId:Wt(o)}}function Q(t){return(o,e)=>U(o,V(t,e))}function y(t,o){return U(t,V(\"default\",o))}y.loading=(t,o)=>U(t,V(\"default\",{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1,...o}));function Gt(t,{pending:o,error:e,success:r},s){let l;o&&(l=N(o)?y.loading(o,s):y.loading(o.render,{...s,...o}));let a={isLoading:null,autoClose:null,closeOnClick:null,closeButton:null,draggable:null},d=(T,g,v)=>{if(g==null){y.dismiss(l);return}let x={type:T,...a,...s,data:v},C=N(g)?{render:g}:g;return l?y.update(l,{...x,...C}):y(C.render,{...x,...C}),v},c=P(t)?t():t;return c.then(T=>d(\"success\",r,T)).catch(T=>d(\"error\",e,T)),c}y.promise=Gt;y.success=Q(\"success\");y.info=Q(\"info\");y.error=Q(\"error\");y.warning=Q(\"warning\");y.warn=y.warning;y.dark=(t,o)=>U(t,V(\"default\",{theme:\"dark\",...o}));function qt(t){ht(t)}y.dismiss=qt;y.clearWaitingQueue=Ct;y.isActive=X;y.update=(t,o={})=>{let e=vt(t,o);if(e){let{props:r,content:s}=e,l={delay:100,...r,...o,toastId:o.toastId||t,updateId:at()};l.toastId!==t&&(l.staleId=t);let a=l.render||s;delete l.render,U(a,l)}};y.done=t=>{y.update(t,{progress:1})};y.onChange=Pt;y.play=t=>rt(!0,t);y.pause=t=>rt(!1,t);function It(t){var a;let{subscribe:o,getSnapshot:e,setProps:r}=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(Et(t)).current;r(t);let s=(a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(o,e,e))==null?void 0:a.slice();function l(d){if(!s)return[];let c=new Map;return t.newestOnTop&&s.reverse(),s.forEach(T=>{let{position:g}=T.props;c.has(g)||c.set(g,[]),c.get(g).push(T)}),Array.from(c,T=>d(T[0],T[1]))}return{getToastToRender:l,isToastActive:X,count:s==null?void 0:s.length}}function At(t){let[o,e]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[r,s]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),l=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({start:0,delta:0,removalDistance:0,canCloseOnClick:!0,canDrag:!1,didMove:!1}).current,{autoClose:d,pauseOnHover:c,closeToast:T,onClick:g,closeOnClick:v}=t;xt({id:t.toastId,containerId:t.containerId,fn:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{if(t.pauseOnFocusLoss)return x(),()=>{C()}},[t.pauseOnFocusLoss]);function x(){document.hasFocus()||p(),window.addEventListener(\"focus\",f),window.addEventListener(\"blur\",p)}function C(){window.removeEventListener(\"focus\",f),window.removeEventListener(\"blur\",p)}function S(m){if(t.draggable===!0||t.draggable===m.pointerType){b();let _=l.current;a.canCloseOnClick=!0,a.canDrag=!0,_.style.transition=\"none\",t.draggableDirection===\"x\"?(a.start=m.clientX,a.removalDistance=_.offsetWidth*(t.draggablePercent/100)):(a.start=m.clientY,a.removalDistance=_.offsetHeight*(t.draggablePercent===80?t.draggablePercent*1.5:t.draggablePercent)/100)}}function E(m){let{top:_,bottom:k,left:M,right:A}=l.current.getBoundingClientRect();m.nativeEvent.type!==\"touchend\"&&t.pauseOnHover&&m.clientX>=M&&m.clientX<=A&&m.clientY>=_&&m.clientY<=k?p():f()}function f(){e(!0)}function p(){e(!1)}function b(){a.didMove=!1,document.addEventListener(\"pointermove\",n),document.addEventListener(\"pointerup\",u)}function i(){document.removeEventListener(\"pointermove\",n),document.removeEventListener(\"pointerup\",u)}function n(m){let _=l.current;if(a.canDrag&&_){a.didMove=!0,o&&p(),t.draggableDirection===\"x\"?a.delta=m.clientX-a.start:a.delta=m.clientY-a.start,a.start!==m.clientX&&(a.canCloseOnClick=!1);let k=t.draggableDirection===\"x\"?`${a.delta}px, var(--y)`:`0, calc(${a.delta}px + var(--y))`;_.style.transform=`translate3d(${k},0)`,_.style.opacity=`${1-Math.abs(a.delta/a.removalDistance)}`}}function u(){i();let m=l.current;if(a.canDrag&&a.didMove&&m){if(a.canDrag=!1,Math.abs(a.delta)>a.removalDistance){s(!0),t.closeToast(!0),t.collapseAll();return}m.style.transition=\"transform 0.2s, opacity 0.2s\",m.style.removeProperty(\"transform\"),m.style.removeProperty(\"opacity\")}}let h={onPointerDown:S,onPointerUp:E};return d&&c&&(h.onMouseEnter=p,t.stacked||(h.onMouseLeave=f)),v&&(h.onClick=m=>{g&&g(m),a.canCloseOnClick&&T(!0)}),{playToast:f,pauseToast:p,isRunning:o,preventExitTransition:r,toastRef:l,eventHandlers:h}}var Ot=typeof window!=\"undefined\"?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect;var G=({theme:t,type:o,isLoading:e,...r})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\",{viewBox:\"0 0 24 24\",width:\"100%\",height:\"100%\",fill:t===\"colored\"?\"currentColor\":`var(--toastify-icon-color-${o})`,...r});function ao(t){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(G,{...t},react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\",{d:\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"}))}function so(t){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(G,{...t},react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"}))}function no(t){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(G,{...t},react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"}))}function ro(t){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(G,{...t},react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\",{d:\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"}))}function io(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\",{className:\"Toastify__spinner\"})}var W={info:so,warning:ao,success:no,error:ro,spinner:io},lo=t=>t in W;function Nt({theme:t,type:o,isLoading:e,icon:r}){let s=null,l={theme:t,type:o};return r===!1||(P(r)?s=r({...l,isLoading:e}):(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(r)?s=(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(r,l):e?s=W.spinner():lo(o)&&(s=W[o](l))),s}var wt=t=>{let{isRunning:o,preventExitTransition:e,toastRef:r,eventHandlers:s,playToast:l}=At(t),{closeButton:a,children:d,autoClose:c,onClick:T,type:g,hideProgressBar:v,closeToast:x,transition:C,position:S,className:E,style:f,progressClassName:p,updateId:b,role:i,progress:n,rtl:u,toastId:h,deleteToast:m,isIn:_,isLoading:k,closeOnClick:M,theme:A,ariaLabel:R}=t,D=(0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"Toastify__toast\",`Toastify__toast-theme--${A}`,`Toastify__toast--${g}`,{[\"Toastify__toast--rtl\"]:u},{[\"Toastify__toast--close-on-click\"]:M}),Y=P(E)?E({rtl:u,position:S,type:g,defaultClassName:D}):(0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(D,E),ft=Nt(t),dt=!!n||!c,j={closeToast:x,type:g,theme:A},H=null;return a===!1||(P(a)?H=a(j):(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(a)?H=(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(a,j):H=yt(j)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(C,{isIn:_,done:m,position:S,preventExitTransition:e,nodeRef:r,playToast:l},react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\",{id:h,tabIndex:0,onClick:T,\"data-in\":_,className:Y,...s,style:f,ref:r,..._&&{role:i,\"aria-label\":R}},ft!=null&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\",{className:(0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"Toastify__toast-icon\",{[\"Toastify--animate-icon Toastify__zoom-enter\"]:!k})},ft),tt(d,t,!o),H,!t.customProgressBar&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(gt,{...b&&!dt?{key:`p-${b}`}:{},rtl:u,theme:A,delay:c,isRunning:o,isIn:_,closeToast:x,hide:v,type:g,className:p,controlledProgress:dt,progress:n||0})))};var K=(t,o=!1)=>({enter:`Toastify--animate Toastify__${t}-enter`,exit:`Toastify--animate Toastify__${t}-exit`,appendPosition:o}),lt=$(K(\"bounce\",!0)),mo=$(K(\"slide\",!0)),po=$(K(\"zoom\")),uo=$(K(\"flip\"));var _o={position:\"top-right\",transition:lt,autoClose:5e3,closeButton:!0,pauseOnHover:!0,pauseOnFocusLoss:!0,draggable:\"touch\",draggablePercent:80,draggableDirection:\"x\",role:\"alert\",theme:\"light\",\"aria-label\":\"Notifications Alt+T\",hotKeys:t=>t.altKey&&t.code===\"KeyT\"};function Lt(t){let o={..._o,...t},e=t.stacked,[r,s]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),l=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),{getToastToRender:a,isToastActive:d,count:c}=It(o),{className:T,style:g,rtl:v,containerId:x,hotKeys:C}=o;function S(f){let p=(0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"Toastify__toast-container\",`Toastify__toast-container--${f}`,{[\"Toastify__toast-container--rtl\"]:v});return P(T)?T({position:f,rtl:v,defaultClassName:p}):(0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(p,B(T))}function E(){e&&(s(!0),y.play())}return Ot(()=>{var f;if(e){let p=l.current.querySelectorAll('[data-in=\"true\"]'),b=12,i=(f=o.position)==null?void 0:f.includes(\"top\"),n=0,u=0;Array.from(p).reverse().forEach((h,m)=>{let _=h;_.classList.add(\"Toastify__toast--stacked\"),m>0&&(_.dataset.collapsed=`${r}`),_.dataset.pos||(_.dataset.pos=i?\"top\":\"bot\");let k=n*(r?.2:1)+(r?0:b*m);_.style.setProperty(\"--y\",`${i?k:k*-1}px`),_.style.setProperty(\"--g\",`${b}`),_.style.setProperty(\"--s\",`${1-(r?u:0)}`),n+=_.offsetHeight,u+=.025})}},[r,c,e]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{function f(p){var i;let b=l.current;C(p)&&((i=b.querySelector('[tabIndex=\"0\"]'))==null||i.focus(),s(!1),y.pause()),p.key===\"Escape\"&&(document.activeElement===b||b!=null&&b.contains(document.activeElement))&&(s(!0),y.play())}return document.addEventListener(\"keydown\",f),()=>{document.removeEventListener(\"keydown\",f)}},[C]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"section\",{ref:l,className:\"Toastify\",id:x,onMouseEnter:()=>{e&&(s(!1),y.pause())},onMouseLeave:E,\"aria-live\":\"polite\",\"aria-atomic\":\"false\",\"aria-relevant\":\"additions text\",\"aria-label\":o[\"aria-label\"]},a((f,p)=>{let b=p.length?{...g}:{...g,pointerEvents:\"none\"};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\",{tabIndex:-1,className:S(f),\"data-stacked\":e,style:b,key:`c-${f}`},p.map(({content:i,props:n})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(wt,{...n,stacked:e,collapseAll:E,isIn:d(n.toastId,n.containerId),key:`t-${n.key}`},i)))}))}\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-toastify/dist/index.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);